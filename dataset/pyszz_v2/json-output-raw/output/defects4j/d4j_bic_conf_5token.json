[
  {
    "id": 10000,
    "repo_name": "apache/commons-cli",
    "bug_commit_hash": ["c96b9ef3147505ce6873e028f84ee76ba937cccc"],
    "fix_commit_hash": "1749c498cebb38c06aca96afbbf4c4910251a2a4",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "c96b9ef3147505ce6873e028f84ee76ba937cccc",
        "line_num": 110,
        "line_str": "name|str operator|= name|str operator|. name|substring",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(115, 138)"
      },
      {
        "commit_hash": "c96b9ef3147505ce6873e028f84ee76ba937cccc",
        "line_num": 139,
        "line_str": "name|substring argument_list|( literal|0 argument_list|, name|str",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(148, 158)"
      },
      {
        "commit_hash": "c96b9ef3147505ce6873e028f84ee76ba937cccc",
        "line_num": 106,
        "line_str": "literal|\"\\\"\" argument_list|) condition|) block|{ name|str",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(115, 138)"
      },
      {
        "commit_hash": "c96b9ef3147505ce6873e028f84ee76ba937cccc",
        "line_num": 131,
        "line_str": "literal|\"\\\"\" argument_list|) condition|) block|{ name|str",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(140, 144)"
      },
      {
        "commit_hash": "c96b9ef3147505ce6873e028f84ee76ba937cccc",
        "line_num": 98,
        "line_str": "parameter_list|) block|{ if|if condition|( name|str",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(107, 113)"
      },
      {
        "commit_hash": "c96b9ef3147505ce6873e028f84ee76ba937cccc",
        "line_num": 123,
        "line_str": "expr_stmt|; block|} if|if condition|( name|str",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(115, 138)"
      },
      {
        "commit_hash": "c96b9ef3147505ce6873e028f84ee76ba937cccc",
        "line_num": 119,
        "line_str": "operator|. name|length argument_list|() argument_list|) expr_stmt|;",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(115, 138)"
      },
      {
        "commit_hash": "c96b9ef3147505ce6873e028f84ee76ba937cccc",
        "line_num": 115,
        "line_str": "argument_list|( literal|1 argument_list|, name|str operator|.",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(115, 138)"
      },
      {
        "commit_hash": "c96b9ef3147505ce6873e028f84ee76ba937cccc",
        "line_num": 144,
        "line_str": "operator|. name|length argument_list|() operator|- literal|1",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(148, 158)"
      },
      {
        "commit_hash": "c96b9ef3147505ce6873e028f84ee76ba937cccc",
        "line_num": 111,
        "line_str": "operator|= name|str operator|. name|substring argument_list|(",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(115, 138)"
      },
      {
        "commit_hash": "c96b9ef3147505ce6873e028f84ee76ba937cccc",
        "line_num": 140,
        "line_str": "argument_list|( literal|0 argument_list|, name|str operator|.",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(148, 158)"
      },
      {
        "commit_hash": "c96b9ef3147505ce6873e028f84ee76ba937cccc",
        "line_num": 107,
        "line_str": "argument_list|) condition|) block|{ name|str operator|=",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(115, 138)"
      },
      {
        "commit_hash": "c96b9ef3147505ce6873e028f84ee76ba937cccc",
        "line_num": 132,
        "line_str": "argument_list|) condition|) block|{ name|str operator|=",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(140, 144)"
      },
      {
        "commit_hash": "c96b9ef3147505ce6873e028f84ee76ba937cccc",
        "line_num": 99,
        "line_str": "block|{ if|if condition|( name|str operator|.",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(107, 113)"
      },
      {
        "commit_hash": "c96b9ef3147505ce6873e028f84ee76ba937cccc",
        "line_num": 124,
        "line_str": "block|} if|if condition|( name|str operator|.",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(115, 138)"
      },
      {
        "commit_hash": "c96b9ef3147505ce6873e028f84ee76ba937cccc",
        "line_num": 120,
        "line_str": "name|length argument_list|() argument_list|) expr_stmt|; block|}",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(115, 138)"
      },
      {
        "commit_hash": "c96b9ef3147505ce6873e028f84ee76ba937cccc",
        "line_num": 116,
        "line_str": "literal|1 argument_list|, name|str operator|. name|length",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(115, 138)"
      },
      {
        "commit_hash": "c96b9ef3147505ce6873e028f84ee76ba937cccc",
        "line_num": 145,
        "line_str": "name|length argument_list|() operator|- literal|1 argument_list|)",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(148, 158)"
      },
      {
        "commit_hash": "c96b9ef3147505ce6873e028f84ee76ba937cccc",
        "line_num": 112,
        "line_str": "name|str operator|. name|substring argument_list|( literal|1",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(115, 138)"
      },
      {
        "commit_hash": "c96b9ef3147505ce6873e028f84ee76ba937cccc",
        "line_num": 141,
        "line_str": "literal|0 argument_list|, name|str operator|. name|length",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(148, 158)"
      },
      {
        "commit_hash": "c96b9ef3147505ce6873e028f84ee76ba937cccc",
        "line_num": 108,
        "line_str": "condition|) block|{ name|str operator|= name|str",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(115, 138)"
      },
      {
        "commit_hash": "c96b9ef3147505ce6873e028f84ee76ba937cccc",
        "line_num": 137,
        "line_str": "name|str operator|. name|substring argument_list|( literal|0",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(148, 158)"
      },
      {
        "commit_hash": "c96b9ef3147505ce6873e028f84ee76ba937cccc",
        "line_num": 104,
        "line_str": "name|startsWith argument_list|( literal|\"\\\"\" argument_list|) condition|)",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(115, 138)"
      },
      {
        "commit_hash": "c96b9ef3147505ce6873e028f84ee76ba937cccc",
        "line_num": 100,
        "line_str": "if|if condition|( name|str operator|. name|startsWith",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(107, 113)"
      },
      {
        "commit_hash": "c96b9ef3147505ce6873e028f84ee76ba937cccc",
        "line_num": 129,
        "line_str": "name|endsWith argument_list|( literal|\"\\\"\" argument_list|) condition|)",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(140, 144)"
      },
      {
        "commit_hash": "c96b9ef3147505ce6873e028f84ee76ba937cccc",
        "line_num": 96,
        "line_str": "name|String name|str parameter_list|) block|{ if|if",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(107, 113)"
      },
      {
        "commit_hash": "c96b9ef3147505ce6873e028f84ee76ba937cccc",
        "line_num": 125,
        "line_str": "if|if condition|( name|str operator|. name|endsWith",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(115, 138)"
      },
      {
        "commit_hash": "c96b9ef3147505ce6873e028f84ee76ba937cccc",
        "line_num": 121,
        "line_str": "argument_list|() argument_list|) expr_stmt|; block|} if|if",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(115, 138)"
      },
      {
        "commit_hash": "c96b9ef3147505ce6873e028f84ee76ba937cccc",
        "line_num": 117,
        "line_str": "argument_list|, name|str operator|. name|length argument_list|()",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(115, 138)"
      },
      {
        "commit_hash": "30a2ba0194a208b659061da649dd19b7e39fa274",
        "line_num": 108,
        "line_str": "literal|\"\\\"foo\\\"\" argument_list|) argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/org/apache/commons/cli/UtilTest.java",
        "input_file_path": "src/test/org/apache/commons/cli/UtilTest.java",
        "input_line_num": "range(108, 109)"
      },
      {
        "commit_hash": "c96b9ef3147505ce6873e028f84ee76ba937cccc",
        "line_num": 146,
        "line_str": "argument_list|() operator|- literal|1 argument_list|) expr_stmt|;",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(148, 158)"
      },
      {
        "commit_hash": "c96b9ef3147505ce6873e028f84ee76ba937cccc",
        "line_num": 113,
        "line_str": "operator|. name|substring argument_list|( literal|1 argument_list|,",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(115, 138)"
      },
      {
        "commit_hash": "c96b9ef3147505ce6873e028f84ee76ba937cccc",
        "line_num": 142,
        "line_str": "argument_list|, name|str operator|. name|length argument_list|()",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(148, 158)"
      },
      {
        "commit_hash": "c96b9ef3147505ce6873e028f84ee76ba937cccc",
        "line_num": 109,
        "line_str": "block|{ name|str operator|= name|str operator|.",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(115, 138)"
      },
      {
        "commit_hash": "c96b9ef3147505ce6873e028f84ee76ba937cccc",
        "line_num": 138,
        "line_str": "operator|. name|substring argument_list|( literal|0 argument_list|,",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(148, 158)"
      },
      {
        "commit_hash": "c96b9ef3147505ce6873e028f84ee76ba937cccc",
        "line_num": 105,
        "line_str": "argument_list|( literal|\"\\\"\" argument_list|) condition|) block|{",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(115, 138)"
      },
      {
        "commit_hash": "c96b9ef3147505ce6873e028f84ee76ba937cccc",
        "line_num": 101,
        "line_str": "condition|( name|str operator|. name|startsWith argument_list|(",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(107, 113)"
      },
      {
        "commit_hash": "c96b9ef3147505ce6873e028f84ee76ba937cccc",
        "line_num": 130,
        "line_str": "argument_list|( literal|\"\\\"\" argument_list|) condition|) block|{",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(140, 144)"
      },
      {
        "commit_hash": "c96b9ef3147505ce6873e028f84ee76ba937cccc",
        "line_num": 97,
        "line_str": "name|str parameter_list|) block|{ if|if condition|(",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(107, 113)"
      },
      {
        "commit_hash": "c96b9ef3147505ce6873e028f84ee76ba937cccc",
        "line_num": 126,
        "line_str": "condition|( name|str operator|. name|endsWith argument_list|(",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(115, 138)"
      },
      {
        "commit_hash": "c96b9ef3147505ce6873e028f84ee76ba937cccc",
        "line_num": 122,
        "line_str": "argument_list|) expr_stmt|; block|} if|if condition|(",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(115, 138)"
      },
      {
        "commit_hash": "c96b9ef3147505ce6873e028f84ee76ba937cccc",
        "line_num": 118,
        "line_str": "name|str operator|. name|length argument_list|() argument_list|)",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(115, 138)"
      },
      {
        "commit_hash": "c96b9ef3147505ce6873e028f84ee76ba937cccc",
        "line_num": 114,
        "line_str": "name|substring argument_list|( literal|1 argument_list|, name|str",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(115, 138)"
      },
      {
        "commit_hash": "c96b9ef3147505ce6873e028f84ee76ba937cccc",
        "line_num": 143,
        "line_str": "name|str operator|. name|length argument_list|() operator|-",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(148, 158)"
      }
    ]
  },
  {
    "id": 10001,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["2c569a670791bae05981c4860825a6d652a4ad58"],
    "fix_commit_hash": "c7905dfc1cdd1b6327cbaaa45f2dac5032ca8e03",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "2c569a670791bae05981c4860825a6d652a4ad58",
        "line_num": 4301,
        "line_str": "name|valueCheck argument_list|( name|n operator|. name|getFirstChild",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(4988, 4993)"
      },
      {
        "commit_hash": "2c569a670791bae05981c4860825a6d652a4ad58",
        "line_num": 4297,
        "line_str": "operator|. name|OR case|: return|return name|valueCheck",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(4988, 4993)"
      },
      {
        "commit_hash": "2c569a670791bae05981c4860825a6d652a4ad58",
        "line_num": 4326,
        "line_str": "return|return name|valueCheck argument_list|( name|n operator|.",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(5014, 5019)"
      },
      {
        "commit_hash": "2c569a670791bae05981c4860825a6d652a4ad58",
        "line_num": 4867,
        "line_str": "name|valueCheck argument_list|( name|n argument_list|, name|MAY_BE_STRING_PREDICATE",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(5500, 5505)"
      },
      {
        "commit_hash": "2c569a670791bae05981c4860825a6d652a4ad58",
        "line_num": 4276,
        "line_str": "operator|. name|COMMA case|: return|return name|valueCheck",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(4967, 4972)"
      },
      {
        "commit_hash": "2c569a670791bae05981c4860825a6d652a4ad58",
        "line_num": 4863,
        "line_str": "name|recurse condition|) block|{ return|return name|valueCheck",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(5500, 5505)"
      },
      {
        "commit_hash": "2c569a670791bae05981c4860825a6d652a4ad58",
        "line_num": 4248,
        "line_str": "name|boolean name|valueCheck parameter_list|( name|Node name|n",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(4936, 4941)"
      },
      {
        "commit_hash": "2c569a670791bae05981c4860825a6d652a4ad58",
        "line_num": 4310,
        "line_str": "operator|&& name|valueCheck argument_list|( name|n operator|.",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(4998, 5003)"
      },
      {
        "commit_hash": "2c569a670791bae05981c4860825a6d652a4ad58",
        "line_num": 4405,
        "line_str": "name|valueCheck argument_list|( name|n argument_list|, name|NUMBERIC_RESULT_PREDICATE",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(5094, 5099)"
      },
      {
        "commit_hash": "2c569a670791bae05981c4860825a6d652a4ad58",
        "line_num": 4628,
        "line_str": "block|{ return|return name|valueCheck argument_list|( name|n",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(5321, 5326)"
      },
      {
        "commit_hash": "2c569a670791bae05981c4860825a6d652a4ad58",
        "line_num": 4277,
        "line_str": "name|COMMA case|: return|return name|valueCheck argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(4967, 4972)"
      },
      {
        "commit_hash": "2c569a670791bae05981c4860825a6d652a4ad58",
        "line_num": 4339,
        "line_str": "operator|&& name|valueCheck argument_list|( name|n operator|.",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(5027, 5032)"
      },
      {
        "commit_hash": "2c569a670791bae05981c4860825a6d652a4ad58",
        "line_num": 4401,
        "line_str": "name|n parameter_list|) block|{ return|return name|valueCheck",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(5094, 5099)"
      },
      {
        "commit_hash": "2c569a670791bae05981c4860825a6d652a4ad58",
        "line_num": 4298,
        "line_str": "name|OR case|: return|return name|valueCheck argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(4988, 4993)"
      },
      {
        "commit_hash": "2c569a670791bae05981c4860825a6d652a4ad58",
        "line_num": 4327,
        "line_str": "name|valueCheck argument_list|( name|n operator|. name|getFirstChild",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(5014, 5019)"
      },
      {
        "commit_hash": "2c569a670791bae05981c4860825a6d652a4ad58",
        "line_num": 4323,
        "line_str": "operator|. name|HOOK case|: return|return name|valueCheck",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(5014, 5019)"
      },
      {
        "commit_hash": "2c569a670791bae05981c4860825a6d652a4ad58",
        "line_num": 4864,
        "line_str": "condition|) block|{ return|return name|valueCheck argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(5500, 5505)"
      },
      {
        "commit_hash": "2c569a670791bae05981c4860825a6d652a4ad58",
        "line_num": 4249,
        "line_str": "name|valueCheck parameter_list|( name|Node name|n parameter_list|,",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(4936, 4941)"
      },
      {
        "commit_hash": "2c569a670791bae05981c4860825a6d652a4ad58",
        "line_num": 4311,
        "line_str": "name|valueCheck argument_list|( name|n operator|. name|getLastChild",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(4998, 5003)"
      },
      {
        "commit_hash": "2c569a670791bae05981c4860825a6d652a4ad58",
        "line_num": 4278,
        "line_str": "case|: return|return name|valueCheck argument_list|( name|n",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(4967, 4972)"
      },
      {
        "commit_hash": "2c569a670791bae05981c4860825a6d652a4ad58",
        "line_num": 4245,
        "line_str": "block|} comment specifier|static name|boolean name|valueCheck",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(4936, 4941)"
      },
      {
        "commit_hash": "2c569a670791bae05981c4860825a6d652a4ad58",
        "line_num": 4340,
        "line_str": "name|valueCheck argument_list|( name|n operator|. name|getLastChild",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(5027, 5032)"
      },
      {
        "commit_hash": "2c569a670791bae05981c4860825a6d652a4ad58",
        "line_num": 4307,
        "line_str": "argument_list|, name|p argument_list|) operator|&& name|valueCheck",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(4998, 5003)"
      },
      {
        "commit_hash": "2c569a670791bae05981c4860825a6d652a4ad58",
        "line_num": 4402,
        "line_str": "parameter_list|) block|{ return|return name|valueCheck argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(5094, 5099)"
      },
      {
        "commit_hash": "2c569a670791bae05981c4860825a6d652a4ad58",
        "line_num": 4629,
        "line_str": "return|return name|valueCheck argument_list|( name|n argument_list|,",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(5321, 5326)"
      },
      {
        "commit_hash": "2c569a670791bae05981c4860825a6d652a4ad58",
        "line_num": 4336,
        "line_str": "argument_list|, name|p argument_list|) operator|&& name|valueCheck",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(5027, 5032)"
      },
      {
        "commit_hash": "2c569a670791bae05981c4860825a6d652a4ad58",
        "line_num": 4299,
        "line_str": "case|: return|return name|valueCheck argument_list|( name|n",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(4988, 4993)"
      },
      {
        "commit_hash": "2c569a670791bae05981c4860825a6d652a4ad58",
        "line_num": 4324,
        "line_str": "name|HOOK case|: return|return name|valueCheck argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(5014, 5019)"
      },
      {
        "commit_hash": "2c569a670791bae05981c4860825a6d652a4ad58",
        "line_num": 4865,
        "line_str": "block|{ return|return name|valueCheck argument_list|( name|n",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(5500, 5505)"
      },
      {
        "commit_hash": "2c569a670791bae05981c4860825a6d652a4ad58",
        "line_num": 4279,
        "line_str": "return|return name|valueCheck argument_list|( name|n operator|.",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(4967, 4972)"
      },
      {
        "commit_hash": "2c569a670791bae05981c4860825a6d652a4ad58",
        "line_num": 4246,
        "line_str": "comment specifier|static name|boolean name|valueCheck parameter_list|(",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(4936, 4941)"
      },
      {
        "commit_hash": "2c569a670791bae05981c4860825a6d652a4ad58",
        "line_num": 4630,
        "line_str": "name|valueCheck argument_list|( name|n argument_list|, name|BOOLEAN_RESULT_PREDICATE",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(5321, 5326)"
      },
      {
        "commit_hash": "2c569a670791bae05981c4860825a6d652a4ad58",
        "line_num": 4308,
        "line_str": "name|p argument_list|) operator|&& name|valueCheck argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(4998, 5003)"
      },
      {
        "commit_hash": "2c569a670791bae05981c4860825a6d652a4ad58",
        "line_num": 4403,
        "line_str": "block|{ return|return name|valueCheck argument_list|( name|n",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(5094, 5099)"
      },
      {
        "commit_hash": "2c569a670791bae05981c4860825a6d652a4ad58",
        "line_num": 4626,
        "line_str": "name|n parameter_list|) block|{ return|return name|valueCheck",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(5321, 5326)"
      },
      {
        "commit_hash": "2c569a670791bae05981c4860825a6d652a4ad58",
        "line_num": 4337,
        "line_str": "name|p argument_list|) operator|&& name|valueCheck argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(5027, 5032)"
      },
      {
        "commit_hash": "7066713b2dd57c367bcd003aaec7ef827e05f1c1",
        "line_num": 1498,
        "line_str": "comment block|} specifier|public name|void name|testFoldConstructor",
        "file_path": "test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java",
        "input_line_num": "range(2941, 2942)"
      },
      {
        "commit_hash": "2c569a670791bae05981c4860825a6d652a4ad58",
        "line_num": 4300,
        "line_str": "return|return name|valueCheck argument_list|( name|n operator|.",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(4988, 4993)"
      },
      {
        "commit_hash": "2c569a670791bae05981c4860825a6d652a4ad58",
        "line_num": 4325,
        "line_str": "case|: return|return name|valueCheck argument_list|( name|n",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(5014, 5019)"
      },
      {
        "commit_hash": "2c569a670791bae05981c4860825a6d652a4ad58",
        "line_num": 4866,
        "line_str": "return|return name|valueCheck argument_list|( name|n argument_list|,",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(5500, 5505)"
      },
      {
        "commit_hash": "2c569a670791bae05981c4860825a6d652a4ad58",
        "line_num": 4280,
        "line_str": "name|valueCheck argument_list|( name|n operator|. name|getLastChild",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(4967, 4972)"
      },
      {
        "commit_hash": "2c569a670791bae05981c4860825a6d652a4ad58",
        "line_num": 4247,
        "line_str": "specifier|static name|boolean name|valueCheck parameter_list|( name|Node",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(4936, 4941)"
      },
      {
        "commit_hash": "2c569a670791bae05981c4860825a6d652a4ad58",
        "line_num": 4309,
        "line_str": "argument_list|) operator|&& name|valueCheck argument_list|( name|n",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(4998, 5003)"
      },
      {
        "commit_hash": "2c569a670791bae05981c4860825a6d652a4ad58",
        "line_num": 4404,
        "line_str": "return|return name|valueCheck argument_list|( name|n argument_list|,",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(5094, 5099)"
      },
      {
        "commit_hash": "2c569a670791bae05981c4860825a6d652a4ad58",
        "line_num": 4627,
        "line_str": "parameter_list|) block|{ return|return name|valueCheck argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(5321, 5326)"
      },
      {
        "commit_hash": "2c569a670791bae05981c4860825a6d652a4ad58",
        "line_num": 4338,
        "line_str": "argument_list|) operator|&& name|valueCheck argument_list|( name|n",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(5027, 5032)"
      }
    ]
  },
  {
    "id": 10002,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["b26789bbaf8e19c5684ab80ebfed9bdc828aef19"],
    "fix_commit_hash": "d0a5025f0cdec9f48a0f1746629156697562c014",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "b26789bbaf8e19c5684ab80ebfed9bdc828aef19",
        "line_num": 541,
        "line_str": "argument_list|, name|URI_ERROR_TYPE argument_list|) argument_list|, name|numStr",
        "file_path": "test/com/google/javascript/rhino/jstype/UnionTypeTest.java",
        "input_file_path": "test/com/google/javascript/rhino/jstype/UnionTypeTest.java",
        "input_line_num": "range(541, 546)"
      },
      {
        "commit_hash": "f9333ec81f2c723559e6a4d1a8855b040c0e82bc",
        "line_num": 69,
        "line_str": "begin_import import|import name|com operator|.",
        "file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_line_num": "range(68, 72)"
      },
      {
        "commit_hash": "b26789bbaf8e19c5684ab80ebfed9bdc828aef19",
        "line_num": 521,
        "line_str": "name|UnionType name|numStr init|= operator|( name|UnionType",
        "file_path": "test/com/google/javascript/rhino/jstype/UnionTypeTest.java",
        "input_file_path": "test/com/google/javascript/rhino/jstype/UnionTypeTest.java",
        "input_line_num": "range(518, 523)"
      },
      {
        "commit_hash": "b26789bbaf8e19c5684ab80ebfed9bdc828aef19",
        "line_num": 821,
        "line_str": "literal|null condition|) block|{ return|return name|result",
        "file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_line_num": "range(815, 822)"
      },
      {
        "commit_hash": "973a231eebc9e499c1fef6ffe61f42107f845831",
        "line_num": 53,
        "line_str": "operator|. name|JSType operator|. name|TypePair import|;",
        "file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_line_num": "range(72, 85)"
      },
      {
        "commit_hash": "b26789bbaf8e19c5684ab80ebfed9bdc828aef19",
        "line_num": 817,
        "line_str": "if|if condition|( name|result operator|!= literal|null",
        "file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_line_num": "range(815, 822)"
      },
      {
        "commit_hash": "973a231eebc9e499c1fef6ffe61f42107f845831",
        "line_num": 49,
        "line_str": "operator|. name|rhino operator|. name|jstype operator|.",
        "file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_line_num": "range(72, 85)"
      },
      {
        "commit_hash": "973a231eebc9e499c1fef6ffe61f42107f845831",
        "line_num": 45,
        "line_str": "operator|. name|google operator|. name|javascript operator|.",
        "file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_line_num": "range(72, 85)"
      },
      {
        "commit_hash": "b26789bbaf8e19c5684ab80ebfed9bdc828aef19",
        "line_num": 542,
        "line_str": "name|URI_ERROR_TYPE argument_list|) argument_list|, name|numStr operator|.",
        "file_path": "test/com/google/javascript/rhino/jstype/UnionTypeTest.java",
        "input_file_path": "test/com/google/javascript/rhino/jstype/UnionTypeTest.java",
        "input_line_num": "range(541, 546)"
      },
      {
        "commit_hash": "f9333ec81f2c723559e6a4d1a8855b040c0e82bc",
        "line_num": 70,
        "line_str": "begin_import import|import name|com operator|. name|google",
        "file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_line_num": "range(68, 72)"
      },
      {
        "commit_hash": "b26789bbaf8e19c5684ab80ebfed9bdc828aef19",
        "line_num": 522,
        "line_str": "name|numStr init|= operator|( name|UnionType operator|)",
        "file_path": "test/com/google/javascript/rhino/jstype/UnionTypeTest.java",
        "input_file_path": "test/com/google/javascript/rhino/jstype/UnionTypeTest.java",
        "input_line_num": "range(518, 523)"
      },
      {
        "commit_hash": "973a231eebc9e499c1fef6ffe61f42107f845831",
        "line_num": 54,
        "line_str": "name|JSType operator|. name|TypePair import|; end_import",
        "file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_line_num": "range(72, 85)"
      },
      {
        "commit_hash": "b26789bbaf8e19c5684ab80ebfed9bdc828aef19",
        "line_num": 518,
        "line_str": "throws|throws name|Exception block|{ name|UnionType name|numStr",
        "file_path": "test/com/google/javascript/rhino/jstype/UnionTypeTest.java",
        "input_file_path": "test/com/google/javascript/rhino/jstype/UnionTypeTest.java",
        "input_line_num": "range(518, 523)"
      },
      {
        "commit_hash": "973a231eebc9e499c1fef6ffe61f42107f845831",
        "line_num": 50,
        "line_str": "name|rhino operator|. name|jstype operator|. name|JSType",
        "file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_line_num": "range(72, 85)"
      },
      {
        "commit_hash": "b26789bbaf8e19c5684ab80ebfed9bdc828aef19",
        "line_num": 818,
        "line_str": "condition|( name|result operator|!= literal|null condition|)",
        "file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_line_num": "range(815, 822)"
      },
      {
        "commit_hash": "973a231eebc9e499c1fef6ffe61f42107f845831",
        "line_num": 46,
        "line_str": "name|google operator|. name|javascript operator|. name|rhino",
        "file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_line_num": "range(72, 85)"
      },
      {
        "commit_hash": "b26789bbaf8e19c5684ab80ebfed9bdc828aef19",
        "line_num": 543,
        "line_str": "argument_list|) argument_list|, name|numStr operator|. name|getGreatestSubtype",
        "file_path": "test/com/google/javascript/rhino/jstype/UnionTypeTest.java",
        "input_file_path": "test/com/google/javascript/rhino/jstype/UnionTypeTest.java",
        "input_line_num": "range(541, 546)"
      },
      {
        "commit_hash": "f9333ec81f2c723559e6a4d1a8855b040c0e82bc",
        "line_num": 71,
        "line_str": "import|import name|com operator|. name|google operator|.",
        "file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_line_num": "range(68, 72)"
      },
      {
        "commit_hash": "973a231eebc9e499c1fef6ffe61f42107f845831",
        "line_num": 55,
        "line_str": "operator|. name|TypePair import|; end_import",
        "file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_line_num": "range(72, 85)"
      },
      {
        "commit_hash": "b26789bbaf8e19c5684ab80ebfed9bdc828aef19",
        "line_num": 519,
        "line_str": "name|Exception block|{ name|UnionType name|numStr init|=",
        "file_path": "test/com/google/javascript/rhino/jstype/UnionTypeTest.java",
        "input_file_path": "test/com/google/javascript/rhino/jstype/UnionTypeTest.java",
        "input_line_num": "range(518, 523)"
      },
      {
        "commit_hash": "b26789bbaf8e19c5684ab80ebfed9bdc828aef19",
        "line_num": 819,
        "line_str": "name|result operator|!= literal|null condition|) block|{",
        "file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_line_num": "range(815, 822)"
      },
      {
        "commit_hash": "973a231eebc9e499c1fef6ffe61f42107f845831",
        "line_num": 51,
        "line_str": "operator|. name|jstype operator|. name|JSType operator|.",
        "file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_line_num": "range(72, 85)"
      },
      {
        "commit_hash": "973a231eebc9e499c1fef6ffe61f42107f845831",
        "line_num": 47,
        "line_str": "operator|. name|javascript operator|. name|rhino operator|.",
        "file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_line_num": "range(72, 85)"
      },
      {
        "commit_hash": "b26789bbaf8e19c5684ab80ebfed9bdc828aef19",
        "line_num": 815,
        "line_str": "argument_list|() decl_stmt|; if|if condition|( name|result",
        "file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_line_num": "range(815, 822)"
      },
      {
        "commit_hash": "b26789bbaf8e19c5684ab80ebfed9bdc828aef19",
        "line_num": 544,
        "line_str": "argument_list|, name|numStr operator|. name|getGreatestSubtype argument_list|(",
        "file_path": "test/com/google/javascript/rhino/jstype/UnionTypeTest.java",
        "input_file_path": "test/com/google/javascript/rhino/jstype/UnionTypeTest.java",
        "input_line_num": "range(541, 546)"
      },
      {
        "commit_hash": "f9333ec81f2c723559e6a4d1a8855b040c0e82bc",
        "line_num": 68,
        "line_str": "end_import  begin_import import|import name|com",
        "file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_line_num": "range(68, 72)"
      },
      {
        "commit_hash": "973a231eebc9e499c1fef6ffe61f42107f845831",
        "line_num": 48,
        "line_str": "name|javascript operator|. name|rhino operator|. name|jstype",
        "file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_line_num": "range(72, 85)"
      },
      {
        "commit_hash": "973a231eebc9e499c1fef6ffe61f42107f845831",
        "line_num": 56,
        "line_str": "name|TypePair import|; end_import  begin_import",
        "file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_line_num": "range(72, 85)"
      },
      {
        "commit_hash": "b26789bbaf8e19c5684ab80ebfed9bdc828aef19",
        "line_num": 520,
        "line_str": "block|{ name|UnionType name|numStr init|= operator|(",
        "file_path": "test/com/google/javascript/rhino/jstype/UnionTypeTest.java",
        "input_file_path": "test/com/google/javascript/rhino/jstype/UnionTypeTest.java",
        "input_line_num": "range(518, 523)"
      },
      {
        "commit_hash": "b26789bbaf8e19c5684ab80ebfed9bdc828aef19",
        "line_num": 820,
        "line_str": "operator|!= literal|null condition|) block|{ return|return",
        "file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_line_num": "range(815, 822)"
      },
      {
        "commit_hash": "973a231eebc9e499c1fef6ffe61f42107f845831",
        "line_num": 52,
        "line_str": "name|jstype operator|. name|JSType operator|. name|TypePair",
        "file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_line_num": "range(72, 85)"
      },
      {
        "commit_hash": "b26789bbaf8e19c5684ab80ebfed9bdc828aef19",
        "line_num": 816,
        "line_str": "decl_stmt|; if|if condition|( name|result operator|!=",
        "file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_line_num": "range(815, 822)"
      },
      {
        "commit_hash": "b26789bbaf8e19c5684ab80ebfed9bdc828aef19",
        "line_num": 545,
        "line_str": "name|numStr operator|. name|getGreatestSubtype argument_list|( name|ERROR_TYPE",
        "file_path": "test/com/google/javascript/rhino/jstype/UnionTypeTest.java",
        "input_file_path": "test/com/google/javascript/rhino/jstype/UnionTypeTest.java",
        "input_line_num": "range(541, 546)"
      },
      {
        "commit_hash": "973a231eebc9e499c1fef6ffe61f42107f845831",
        "line_num": 44,
        "line_str": "name|com operator|. name|google operator|. name|javascript",
        "file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_line_num": "range(72, 85)"
      }
    ]
  },
  {
    "id": 10003,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["70f9baf19604a4281b0233186b41d424cb049d2b"],
    "fix_commit_hash": "742fafad37dc6e7c996e45294dc3f7977ae123ad",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "70f9baf19604a4281b0233186b41d424cb049d2b",
        "line_num": 1586,
        "line_str": "literal|null condition|) block|{ name|parent operator|.",
        "file_path": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
        "input_file_path": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
        "input_line_num": "range(1583, 1587)"
      },
      {
        "commit_hash": "70f9baf19604a4281b0233186b41d424cb049d2b",
        "line_num": 1585,
        "line_str": "operator|!= literal|null condition|) block|{ name|parent",
        "file_path": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
        "input_file_path": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
        "input_line_num": "range(1583, 1587)"
      },
      {
        "commit_hash": "70f9baf19604a4281b0233186b41d424cb049d2b",
        "line_num": 1584,
        "line_str": "name|provided operator|!= literal|null condition|) block|{",
        "file_path": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
        "input_file_path": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
        "input_line_num": "range(1583, 1587)"
      },
      {
        "commit_hash": "70f9baf19604a4281b0233186b41d424cb049d2b",
        "line_num": 1583,
        "line_str": "condition|( name|provided operator|!= literal|null condition|)",
        "file_path": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
        "input_file_path": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
        "input_line_num": "range(1583, 1587)"
      },
      {
        "commit_hash": "e57b65dec4ae59fb848bb80bfd26d05967927d46",
        "line_num": 1391,
        "line_str": "name|VAR_ARGUMENTS_SHADOWED_ERROR argument_list|) expr_stmt|; block|} specifier|private",
        "file_path": "test/com/google/javascript/jscomp/VarCheckTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/VarCheckTest.java",
        "input_line_num": "range(1391, 1392)"
      }
    ]
  },
  {
    "id": 10004,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["5f5ba15f7097509eb06f2c34abefa99486c54f83"],
    "fix_commit_hash": "5ae82d8232d7d6e9ed6654aa9247e7c136cd9b97",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 3513,
        "line_str": "name|void name|testIssue1101a parameter_list|() block|{ name|helperCanInlineReferenceToFunction",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3547)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 369,
        "line_str": "literal|\"function BAR_FN(x, y, z) { return z(nochg(x + y)) }\" operator|+ literal|\"alert(BAR_FN(1, 2, baz))\" argument_list|, literal|\"var JSCompiler_temp_const$$0=alert;\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(365, 380)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2351,
        "line_str": "decl_stmt|; if|if condition|( name|stmt operator|.",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2153,
        "line_str": "literal|\"function f(a){return nochg() + a + a;}\" operator|+ literal|\"var a = f(f(1));\" argument_list|, literal|\"var a= nochg()+(nochg()+1+1)+(nochg()+1+1);\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2149, 2158)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 4730,
        "line_str": "literal|\"  var myUrl = new goog.Uri(getOwnerWin_(self).location.href);\\n\" operator|+ literal|\"};\" argument_list|, literal|\"HangoutStarter.prototype.launchHangout=function(){\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4730, 4739)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 3514,
        "line_str": "name|testIssue1101a parameter_list|() block|{ name|helperCanInlineReferenceToFunction argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3547)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 370,
        "line_str": "operator|+ literal|\"alert(BAR_FN(1, 2, baz))\" argument_list|, literal|\"var JSCompiler_temp_const$$0=alert;\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(365, 380)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2352,
        "line_str": "if|if condition|( name|stmt operator|. name|isReturn",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2154,
        "line_str": "operator|+ literal|\"var a = f(f(1));\" argument_list|, literal|\"var a= nochg()+(nochg()+1+1)+(nochg()+1+1);\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2149, 2158)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 4731,
        "line_str": "operator|+ literal|\"};\" argument_list|, literal|\"HangoutStarter.prototype.launchHangout=function(){\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4730, 4739)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 3515,
        "line_str": "parameter_list|() block|{ name|helperCanInlineReferenceToFunction argument_list|( name|CanInlineResult",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3547)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 371,
        "line_str": "literal|\"alert(BAR_FN(1, 2, baz))\" argument_list|, literal|\"var JSCompiler_temp_const$$0=alert;\" operator|+ literal|\"var JSCompiler_inline_result$$1;\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(365, 380)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2353,
        "line_str": "condition|( name|stmt operator|. name|isReturn argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2155,
        "line_str": "literal|\"var a = f(f(1));\" argument_list|, literal|\"var a= nochg()+(nochg()+1+1)+(nochg()+1+1);\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2149, 2158)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 4732,
        "line_str": "literal|\"};\" argument_list|, literal|\"HangoutStarter.prototype.launchHangout=function(){\" operator|+ literal|\"  var self$$2=a.b;\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4730, 4739)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 3516,
        "line_str": "block|{ name|helperCanInlineReferenceToFunction argument_list|( name|CanInlineResult operator|.",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3547)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 372,
        "line_str": "argument_list|, literal|\"var JSCompiler_temp_const$$0=alert;\" operator|+ literal|\"var JSCompiler_inline_result$$1;\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(365, 380)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2354,
        "line_str": "name|stmt operator|. name|isReturn argument_list|() condition|)",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2156,
        "line_str": "argument_list|, literal|\"var a= nochg()+(nochg()+1+1)+(nochg()+1+1);\" argument_list|) expr_stmt|; block|}",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2149, 2158)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 4733,
        "line_str": "argument_list|, literal|\"HangoutStarter.prototype.launchHangout=function(){\" operator|+ literal|\"  var self$$2=a.b;\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4730, 4739)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 3517,
        "line_str": "name|helperCanInlineReferenceToFunction argument_list|( name|CanInlineResult operator|. name|NO",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3547)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 373,
        "line_str": "literal|\"var JSCompiler_temp_const$$0=alert;\" operator|+ literal|\"var JSCompiler_inline_result$$1;\" operator|+ literal|\"{JSCompiler_inline_result$$1=baz(nochg(1+2));}\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(365, 380)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2355,
        "line_str": "operator|. name|isReturn argument_list|() condition|) block|{",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2157,
        "line_str": "literal|\"var a= nochg()+(nochg()+1+1)+(nochg()+1+1);\" argument_list|) expr_stmt|; block|} specifier|public",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2149, 2158)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 4734,
        "line_str": "literal|\"HangoutStarter.prototype.launchHangout=function(){\" operator|+ literal|\"  var self$$2=a.b;\" operator|+ literal|\"  var JSCompiler_temp_const$$0=goog.Uri;\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4730, 4739)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 3518,
        "line_str": "argument_list|( name|CanInlineResult operator|. name|NO argument_list|,",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3547)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 374,
        "line_str": "operator|+ literal|\"var JSCompiler_inline_result$$1;\" operator|+ literal|\"{JSCompiler_inline_result$$1=baz(nochg(1+2));}\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(365, 380)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2356,
        "line_str": "name|isReturn argument_list|() condition|) block|{ name|hasSideEffects",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 4735,
        "line_str": "operator|+ literal|\"  var self$$2=a.b;\" operator|+ literal|\"  var JSCompiler_temp_const$$0=goog.Uri;\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4730, 4739)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 3519,
        "line_str": "name|CanInlineResult operator|. name|NO argument_list|, literal|\"function foo(a){return modifiyX() + a;} foo(x);\"",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3547)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 375,
        "line_str": "literal|\"var JSCompiler_inline_result$$1;\" operator|+ literal|\"{JSCompiler_inline_result$$1=baz(nochg(1+2));}\" operator|+ literal|\"JSCompiler_temp_const$$0(JSCompiler_inline_result$$1)\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(365, 380)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2357,
        "line_str": "argument_list|() condition|) block|{ name|hasSideEffects operator|=",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 4736,
        "line_str": "literal|\"  var self$$2=a.b;\" operator|+ literal|\"  var JSCompiler_temp_const$$0=goog.Uri;\" operator|+ literal|\"  var JSCompiler_inline_result$$1;\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4730, 4739)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 3520,
        "line_str": "operator|. name|NO argument_list|, literal|\"function foo(a){return modifiyX() + a;} foo(x);\" argument_list|,",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3547)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 376,
        "line_str": "operator|+ literal|\"{JSCompiler_inline_result$$1=baz(nochg(1+2));}\" operator|+ literal|\"JSCompiler_temp_const$$0(JSCompiler_inline_result$$1)\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(365, 380)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2358,
        "line_str": "condition|) block|{ name|hasSideEffects operator|= name|NodeUtil",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 4737,
        "line_str": "operator|+ literal|\"  var JSCompiler_temp_const$$0=goog.Uri;\" operator|+ literal|\"  var JSCompiler_inline_result$$1;\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4730, 4739)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 3521,
        "line_str": "name|NO argument_list|, literal|\"function foo(a){return modifiyX() + a;} foo(x);\" argument_list|, literal|\"foo\"",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3547)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 377,
        "line_str": "literal|\"{JSCompiler_inline_result$$1=baz(nochg(1+2));}\" operator|+ literal|\"JSCompiler_temp_const$$0(JSCompiler_inline_result$$1)\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(365, 380)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2359,
        "line_str": "block|{ name|hasSideEffects operator|= name|NodeUtil operator|.",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 4738,
        "line_str": "literal|\"  var JSCompiler_temp_const$$0=goog.Uri;\" operator|+ literal|\"  var JSCompiler_inline_result$$1;\" operator|+ literal|\"  {\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4730, 4739)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 3522,
        "line_str": "argument_list|, literal|\"function foo(a){return modifiyX() + a;} foo(x);\" argument_list|, literal|\"foo\" argument_list|,",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3547)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 378,
        "line_str": "operator|+ literal|\"JSCompiler_temp_const$$0(JSCompiler_inline_result$$1)\" argument_list|) expr_stmt|; block|}",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(365, 380)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2360,
        "line_str": "name|hasSideEffects operator|= name|NodeUtil operator|. name|mayHaveSideEffects",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 3523,
        "line_str": "literal|\"function foo(a){return modifiyX() + a;} foo(x);\" argument_list|, literal|\"foo\" argument_list|, name|INLINE_DIRECT",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3547)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 379,
        "line_str": "literal|\"JSCompiler_temp_const$$0(JSCompiler_inline_result$$1)\" argument_list|) expr_stmt|; block|} specifier|public",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(365, 380)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2361,
        "line_str": "operator|= name|NodeUtil operator|. name|mayHaveSideEffects argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 4740,
        "line_str": "literal|\"  var JSCompiler_inline_result$$1;\" operator|+ literal|\"  {\" operator|+ literal|\"    var JSCompiler_inline_result$$0;\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4740, 4765)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 3524,
        "line_str": "argument_list|, literal|\"foo\" argument_list|, name|INLINE_DIRECT argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3547)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2362,
        "line_str": "name|NodeUtil operator|. name|mayHaveSideEffects argument_list|( name|stmt",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 4741,
        "line_str": "operator|+ literal|\"  {\" operator|+ literal|\"    var JSCompiler_inline_result$$0;\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4740, 4765)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 3525,
        "line_str": "literal|\"foo\" argument_list|, name|INLINE_DIRECT argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3547)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2495,
        "line_str": "operator|!= literal|null condition|) block|{ if|if",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2495, 2517)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2363,
        "line_str": "operator|. name|mayHaveSideEffects argument_list|( name|stmt operator|.",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2165,
        "line_str": "block|{ comment name|test argument_list|( literal|\"function f(a){return chg() + a + a;}\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2165, 2170)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 4742,
        "line_str": "literal|\"  {\" operator|+ literal|\"    var JSCompiler_inline_result$$0;\" operator|+ literal|\"    {\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4740, 4765)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 3526,
        "line_str": "argument_list|, name|INLINE_DIRECT argument_list|) expr_stmt|; block|}",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3547)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2496,
        "line_str": "literal|null condition|) block|{ if|if condition|(",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2495, 2517)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2364,
        "line_str": "name|mayHaveSideEffects argument_list|( name|stmt operator|. name|getFirstChild",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2166,
        "line_str": "comment name|test argument_list|( literal|\"function f(a){return chg() + a + a;}\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2165, 2170)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 4743,
        "line_str": "operator|+ literal|\"    var JSCompiler_inline_result$$0;\" operator|+ literal|\"    {\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4740, 4765)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 3527,
        "line_str": "name|INLINE_DIRECT argument_list|) expr_stmt|; block|} specifier|public",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3547)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 581,
        "line_str": "literal|\"var b=function(){return c};\" operator|+ literal|\"var d=b()+foo()\" argument_list|, literal|\"var JSCompiler_inline_result$$0;\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(581, 592)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2497,
        "line_str": "condition|) block|{ if|if condition|( name|hasSideEffects",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2495, 2517)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2365,
        "line_str": "argument_list|( name|stmt operator|. name|getFirstChild argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2167,
        "line_str": "name|test argument_list|( literal|\"function f(a){return chg() + a + a;}\" operator|+ literal|\"var a = f(f(1))\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2165, 2170)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 4744,
        "line_str": "literal|\"    var JSCompiler_inline_result$$0;\" operator|+ literal|\"    {\" operator|+ literal|\"      var self$$inline_1=self$$2;\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4740, 4765)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 3528,
        "line_str": "argument_list|) expr_stmt|; block|} specifier|public name|void",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3547)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 582,
        "line_str": "operator|+ literal|\"var d=b()+foo()\" argument_list|, literal|\"var JSCompiler_inline_result$$0;\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(581, 592)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2498,
        "line_str": "block|{ if|if condition|( name|hasSideEffects operator|&&",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2495, 2517)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 1309,
        "line_str": "expr_stmt|; block|} specifier|public name|void name|testInlineIfParametersModified8",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(1309, 1314)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2366,
        "line_str": "name|stmt operator|. name|getFirstChild argument_list|() argument_list|,",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2168,
        "line_str": "argument_list|( literal|\"function f(a){return chg() + a + a;}\" operator|+ literal|\"var a = f(f(1))\" argument_list|,",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2165, 2170)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 4745,
        "line_str": "operator|+ literal|\"    {\" operator|+ literal|\"      var self$$inline_1=self$$2;\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4740, 4765)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 3529,
        "line_str": "expr_stmt|; block|} specifier|public name|void name|testIssue1101b",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3547)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 583,
        "line_str": "literal|\"var d=b()+foo()\" argument_list|, literal|\"var JSCompiler_inline_result$$0;\" operator|+ literal|\"{var x$$inline_1;\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(581, 592)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2499,
        "line_str": "if|if condition|( name|hasSideEffects operator|&& name|NodeUtil",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2495, 2517)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 1310,
        "line_str": "block|} specifier|public name|void name|testInlineIfParametersModified8 parameter_list|()",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(1309, 1314)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2367,
        "line_str": "operator|. name|getFirstChild argument_list|() argument_list|, name|compiler",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2169,
        "line_str": "literal|\"function f(a){return chg() + a + a;}\" operator|+ literal|\"var a = f(f(1))\" argument_list|, literal|\"var a;\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2165, 2170)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 4746,
        "line_str": "literal|\"    {\" operator|+ literal|\"      var self$$inline_1=self$$2;\" operator|+ literal|\"      if(!self$$inline_1.domServices_) {\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4740, 4765)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 3530,
        "line_str": "block|} specifier|public name|void name|testIssue1101b parameter_list|()",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3547)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 584,
        "line_str": "argument_list|, literal|\"var JSCompiler_inline_result$$0;\" operator|+ literal|\"{var x$$inline_1;\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(581, 592)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2500,
        "line_str": "condition|( name|hasSideEffects operator|&& name|NodeUtil operator|.",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2495, 2517)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 1311,
        "line_str": "specifier|public name|void name|testInlineIfParametersModified8 parameter_list|() block|{",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(1309, 1314)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2368,
        "line_str": "name|getFirstChild argument_list|() argument_list|, name|compiler argument_list|)",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 783,
        "line_str": "literal|\"function bar(d){return c}\" operator|+ literal|\"var d=foo(bar(1),e)\" argument_list|, literal|\"var d=c+e;\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(783, 788)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 4747,
        "line_str": "operator|+ literal|\"      var self$$inline_1=self$$2;\" operator|+ literal|\"      if(!self$$inline_1.domServices_) {\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4740, 4765)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 3531,
        "line_str": "specifier|public name|void name|testIssue1101b parameter_list|() block|{",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3547)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 585,
        "line_str": "literal|\"var JSCompiler_inline_result$$0;\" operator|+ literal|\"{var x$$inline_1;\" operator|+ literal|\"JSCompiler_inline_result$$0=function(a$$inline_2){return a$$inline_2+1};}\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(581, 592)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2501,
        "line_str": "name|hasSideEffects operator|&& name|NodeUtil operator|. name|canBeSideEffected",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2495, 2517)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 1312,
        "line_str": "name|void name|testInlineIfParametersModified8 parameter_list|() block|{ comment",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(1309, 1314)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2369,
        "line_str": "argument_list|() argument_list|, name|compiler argument_list|) expr_stmt|;",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2171,
        "line_str": "literal|\"var a = f(f(1))\" argument_list|, literal|\"var a;\" operator|+ literal|\"{var a$$inline_0=chg()+1+1;\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2171, 2178)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 784,
        "line_str": "operator|+ literal|\"var d=foo(bar(1),e)\" argument_list|, literal|\"var d=c+e;\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(783, 788)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 4748,
        "line_str": "literal|\"      var self$$inline_1=self$$2;\" operator|+ literal|\"      if(!self$$inline_1.domServices_) {\" operator|+ literal|\"        self$$inline_1.domServices_=goog$component$DomServices.get(self$$inline_1.appContext_);\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4740, 4765)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 3532,
        "line_str": "name|void name|testIssue1101b parameter_list|() block|{ name|helperCanInlineReferenceToFunction",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3547)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 586,
        "line_str": "operator|+ literal|\"{var x$$inline_1;\" operator|+ literal|\"JSCompiler_inline_result$$0=function(a$$inline_2){return a$$inline_2+1};}\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(581, 592)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2502,
        "line_str": "operator|&& name|NodeUtil operator|. name|canBeSideEffected argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2495, 2517)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 1313,
        "line_str": "name|testInlineIfParametersModified8 parameter_list|() block|{ comment name|test",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(1309, 1314)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2370,
        "line_str": "argument_list|, name|compiler argument_list|) expr_stmt|; block|}",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2172,
        "line_str": "argument_list|, literal|\"var a;\" operator|+ literal|\"{var a$$inline_0=chg()+1+1;\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2171, 2178)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 785,
        "line_str": "literal|\"var d=foo(bar(1),e)\" argument_list|, literal|\"var d=c+e;\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(783, 788)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 4749,
        "line_str": "operator|+ literal|\"      if(!self$$inline_1.domServices_) {\" operator|+ literal|\"        self$$inline_1.domServices_=goog$component$DomServices.get(self$$inline_1.appContext_);\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4740, 4765)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 3533,
        "line_str": "name|testIssue1101b parameter_list|() block|{ name|helperCanInlineReferenceToFunction argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3547)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 587,
        "line_str": "literal|\"{var x$$inline_1;\" operator|+ literal|\"JSCompiler_inline_result$$0=function(a$$inline_2){return a$$inline_2+1};}\" operator|+ literal|\"var d=c+JSCompiler_inline_result$$0\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(581, 592)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2503,
        "line_str": "name|NodeUtil operator|. name|canBeSideEffected argument_list|( name|cArg",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2495, 2517)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2371,
        "line_str": "name|compiler argument_list|) expr_stmt|; block|} block|}",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2173,
        "line_str": "literal|\"var a;\" operator|+ literal|\"{var a$$inline_0=chg()+1+1;\" operator|+ literal|\"a=chg()+a$$inline_0+a$$inline_0}\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2171, 2178)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2107,
        "line_str": "literal|false expr_stmt|; name|testSame argument_list|( literal|\"function f(a){return chg() + a + a;}\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2107, 2112)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 786,
        "line_str": "argument_list|, literal|\"var d=c+e;\" argument_list|) expr_stmt|; block|}",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(783, 788)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 4750,
        "line_str": "literal|\"      if(!self$$inline_1.domServices_) {\" operator|+ literal|\"        self$$inline_1.domServices_=goog$component$DomServices.get(self$$inline_1.appContext_);\" operator|+ literal|\"      }\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4740, 4765)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 3534,
        "line_str": "parameter_list|() block|{ name|helperCanInlineReferenceToFunction argument_list|( name|CanInlineResult",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3547)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 588,
        "line_str": "operator|+ literal|\"JSCompiler_inline_result$$0=function(a$$inline_2){return a$$inline_2+1};}\" operator|+ literal|\"var d=c+JSCompiler_inline_result$$0\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(581, 592)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2504,
        "line_str": "operator|. name|canBeSideEffected argument_list|( name|cArg argument_list|)",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2495, 2517)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2372,
        "line_str": "literal|false expr_stmt|; name|test argument_list|( literal|\"var foo = function(a) { return nochg(a); };\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2372, 2377)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2372,
        "line_str": "argument_list|) expr_stmt|; block|} block|} comment",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2174,
        "line_str": "operator|+ literal|\"{var a$$inline_0=chg()+1+1;\" operator|+ literal|\"a=chg()+a$$inline_0+a$$inline_0}\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2171, 2178)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2108,
        "line_str": "expr_stmt|; name|testSame argument_list|( literal|\"function f(a){return chg() + a + a;}\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2107, 2112)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 787,
        "line_str": "literal|\"var d=c+e;\" argument_list|) expr_stmt|; block|} specifier|public",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(783, 788)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 4751,
        "line_str": "operator|+ literal|\"        self$$inline_1.domServices_=goog$component$DomServices.get(self$$inline_1.appContext_);\" operator|+ literal|\"      }\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4740, 4765)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 3535,
        "line_str": "block|{ name|helperCanInlineReferenceToFunction argument_list|( name|CanInlineResult operator|.",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3547)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 589,
        "line_str": "literal|\"JSCompiler_inline_result$$0=function(a$$inline_2){return a$$inline_2+1};}\" operator|+ literal|\"var d=c+JSCompiler_inline_result$$0\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(581, 592)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2505,
        "line_str": "name|canBeSideEffected argument_list|( name|cArg argument_list|) condition|)",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2495, 2517)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2373,
        "line_str": "expr_stmt|; name|test argument_list|( literal|\"var foo = function(a) { return nochg(a); };\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2372, 2377)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2373,
        "line_str": "expr_stmt|; block|} block|} comment name|Node",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2175,
        "line_str": "literal|\"{var a$$inline_0=chg()+1+1;\" operator|+ literal|\"a=chg()+a$$inline_0+a$$inline_0}\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2171, 2178)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2109,
        "line_str": "name|testSame argument_list|( literal|\"function f(a){return chg() + a + a;}\" operator|+ literal|\"var a = f(f(1));\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2107, 2112)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 4752,
        "line_str": "literal|\"        self$$inline_1.domServices_=goog$component$DomServices.get(self$$inline_1.appContext_);\" operator|+ literal|\"      }\" operator|+ literal|\"      JSCompiler_inline_result$$0=self$$inline_1.domServices_;\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4740, 4765)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 3536,
        "line_str": "name|helperCanInlineReferenceToFunction argument_list|( name|CanInlineResult operator|. name|NO",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3547)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 590,
        "line_str": "operator|+ literal|\"var d=c+JSCompiler_inline_result$$0\" argument_list|) expr_stmt|; block|}",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(581, 592)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2506,
        "line_str": "argument_list|( name|cArg argument_list|) condition|) block|{",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2495, 2517)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2374,
        "line_str": "name|test argument_list|( literal|\"var foo = function(a) { return nochg(a); };\" operator|+ literal|\"var bar = function(b) { return b; };\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2372, 2377)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 1317,
        "line_str": "name|test argument_list|( literal|\"function f(a){return a.x=2}f(o)\" argument_list|, literal|\"{o.x=2}\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(1317, 1328)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2374,
        "line_str": "block|} block|} comment name|Node name|cArg",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2176,
        "line_str": "operator|+ literal|\"a=chg()+a$$inline_0+a$$inline_0}\" argument_list|) expr_stmt|; block|}",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2171, 2178)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2110,
        "line_str": "argument_list|( literal|\"function f(a){return chg() + a + a;}\" operator|+ literal|\"var a = f(f(1));\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2107, 2112)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 4753,
        "line_str": "operator|+ literal|\"      }\" operator|+ literal|\"      JSCompiler_inline_result$$0=self$$inline_1.domServices_;\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4740, 4765)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 3537,
        "line_str": "argument_list|( name|CanInlineResult operator|. name|NO argument_list|,",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3547)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 591,
        "line_str": "literal|\"var d=c+JSCompiler_inline_result$$0\" argument_list|) expr_stmt|; block|} specifier|public",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(581, 592)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2507,
        "line_str": "name|cArg argument_list|) condition|) block|{ return|return",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2495, 2517)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2375,
        "line_str": "argument_list|( literal|\"var foo = function(a) { return nochg(a); };\" operator|+ literal|\"var bar = function(b) { return b; };\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2372, 2377)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 1318,
        "line_str": "argument_list|( literal|\"function f(a){return a.x=2}f(o)\" argument_list|, literal|\"{o.x=2}\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(1317, 1328)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2375,
        "line_str": "block|} comment name|Node name|cArg init|=",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2177,
        "line_str": "literal|\"a=chg()+a$$inline_0+a$$inline_0}\" argument_list|) expr_stmt|; block|} specifier|public",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2171, 2178)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2111,
        "line_str": "literal|\"function f(a){return chg() + a + a;}\" operator|+ literal|\"var a = f(f(1));\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2107, 2112)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 4754,
        "line_str": "literal|\"      }\" operator|+ literal|\"      JSCompiler_inline_result$$0=self$$inline_1.domServices_;\" operator|+ literal|\"    }\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4740, 4765)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 3538,
        "line_str": "name|CanInlineResult operator|. name|NO argument_list|, literal|\"function foo(a){return (x.prop = 2),a;} foo(x.prop);\"",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3547)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2508,
        "line_str": "argument_list|) condition|) block|{ return|return name|CanInlineResult",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2495, 2517)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2376,
        "line_str": "literal|\"var foo = function(a) { return nochg(a); };\" operator|+ literal|\"var bar = function(b) { return b; };\" operator|+ literal|\"foo(bar(x));\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2372, 2377)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 1319,
        "line_str": "literal|\"function f(a){return a.x=2}f(o)\" argument_list|, literal|\"{o.x=2}\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(1317, 1328)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 4755,
        "line_str": "operator|+ literal|\"      JSCompiler_inline_result$$0=self$$inline_1.domServices_;\" operator|+ literal|\"    }\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4740, 4765)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 3539,
        "line_str": "operator|. name|NO argument_list|, literal|\"function foo(a){return (x.prop = 2),a;} foo(x.prop);\" argument_list|,",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3547)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2509,
        "line_str": "condition|) block|{ return|return name|CanInlineResult operator|.",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2495, 2517)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 1320,
        "line_str": "argument_list|, literal|\"{o.x=2}\" argument_list|) expr_stmt|; block|}",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(1317, 1328)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 4756,
        "line_str": "literal|\"      JSCompiler_inline_result$$0=self$$inline_1.domServices_;\" operator|+ literal|\"    }\" operator|+ literal|\"    JSCompiler_inline_result$$1=JSCompiler_inline_result$$0.getDomHelper().getWindow();\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4740, 4765)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 3540,
        "line_str": "name|NO argument_list|, literal|\"function foo(a){return (x.prop = 2),a;} foo(x.prop);\" argument_list|, literal|\"foo\"",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3547)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2510,
        "line_str": "block|{ return|return name|CanInlineResult operator|. name|NO",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2495, 2517)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2378,
        "line_str": "literal|\"var bar = function(b) { return b; };\" operator|+ literal|\"foo(bar(x));\" argument_list|, literal|\"nochg(x)\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2378, 2383)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 1321,
        "line_str": "literal|\"{o.x=2}\" argument_list|) expr_stmt|; block|} specifier|public",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(1317, 1328)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 4757,
        "line_str": "operator|+ literal|\"    }\" operator|+ literal|\"    JSCompiler_inline_result$$1=JSCompiler_inline_result$$0.getDomHelper().getWindow();\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4740, 4765)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 3541,
        "line_str": "argument_list|, literal|\"function foo(a){return (x.prop = 2),a;} foo(x.prop);\" argument_list|, literal|\"foo\" argument_list|,",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3547)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2511,
        "line_str": "return|return name|CanInlineResult operator|. name|NO return|;",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2495, 2517)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2379,
        "line_str": "operator|+ literal|\"foo(bar(x));\" argument_list|, literal|\"nochg(x)\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2378, 2383)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 1322,
        "line_str": "argument_list|) expr_stmt|; block|} specifier|public name|void",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(1317, 1328)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 67,
        "line_str": "name|assumeMinimumCapture init|= literal|false decl_stmt|; specifier|final",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(67, 79)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 4758,
        "line_str": "literal|\"    }\" operator|+ literal|\"    JSCompiler_inline_result$$1=JSCompiler_inline_result$$0.getDomHelper().getWindow();\" operator|+ literal|\"  }\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4740, 4765)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 3542,
        "line_str": "literal|\"function foo(a){return (x.prop = 2),a;} foo(x.prop);\" argument_list|, literal|\"foo\" argument_list|, name|INLINE_DIRECT",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3547)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2512,
        "line_str": "name|CanInlineResult operator|. name|NO return|; block|}",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2495, 2517)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2380,
        "line_str": "literal|\"foo(bar(x));\" argument_list|, literal|\"nochg(x)\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2378, 2383)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 1323,
        "line_str": "expr_stmt|; block|} specifier|public name|void name|testInlineIfParametersModified9",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(1317, 1328)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 68,
        "line_str": "init|= literal|false decl_stmt|; specifier|final specifier|static",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(67, 79)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 4759,
        "line_str": "operator|+ literal|\"    JSCompiler_inline_result$$1=JSCompiler_inline_result$$0.getDomHelper().getWindow();\" operator|+ literal|\"  }\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4740, 4765)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 3543,
        "line_str": "argument_list|, literal|\"foo\" argument_list|, name|INLINE_DIRECT argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3547)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2513,
        "line_str": "operator|. name|NO return|; block|} comment",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2495, 2517)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2381,
        "line_str": "argument_list|, literal|\"nochg(x)\" argument_list|) expr_stmt|; block|}",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2378, 2383)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 1324,
        "line_str": "block|} specifier|public name|void name|testInlineIfParametersModified9 parameter_list|()",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(1317, 1328)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 69,
        "line_str": "literal|false decl_stmt|; specifier|final specifier|static name|String",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(67, 79)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 4760,
        "line_str": "literal|\"    JSCompiler_inline_result$$1=JSCompiler_inline_result$$0.getDomHelper().getWindow();\" operator|+ literal|\"  }\" operator|+ literal|\"  var myUrl=new JSCompiler_temp_const$$0(JSCompiler_inline_result$$1.location.href)\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4740, 4765)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 3544,
        "line_str": "literal|\"foo\" argument_list|, name|INLINE_DIRECT argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3547)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2514,
        "line_str": "name|NO return|; block|} comment comment",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2495, 2517)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2382,
        "line_str": "literal|\"nochg(x)\" argument_list|) expr_stmt|; block|} specifier|public",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2378, 2383)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 1325,
        "line_str": "specifier|public name|void name|testInlineIfParametersModified9 parameter_list|() block|{",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(1317, 1328)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2316,
        "line_str": "operator|. name|getLastChild argument_list|() decl_stmt|; name|boolean",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 70,
        "line_str": "decl_stmt|; specifier|final specifier|static name|String name|EXTERNS",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(67, 79)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 4761,
        "line_str": "operator|+ literal|\"  }\" operator|+ literal|\"  var myUrl=new JSCompiler_temp_const$$0(JSCompiler_inline_result$$1.location.href)\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4740, 4765)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 3545,
        "line_str": "argument_list|, name|INLINE_DIRECT argument_list|) expr_stmt|; block|}",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3547)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2515,
        "line_str": "return|; block|} comment comment comment",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2495, 2517)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 1326,
        "line_str": "name|void name|testInlineIfParametersModified9 parameter_list|() block|{ comment",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(1317, 1328)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 5356,
        "line_str": "literal|\"{var x$$inline_0=void 0;for(x$$inline_0 in y);}\" argument_list|) expr_stmt|; block|} specifier|public",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(5356, 5380)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2317,
        "line_str": "name|getLastChild argument_list|() decl_stmt|; name|boolean name|hasSideEffects",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 71,
        "line_str": "specifier|final specifier|static name|String name|EXTERNS init|=",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(67, 79)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 4762,
        "line_str": "literal|\"  }\" operator|+ literal|\"  var myUrl=new JSCompiler_temp_const$$0(JSCompiler_inline_result$$1.location.href)\" operator|+ literal|\"}\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4740, 4765)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 3546,
        "line_str": "name|INLINE_DIRECT argument_list|) expr_stmt|; block|} comment",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3547)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2516,
        "line_str": "block|} comment comment comment if|if",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2495, 2517)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 1327,
        "line_str": "name|testInlineIfParametersModified9 parameter_list|() block|{ comment name|test",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(1317, 1328)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 5357,
        "line_str": "argument_list|) expr_stmt|; block|} specifier|public name|void",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(5356, 5380)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2318,
        "line_str": "argument_list|() decl_stmt|; name|boolean name|hasSideEffects init|=",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 72,
        "line_str": "specifier|static name|String name|EXTERNS init|= literal|\"/** @nosideeffects */ function nochg(){}\\n\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(67, 79)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 667,
        "line_str": "literal|\"var b=function(){return c};\" operator|+ literal|\"function _x(){ var d=b()+foo() }\" argument_list|, literal|\"function _x(){\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(667, 686)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 4763,
        "line_str": "operator|+ literal|\"  var myUrl=new JSCompiler_temp_const$$0(JSCompiler_inline_result$$1.location.href)\" operator|+ literal|\"}\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4740, 4765)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 5358,
        "line_str": "expr_stmt|; block|} specifier|public name|void name|testIssue1101",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(5356, 5380)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2319,
        "line_str": "decl_stmt|; name|boolean name|hasSideEffects init|= literal|false",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 73,
        "line_str": "name|String name|EXTERNS init|= literal|\"/** @nosideeffects */ function nochg(){}\\n\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(67, 79)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 668,
        "line_str": "operator|+ literal|\"function _x(){ var d=b()+foo() }\" argument_list|, literal|\"function _x(){\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(667, 686)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 4764,
        "line_str": "literal|\"  var myUrl=new JSCompiler_temp_const$$0(JSCompiler_inline_result$$1.location.href)\" operator|+ literal|\"}\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4740, 4765)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 5359,
        "line_str": "block|} specifier|public name|void name|testIssue1101 parameter_list|()",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(5356, 5380)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2320,
        "line_str": "name|boolean name|hasSideEffects init|= literal|false decl_stmt|;",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 74,
        "line_str": "name|EXTERNS init|= literal|\"/** @nosideeffects */ function nochg(){}\\n\" operator|+ literal|\"function chg(){}\\n\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(67, 79)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 669,
        "line_str": "literal|\"function _x(){ var d=b()+foo() }\" argument_list|, literal|\"function _x(){\" operator|+ literal|\"  var JSCompiler_inline_result$$0;\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(667, 686)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 5360,
        "line_str": "specifier|public name|void name|testIssue1101 parameter_list|() block|{",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(5356, 5380)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2321,
        "line_str": "name|hasSideEffects init|= literal|false decl_stmt|; comment",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 75,
        "line_str": "init|= literal|\"/** @nosideeffects */ function nochg(){}\\n\" operator|+ literal|\"function chg(){}\\n\" decl_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(67, 79)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2123,
        "line_str": "comment comment name|test argument_list|( literal|\"function f(a){return chg() + a + a;}\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2123, 2128)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 670,
        "line_str": "argument_list|, literal|\"function _x(){\" operator|+ literal|\"  var JSCompiler_inline_result$$0;\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(667, 686)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 1331,
        "line_str": "name|test argument_list|( literal|\"function f(a){return a[2]=2}f(o)\" argument_list|, literal|\"{o[2]=2}\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(1331, 1336)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 5361,
        "line_str": "name|void name|testIssue1101 parameter_list|() block|{ name|test",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(5356, 5380)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2322,
        "line_str": "init|= literal|false decl_stmt|; comment if|if",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 76,
        "line_str": "literal|\"/** @nosideeffects */ function nochg(){}\\n\" operator|+ literal|\"function chg(){}\\n\" decl_stmt|; specifier|public",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(67, 79)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2124,
        "line_str": "comment name|test argument_list|( literal|\"function f(a){return chg() + a + a;}\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2123, 2128)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 671,
        "line_str": "literal|\"function _x(){\" operator|+ literal|\"  var JSCompiler_inline_result$$0;\" operator|+ literal|\"  {\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(667, 686)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 1332,
        "line_str": "argument_list|( literal|\"function f(a){return a[2]=2}f(o)\" argument_list|, literal|\"{o[2]=2}\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(1331, 1336)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 5362,
        "line_str": "name|testIssue1101 parameter_list|() block|{ name|test argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(5356, 5380)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2323,
        "line_str": "literal|false decl_stmt|; comment if|if condition|(",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 77,
        "line_str": "operator|+ literal|\"function chg(){}\\n\" decl_stmt|; specifier|public name|InlineFunctionsTest",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(67, 79)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2125,
        "line_str": "name|test argument_list|( literal|\"function f(a){return chg() + a + a;}\" operator|+ literal|\"var a = f(f(1));\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2123, 2128)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 672,
        "line_str": "operator|+ literal|\"  var JSCompiler_inline_result$$0;\" operator|+ literal|\"  {\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(667, 686)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 1333,
        "line_str": "literal|\"function f(a){return a[2]=2}f(o)\" argument_list|, literal|\"{o[2]=2}\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(1331, 1336)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 5363,
        "line_str": "parameter_list|() block|{ name|test argument_list|( literal|\"var x = (function (saved) {\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(5356, 5380)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2324,
        "line_str": "decl_stmt|; comment if|if condition|( name|block",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 78,
        "line_str": "literal|\"function chg(){}\\n\" decl_stmt|; specifier|public name|InlineFunctionsTest parameter_list|()",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(67, 79)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2126,
        "line_str": "argument_list|( literal|\"function f(a){return chg() + a + a;}\" operator|+ literal|\"var a = f(f(1));\" argument_list|,",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2123, 2128)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 673,
        "line_str": "literal|\"  var JSCompiler_inline_result$$0;\" operator|+ literal|\"  {\" operator|+ literal|\"    var x$$inline_1;\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(667, 686)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 1334,
        "line_str": "argument_list|, literal|\"{o[2]=2}\" argument_list|) expr_stmt|; block|}",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(1331, 1336)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 5364,
        "line_str": "block|{ name|test argument_list|( literal|\"var x = (function (saved) {\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(5356, 5380)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2325,
        "line_str": "comment if|if condition|( name|block operator|.",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2127,
        "line_str": "literal|\"function f(a){return chg() + a + a;}\" operator|+ literal|\"var a = f(f(1));\" argument_list|, literal|\"var a;\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2123, 2128)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 674,
        "line_str": "operator|+ literal|\"  {\" operator|+ literal|\"    var x$$inline_1;\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(667, 686)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 1335,
        "line_str": "literal|\"{o[2]=2}\" argument_list|) expr_stmt|; block|} specifier|public",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(1331, 1336)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 5365,
        "line_str": "name|test argument_list|( literal|\"var x = (function (saved) {\" operator|+ literal|\"    return foo(obj) + saved;\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(5356, 5380)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2326,
        "line_str": "if|if condition|( name|block operator|. name|hasChildren",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 80,
        "line_str": "specifier|public name|InlineFunctionsTest parameter_list|() block|{ name|super",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(80, 89)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 675,
        "line_str": "literal|\"  {\" operator|+ literal|\"    var x$$inline_1;\" operator|+ literal|\"    JSCompiler_inline_result$$0=function(a$$inline_2){\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(667, 686)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 5366,
        "line_str": "argument_list|( literal|\"var x = (function (saved) {\" operator|+ literal|\"    return foo(obj) + saved;\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(5356, 5380)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2327,
        "line_str": "condition|( name|block operator|. name|hasChildren argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 81,
        "line_str": "name|InlineFunctionsTest parameter_list|() block|{ name|super argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(80, 89)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2129,
        "line_str": "literal|\"var a = f(f(1));\" argument_list|, literal|\"var a;\" operator|+ literal|\"{var a$$inline_0=chg()+1+1;\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2129, 2136)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 676,
        "line_str": "operator|+ literal|\"    var x$$inline_1;\" operator|+ literal|\"    JSCompiler_inline_result$$0=function(a$$inline_2){\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(667, 686)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 5367,
        "line_str": "literal|\"var x = (function (saved) {\" operator|+ literal|\"    return foo(obj) + saved;\" operator|+ literal|\"  })(obj[\\\"prop\\\"]);\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(5356, 5380)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2328,
        "line_str": "name|block operator|. name|hasChildren argument_list|() condition|)",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 82,
        "line_str": "parameter_list|() block|{ name|super argument_list|( name|EXTERNS",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(80, 89)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2130,
        "line_str": "argument_list|, literal|\"var a;\" operator|+ literal|\"{var a$$inline_0=chg()+1+1;\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2129, 2136)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 677,
        "line_str": "literal|\"    var x$$inline_1;\" operator|+ literal|\"    JSCompiler_inline_result$$0=function(a$$inline_2){\" operator|+ literal|\"        return a$$inline_2+1};\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(667, 686)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 5368,
        "line_str": "operator|+ literal|\"    return foo(obj) + saved;\" operator|+ literal|\"  })(obj[\\\"prop\\\"]);\" argument_list|,",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(5356, 5380)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2329,
        "line_str": "operator|. name|hasChildren argument_list|() condition|) block|{",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 83,
        "line_str": "block|{ name|super argument_list|( name|EXTERNS argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(80, 89)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2131,
        "line_str": "literal|\"var a;\" operator|+ literal|\"{var a$$inline_0=chg()+1+1;\" operator|+ literal|\"a=chg()+a$$inline_0+a$$inline_0}\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2129, 2136)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 678,
        "line_str": "operator|+ literal|\"    JSCompiler_inline_result$$0=function(a$$inline_2){\" operator|+ literal|\"        return a$$inline_2+1};\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(667, 686)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 5369,
        "line_str": "literal|\"    return foo(obj) + saved;\" operator|+ literal|\"  })(obj[\\\"prop\\\"]);\" argument_list|, literal|\"var x;\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(5356, 5380)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2330,
        "line_str": "name|hasChildren argument_list|() condition|) block|{ name|Preconditions",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 84,
        "line_str": "name|super argument_list|( name|EXTERNS argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(80, 89)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2132,
        "line_str": "operator|+ literal|\"{var a$$inline_0=chg()+1+1;\" operator|+ literal|\"a=chg()+a$$inline_0+a$$inline_0}\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2129, 2136)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 679,
        "line_str": "literal|\"    JSCompiler_inline_result$$0=function(a$$inline_2){\" operator|+ literal|\"        return a$$inline_2+1};\" operator|+ literal|\"  }\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(667, 686)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 5370,
        "line_str": "operator|+ literal|\"  })(obj[\\\"prop\\\"]);\" argument_list|, literal|\"var x;\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(5356, 5380)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2331,
        "line_str": "argument_list|() condition|) block|{ name|Preconditions operator|.",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 85,
        "line_str": "argument_list|( name|EXTERNS argument_list|) expr_stmt|; name|this",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(80, 89)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2133,
        "line_str": "literal|\"{var a$$inline_0=chg()+1+1;\" operator|+ literal|\"a=chg()+a$$inline_0+a$$inline_0}\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2129, 2136)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 680,
        "line_str": "operator|+ literal|\"        return a$$inline_2+1};\" operator|+ literal|\"  }\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(667, 686)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 5371,
        "line_str": "literal|\"  })(obj[\\\"prop\\\"]);\" argument_list|, literal|\"var x;\" operator|+ literal|\"{\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(5356, 5380)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2332,
        "line_str": "condition|) block|{ name|Preconditions operator|. name|checkState",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 86,
        "line_str": "name|EXTERNS argument_list|) expr_stmt|; name|this operator|.",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(80, 89)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2134,
        "line_str": "operator|+ literal|\"a=chg()+a$$inline_0+a$$inline_0}\" argument_list|) expr_stmt|; block|}",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2129, 2136)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 681,
        "line_str": "literal|\"        return a$$inline_2+1};\" operator|+ literal|\"  }\" operator|+ literal|\"  var d=c+JSCompiler_inline_result$$0\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(667, 686)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 5372,
        "line_str": "argument_list|, literal|\"var x;\" operator|+ literal|\"{\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(5356, 5380)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2333,
        "line_str": "block|{ name|Preconditions operator|. name|checkState argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 87,
        "line_str": "argument_list|) expr_stmt|; name|this operator|. name|enableNormalize",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(80, 89)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2135,
        "line_str": "literal|\"a=chg()+a$$inline_0+a$$inline_0}\" argument_list|) expr_stmt|; block|} specifier|public",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2129, 2136)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 682,
        "line_str": "operator|+ literal|\"  }\" operator|+ literal|\"  var d=c+JSCompiler_inline_result$$0\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(667, 686)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 5373,
        "line_str": "literal|\"var x;\" operator|+ literal|\"{\" operator|+ literal|\"  var saved$$inline_0=obj[\\\"prop\\\"];x=foo(obj)+saved$$inline_0\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(5356, 5380)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2334,
        "line_str": "name|Preconditions operator|. name|checkState argument_list|( name|block",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 88,
        "line_str": "expr_stmt|; name|this operator|. name|enableNormalize argument_list|()",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(80, 89)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 683,
        "line_str": "literal|\"  }\" operator|+ literal|\"  var d=c+JSCompiler_inline_result$$0\" operator|+ literal|\"}\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(667, 686)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 5374,
        "line_str": "operator|+ literal|\"{\" operator|+ literal|\"  var saved$$inline_0=obj[\\\"prop\\\"];x=foo(obj)+saved$$inline_0\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(5356, 5380)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2335,
        "line_str": "operator|. name|checkState argument_list|( name|block operator|.",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 684,
        "line_str": "operator|+ literal|\"  var d=c+JSCompiler_inline_result$$0\" operator|+ literal|\"}\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(667, 686)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 5375,
        "line_str": "literal|\"{\" operator|+ literal|\"  var saved$$inline_0=obj[\\\"prop\\\"];x=foo(obj)+saved$$inline_0\" operator|+ literal|\"}\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(5356, 5380)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2336,
        "line_str": "name|checkState argument_list|( name|block operator|. name|hasOneChild",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 685,
        "line_str": "literal|\"  var d=c+JSCompiler_inline_result$$0\" operator|+ literal|\"}\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(667, 686)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 5376,
        "line_str": "operator|+ literal|\"  var saved$$inline_0=obj[\\\"prop\\\"];x=foo(obj)+saved$$inline_0\" operator|+ literal|\"}\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(5356, 5380)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2337,
        "line_str": "argument_list|( name|block operator|. name|hasOneChild argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 5377,
        "line_str": "literal|\"  var saved$$inline_0=obj[\\\"prop\\\"];x=foo(obj)+saved$$inline_0\" operator|+ literal|\"}\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(5356, 5380)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2338,
        "line_str": "name|block operator|. name|hasOneChild argument_list|() argument_list|)",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 92,
        "line_str": "argument_list|() expr_stmt|; name|this operator|. name|enableComputeSideEffects",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(92, 97)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 5378,
        "line_str": "operator|+ literal|\"}\" argument_list|) expr_stmt|; block|}",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(5356, 5380)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2339,
        "line_str": "operator|. name|hasOneChild argument_list|() argument_list|) expr_stmt|;",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 93,
        "line_str": "expr_stmt|; name|this operator|. name|enableComputeSideEffects argument_list|()",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(92, 97)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 5379,
        "line_str": "literal|\"}\" argument_list|) expr_stmt|; block|} block|}",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(5356, 5380)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2340,
        "line_str": "name|hasOneChild argument_list|() argument_list|) expr_stmt|; name|Node",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 94,
        "line_str": "name|this operator|. name|enableComputeSideEffects argument_list|() expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(92, 97)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2341,
        "line_str": "argument_list|() argument_list|) expr_stmt|; name|Node name|stmt",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 95,
        "line_str": "operator|. name|enableComputeSideEffects argument_list|() expr_stmt|; block|}",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(92, 97)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2342,
        "line_str": "argument_list|) expr_stmt|; name|Node name|stmt init|=",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 96,
        "line_str": "name|enableComputeSideEffects argument_list|() expr_stmt|; block|} annotation|@",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(92, 97)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 823,
        "line_str": "literal|\"function bar(d){return c}\" operator|+ literal|\"var d=bar(foo(1,e))\" argument_list|, literal|\"var d=c\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(823, 828)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2343,
        "line_str": "expr_stmt|; name|Node name|stmt init|= name|block",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 824,
        "line_str": "operator|+ literal|\"var d=bar(foo(1,e))\" argument_list|, literal|\"var d=c\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(823, 828)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2344,
        "line_str": "name|Node name|stmt init|= name|block operator|.",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 825,
        "line_str": "literal|\"var d=bar(foo(1,e))\" argument_list|, literal|\"var d=c\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(823, 828)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2345,
        "line_str": "name|stmt init|= name|block operator|. name|getFirstChild",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 826,
        "line_str": "argument_list|, literal|\"var d=c\" argument_list|) expr_stmt|; block|}",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(823, 828)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 3508,
        "line_str": "name|INLINE_BLOCK argument_list|) expr_stmt|; block|} specifier|public",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3547)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2346,
        "line_str": "init|= name|block operator|. name|getFirstChild argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 827,
        "line_str": "literal|\"var d=c\" argument_list|) expr_stmt|; block|} specifier|public",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(823, 828)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 3509,
        "line_str": "argument_list|) expr_stmt|; block|} specifier|public name|void",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3547)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 365,
        "line_str": "block|{ comment name|test argument_list|( literal|\"function BAR_FN(x, y, z) { return z(nochg(x + y)) }\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(365, 380)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2347,
        "line_str": "name|block operator|. name|getFirstChild argument_list|() decl_stmt|;",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2149,
        "line_str": "literal|false expr_stmt|; name|test argument_list|( literal|\"function f(a){return nochg() + a + a;}\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2149, 2158)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 3510,
        "line_str": "expr_stmt|; block|} specifier|public name|void name|testIssue1101a",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3547)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 366,
        "line_str": "comment name|test argument_list|( literal|\"function BAR_FN(x, y, z) { return z(nochg(x + y)) }\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(365, 380)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2348,
        "line_str": "operator|. name|getFirstChild argument_list|() decl_stmt|; if|if",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2150,
        "line_str": "expr_stmt|; name|test argument_list|( literal|\"function f(a){return nochg() + a + a;}\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2149, 2158)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 3511,
        "line_str": "block|} specifier|public name|void name|testIssue1101a parameter_list|()",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3547)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 367,
        "line_str": "name|test argument_list|( literal|\"function BAR_FN(x, y, z) { return z(nochg(x + y)) }\" operator|+ literal|\"alert(BAR_FN(1, 2, baz))\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(365, 380)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2349,
        "line_str": "name|getFirstChild argument_list|() decl_stmt|; if|if condition|(",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2151,
        "line_str": "name|test argument_list|( literal|\"function f(a){return nochg() + a + a;}\" operator|+ literal|\"var a = f(f(1));\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2149, 2158)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 3512,
        "line_str": "specifier|public name|void name|testIssue1101a parameter_list|() block|{",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3547)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 368,
        "line_str": "argument_list|( literal|\"function BAR_FN(x, y, z) { return z(nochg(x + y)) }\" operator|+ literal|\"alert(BAR_FN(1, 2, baz))\" argument_list|,",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(365, 380)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2350,
        "line_str": "argument_list|() decl_stmt|; if|if condition|( name|stmt",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2376)"
      },
      {
        "commit_hash": "5f5ba15f7097509eb06f2c34abefa99486c54f83",
        "line_num": 2152,
        "line_str": "argument_list|( literal|\"function f(a){return nochg() + a + a;}\" operator|+ literal|\"var a = f(f(1));\" argument_list|,",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2149, 2158)"
      }
    ]
  },
  {
    "id": 10005,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["6382bf495e85c258c13cc542c27a2d98e0131f94"],
    "fix_commit_hash": "8f3dc92e9e53ff4d2dae718022b883a35ab68a84",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "4bdbe7fb0123f4726140c4de8f15fd657973c0aa",
        "line_num": 237,
        "line_str": "argument_list|, literal|\"(function () {1})(); var z=1\" argument_list|) expr_stmt|; name|testSame",
        "file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_line_num": "range(227, 243)"
      },
      {
        "commit_hash": "4bdbe7fb0123f4726140c4de8f15fd657973c0aa",
        "line_num": 138,
        "line_str": "literal|\"(function () {1})()\" argument_list|) expr_stmt|; comment name|testSame",
        "file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_line_num": "range(134, 143)"
      },
      {
        "commit_hash": "4bdbe7fb0123f4726140c4de8f15fd657973c0aa",
        "line_num": 233,
        "line_str": "expr_stmt|; name|test argument_list|( literal|\"/** @const */var aa;(function () {aa=1})(); var z=aa\" argument_list|,",
        "file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_line_num": "range(227, 243)"
      },
      {
        "commit_hash": "6382bf495e85c258c13cc542c27a2d98e0131f94",
        "line_num": 2715,
        "line_str": "literal|\"F.prototype.bar = function() { var x = this.inc(); this.a += x; };\" argument_list|) expr_stmt|; block|} block|}",
        "file_path": "test/com/google/javascript/jscomp/InlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineVariablesTest.java",
        "input_line_num": "range(2715, 2716)"
      },
      {
        "commit_hash": "4bdbe7fb0123f4726140c4de8f15fd657973c0aa",
        "line_num": 134,
        "line_str": "name|test argument_list|( literal|\"var AA;(function () {AA=1})()\" argument_list|, literal|\"(function () {1})()\"",
        "file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_line_num": "range(134, 143)"
      },
      {
        "commit_hash": "4bdbe7fb0123f4726140c4de8f15fd657973c0aa",
        "line_num": 229,
        "line_str": "literal|\"/** @const */var aa;(function () {aa=1})()\" argument_list|, literal|\"(function () {1})()\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_line_num": "range(227, 243)"
      },
      {
        "commit_hash": "4bdbe7fb0123f4726140c4de8f15fd657973c0aa",
        "line_num": 130,
        "line_str": "argument_list|( literal|\"var AA; if (false) AA=1; else AA=2; AA;\" argument_list|) expr_stmt|; name|test",
        "file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_line_num": "range(134, 143)"
      },
      {
        "commit_hash": "4bdbe7fb0123f4726140c4de8f15fd657973c0aa",
        "line_num": 225,
        "line_str": "argument_list|) expr_stmt|; name|test argument_list|( literal|\"/** @const */var aa;(function () {aa=1})()\"",
        "file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_line_num": "range(227, 243)"
      },
      {
        "commit_hash": "b83b5dd8a4eea7ee93056358ed77998597093053",
        "line_num": 1287,
        "line_str": "block|{ break|break; block|} if|else if condition|(",
        "file_path": "src/com/google/javascript/jscomp/ReferenceCollectingCallback.java",
        "input_file_path": "src/com/google/javascript/jscomp/ReferenceCollectingCallback.java",
        "input_line_num": "range(1602, 1606)"
      },
      {
        "commit_hash": "4bdbe7fb0123f4726140c4de8f15fd657973c0aa",
        "line_num": 238,
        "line_str": "literal|\"(function () {1})(); var z=1\" argument_list|) expr_stmt|; name|testSame argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_line_num": "range(227, 243)"
      },
      {
        "commit_hash": "4bdbe7fb0123f4726140c4de8f15fd657973c0aa",
        "line_num": 234,
        "line_str": "name|test argument_list|( literal|\"/** @const */var aa;(function () {aa=1})(); var z=aa\" argument_list|, literal|\"(function () {1})(); var z=1\"",
        "file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_line_num": "range(227, 243)"
      },
      {
        "commit_hash": "4bdbe7fb0123f4726140c4de8f15fd657973c0aa",
        "line_num": 135,
        "line_str": "argument_list|( literal|\"var AA;(function () {AA=1})()\" argument_list|, literal|\"(function () {1})()\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_line_num": "range(134, 143)"
      },
      {
        "commit_hash": "4bdbe7fb0123f4726140c4de8f15fd657973c0aa",
        "line_num": 230,
        "line_str": "argument_list|, literal|\"(function () {1})()\" argument_list|) expr_stmt|; name|test",
        "file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_line_num": "range(227, 243)"
      },
      {
        "commit_hash": "4bdbe7fb0123f4726140c4de8f15fd657973c0aa",
        "line_num": 131,
        "line_str": "literal|\"var AA; if (false) AA=1; else AA=2; AA;\" argument_list|) expr_stmt|; name|test argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_line_num": "range(134, 143)"
      },
      {
        "commit_hash": "4bdbe7fb0123f4726140c4de8f15fd657973c0aa",
        "line_num": 226,
        "line_str": "expr_stmt|; name|test argument_list|( literal|\"/** @const */var aa;(function () {aa=1})()\" argument_list|,",
        "file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_line_num": "range(227, 243)"
      },
      {
        "commit_hash": "b83b5dd8a4eea7ee93056358ed77998597093053",
        "line_num": 1284,
        "line_str": "operator|. name|isFunction condition|) block|{ break|break;",
        "file_path": "src/com/google/javascript/jscomp/ReferenceCollectingCallback.java",
        "input_file_path": "src/com/google/javascript/jscomp/ReferenceCollectingCallback.java",
        "input_line_num": "range(1602, 1606)"
      },
      {
        "commit_hash": "4bdbe7fb0123f4726140c4de8f15fd657973c0aa",
        "line_num": 235,
        "line_str": "argument_list|( literal|\"/** @const */var aa;(function () {aa=1})(); var z=aa\" argument_list|, literal|\"(function () {1})(); var z=1\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_line_num": "range(227, 243)"
      },
      {
        "commit_hash": "4bdbe7fb0123f4726140c4de8f15fd657973c0aa",
        "line_num": 136,
        "line_str": "literal|\"var AA;(function () {AA=1})()\" argument_list|, literal|\"(function () {1})()\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_line_num": "range(134, 143)"
      },
      {
        "commit_hash": "4bdbe7fb0123f4726140c4de8f15fd657973c0aa",
        "line_num": 231,
        "line_str": "literal|\"(function () {1})()\" argument_list|) expr_stmt|; name|test argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_line_num": "range(227, 243)"
      },
      {
        "commit_hash": "4bdbe7fb0123f4726140c4de8f15fd657973c0aa",
        "line_num": 132,
        "line_str": "argument_list|) expr_stmt|; name|test argument_list|( literal|\"var AA;(function () {AA=1})()\"",
        "file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_line_num": "range(134, 143)"
      },
      {
        "commit_hash": "4bdbe7fb0123f4726140c4de8f15fd657973c0aa",
        "line_num": 227,
        "line_str": "name|test argument_list|( literal|\"/** @const */var aa;(function () {aa=1})()\" argument_list|, literal|\"(function () {1})()\"",
        "file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_line_num": "range(227, 243)"
      },
      {
        "commit_hash": "4bdbe7fb0123f4726140c4de8f15fd657973c0aa",
        "line_num": 223,
        "line_str": "argument_list|, literal|\"1\" argument_list|) expr_stmt|; name|test",
        "file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_line_num": "range(227, 243)"
      },
      {
        "commit_hash": "b83b5dd8a4eea7ee93056358ed77998597093053",
        "line_num": 1285,
        "line_str": "name|isFunction condition|) block|{ break|break; block|}",
        "file_path": "src/com/google/javascript/jscomp/ReferenceCollectingCallback.java",
        "input_file_path": "src/com/google/javascript/jscomp/ReferenceCollectingCallback.java",
        "input_line_num": "range(1602, 1606)"
      },
      {
        "commit_hash": "4bdbe7fb0123f4726140c4de8f15fd657973c0aa",
        "line_num": 236,
        "line_str": "literal|\"/** @const */var aa;(function () {aa=1})(); var z=aa\" argument_list|, literal|\"(function () {1})(); var z=1\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_line_num": "range(227, 243)"
      },
      {
        "commit_hash": "4bdbe7fb0123f4726140c4de8f15fd657973c0aa",
        "line_num": 137,
        "line_str": "argument_list|, literal|\"(function () {1})()\" argument_list|) expr_stmt|; comment",
        "file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_line_num": "range(134, 143)"
      },
      {
        "commit_hash": "4bdbe7fb0123f4726140c4de8f15fd657973c0aa",
        "line_num": 232,
        "line_str": "argument_list|) expr_stmt|; name|test argument_list|( literal|\"/** @const */var aa;(function () {aa=1})(); var z=aa\"",
        "file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_line_num": "range(227, 243)"
      },
      {
        "commit_hash": "4bdbe7fb0123f4726140c4de8f15fd657973c0aa",
        "line_num": 133,
        "line_str": "expr_stmt|; name|test argument_list|( literal|\"var AA;(function () {AA=1})()\" argument_list|,",
        "file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_line_num": "range(134, 143)"
      },
      {
        "commit_hash": "4bdbe7fb0123f4726140c4de8f15fd657973c0aa",
        "line_num": 228,
        "line_str": "argument_list|( literal|\"/** @const */var aa;(function () {aa=1})()\" argument_list|, literal|\"(function () {1})()\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_line_num": "range(227, 243)"
      },
      {
        "commit_hash": "4bdbe7fb0123f4726140c4de8f15fd657973c0aa",
        "line_num": 224,
        "line_str": "literal|\"1\" argument_list|) expr_stmt|; name|test argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_line_num": "range(227, 243)"
      },
      {
        "commit_hash": "b83b5dd8a4eea7ee93056358ed77998597093053",
        "line_num": 1286,
        "line_str": "condition|) block|{ break|break; block|} if|else if",
        "file_path": "src/com/google/javascript/jscomp/ReferenceCollectingCallback.java",
        "input_file_path": "src/com/google/javascript/jscomp/ReferenceCollectingCallback.java",
        "input_line_num": "range(1602, 1606)"
      }
    ]
  },
  {
    "id": 10006,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["4bdbe7fb0123f4726140c4de8f15fd657973c0aa"],
    "fix_commit_hash": "d97bdc7468a163a59f1921a605ccdbaf4d706c6f",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "5467e1949ea89b5ff6d95e17857eb83d32acd91a",
        "line_num": 2715,
        "line_str": "literal|\"F.prototype.bar = function() { var x = this.inc(); this.a += x; };\" argument_list|) expr_stmt|; block|} block|}",
        "file_path": "test/com/google/javascript/jscomp/InlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineVariablesTest.java",
        "input_line_num": "range(2715, 2716)"
      },
      {
        "commit_hash": "b83b5dd8a4eea7ee93056358ed77998597093053",
        "line_num": 1143,
        "line_str": "name|isAssignedOnceInLifetime argument_list|() condition|) block|{ name|List",
        "file_path": "src/com/google/javascript/jscomp/InlineVariables.java",
        "input_file_path": "src/com/google/javascript/jscomp/InlineVariables.java",
        "input_line_num": "range(1304, 1307)"
      },
      {
        "commit_hash": "b83b5dd8a4eea7ee93056358ed77998597093053",
        "line_num": 1142,
        "line_str": "operator|. name|isAssignedOnceInLifetime argument_list|() condition|) block|{",
        "file_path": "src/com/google/javascript/jscomp/InlineVariables.java",
        "input_file_path": "src/com/google/javascript/jscomp/InlineVariables.java",
        "input_line_num": "range(1304, 1307)"
      },
      {
        "commit_hash": "b83b5dd8a4eea7ee93056358ed77998597093053",
        "line_num": 1141,
        "line_str": "name|referenceInfo operator|. name|isAssignedOnceInLifetime argument_list|() condition|)",
        "file_path": "src/com/google/javascript/jscomp/InlineVariables.java",
        "input_file_path": "src/com/google/javascript/jscomp/InlineVariables.java",
        "input_line_num": "range(1304, 1307)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 1030,
        "line_str": "argument_list|() condition|) block|{ name|List argument_list|<",
        "file_path": "src/com/google/javascript/jscomp/InlineVariables.java",
        "input_file_path": "src/com/google/javascript/jscomp/InlineVariables.java",
        "input_line_num": "range(1307, 1308)"
      }
    ]
  },
  {
    "id": 10007,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["0a018fca7e62647c79f8c1ade1f4dc341df11c3e"],
    "fix_commit_hash": "d0ed3fa97e4c018386c44e6e9c2e2fbf6357915d",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "0a018fca7e62647c79f8c1ade1f4dc341df11c3e",
        "line_num": 3630,
        "line_str": "operator|&& name|s operator|. name|charAt argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_line_num": "range(3769, 3774)"
      },
      {
        "commit_hash": "0a018fca7e62647c79f8c1ade1f4dc341df11c3e",
        "line_num": 3629,
        "line_str": "literal|0 operator|&& name|s operator|. name|charAt",
        "file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_line_num": "range(3769, 3774)"
      },
      {
        "commit_hash": "0a018fca7e62647c79f8c1ade1f4dc341df11c3e",
        "line_num": 3628,
        "line_str": "operator|> literal|0 operator|&& name|s operator|.",
        "file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_line_num": "range(3769, 3774)"
      },
      {
        "commit_hash": "0a018fca7e62647c79f8c1ade1f4dc341df11c3e",
        "line_num": 3627,
        "line_str": "name|len operator|> literal|0 operator|&& name|s",
        "file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_line_num": "range(3769, 3774)"
      },
      {
        "commit_hash": "0a018fca7e62647c79f8c1ade1f4dc341df11c3e",
        "line_num": 3626,
        "line_str": "return|return name|len operator|> literal|0 operator|&&",
        "file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_line_num": "range(3769, 3774)"
      },
      {
        "commit_hash": "228bcde2ecd127c8a93409ebfc1e906157542c04",
        "line_num": 3620,
        "line_str": "block|} return|return name|len operator|> literal|0",
        "file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_line_num": "range(3767, 3769)"
      },
      {
        "commit_hash": "228bcde2ecd127c8a93409ebfc1e906157542c04",
        "line_num": 3619,
        "line_str": "block|} block|} return|return name|len operator|>",
        "file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_line_num": "range(3767, 3769)"
      },
      {
        "commit_hash": "228bcde2ecd127c8a93409ebfc1e906157542c04",
        "line_num": 3579,
        "line_str": "decl_stmt|; for|for control|( name|int name|index",
        "file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_line_num": "range(3724, 3728)"
      },
      {
        "commit_hash": "228bcde2ecd127c8a93409ebfc1e906157542c04",
        "line_num": 3578,
        "line_str": "argument_list|() decl_stmt|; for|for control|( name|int",
        "file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_line_num": "range(3724, 3728)"
      },
      {
        "commit_hash": "228bcde2ecd127c8a93409ebfc1e906157542c04",
        "line_num": 3577,
        "line_str": "name|length argument_list|() decl_stmt|; for|for control|(",
        "file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_line_num": "range(3724, 3728)"
      },
      {
        "commit_hash": "228bcde2ecd127c8a93409ebfc1e906157542c04",
        "line_num": 3576,
        "line_str": "operator|. name|length argument_list|() decl_stmt|; for|for",
        "file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_line_num": "range(3724, 3728)"
      }
    ]
  },
  {
    "id": 10008,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["d496a157bcd647d90272698529c80b39b92c1811"],
    "fix_commit_hash": "93497c7e9a7b9920040c0b932380a34d564cf381",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 2118,
        "line_str": "return|; for|for control|( name|int name|i",
        "file_path": "src/com/google/javascript/rhino/TokenStream.java",
        "input_file_path": "src/com/google/javascript/rhino/TokenStream.java",
        "input_line_num": "range(1501, 1508)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 2117,
        "line_str": "literal|false return|; for|for control|( name|int",
        "file_path": "src/com/google/javascript/rhino/TokenStream.java",
        "input_file_path": "src/com/google/javascript/rhino/TokenStream.java",
        "input_line_num": "range(1501, 1508)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 2116,
        "line_str": "return|return literal|false return|; for|for control|(",
        "file_path": "src/com/google/javascript/rhino/TokenStream.java",
        "input_file_path": "src/com/google/javascript/rhino/TokenStream.java",
        "input_line_num": "range(1501, 1508)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 2115,
        "line_str": "condition|) return|return literal|false return|; for|for",
        "file_path": "src/com/google/javascript/rhino/TokenStream.java",
        "input_file_path": "src/com/google/javascript/rhino/TokenStream.java",
        "input_line_num": "range(1501, 1508)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 2114,
        "line_str": "argument_list|) condition|) return|return literal|false return|;",
        "file_path": "src/com/google/javascript/rhino/TokenStream.java",
        "input_file_path": "src/com/google/javascript/rhino/TokenStream.java",
        "input_line_num": "range(1501, 1508)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 2113,
        "line_str": "argument_list|) argument_list|) condition|) return|return literal|false",
        "file_path": "src/com/google/javascript/rhino/TokenStream.java",
        "input_file_path": "src/com/google/javascript/rhino/TokenStream.java",
        "input_line_num": "range(1501, 1508)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 2112,
        "line_str": "literal|0 argument_list|) argument_list|) condition|) return|return",
        "file_path": "src/com/google/javascript/rhino/TokenStream.java",
        "input_file_path": "src/com/google/javascript/rhino/TokenStream.java",
        "input_line_num": "range(1501, 1508)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 2144,
        "line_str": "if|if condition|( operator|! name|Character operator|.",
        "file_path": "src/com/google/javascript/rhino/TokenStream.java",
        "input_file_path": "src/com/google/javascript/rhino/TokenStream.java",
        "input_line_num": "range(1523, 1525)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 2145,
        "line_str": "condition|( operator|! name|Character operator|. name|isJavaIdentifierPart",
        "file_path": "src/com/google/javascript/rhino/TokenStream.java",
        "input_file_path": "src/com/google/javascript/rhino/TokenStream.java",
        "input_line_num": "range(1523, 1525)"
      },
      {
        "commit_hash": "406e7f13b24ba99b5a09d81e137cd282804f74ad",
        "line_num": 237,
        "line_str": "literal|\"({'\\u1d17A':0})\" argument_list|) expr_stmt|; block|} specifier|public",
        "file_path": "test/com/google/javascript/jscomp/ConvertToDottedPropertiesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/ConvertToDottedPropertiesTest.java",
        "input_line_num": "range(237, 238)"
      },
      {
        "commit_hash": "3f6c12d6c90dd7f627db84de0febde051aa078a6",
        "line_num": 236,
        "line_str": "argument_list|( literal|\"({'\\u1d17A':0})\" argument_list|) expr_stmt|; block|}",
        "file_path": "test/com/google/javascript/jscomp/ConvertToDottedPropertiesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/ConvertToDottedPropertiesTest.java",
        "input_line_num": "range(236, 237)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 198,
        "line_str": "literal|\"a['default']\" argument_list|) expr_stmt|; comment comment",
        "file_path": "test/com/google/javascript/jscomp/ConvertToDottedPropertiesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/ConvertToDottedPropertiesTest.java",
        "input_line_num": "range(198, 199)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 2101,
        "line_str": "literal|0 operator||| operator|! name|Character operator|.",
        "file_path": "src/com/google/javascript/rhino/TokenStream.java",
        "input_file_path": "src/com/google/javascript/rhino/TokenStream.java",
        "input_line_num": "range(1488, 1491)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 2100,
        "line_str": "operator|== literal|0 operator||| operator|! name|Character",
        "file_path": "src/com/google/javascript/rhino/TokenStream.java",
        "input_file_path": "src/com/google/javascript/rhino/TokenStream.java",
        "input_line_num": "range(1488, 1491)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 2099,
        "line_str": "name|length operator|== literal|0 operator||| operator|!",
        "file_path": "src/com/google/javascript/rhino/TokenStream.java",
        "input_file_path": "src/com/google/javascript/rhino/TokenStream.java",
        "input_line_num": "range(1488, 1491)"
      },
      {
        "commit_hash": "406e7f13b24ba99b5a09d81e137cd282804f74ad",
        "line_num": 1522,
        "line_str": "block|{ if|if condition|( operator|! name|Character",
        "file_path": "src/com/google/javascript/rhino/TokenStream.java",
        "input_file_path": "src/com/google/javascript/rhino/TokenStream.java",
        "input_line_num": "range(1521, 1523)"
      },
      {
        "commit_hash": "406e7f13b24ba99b5a09d81e137cd282804f74ad",
        "line_num": 1521,
        "line_str": "control|) block|{ if|if condition|( operator|!",
        "file_path": "src/com/google/javascript/rhino/TokenStream.java",
        "input_file_path": "src/com/google/javascript/rhino/TokenStream.java",
        "input_line_num": "range(1521, 1523)"
      }
    ]
  },
  {
    "id": 10009,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["4c4b45ec01970bbf315a8db8444c50106871ac38"],
    "fix_commit_hash": "7435cbea7df9c81acfed5b687fe55114dd9b02df",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 4714,
        "line_str": "name|line init|= name|stream operator|. name|getRemainingJSDocLine",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(5828, 5834)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 4970,
        "line_str": "name|line operator|= name|stream operator|. name|getRemainingJSDocLine",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(6203, 6209)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 4562,
        "line_str": "init|= name|stream operator|. name|getRemainingJSDocLine argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(5670, 5676)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 5165,
        "line_str": "init|= name|stream operator|. name|getRemainingJSDocLine argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(6397, 6403)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 4715,
        "line_str": "init|= name|stream operator|. name|getRemainingJSDocLine argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(5828, 5834)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 4971,
        "line_str": "operator|= name|stream operator|. name|getRemainingJSDocLine argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(6203, 6209)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 4563,
        "line_str": "name|stream operator|. name|getRemainingJSDocLine argument_list|() operator|.",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(5670, 5676)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 4559,
        "line_str": "decl_stmt|; name|String name|line init|= name|stream",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(5670, 5676)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 5166,
        "line_str": "name|stream operator|. name|getRemainingJSDocLine argument_list|() decl_stmt|;",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(6397, 6403)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 4716,
        "line_str": "name|stream operator|. name|getRemainingJSDocLine argument_list|() decl_stmt|;",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(5828, 5834)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 4972,
        "line_str": "name|stream operator|. name|getRemainingJSDocLine argument_list|() expr_stmt|;",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(6203, 6209)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 5162,
        "line_str": "expr_stmt|; name|String name|line init|= name|stream",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(6397, 6403)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 4712,
        "line_str": "comment name|String name|line init|= name|stream",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(5828, 5834)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 4968,
        "line_str": "argument_list|) expr_stmt|; name|line operator|= name|stream",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(6203, 6209)"
      },
      {
        "commit_hash": "8128bbf25b013285882c8f4a7c6b21a46551046b",
        "line_num": 12009,
        "line_str": "literal|\"extra @ngInject tag\" argument_list|) expr_stmt|; block|} comment",
        "file_path": "test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java",
        "input_line_num": "range(12113, 12114)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 4564,
        "line_str": "operator|. name|getRemainingJSDocLine argument_list|() operator|. name|trim",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(5670, 5676)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 7793,
        "line_str": "block|} block|} comment specifier|private name|boolean",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(9349, 9350)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 4560,
        "line_str": "name|String name|line init|= name|stream operator|.",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(5670, 5676)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 5167,
        "line_str": "operator|. name|getRemainingJSDocLine argument_list|() decl_stmt|; name|line",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(6397, 6403)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 4973,
        "line_str": "operator|. name|getRemainingJSDocLine argument_list|() expr_stmt|; if|if",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(6203, 6209)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 4717,
        "line_str": "operator|. name|getRemainingJSDocLine argument_list|() decl_stmt|; if|if",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(5828, 5834)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 5163,
        "line_str": "name|String name|line init|= name|stream operator|.",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(6397, 6403)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 4713,
        "line_str": "name|String name|line init|= name|stream operator|.",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(5828, 5834)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 4969,
        "line_str": "expr_stmt|; name|line operator|= name|stream operator|.",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(6203, 6209)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 4561,
        "line_str": "name|line init|= name|stream operator|. name|getRemainingJSDocLine",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(5670, 5676)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 5164,
        "line_str": "name|line init|= name|stream operator|. name|getRemainingJSDocLine",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(6397, 6403)"
      }
    ]
  },
  {
    "id": 10010,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["cb93304e8e714ee049127cfe5d6e97b168df8523"],
    "fix_commit_hash": "7955f32aa4dae7af05d023531bf4bfe06e38cf70",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "be9ef4f04e63f1eba2480a3b77dcbcb88038f279",
        "line_num": 5666,
        "line_str": "if|if condition|( name|rValue operator|. name|getJSType",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(6049, 6054)"
      },
      {
        "commit_hash": "be9ef4f04e63f1eba2480a3b77dcbcb88038f279",
        "line_num": 5665,
        "line_str": "block|{ if|if condition|( name|rValue operator|.",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(6049, 6054)"
      },
      {
        "commit_hash": "be9ef4f04e63f1eba2480a3b77dcbcb88038f279",
        "line_num": 5664,
        "line_str": "condition|) block|{ if|if condition|( name|rValue",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(6049, 6054)"
      },
      {
        "commit_hash": "be9ef4f04e63f1eba2480a3b77dcbcb88038f279",
        "line_num": 5663,
        "line_str": "literal|null condition|) block|{ if|if condition|(",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(6049, 6054)"
      },
      {
        "commit_hash": "be9ef4f04e63f1eba2480a3b77dcbcb88038f279",
        "line_num": 5662,
        "line_str": "operator|!= literal|null condition|) block|{ if|if",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(6049, 6054)"
      },
      {
        "commit_hash": "cb93304e8e714ee049127cfe5d6e97b168df8523",
        "line_num": 5588,
        "line_str": "block|{ return|return name|rValue operator|. name|getJSType",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(6068, 6072)"
      },
      {
        "commit_hash": "cb93304e8e714ee049127cfe5d6e97b168df8523",
        "line_num": 5587,
        "line_str": "condition|) block|{ return|return name|rValue operator|.",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(6068, 6072)"
      },
      {
        "commit_hash": "cb93304e8e714ee049127cfe5d6e97b168df8523",
        "line_num": 5586,
        "line_str": "argument_list|() condition|) block|{ return|return name|rValue",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(6068, 6072)"
      },
      {
        "commit_hash": "cb93304e8e714ee049127cfe5d6e97b168df8523",
        "line_num": 5585,
        "line_str": "name|isUnknownType argument_list|() condition|) block|{ return|return",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(6068, 6072)"
      }
    ]
  },
  {
    "id": 10011,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["adf9f50d591ecc55450b8a9027a784ee630cd5f6"],
    "fix_commit_hash": "fb31907d4dafdfb2f9bc39115c9ba6b60de24393",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "adf9f50d591ecc55450b8a9027a784ee630cd5f6",
        "line_num": 6633,
        "line_str": "name|getOwnPropertyNames argument_list|() decl_stmt|; for|for control|(",
        "file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_line_num": "range(6771, 6777)"
      },
      {
        "commit_hash": "adf9f50d591ecc55450b8a9027a784ee630cd5f6",
        "line_num": 6632,
        "line_str": "operator|. name|getOwnPropertyNames argument_list|() decl_stmt|; for|for",
        "file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_line_num": "range(6771, 6777)"
      },
      {
        "commit_hash": "adf9f50d591ecc55450b8a9027a784ee630cd5f6",
        "line_num": 6631,
        "line_str": "argument_list|() operator|. name|getOwnPropertyNames argument_list|() decl_stmt|;",
        "file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_line_num": "range(6771, 6777)"
      },
      {
        "commit_hash": "adf9f50d591ecc55450b8a9027a784ee630cd5f6",
        "line_num": 6630,
        "line_str": "name|getImplicitPrototype argument_list|() operator|. name|getOwnPropertyNames argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_line_num": "range(6771, 6777)"
      },
      {
        "commit_hash": "adf9f50d591ecc55450b8a9027a784ee630cd5f6",
        "line_num": 6629,
        "line_str": "operator|. name|getImplicitPrototype argument_list|() operator|. name|getOwnPropertyNames",
        "file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_line_num": "range(6771, 6777)"
      },
      {
        "commit_hash": "adf9f50d591ecc55450b8a9027a784ee630cd5f6",
        "line_num": 6628,
        "line_str": "name|interfaceType operator|. name|getImplicitPrototype argument_list|() operator|.",
        "file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_line_num": "range(6771, 6777)"
      },
      {
        "commit_hash": "adf9f50d591ecc55450b8a9027a784ee630cd5f6",
        "line_num": 6626,
        "line_str": "name|currentPropertyNames init|= name|interfaceType operator|. name|getImplicitPrototype",
        "file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_line_num": "range(6769, 6770)"
      },
      {
        "commit_hash": "53b24ebd813dd2ccad94e99fd29520a74a5c2a14",
        "line_num": 6273,
        "line_str": "argument_list|() decl_stmt|; for|for control|( name|String",
        "file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_line_num": "range(6777, 6779)"
      },
      {
        "commit_hash": "53b24ebd813dd2ccad94e99fd29520a74a5c2a14",
        "line_num": 6274,
        "line_str": "decl_stmt|; for|for control|( name|String name|name",
        "file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_line_num": "range(6777, 6779)"
      },
      {
        "commit_hash": "53b24ebd813dd2ccad94e99fd29520a74a5c2a14",
        "line_num": 6267,
        "line_str": "argument_list|> name|currentPropertyNames init|= name|interfaceType operator|.",
        "file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_line_num": "range(6761, 6769)"
      },
      {
        "commit_hash": "53b24ebd813dd2ccad94e99fd29520a74a5c2a14",
        "line_num": 6266,
        "line_str": "name|String argument_list|> name|currentPropertyNames init|= name|interfaceType",
        "file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_line_num": "range(6761, 6769)"
      },
      {
        "commit_hash": "53b24ebd813dd2ccad94e99fd29520a74a5c2a14",
        "line_num": 6265,
        "line_str": "argument_list|< name|String argument_list|> name|currentPropertyNames init|=",
        "file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_line_num": "range(6761, 6769)"
      },
      {
        "commit_hash": "53b24ebd813dd2ccad94e99fd29520a74a5c2a14",
        "line_num": 6264,
        "line_str": "name|Set argument_list|< name|String argument_list|> name|currentPropertyNames",
        "file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_line_num": "range(6761, 6769)"
      },
      {
        "commit_hash": "53b24ebd813dd2ccad94e99fd29520a74a5c2a14",
        "line_num": 6263,
        "line_str": "block|{ name|Set argument_list|< name|String argument_list|>",
        "file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_line_num": "range(6761, 6769)"
      },
      {
        "commit_hash": "53b24ebd813dd2ccad94e99fd29520a74a5c2a14",
        "line_num": 6262,
        "line_str": "parameter_list|) block|{ name|Set argument_list|< name|String",
        "file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_line_num": "range(6761, 6769)"
      },
      {
        "commit_hash": "53b24ebd813dd2ccad94e99fd29520a74a5c2a14",
        "line_num": 6261,
        "line_str": "name|interfaceType parameter_list|) block|{ name|Set argument_list|<",
        "file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_line_num": "range(6761, 6769)"
      },
      {
        "commit_hash": "53b24ebd813dd2ccad94e99fd29520a74a5c2a14",
        "line_num": 6260,
        "line_str": "name|ObjectType name|interfaceType parameter_list|) block|{ name|Set",
        "file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_line_num": "range(6761, 6769)"
      }
    ]
  },
  {
    "id": 10012,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["424fd595e6f1e2151db93b9251696a6f686b2e8b"],
    "fix_commit_hash": "241ef642fcf0cf66f9c7f22b3994b00581e80069",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 394,
        "line_str": "operator|. name|getNext argument_list|() operator|. name|isName",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 361,
        "line_str": "operator|. name|isCall argument_list|() operator|&& name|parent",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 374)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 576,
        "line_str": "name|n operator|. name|getJSDocInfo argument_list|() operator|!=",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 599)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 510,
        "line_str": "operator|. name|getFirstChild argument_list|() operator||| name|n",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 477,
        "line_str": "condition|( name|pt operator|!= name|Token operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 444,
        "line_str": "name|getType argument_list|() decl_stmt|; if|if condition|(",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 411,
        "line_str": "argument_list|() argument_list|) condition|) block|{ return|return;",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 378,
        "line_str": "condition|( name|n operator|== name|parent operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 345,
        "line_str": "name|Token operator|. name|COMMA condition|) block|{",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 374)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 593,
        "line_str": "argument_list|() condition|) block|{ comment return|return;",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 599)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 527,
        "line_str": "condition|) block|{ comment comment block|}",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 494,
        "line_str": "operator|== name|Token operator|. name|FOR operator|&&",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 461,
        "line_str": "operator|. name|EXPR_RESULT operator|&& name|ancestorType operator|!=",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 428,
        "line_str": "for|for control|( name|Node name|an range|:",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 395,
        "line_str": "name|getNext argument_list|() operator|. name|isName argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 362,
        "line_str": "name|isCall argument_list|() operator|&& name|parent operator|==",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 374)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 329,
        "line_str": "condition|) block|{ return|return; block|} name|int",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 374)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 577,
        "line_str": "operator|. name|getJSDocInfo argument_list|() operator|!= literal|null",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 599)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 511,
        "line_str": "name|getFirstChild argument_list|() operator||| name|n operator|==",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 478,
        "line_str": "name|pt operator|!= name|Token operator|. name|EXPR_RESULT",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 445,
        "line_str": "argument_list|() decl_stmt|; if|if condition|( name|ancestorType",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 412,
        "line_str": "argument_list|) condition|) block|{ return|return; block|}",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 379,
        "line_str": "name|n operator|== name|parent operator|. name|getFirstChild",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 346,
        "line_str": "operator|. name|COMMA condition|) block|{ name|Node",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 374)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 594,
        "line_str": "condition|) block|{ comment return|return; block|}",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 599)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 528,
        "line_str": "block|{ comment comment block|} else|else",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 495,
        "line_str": "name|Token operator|. name|FOR operator|&& name|parent",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 462,
        "line_str": "name|EXPR_RESULT operator|&& name|ancestorType operator|!= name|Token",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 429,
        "line_str": "control|( name|Node name|an range|: name|parent",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 396,
        "line_str": "argument_list|() operator|. name|isName argument_list|() operator|&&",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 363,
        "line_str": "argument_list|() operator|&& name|parent operator|== name|gramps",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 374)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 330,
        "line_str": "block|{ return|return; block|} name|int name|pt",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 374)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 578,
        "line_str": "name|getJSDocInfo argument_list|() operator|!= literal|null condition|)",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 599)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 512,
        "line_str": "argument_list|() operator||| name|n operator|== name|parent",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 479,
        "line_str": "operator|!= name|Token operator|. name|EXPR_RESULT operator|&&",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 446,
        "line_str": "decl_stmt|; if|if condition|( name|ancestorType operator|==",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 413,
        "line_str": "condition|) block|{ return|return; block|} block|}",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 380,
        "line_str": "operator|== name|parent operator|. name|getFirstChild argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 347,
        "line_str": "name|COMMA condition|) block|{ name|Node name|gramps",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 374)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 595,
        "line_str": "block|{ comment return|return; block|} name|String",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 599)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 529,
        "line_str": "comment comment block|} else|else block|{",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 496,
        "line_str": "operator|. name|FOR operator|&& name|parent operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 463,
        "line_str": "operator|&& name|ancestorType operator|!= name|Token operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 430,
        "line_str": "name|Node name|an range|: name|parent operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 397,
        "line_str": "operator|. name|isName argument_list|() operator|&& literal|\"eval\"",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 364,
        "line_str": "operator|&& name|parent operator|== name|gramps operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 374)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 331,
        "line_str": "return|return; block|} name|int name|pt init|=",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 374)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 12083,
        "line_str": "block|{ case|case name|Token operator|. name|EXPR_RESULT",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(12083, 12084)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 579,
        "line_str": "argument_list|() operator|!= literal|null condition|) block|{",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 599)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 513,
        "line_str": "operator||| name|n operator|== name|parent operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 480,
        "line_str": "name|Token operator|. name|EXPR_RESULT operator|&& name|pt",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 447,
        "line_str": "if|if condition|( name|ancestorType operator|== name|Token",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 414,
        "line_str": "block|{ return|return; block|} block|} if|if",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 381,
        "line_str": "name|parent operator|. name|getFirstChild argument_list|() operator|&&",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 348,
        "line_str": "condition|) block|{ name|Node name|gramps init|=",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 374)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 596,
        "line_str": "comment return|return; block|} name|String name|msg",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 599)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 563,
        "line_str": "operator|. name|getCompiler argument_list|() argument_list|) condition|)",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 599)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 530,
        "line_str": "comment block|} else|else block|{ return|return;",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 497,
        "line_str": "name|FOR operator|&& name|parent operator|. name|getChildCount",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 464,
        "line_str": "name|ancestorType operator|!= name|Token operator|. name|BLOCK",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 431,
        "line_str": "name|an range|: name|parent operator|. name|getAncestors",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 398,
        "line_str": "name|isName argument_list|() operator|&& literal|\"eval\" operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 365,
        "line_str": "name|parent operator|== name|gramps operator|. name|getFirstChild",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 374)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 332,
        "line_str": "block|} name|int name|pt init|= name|parent",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 374)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 580,
        "line_str": "operator|!= literal|null condition|) block|{ comment",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 599)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 514,
        "line_str": "name|n operator|== name|parent operator|. name|getFirstChild",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 481,
        "line_str": "operator|. name|EXPR_RESULT operator|&& name|pt operator|!=",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 448,
        "line_str": "condition|( name|ancestorType operator|== name|Token operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 415,
        "line_str": "return|return; block|} block|} if|if condition|(",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 382,
        "line_str": "operator|. name|getFirstChild argument_list|() operator|&& name|parent",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 349,
        "line_str": "block|{ name|Node name|gramps init|= name|parent",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 374)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 597,
        "line_str": "return|return; block|} name|String name|msg init|=",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 599)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 564,
        "line_str": "name|getCompiler argument_list|() argument_list|) condition|) block|{",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 599)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 531,
        "line_str": "block|} else|else block|{ return|return; comment",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 498,
        "line_str": "operator|&& name|parent operator|. name|getChildCount argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 465,
        "line_str": "operator|!= name|Token operator|. name|BLOCK condition|)",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 432,
        "line_str": "range|: name|parent operator|. name|getAncestors argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 399,
        "line_str": "argument_list|() operator|&& literal|\"eval\" operator|. name|equals",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 366,
        "line_str": "operator|== name|gramps operator|. name|getFirstChild argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 374)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 333,
        "line_str": "name|int name|pt init|= name|parent operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 374)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 581,
        "line_str": "literal|null condition|) block|{ comment comment",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 599)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 515,
        "line_str": "operator|== name|parent operator|. name|getFirstChild argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 482,
        "line_str": "name|EXPR_RESULT operator|&& name|pt operator|!= name|Token",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 449,
        "line_str": "name|ancestorType operator|== name|Token operator|. name|COMMA",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 416,
        "line_str": "block|} block|} if|if condition|( name|n",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 383,
        "line_str": "name|getFirstChild argument_list|() operator|&& name|parent operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 350,
        "line_str": "name|Node name|gramps init|= name|parent operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 374)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 598,
        "line_str": "block|} name|String name|msg init|= literal|\"This code lacks side-effects. Is there a bug?\"",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 599)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 565,
        "line_str": "argument_list|() argument_list|) condition|) block|{ if|if",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 599)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 532,
        "line_str": "else|else block|{ return|return; comment block|}",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 499,
        "line_str": "name|parent operator|. name|getChildCount argument_list|() operator|==",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 466,
        "line_str": "name|Token operator|. name|BLOCK condition|) return|return;",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 433,
        "line_str": "name|parent operator|. name|getAncestors argument_list|() control|)",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 400,
        "line_str": "operator|&& literal|\"eval\" operator|. name|equals argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 367,
        "line_str": "name|gramps operator|. name|getFirstChild argument_list|() condition|)",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 374)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 334,
        "line_str": "name|pt init|= name|parent operator|. name|getType",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 374)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 582,
        "line_str": "condition|) block|{ comment comment return|return;",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 599)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 549,
        "line_str": "argument_list|) decl_stmt|; if|if condition|( name|isSimpleOp",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(549, 553)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 516,
        "line_str": "name|parent operator|. name|getFirstChild argument_list|() operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 483,
        "line_str": "operator|&& name|pt operator|!= name|Token operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 450,
        "line_str": "operator|== name|Token operator|. name|COMMA condition|)",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 417,
        "line_str": "block|} if|if condition|( name|n operator|==",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 384,
        "line_str": "argument_list|() operator|&& name|parent operator|. name|getChildCount",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 351,
        "line_str": "name|gramps init|= name|parent operator|. name|getParent",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 374)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 566,
        "line_str": "argument_list|) condition|) block|{ if|if condition|(",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 599)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 533,
        "line_str": "block|{ return|return; comment block|} block|}",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 500,
        "line_str": "operator|. name|getChildCount argument_list|() operator|== literal|4",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 467,
        "line_str": "operator|. name|BLOCK condition|) return|return; else|else",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 434,
        "line_str": "operator|. name|getAncestors argument_list|() control|) block|{",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 401,
        "line_str": "literal|\"eval\" operator|. name|equals argument_list|( name|n",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 368,
        "line_str": "operator|. name|getFirstChild argument_list|() condition|) block|{",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 374)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 335,
        "line_str": "init|= name|parent operator|. name|getType argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 374)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 583,
        "line_str": "block|{ comment comment return|return; block|}",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 599)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 550,
        "line_str": "decl_stmt|; if|if condition|( name|isSimpleOp operator|||",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(549, 553)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 517,
        "line_str": "operator|. name|getFirstChild argument_list|() operator|. name|getNext",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 484,
        "line_str": "name|pt operator|!= name|Token operator|. name|BLOCK",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 451,
        "line_str": "name|Token operator|. name|COMMA condition|) continue|continue;",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 418,
        "line_str": "if|if condition|( name|n operator|== name|parent",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 385,
        "line_str": "operator|&& name|parent operator|. name|getChildCount argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 352,
        "line_str": "init|= name|parent operator|. name|getParent argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 374)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 567,
        "line_str": "condition|) block|{ if|if condition|( name|n",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 599)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 534,
        "line_str": "return|return; comment block|} block|} name|boolean",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 501,
        "line_str": "name|getChildCount argument_list|() operator|== literal|4 operator|&&",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 468,
        "line_str": "name|BLOCK condition|) return|return; else|else break|break;",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 435,
        "line_str": "name|getAncestors argument_list|() control|) block|{ name|int",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 402,
        "line_str": "operator|. name|equals argument_list|( name|n operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 369,
        "line_str": "name|getFirstChild argument_list|() condition|) block|{ comment",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 374)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 336,
        "line_str": "name|parent operator|. name|getType argument_list|() decl_stmt|;",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 374)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 584,
        "line_str": "comment comment return|return; block|} if|else if",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 599)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 551,
        "line_str": "if|if condition|( name|isSimpleOp operator||| operator|!",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(549, 553)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 518,
        "line_str": "name|getFirstChild argument_list|() operator|. name|getNext argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 485,
        "line_str": "operator|!= name|Token operator|. name|BLOCK condition|)",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 452,
        "line_str": "operator|. name|COMMA condition|) continue|continue; if|if",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 419,
        "line_str": "condition|( name|n operator|== name|parent operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 386,
        "line_str": "name|parent operator|. name|getChildCount argument_list|() operator|==",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 353,
        "line_str": "name|parent operator|. name|getParent argument_list|() decl_stmt|;",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 374)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 568,
        "line_str": "block|{ if|if condition|( name|n operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 599)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 535,
        "line_str": "comment block|} block|} name|boolean name|isSimpleOp",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 502,
        "line_str": "argument_list|() operator|== literal|4 operator|&& operator|(",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 469,
        "line_str": "condition|) return|return; else|else break|break; block|}",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 436,
        "line_str": "argument_list|() control|) block|{ name|int name|ancestorType",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 403,
        "line_str": "name|equals argument_list|( name|n operator|. name|getNext",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 370,
        "line_str": "argument_list|() condition|) block|{ comment comment",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 374)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 337,
        "line_str": "operator|. name|getType argument_list|() decl_stmt|; if|if",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 374)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 585,
        "line_str": "comment return|return; block|} if|else if condition|(",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 599)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 552,
        "line_str": "condition|( name|isSimpleOp operator||| operator|! name|NodeUtil",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(549, 553)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 519,
        "line_str": "argument_list|() operator|. name|getNext argument_list|() operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 486,
        "line_str": "name|Token operator|. name|BLOCK condition|) block|{",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 453,
        "line_str": "name|COMMA condition|) continue|continue; if|if condition|(",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 420,
        "line_str": "name|n operator|== name|parent operator|. name|getLastChild",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 387,
        "line_str": "operator|. name|getChildCount argument_list|() operator|== literal|2",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 354,
        "line_str": "operator|. name|getParent argument_list|() decl_stmt|; if|if",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 374)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 569,
        "line_str": "if|if condition|( name|n operator|. name|isQualifiedName",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 599)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 536,
        "line_str": "block|} block|} name|boolean name|isSimpleOp init|=",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 503,
        "line_str": "operator|== literal|4 operator|&& operator|( name|n",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 470,
        "line_str": "return|return; else|else break|break; block|} block|}",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 437,
        "line_str": "control|) block|{ name|int name|ancestorType init|=",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 404,
        "line_str": "argument_list|( name|n operator|. name|getNext argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 371,
        "line_str": "condition|) block|{ comment comment comment",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 374)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 338,
        "line_str": "name|getType argument_list|() decl_stmt|; if|if condition|(",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 374)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 586,
        "line_str": "return|return; block|} if|else if condition|( name|n",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 599)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 520,
        "line_str": "operator|. name|getNext argument_list|() operator|. name|getNext",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 487,
        "line_str": "operator|. name|BLOCK condition|) block|{ if|if",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 454,
        "line_str": "condition|) continue|continue; if|if condition|( name|ancestorType",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 421,
        "line_str": "operator|== name|parent operator|. name|getLastChild argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 388,
        "line_str": "name|getChildCount argument_list|() operator|== literal|2 operator|&&",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 355,
        "line_str": "name|getParent argument_list|() decl_stmt|; if|if condition|(",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 374)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 570,
        "line_str": "condition|( name|n operator|. name|isQualifiedName argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 599)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 537,
        "line_str": "block|} name|boolean name|isSimpleOp init|= name|NodeUtil",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 504,
        "line_str": "literal|4 operator|&& operator|( name|n operator|==",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 471,
        "line_str": "else|else break|break; block|} block|} block|}",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 438,
        "line_str": "block|{ name|int name|ancestorType init|= name|an",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 405,
        "line_str": "name|n operator|. name|getNext argument_list|() operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 372,
        "line_str": "block|{ comment comment comment comment",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 374)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 339,
        "line_str": "argument_list|() decl_stmt|; if|if condition|( name|pt",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 374)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 587,
        "line_str": "block|} if|else if condition|( name|n operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 599)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 521,
        "line_str": "name|getNext argument_list|() operator|. name|getNext argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 488,
        "line_str": "name|BLOCK condition|) block|{ if|if condition|(",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 455,
        "line_str": "continue|continue; if|if condition|( name|ancestorType operator|!=",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 422,
        "line_str": "name|parent operator|. name|getLastChild argument_list|() condition|)",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 389,
        "line_str": "argument_list|() operator|== literal|2 operator|&& name|n",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 356,
        "line_str": "argument_list|() decl_stmt|; if|if condition|( name|gramps",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 374)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 571,
        "line_str": "name|n operator|. name|isQualifiedName argument_list|() operator|&&",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 599)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 505,
        "line_str": "operator|&& operator|( name|n operator|== name|parent",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 472,
        "line_str": "break|break; block|} block|} block|} if|else if",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 439,
        "line_str": "name|int name|ancestorType init|= name|an operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 406,
        "line_str": "operator|. name|getNext argument_list|() operator|. name|getString",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 373,
        "line_str": "comment comment comment comment if|if",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 374)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 340,
        "line_str": "decl_stmt|; if|if condition|( name|pt operator|==",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 374)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 12125,
        "line_str": "name|Token operator|. name|COMMA case|: return|return",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(12125, 12129)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 588,
        "line_str": "if|else if condition|( name|n operator|. name|isExprResult",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 599)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 522,
        "line_str": "argument_list|() operator|. name|getNext argument_list|() operator|)",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 489,
        "line_str": "condition|) block|{ if|if condition|( name|pt",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 456,
        "line_str": "if|if condition|( name|ancestorType operator|!= name|Token",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 423,
        "line_str": "operator|. name|getLastChild argument_list|() condition|) block|{",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 390,
        "line_str": "operator|== literal|2 operator|&& name|n operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 357,
        "line_str": "decl_stmt|; if|if condition|( name|gramps operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 374)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 572,
        "line_str": "operator|. name|isQualifiedName argument_list|() operator|&& name|n",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 599)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 506,
        "line_str": "operator|( name|n operator|== name|parent operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 473,
        "line_str": "block|} block|} block|} if|else if condition|(",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 440,
        "line_str": "name|ancestorType init|= name|an operator|. name|getType",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 407,
        "line_str": "name|getNext argument_list|() operator|. name|getString argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 12126,
        "line_str": "operator|. name|COMMA case|: return|return operator|(",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(12125, 12129)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 341,
        "line_str": "if|if condition|( name|pt operator|== name|Token",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 374)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 589,
        "line_str": "condition|( name|n operator|. name|isExprResult argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 599)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 523,
        "line_str": "operator|. name|getNext argument_list|() operator|) condition|)",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 490,
        "line_str": "block|{ if|if condition|( name|pt operator|==",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 457,
        "line_str": "condition|( name|ancestorType operator|!= name|Token operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 424,
        "line_str": "name|getLastChild argument_list|() condition|) block|{ for|for",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 391,
        "line_str": "literal|2 operator|&& name|n operator|. name|getNext",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 358,
        "line_str": "if|if condition|( name|gramps operator|. name|isCall",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 374)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 573,
        "line_str": "name|isQualifiedName argument_list|() operator|&& name|n operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 599)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 507,
        "line_str": "name|n operator|== name|parent operator|. name|getFirstChild",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 474,
        "line_str": "block|} block|} if|else if condition|( name|pt",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 441,
        "line_str": "init|= name|an operator|. name|getType argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 408,
        "line_str": "argument_list|() operator|. name|getString argument_list|() argument_list|)",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 12127,
        "line_str": "name|COMMA case|: return|return operator|( name|expr",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(12125, 12129)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 342,
        "line_str": "condition|( name|pt operator|== name|Token operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 374)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 590,
        "line_str": "name|n operator|. name|isExprResult argument_list|() condition|)",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 599)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 524,
        "line_str": "name|getNext argument_list|() operator|) condition|) block|{",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 491,
        "line_str": "if|if condition|( name|pt operator|== name|Token",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 458,
        "line_str": "name|ancestorType operator|!= name|Token operator|. name|EXPR_RESULT",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 425,
        "line_str": "argument_list|() condition|) block|{ for|for control|(",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 392,
        "line_str": "operator|&& name|n operator|. name|getNext argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 359,
        "line_str": "condition|( name|gramps operator|. name|isCall argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 374)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 574,
        "line_str": "argument_list|() operator|&& name|n operator|. name|getJSDocInfo",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 599)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 508,
        "line_str": "operator|== name|parent operator|. name|getFirstChild argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 475,
        "line_str": "block|} if|else if condition|( name|pt operator|!=",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 442,
        "line_str": "name|an operator|. name|getType argument_list|() decl_stmt|;",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 409,
        "line_str": "operator|. name|getString argument_list|() argument_list|) condition|)",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 376,
        "line_str": "comment if|if condition|( name|n operator|==",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 343,
        "line_str": "name|pt operator|== name|Token operator|. name|COMMA",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 374)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 12128,
        "line_str": "case|: return|return operator|( name|expr operator|==",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(12125, 12129)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 591,
        "line_str": "operator|. name|isExprResult argument_list|() condition|) block|{",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 599)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 525,
        "line_str": "argument_list|() operator|) condition|) block|{ comment",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 492,
        "line_str": "condition|( name|pt operator|== name|Token operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 459,
        "line_str": "operator|!= name|Token operator|. name|EXPR_RESULT operator|&&",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 426,
        "line_str": "condition|) block|{ for|for control|( name|Node",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 393,
        "line_str": "name|n operator|. name|getNext argument_list|() operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 360,
        "line_str": "name|gramps operator|. name|isCall argument_list|() operator|&&",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 374)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 575,
        "line_str": "operator|&& name|n operator|. name|getJSDocInfo argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 599)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 509,
        "line_str": "name|parent operator|. name|getFirstChild argument_list|() operator|||",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 476,
        "line_str": "if|else if condition|( name|pt operator|!= name|Token",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 443,
        "line_str": "operator|. name|getType argument_list|() decl_stmt|; if|if",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 410,
        "line_str": "name|getString argument_list|() argument_list|) condition|) block|{",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 377,
        "line_str": "if|if condition|( name|n operator|== name|parent",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 344,
        "line_str": "operator|== name|Token operator|. name|COMMA condition|)",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 374)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 592,
        "line_str": "name|isExprResult argument_list|() condition|) block|{ comment",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 599)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 526,
        "line_str": "operator|) condition|) block|{ comment comment",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 493,
        "line_str": "name|pt operator|== name|Token operator|. name|FOR",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 460,
        "line_str": "name|Token operator|. name|EXPR_RESULT operator|&& name|ancestorType",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      },
      {
        "commit_hash": "424fd595e6f1e2151db93b9251696a6f686b2e8b",
        "line_num": 427,
        "line_str": "block|{ for|for control|( name|Node name|an",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 538)"
      }
    ]
  },
  {
    "id": 10013,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["76212e717c7f44a3a3b92ae31f82fa8075fc5dc3"],
    "fix_commit_hash": "67e6466c7622348041c711f7ac37f5b7e3baa251",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "76212e717c7f44a3a3b92ae31f82fa8075fc5dc3",
        "line_num": 1150,
        "line_str": "name|isLabelName argument_list|() argument_list|) expr_stmt|; name|Preconditions",
        "file_path": "src/com/google/javascript/rhino/IR.java",
        "input_file_path": "src/com/google/javascript/rhino/IR.java",
        "input_line_num": "range(1199, 1204)"
      },
      {
        "commit_hash": "76212e717c7f44a3a3b92ae31f82fa8075fc5dc3",
        "line_num": 1149,
        "line_str": "operator|. name|isLabelName argument_list|() argument_list|) expr_stmt|;",
        "file_path": "src/com/google/javascript/rhino/IR.java",
        "input_file_path": "src/com/google/javascript/rhino/IR.java",
        "input_line_num": "range(1199, 1204)"
      },
      {
        "commit_hash": "76212e717c7f44a3a3b92ae31f82fa8075fc5dc3",
        "line_num": 1148,
        "line_str": "name|tryBody operator|. name|isLabelName argument_list|() argument_list|)",
        "file_path": "src/com/google/javascript/rhino/IR.java",
        "input_file_path": "src/com/google/javascript/rhino/IR.java",
        "input_line_num": "range(1199, 1204)"
      },
      {
        "commit_hash": "76212e717c7f44a3a3b92ae31f82fa8075fc5dc3",
        "line_num": 1147,
        "line_str": "argument_list|( name|tryBody operator|. name|isLabelName argument_list|()",
        "file_path": "src/com/google/javascript/rhino/IR.java",
        "input_file_path": "src/com/google/javascript/rhino/IR.java",
        "input_line_num": "range(1199, 1204)"
      },
      {
        "commit_hash": "76212e717c7f44a3a3b92ae31f82fa8075fc5dc3",
        "line_num": 1146,
        "line_str": "name|checkState argument_list|( name|tryBody operator|. name|isLabelName",
        "file_path": "src/com/google/javascript/rhino/IR.java",
        "input_file_path": "src/com/google/javascript/rhino/IR.java",
        "input_line_num": "range(1199, 1204)"
      },
      {
        "commit_hash": "76212e717c7f44a3a3b92ae31f82fa8075fc5dc3",
        "line_num": 329,
        "line_str": "return|return name|block return|; block|} specifier|public",
        "file_path": "src/com/google/javascript/rhino/IR.java",
        "input_file_path": "src/com/google/javascript/rhino/IR.java",
        "input_line_num": "range(382, 384)"
      },
      {
        "commit_hash": "76212e717c7f44a3a3b92ae31f82fa8075fc5dc3",
        "line_num": 1160,
        "line_str": "name|isLabelName argument_list|() argument_list|) expr_stmt|; name|Node",
        "file_path": "src/com/google/javascript/rhino/IR.java",
        "input_file_path": "src/com/google/javascript/rhino/IR.java",
        "input_line_num": "range(1209, 1214)"
      },
      {
        "commit_hash": "76212e717c7f44a3a3b92ae31f82fa8075fc5dc3",
        "line_num": 1158,
        "line_str": "name|finallyBody operator|. name|isLabelName argument_list|() argument_list|)",
        "file_path": "src/com/google/javascript/rhino/IR.java",
        "input_file_path": "src/com/google/javascript/rhino/IR.java",
        "input_line_num": "range(1209, 1214)"
      },
      {
        "commit_hash": "76212e717c7f44a3a3b92ae31f82fa8075fc5dc3",
        "line_num": 1159,
        "line_str": "operator|. name|isLabelName argument_list|() argument_list|) expr_stmt|;",
        "file_path": "src/com/google/javascript/rhino/IR.java",
        "input_file_path": "src/com/google/javascript/rhino/IR.java",
        "input_line_num": "range(1209, 1214)"
      },
      {
        "commit_hash": "76212e717c7f44a3a3b92ae31f82fa8075fc5dc3",
        "line_num": 330,
        "line_str": "name|block return|; block|} specifier|public specifier|static",
        "file_path": "src/com/google/javascript/rhino/IR.java",
        "input_file_path": "src/com/google/javascript/rhino/IR.java",
        "input_line_num": "range(382, 384)"
      },
      {
        "commit_hash": "76212e717c7f44a3a3b92ae31f82fa8075fc5dc3",
        "line_num": 1225,
        "line_str": "init|= name|block argument_list|( name|catchNode argument_list|)",
        "file_path": "src/com/google/javascript/rhino/IR.java",
        "input_file_path": "src/com/google/javascript/rhino/IR.java",
        "input_line_num": "range(1275, 1280)"
      },
      {
        "commit_hash": "76212e717c7f44a3a3b92ae31f82fa8075fc5dc3",
        "line_num": 1224,
        "line_str": "name|catchBody init|= name|block argument_list|( name|catchNode",
        "file_path": "src/com/google/javascript/rhino/IR.java",
        "input_file_path": "src/com/google/javascript/rhino/IR.java",
        "input_line_num": "range(1275, 1280)"
      },
      {
        "commit_hash": "76212e717c7f44a3a3b92ae31f82fa8075fc5dc3",
        "line_num": 1223,
        "line_str": "name|Node name|catchBody init|= name|block argument_list|(",
        "file_path": "src/com/google/javascript/rhino/IR.java",
        "input_file_path": "src/com/google/javascript/rhino/IR.java",
        "input_line_num": "range(1275, 1280)"
      },
      {
        "commit_hash": "76212e717c7f44a3a3b92ae31f82fa8075fc5dc3",
        "line_num": 1222,
        "line_str": "expr_stmt|; name|Node name|catchBody init|= name|block",
        "file_path": "src/com/google/javascript/rhino/IR.java",
        "input_file_path": "src/com/google/javascript/rhino/IR.java",
        "input_line_num": "range(1275, 1280)"
      },
      {
        "commit_hash": "76212e717c7f44a3a3b92ae31f82fa8075fc5dc3",
        "line_num": 1157,
        "line_str": "argument_list|( name|finallyBody operator|. name|isLabelName argument_list|()",
        "file_path": "src/com/google/javascript/rhino/IR.java",
        "input_file_path": "src/com/google/javascript/rhino/IR.java",
        "input_line_num": "range(1209, 1214)"
      },
      {
        "commit_hash": "76212e717c7f44a3a3b92ae31f82fa8075fc5dc3",
        "line_num": 1156,
        "line_str": "name|checkState argument_list|( name|finallyBody operator|. name|isLabelName",
        "file_path": "src/com/google/javascript/rhino/IR.java",
        "input_file_path": "src/com/google/javascript/rhino/IR.java",
        "input_line_num": "range(1209, 1214)"
      },
      {
        "commit_hash": "76212e717c7f44a3a3b92ae31f82fa8075fc5dc3",
        "line_num": 1226,
        "line_str": "name|block argument_list|( name|catchNode argument_list|) operator|.",
        "file_path": "src/com/google/javascript/rhino/IR.java",
        "input_file_path": "src/com/google/javascript/rhino/IR.java",
        "input_line_num": "range(1275, 1280)"
      }
    ]
  },
  {
    "id": 10014,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["3e10cf2ac3bb9d884238c58c77af49b0ef0b8aa1"],
    "fix_commit_hash": "1c3c37c9b3d5223878258c68c1f1f80291a32af8",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 451,
        "line_str": "argument_list|( literal|\"var x = a + b; print(x);      x = a - b; print(x)\" argument_list|, literal|\"var x;         print(a + b);             print(a - b)\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(568, 574)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 306,
        "line_str": "operator|. name|newHashSet argument_list|() decl_stmt|; name|Definition",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(334, 337)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 498,
        "line_str": "operator|) operator|. name|traverse argument_list|( name|root",
        "file_path": "src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "input_file_path": "src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "input_line_num": "range(674, 680)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 1545,
        "line_str": "name|n operator|. name|getString argument_list|() argument_list|,",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1789, 1795)"
      },
      {
        "commit_hash": "3e10cf2ac3bb9d884238c58c77af49b0ef0b8aa1",
        "line_num": 848,
        "line_str": "name|void name|testInlineAcrossSideEffect1 parameter_list|() block|{ name|inline",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(886, 897)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 452,
        "line_str": "literal|\"var x = a + b; print(x);      x = a - b; print(x)\" argument_list|, literal|\"var x;         print(a + b);             print(a - b)\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(568, 574)"
      },
      {
        "commit_hash": "3e10cf2ac3bb9d884238c58c77af49b0ef0b8aa1",
        "line_num": 931,
        "line_str": "name|void name|testCanInlineAcrossNoSideEffect parameter_list|() block|{ name|inline",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(969, 979)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 307,
        "line_str": "name|newHashSet argument_list|() decl_stmt|; name|Definition parameter_list|(",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(334, 337)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 499,
        "line_str": "operator|. name|traverse argument_list|( name|root argument_list|)",
        "file_path": "src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "input_file_path": "src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "input_line_num": "range(674, 680)"
      },
      {
        "commit_hash": "3e10cf2ac3bb9d884238c58c77af49b0ef0b8aa1",
        "line_num": 849,
        "line_str": "name|testInlineAcrossSideEffect1 parameter_list|() block|{ name|inline argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(886, 897)"
      },
      {
        "commit_hash": "e22cd6d799940d4b74eaf7ff3493d7937f7e3ac0",
        "line_num": 1130,
        "line_str": "literal|\"var x; for(; x = 1;foo(x)) {}\" argument_list|) expr_stmt|; block|} specifier|private",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(1130, 1131)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 731,
        "line_str": "argument_list|, name|cfgNode argument_list|) decl_stmt|; if|if",
        "file_path": "src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "input_file_path": "src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "input_line_num": "range(889, 893)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 453,
        "line_str": "argument_list|, literal|\"var x;         print(a + b);             print(a - b)\" argument_list|) expr_stmt|; block|}",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(568, 574)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 308,
        "line_str": "argument_list|() decl_stmt|; name|Definition parameter_list|( name|Node",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(334, 337)"
      },
      {
        "commit_hash": "3e10cf2ac3bb9d884238c58c77af49b0ef0b8aa1",
        "line_num": 932,
        "line_str": "name|testCanInlineAcrossNoSideEffect parameter_list|() block|{ name|inline argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(969, 979)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 500,
        "line_str": "name|traverse argument_list|( name|root argument_list|) expr_stmt|;",
        "file_path": "src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "input_file_path": "src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "input_line_num": "range(674, 680)"
      },
      {
        "commit_hash": "3e10cf2ac3bb9d884238c58c77af49b0ef0b8aa1",
        "line_num": 850,
        "line_str": "parameter_list|() block|{ name|inline argument_list|( literal|\"var y; var x = noSFX(y); print(x)\"",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(886, 897)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 732,
        "line_str": "name|cfgNode argument_list|) decl_stmt|; if|if condition|(",
        "file_path": "src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "input_file_path": "src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "input_line_num": "range(889, 893)"
      },
      {
        "commit_hash": "3e10cf2ac3bb9d884238c58c77af49b0ef0b8aa1",
        "line_num": 933,
        "line_str": "parameter_list|() block|{ name|inline argument_list|( literal|\"var y; var x = noSFX(Y), z = noSFX(); noSFX(); noSFX(), print(x)\"",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(969, 979)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 501,
        "line_str": "argument_list|( name|root argument_list|) expr_stmt|; block|}",
        "file_path": "src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "input_file_path": "src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "input_line_num": "range(674, 680)"
      },
      {
        "commit_hash": "3e10cf2ac3bb9d884238c58c77af49b0ef0b8aa1",
        "line_num": 851,
        "line_str": "block|{ name|inline argument_list|( literal|\"var y; var x = noSFX(y); print(x)\" argument_list|,",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(886, 897)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 1565,
        "line_str": "operator|. name|getString argument_list|() argument_list|) argument_list|)",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1814, 1818)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 733,
        "line_str": "argument_list|) decl_stmt|; if|if condition|( name|defNode",
        "file_path": "src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "input_file_path": "src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "input_line_num": "range(889, 893)"
      },
      {
        "commit_hash": "3e10cf2ac3bb9d884238c58c77af49b0ef0b8aa1",
        "line_num": 934,
        "line_str": "block|{ name|inline argument_list|( literal|\"var y; var x = noSFX(Y), z = noSFX(); noSFX(); noSFX(), print(x)\" argument_list|,",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(969, 979)"
      },
      {
        "commit_hash": "3e10cf2ac3bb9d884238c58c77af49b0ef0b8aa1",
        "line_num": 852,
        "line_str": "name|inline argument_list|( literal|\"var y; var x = noSFX(y); print(x)\" argument_list|, literal|\"var y;var x;print(noSFX(y))\"",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(886, 897)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 1566,
        "line_str": "name|getString argument_list|() argument_list|) argument_list|) expr_stmt|;",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1814, 1818)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 734,
        "line_str": "decl_stmt|; if|if condition|( name|defNode operator|!=",
        "file_path": "src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "input_file_path": "src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "input_line_num": "range(889, 893)"
      },
      {
        "commit_hash": "3e10cf2ac3bb9d884238c58c77af49b0ef0b8aa1",
        "line_num": 935,
        "line_str": "name|inline argument_list|( literal|\"var y; var x = noSFX(Y), z = noSFX(); noSFX(); noSFX(), print(x)\" argument_list|, literal|\"var y; var x, z = noSFX(); noSFX(); noSFX(), print(noSFX(Y))\"",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(969, 979)"
      },
      {
        "commit_hash": "75a68d55fe10b777b40dbcc0f528029eaef358a3",
        "line_num": 1781,
        "line_str": "name|n operator|. name|isName argument_list|() operator|&&",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1785, 1789)"
      },
      {
        "commit_hash": "3e10cf2ac3bb9d884238c58c77af49b0ef0b8aa1",
        "line_num": 853,
        "line_str": "argument_list|( literal|\"var y; var x = noSFX(y); print(x)\" argument_list|, literal|\"var y;var x;print(noSFX(y))\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(886, 897)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 1567,
        "line_str": "argument_list|() argument_list|) argument_list|) expr_stmt|; block|}",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1814, 1818)"
      },
      {
        "commit_hash": "23a193ea8d83da67b19a7602d98d33b57b013629",
        "line_num": 1534,
        "line_str": "operator|. name|getString argument_list|() argument_list|, literal|true",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1795, 1800)"
      },
      {
        "commit_hash": "3e10cf2ac3bb9d884238c58c77af49b0ef0b8aa1",
        "line_num": 936,
        "line_str": "argument_list|( literal|\"var y; var x = noSFX(Y), z = noSFX(); noSFX(); noSFX(), print(x)\" argument_list|, literal|\"var y; var x, z = noSFX(); noSFX(); noSFX(), print(noSFX(Y))\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(969, 979)"
      },
      {
        "commit_hash": "75a68d55fe10b777b40dbcc0f528029eaef358a3",
        "line_num": 1782,
        "line_str": "operator|. name|isName argument_list|() operator|&& name|jsScope",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1785, 1789)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 1551,
        "line_str": "argument_list|) condition|) block|{ name|def operator|.",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1800, 1809)"
      },
      {
        "commit_hash": "3e10cf2ac3bb9d884238c58c77af49b0ef0b8aa1",
        "line_num": 854,
        "line_str": "literal|\"var y; var x = noSFX(y); print(x)\" argument_list|, literal|\"var y;var x;print(noSFX(y))\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(886, 897)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 1568,
        "line_str": "argument_list|) argument_list|) expr_stmt|; block|} block|}",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1814, 1818)"
      },
      {
        "commit_hash": "23a193ea8d83da67b19a7602d98d33b57b013629",
        "line_num": 1535,
        "line_str": "name|getString argument_list|() argument_list|, literal|true argument_list|)",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1795, 1800)"
      },
      {
        "commit_hash": "3e10cf2ac3bb9d884238c58c77af49b0ef0b8aa1",
        "line_num": 937,
        "line_str": "literal|\"var y; var x = noSFX(Y), z = noSFX(); noSFX(); noSFX(), print(x)\" argument_list|, literal|\"var y; var x, z = noSFX(); noSFX(); noSFX(), print(noSFX(Y))\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(969, 979)"
      },
      {
        "commit_hash": "75a68d55fe10b777b40dbcc0f528029eaef358a3",
        "line_num": 1783,
        "line_str": "name|isName argument_list|() operator|&& name|jsScope operator|.",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1785, 1789)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 1552,
        "line_str": "condition|) block|{ name|def operator|. name|depends",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1800, 1809)"
      },
      {
        "commit_hash": "3e10cf2ac3bb9d884238c58c77af49b0ef0b8aa1",
        "line_num": 855,
        "line_str": "argument_list|, literal|\"var y;var x;print(noSFX(y))\" argument_list|) expr_stmt|; block|}",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(886, 897)"
      },
      {
        "commit_hash": "23a193ea8d83da67b19a7602d98d33b57b013629",
        "line_num": 1536,
        "line_str": "argument_list|() argument_list|, literal|true argument_list|) condition|)",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1795, 1800)"
      },
      {
        "commit_hash": "3e10cf2ac3bb9d884238c58c77af49b0ef0b8aa1",
        "line_num": 938,
        "line_str": "argument_list|, literal|\"var y; var x, z = noSFX(); noSFX(); noSFX(), print(noSFX(Y))\" argument_list|) expr_stmt|; block|}",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(969, 979)"
      },
      {
        "commit_hash": "75a68d55fe10b777b40dbcc0f528029eaef358a3",
        "line_num": 1784,
        "line_str": "argument_list|() operator|&& name|jsScope operator|. name|isDeclared",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1785, 1789)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 1553,
        "line_str": "block|{ name|def operator|. name|depends operator|.",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1800, 1809)"
      },
      {
        "commit_hash": "3e10cf2ac3bb9d884238c58c77af49b0ef0b8aa1",
        "line_num": 856,
        "line_str": "literal|\"var y;var x;print(noSFX(y))\" argument_list|) expr_stmt|; block|} specifier|public",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(886, 897)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 1570,
        "line_str": "expr_stmt|; block|} block|} block|} argument_list|)",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1819, 1820)"
      },
      {
        "commit_hash": "23a193ea8d83da67b19a7602d98d33b57b013629",
        "line_num": 1537,
        "line_str": "argument_list|, literal|true argument_list|) condition|) block|{",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1795, 1800)"
      },
      {
        "commit_hash": "3e10cf2ac3bb9d884238c58c77af49b0ef0b8aa1",
        "line_num": 939,
        "line_str": "literal|\"var y; var x, z = noSFX(); noSFX(); noSFX(), print(noSFX(Y))\" argument_list|) expr_stmt|; block|} specifier|public",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(969, 979)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 1554,
        "line_str": "name|def operator|. name|depends operator|. name|add",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1800, 1809)"
      },
      {
        "commit_hash": "3e10cf2ac3bb9d884238c58c77af49b0ef0b8aa1",
        "line_num": 857,
        "line_str": "argument_list|) expr_stmt|; block|} specifier|public name|void",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(886, 897)"
      },
      {
        "commit_hash": "23a193ea8d83da67b19a7602d98d33b57b013629",
        "line_num": 1538,
        "line_str": "literal|true argument_list|) condition|) block|{ name|def",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1795, 1800)"
      },
      {
        "commit_hash": "3e10cf2ac3bb9d884238c58c77af49b0ef0b8aa1",
        "line_num": 940,
        "line_str": "argument_list|) expr_stmt|; block|} specifier|public name|void",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(969, 979)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 1555,
        "line_str": "operator|. name|depends operator|. name|add argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1800, 1809)"
      },
      {
        "commit_hash": "3e10cf2ac3bb9d884238c58c77af49b0ef0b8aa1",
        "line_num": 858,
        "line_str": "expr_stmt|; block|} specifier|public name|void name|testInlineAcrossSideEffect2",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(886, 897)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 462,
        "line_str": "block|{ comment name|inline argument_list|( literal|\"var x; if (g) { x= a + b; print(x)    }  x = a - b; print(x)\"",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(582, 588)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 1556,
        "line_str": "name|depends operator|. name|add argument_list|( name|jsScope",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1800, 1809)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 1540,
        "line_str": "operator|&& name|jsScope operator|. name|isDeclared argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1789, 1795)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 463,
        "line_str": "comment name|inline argument_list|( literal|\"var x; if (g) { x= a + b; print(x)    }  x = a - b; print(x)\" argument_list|,",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(582, 588)"
      },
      {
        "commit_hash": "23a193ea8d83da67b19a7602d98d33b57b013629",
        "line_num": 1722,
        "line_str": "name|name argument_list|) argument_list|) decl_stmt|; for|for",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1983, 1987)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 1557,
        "line_str": "operator|. name|add argument_list|( name|jsScope operator|.",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1800, 1809)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 1541,
        "line_str": "name|jsScope operator|. name|isDeclared argument_list|( name|n",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1789, 1795)"
      },
      {
        "commit_hash": "3e10cf2ac3bb9d884238c58c77af49b0ef0b8aa1",
        "line_num": 51,
        "line_str": "name|EXTERN_FUNCTIONS init|= literal|\"\" operator|+ literal|\"/** @nosideeffects */ function noSFX() {} \\n\"",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(51, 54)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 464,
        "line_str": "name|inline argument_list|( literal|\"var x; if (g) { x= a + b; print(x)    }  x = a - b; print(x)\" argument_list|, literal|\"var x; if (g) {           print(a + b)}             print(a - b)\"",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(582, 588)"
      },
      {
        "commit_hash": "23a193ea8d83da67b19a7602d98d33b57b013629",
        "line_num": 1723,
        "line_str": "argument_list|) argument_list|) decl_stmt|; for|for control|(",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1983, 1987)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 1558,
        "line_str": "name|add argument_list|( name|jsScope operator|. name|getVar",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1800, 1809)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 448,
        "line_str": "block|{ comment name|inline argument_list|( literal|\"var x = a + b; print(x);      x = a - b; print(x)\"",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(568, 574)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 1542,
        "line_str": "operator|. name|isDeclared argument_list|( name|n operator|.",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1789, 1795)"
      },
      {
        "commit_hash": "3e10cf2ac3bb9d884238c58c77af49b0ef0b8aa1",
        "line_num": 52,
        "line_str": "init|= literal|\"\" operator|+ literal|\"/** @nosideeffects */ function noSFX() {} \\n\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(51, 54)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 465,
        "line_str": "argument_list|( literal|\"var x; if (g) { x= a + b; print(x)    }  x = a - b; print(x)\" argument_list|, literal|\"var x; if (g) {           print(a + b)}             print(a - b)\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(582, 588)"
      },
      {
        "commit_hash": "23a193ea8d83da67b19a7602d98d33b57b013629",
        "line_num": 944,
        "line_str": "expr_stmt|; block|} specifier|public name|void name|testDependOnOuterScopeVariables",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(979, 980)"
      },
      {
        "commit_hash": "23a193ea8d83da67b19a7602d98d33b57b013629",
        "line_num": 1724,
        "line_str": "argument_list|) decl_stmt|; for|for control|( name|Var",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1983, 1987)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 1559,
        "line_str": "argument_list|( name|jsScope operator|. name|getVar argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1800, 1809)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 449,
        "line_str": "comment name|inline argument_list|( literal|\"var x = a + b; print(x);      x = a - b; print(x)\" argument_list|,",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(568, 574)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 496,
        "line_str": "name|this argument_list|) operator|) operator|. name|traverse",
        "file_path": "src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "input_file_path": "src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "input_line_num": "range(674, 680)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 1543,
        "line_str": "name|isDeclared argument_list|( name|n operator|. name|getString",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1789, 1795)"
      },
      {
        "commit_hash": "3e10cf2ac3bb9d884238c58c77af49b0ef0b8aa1",
        "line_num": 53,
        "line_str": "literal|\"\" operator|+ literal|\"/** @nosideeffects */ function noSFX() {} \\n\" operator|+ literal|\"                      function hasSFX() {} \\n\"",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(51, 54)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 466,
        "line_str": "literal|\"var x; if (g) { x= a + b; print(x)    }  x = a - b; print(x)\" argument_list|, literal|\"var x; if (g) {           print(a + b)}             print(a - b)\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(582, 588)"
      },
      {
        "commit_hash": "23a193ea8d83da67b19a7602d98d33b57b013629",
        "line_num": 1725,
        "line_str": "decl_stmt|; for|for control|( name|Var name|s",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1983, 1987)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 450,
        "line_str": "name|inline argument_list|( literal|\"var x = a + b; print(x);      x = a - b; print(x)\" argument_list|, literal|\"var x;         print(a + b);             print(a - b)\"",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(568, 574)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 497,
        "line_str": "argument_list|) operator|) operator|. name|traverse argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "input_file_path": "src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "input_line_num": "range(674, 680)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 1544,
        "line_str": "argument_list|( name|n operator|. name|getString argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1789, 1795)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 467,
        "line_str": "argument_list|, literal|\"var x; if (g) {           print(a + b)}             print(a - b)\" argument_list|) expr_stmt|; block|}",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(582, 588)"
      }
    ]
  },
  {
    "id": 10015,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["9ee134f3c14959e4286e27bbd380c46f14c0c9d1"],
    "fix_commit_hash": "b161e9e33484398cfb005153dee68ca003efbbd2",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "9ee134f3c14959e4286e27bbd380c46f14c0c9d1",
        "line_num": 5089,
        "line_str": "operator|&& operator|! name|options operator|. name|skipAllPasses",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(5150, 5158)"
      },
      {
        "commit_hash": "9ee134f3c14959e4286e27bbd380c46f14c0c9d1",
        "line_num": 5088,
        "line_str": "argument_list|() operator|&& operator|! name|options operator|.",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(5150, 5158)"
      },
      {
        "commit_hash": "9ee134f3c14959e4286e27bbd380c46f14c0c9d1",
        "line_num": 5087,
        "line_str": "name|needsManagement argument_list|() operator|&& operator|! name|options",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(5150, 5158)"
      },
      {
        "commit_hash": "9ee134f3c14959e4286e27bbd380c46f14c0c9d1",
        "line_num": 5086,
        "line_str": "operator|. name|needsManagement argument_list|() operator|&& operator|!",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(5150, 5158)"
      },
      {
        "commit_hash": "9ee134f3c14959e4286e27bbd380c46f14c0c9d1",
        "line_num": 5093,
        "line_str": "name|skipAllPasses operator|&& name|options operator|. name|closurePass",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(5150, 5158)"
      },
      {
        "commit_hash": "9ee134f3c14959e4286e27bbd380c46f14c0c9d1",
        "line_num": 5092,
        "line_str": "operator|. name|skipAllPasses operator|&& name|options operator|.",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(5150, 5158)"
      },
      {
        "commit_hash": "9ee134f3c14959e4286e27bbd380c46f14c0c9d1",
        "line_num": 5091,
        "line_str": "name|options operator|. name|skipAllPasses operator|&& name|options",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(5150, 5158)"
      },
      {
        "commit_hash": "9ee134f3c14959e4286e27bbd380c46f14c0c9d1",
        "line_num": 5090,
        "line_str": "operator|! name|options operator|. name|skipAllPasses operator|&&",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(5150, 5158)"
      }
    ]
  },
  {
    "id": 10016,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["e36682024ab57513dd9d4e05800d2d560b063b99"],
    "fix_commit_hash": "95c453f0b43a0b425c881236e36f9d5587e47edd",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "c3670e99ffaa137b77c00c8eb82ebf5302ba5e69",
        "line_num": 2075,
        "line_str": "block|{ comment comment comment comment",
        "file_path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java",
        "input_line_num": "range(2073, 2076)"
      },
      {
        "commit_hash": "c3670e99ffaa137b77c00c8eb82ebf5302ba5e69",
        "line_num": 2074,
        "line_str": "parameter_list|) block|{ comment comment comment",
        "file_path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java",
        "input_line_num": "range(2073, 2076)"
      },
      {
        "commit_hash": "c3670e99ffaa137b77c00c8eb82ebf5302ba5e69",
        "line_num": 2073,
        "line_str": "name|constraintObj parameter_list|) block|{ comment comment",
        "file_path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java",
        "input_line_num": "range(2073, 2076)"
      },
      {
        "commit_hash": "c3670e99ffaa137b77c00c8eb82ebf5302ba5e69",
        "line_num": 14496,
        "line_str": "literal|\"}\" argument_list|) expr_stmt|; block|} comment",
        "file_path": "test/com/google/javascript/jscomp/TypeCheckTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/TypeCheckTest.java",
        "input_line_num": "range(14826, 14827)"
      }
    ]
  },
  {
    "id": 10017,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["30dc39d4bec816f348eb1ee1d7ce351a653f915f"],
    "fix_commit_hash": "9ab778a6780accf109d02322191f469c6b9f90b6",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "7d89ca4f51bd694a7183c73b2238f387605244d7",
        "line_num": 4896,
        "line_str": "block|} block|} return|return literal|false return|;",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(5724, 5729)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 5247,
        "line_str": "operator|! operator|( name|rhsValue operator|!= literal|null",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(7022, 7033)"
      },
      {
        "commit_hash": "7d89ca4f51bd694a7183c73b2238f387605244d7",
        "line_num": 4892,
        "line_str": "operator|. name|isGlobal argument_list|() return|; block|}",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(5718, 5723)"
      },
      {
        "commit_hash": "dc9ff2da852e20168fde5c29f3aa32c5baaecde3",
        "line_num": 7068,
        "line_str": "name|rhsValue operator|. name|isFunction argument_list|() operator|&&",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(7037, 7041)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 5243,
        "line_str": "block|{ comment name|inferred operator|= operator|!",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(7022, 7033)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 5272,
        "line_str": "expr_stmt|; block|} if|if condition|( operator|!",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(7057, 7059)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 5239,
        "line_str": "if|if condition|( name|inferred condition|) block|{",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(7022, 7033)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 5202,
        "line_str": "block|} name|boolean name|inferred init|= literal|true",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(6967, 6970)"
      },
      {
        "commit_hash": "e3de1af57521eda4b753c98da8bb26fe746540d8",
        "line_num": 6833,
        "line_str": "literal|false argument_list|) operator|) operator|) expr_stmt|;",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(7053, 7057)"
      },
      {
        "commit_hash": "e3de1af57521eda4b753c98da8bb26fe746540d8",
        "line_num": 6825,
        "line_str": "operator||| operator|! name|scope operator|. name|isDeclared",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(7041, 7047)"
      },
      {
        "commit_hash": "e3de1af57521eda4b753c98da8bb26fe746540d8",
        "line_num": 6821,
        "line_str": "operator|( name|info operator|!= literal|null operator|||",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(7041, 7047)"
      },
      {
        "commit_hash": "7d89ca4f51bd694a7183c73b2238f387605244d7",
        "line_num": 4897,
        "line_str": "block|} return|return literal|false return|; block|}",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(5724, 5729)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 5248,
        "line_str": "operator|( name|rhsValue operator|!= literal|null operator|&&",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(7022, 7033)"
      },
      {
        "commit_hash": "dc9ff2da852e20168fde5c29f3aa32c5baaecde3",
        "line_num": 7069,
        "line_str": "operator|. name|isFunction argument_list|() operator|&& operator|(",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(7037, 7041)"
      },
      {
        "commit_hash": "7d89ca4f51bd694a7183c73b2238f387605244d7",
        "line_num": 4893,
        "line_str": "name|isGlobal argument_list|() return|; block|} block|}",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(5718, 5723)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 5244,
        "line_str": "comment name|inferred operator|= operator|! operator|(",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(7022, 7033)"
      },
      {
        "commit_hash": "7d89ca4f51bd694a7183c73b2238f387605244d7",
        "line_num": 4889,
        "line_str": "block|{ return|return name|var operator|. name|isGlobal",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(5718, 5723)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 5240,
        "line_str": "condition|( name|inferred condition|) block|{ comment",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(7022, 7033)"
      },
      {
        "commit_hash": "e3de1af57521eda4b753c98da8bb26fe746540d8",
        "line_num": 6834,
        "line_str": "argument_list|) operator|) operator|) expr_stmt|; block|}",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(7053, 7057)"
      },
      {
        "commit_hash": "831e18017006566c1f0ce41253c2e1dbb2eabe08",
        "line_num": 5810,
        "line_str": "expr_stmt|; block|} return|return; block|} name|boolean",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(6966, 6967)"
      },
      {
        "commit_hash": "e3de1af57521eda4b753c98da8bb26fe746540d8",
        "line_num": 6822,
        "line_str": "name|info operator|!= literal|null operator||| operator|!",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(7041, 7047)"
      },
      {
        "commit_hash": "7d89ca4f51bd694a7183c73b2238f387605244d7",
        "line_num": 4898,
        "line_str": "return|return literal|false return|; block|} comment",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(5724, 5729)"
      },
      {
        "commit_hash": "dc9ff2da852e20168fde5c29f3aa32c5baaecde3",
        "line_num": 7070,
        "line_str": "name|isFunction argument_list|() operator|&& operator|( name|info",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(7037, 7041)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 5245,
        "line_str": "name|inferred operator|= operator|! operator|( name|rhsValue",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(7022, 7033)"
      },
      {
        "commit_hash": "7d89ca4f51bd694a7183c73b2238f387605244d7",
        "line_num": 4890,
        "line_str": "return|return name|var operator|. name|isGlobal argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(5718, 5723)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 5241,
        "line_str": "name|inferred condition|) block|{ comment name|inferred",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(7022, 7033)"
      },
      {
        "commit_hash": "e3de1af57521eda4b753c98da8bb26fe746540d8",
        "line_num": 6835,
        "line_str": "operator|) operator|) expr_stmt|; block|} if|if",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(7053, 7057)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 5200,
        "line_str": "block|} return|return; block|} name|boolean name|inferred",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(6967, 6970)"
      },
      {
        "commit_hash": "e3de1af57521eda4b753c98da8bb26fe746540d8",
        "line_num": 6823,
        "line_str": "operator|!= literal|null operator||| operator|! name|scope",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(7041, 7047)"
      },
      {
        "commit_hash": "7d89ca4f51bd694a7183c73b2238f387605244d7",
        "line_num": 4899,
        "line_str": "literal|false return|; block|} comment specifier|private",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(5724, 5729)"
      },
      {
        "commit_hash": "dc9ff2da852e20168fde5c29f3aa32c5baaecde3",
        "line_num": 7071,
        "line_str": "argument_list|() operator|&& operator|( name|info operator|!=",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(7037, 7041)"
      },
      {
        "commit_hash": "7d89ca4f51bd694a7183c73b2238f387605244d7",
        "line_num": 4895,
        "line_str": "return|; block|} block|} return|return literal|false",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(5724, 5729)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 5246,
        "line_str": "operator|= operator|! operator|( name|rhsValue operator|!=",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(7022, 7033)"
      },
      {
        "commit_hash": "7d89ca4f51bd694a7183c73b2238f387605244d7",
        "line_num": 4891,
        "line_str": "name|var operator|. name|isGlobal argument_list|() return|;",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(5718, 5723)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 5242,
        "line_str": "condition|) block|{ comment name|inferred operator|=",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(7022, 7033)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 5271,
        "line_str": "operator|) expr_stmt|; block|} if|if condition|(",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(7057, 7059)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 5238,
        "line_str": "block|} if|if condition|( name|inferred condition|)",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(7022, 7033)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 5267,
        "line_str": "name|qName argument_list|, literal|false argument_list|) operator|)",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(7052, 7053)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 5201,
        "line_str": "return|return; block|} name|boolean name|inferred init|=",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(6967, 6970)"
      },
      {
        "commit_hash": "e3de1af57521eda4b753c98da8bb26fe746540d8",
        "line_num": 6832,
        "line_str": "argument_list|, literal|false argument_list|) operator|) operator|)",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(7053, 7057)"
      },
      {
        "commit_hash": "e3de1af57521eda4b753c98da8bb26fe746540d8",
        "line_num": 6824,
        "line_str": "literal|null operator||| operator|! name|scope operator|.",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(7041, 7047)"
      },
      {
        "commit_hash": "c6f64fa5985b4d0963c27c45dd65046bad36062f",
        "line_num": 13886,
        "line_str": "literal|\"Bar.prototype.__proto__ = Foo.prototype;\" argument_list|) expr_stmt|; block|} comment",
        "file_path": "test/com/google/javascript/jscomp/TypeCheckTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/TypeCheckTest.java",
        "input_line_num": "range(14086, 14087)"
      },
      {
        "commit_hash": "e3de1af57521eda4b753c98da8bb26fe746540d8",
        "line_num": 6820,
        "line_str": "operator|&& operator|( name|info operator|!= literal|null",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(7041, 7047)"
      }
    ]
  },
  {
    "id": 10018,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["228bcde2ecd127c8a93409ebfc1e906157542c04"],
    "fix_commit_hash": "0a018fca7e62647c79f8c1ade1f4dc341df11c3e",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "228bcde2ecd127c8a93409ebfc1e906157542c04",
        "line_num": 3624,
        "line_str": "literal|0 return|; block|} specifier|static name|double",
        "file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_line_num": "range(3626, 3630)"
      },
      {
        "commit_hash": "228bcde2ecd127c8a93409ebfc1e906157542c04",
        "line_num": 3623,
        "line_str": "operator|> literal|0 return|; block|} specifier|static",
        "file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_line_num": "range(3626, 3630)"
      },
      {
        "commit_hash": "228bcde2ecd127c8a93409ebfc1e906157542c04",
        "line_num": 3622,
        "line_str": "name|len operator|> literal|0 return|; block|}",
        "file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_line_num": "range(3626, 3630)"
      },
      {
        "commit_hash": "228bcde2ecd127c8a93409ebfc1e906157542c04",
        "line_num": 3621,
        "line_str": "return|return name|len operator|> literal|0 return|;",
        "file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_line_num": "range(3626, 3630)"
      },
      {
        "commit_hash": "2dca12531e728fdb06af2b8acbaeb527989f2f35",
        "line_num": 4547,
        "line_str": "literal|\"var whil\\\\u0065=1;whil\\\\u0065=2;whil\\\\u0065=3\" argument_list|) expr_stmt|; block|} block|}",
        "file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_line_num": "range(4572, 4573)"
      }
    ]
  },
  {
    "id": 10019,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["fdcc2c1162bebdc258bcc669fb1e148c1b546534"],
    "fix_commit_hash": "19b2409b39b27f9d62d6fd4347c572cdb7ea0287",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "ab30b2e3e58e1edaad8cc092cb2470a27f93773b",
        "line_num": 942,
        "line_str": "argument_list|() condition|) block|{ name|options operator|.",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(993, 997)"
      },
      {
        "commit_hash": "ab30b2e3e58e1edaad8cc092cb2470a27f93773b",
        "line_num": 941,
        "line_str": "name|isOn argument_list|() condition|) block|{ name|options",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(993, 997)"
      },
      {
        "commit_hash": "ab30b2e3e58e1edaad8cc092cb2470a27f93773b",
        "line_num": 940,
        "line_str": "operator|. name|isOn argument_list|() condition|) block|{",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(993, 997)"
      },
      {
        "commit_hash": "ab30b2e3e58e1edaad8cc092cb2470a27f93773b",
        "line_num": 939,
        "line_str": "name|checkGlobalThisLevel operator|. name|isOn argument_list|() condition|)",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(993, 997)"
      }
    ]
  },
  {
    "id": 10020,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["f488c1da2bb2b8843336a19f14f6d3df09b19337"],
    "fix_commit_hash": "1f403aa970bf931036300cef18daa9b5979cc52c",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "a42a447357d01f80a2d3b37bb436217f8e761b00",
        "line_num": 734,
        "line_str": "block|} block|} return|return name|TernaryValue operator|.",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(748, 752)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 846,
        "line_str": "name|assertExpressionBooleanTrue argument_list|( literal|\"a?true:true\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 780,
        "line_str": "expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"true\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 714,
        "line_str": "argument_list|( literal|\"a,false\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "a42a447357d01f80a2d3b37bb436217f8e761b00",
        "line_num": 536,
        "line_str": "name|TRUE return|; default|default: return|return name|getPureBooleanValue",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(551, 554)"
      },
      {
        "commit_hash": "a42a447357d01f80a2d3b37bb436217f8e761b00",
        "line_num": 648,
        "line_str": "argument_list|) expr_stmt|; comment name|assertBooleanUnknown argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(647, 657)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 516,
        "line_str": "literal|\"undefined\" argument_list|) expr_stmt|; name|assertBooleanFalse argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 702,
        "line_str": "argument_list|() expr_stmt|; name|c operator|= name|trySimpilifyUnusedResult",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(1023, 1028)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 847,
        "line_str": "argument_list|( literal|\"a?true:true\" argument_list|) expr_stmt|; name|assertExpressionBooleanFalse",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 781,
        "line_str": "name|assertExpressionBooleanTrue argument_list|( literal|\"true\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 715,
        "line_str": "literal|\"a,false\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "a42a447357d01f80a2d3b37bb436217f8e761b00",
        "line_num": 649,
        "line_str": "expr_stmt|; comment name|assertBooleanUnknown argument_list|( literal|\"{a:foo()}\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(647, 657)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 517,
        "line_str": "argument_list|) expr_stmt|; name|assertBooleanFalse argument_list|( literal|\"void 0\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 703,
        "line_str": "expr_stmt|; name|c operator|= name|trySimpilifyUnusedResult argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(1023, 1028)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 848,
        "line_str": "literal|\"a?true:true\" argument_list|) expr_stmt|; name|assertExpressionBooleanFalse argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 782,
        "line_str": "argument_list|( literal|\"true\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 716,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"true||false\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "a42a447357d01f80a2d3b37bb436217f8e761b00",
        "line_num": 650,
        "line_str": "comment name|assertBooleanUnknown argument_list|( literal|\"{a:foo()}\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(647, 657)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 518,
        "line_str": "expr_stmt|; name|assertBooleanFalse argument_list|( literal|\"void 0\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 704,
        "line_str": "name|c operator|= name|trySimpilifyUnusedResult argument_list|( name|c",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(1023, 1028)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 849,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanFalse argument_list|( literal|\"a?false:false\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 783,
        "line_str": "literal|\"true\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 717,
        "line_str": "expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"true||false\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "a42a447357d01f80a2d3b37bb436217f8e761b00",
        "line_num": 651,
        "line_str": "name|assertBooleanUnknown argument_list|( literal|\"{a:foo()}\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(647, 657)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 585,
        "line_str": "expr_stmt|; block|} specifier|private name|void name|assertBooleanUnknown",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(712, 717)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 519,
        "line_str": "name|assertBooleanFalse argument_list|( literal|\"void 0\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 705,
        "line_str": "operator|= name|trySimpilifyUnusedResult argument_list|( name|c argument_list|)",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(1023, 1028)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 850,
        "line_str": "expr_stmt|; name|assertExpressionBooleanFalse argument_list|( literal|\"a?false:false\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 784,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"10\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 718,
        "line_str": "name|assertExpressionBooleanTrue argument_list|( literal|\"true||false\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "a42a447357d01f80a2d3b37bb436217f8e761b00",
        "line_num": 652,
        "line_str": "argument_list|( literal|\"{a:foo()}\" argument_list|) expr_stmt|; name|assertBooleanUnknown",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(647, 657)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 586,
        "line_str": "block|} specifier|private name|void name|assertBooleanUnknown parameter_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(712, 717)"
      },
      {
        "commit_hash": "a42a447357d01f80a2d3b37bb436217f8e761b00",
        "line_num": 647,
        "line_str": "literal|\"-'0.0'\" argument_list|) expr_stmt|; comment name|assertBooleanUnknown",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(647, 657)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 706,
        "line_str": "name|trySimpilifyUnusedResult argument_list|( name|c argument_list|) expr_stmt|;",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(1023, 1028)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 851,
        "line_str": "name|assertExpressionBooleanFalse argument_list|( literal|\"a?false:false\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 785,
        "line_str": "expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"10\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 719,
        "line_str": "argument_list|( literal|\"true||false\" argument_list|) expr_stmt|; name|assertExpressionBooleanFalse",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "a42a447357d01f80a2d3b37bb436217f8e761b00",
        "line_num": 653,
        "line_str": "literal|\"{a:foo()}\" argument_list|) expr_stmt|; name|assertBooleanUnknown argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(647, 657)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 587,
        "line_str": "specifier|private name|void name|assertBooleanUnknown parameter_list|( name|String",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(712, 717)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 852,
        "line_str": "argument_list|( literal|\"a?false:false\" argument_list|) expr_stmt|; name|assertExpressionBooleanUnknown",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 786,
        "line_str": "name|assertExpressionBooleanTrue argument_list|( literal|\"10\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 720,
        "line_str": "literal|\"true||false\" argument_list|) expr_stmt|; name|assertExpressionBooleanFalse argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "a42a447357d01f80a2d3b37bb436217f8e761b00",
        "line_num": 654,
        "line_str": "argument_list|) expr_stmt|; name|assertBooleanUnknown argument_list|( literal|\"[foo()]\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(647, 657)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 588,
        "line_str": "name|void name|assertBooleanUnknown parameter_list|( name|String name|val",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(712, 717)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 522,
        "line_str": "argument_list|) expr_stmt|; name|assertBooleanUnknown argument_list|( literal|\"b\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(638, 646)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 853,
        "line_str": "literal|\"a?false:false\" argument_list|) expr_stmt|; name|assertExpressionBooleanUnknown argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 787,
        "line_str": "argument_list|( literal|\"10\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 721,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanFalse argument_list|( literal|\"false||false\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "a42a447357d01f80a2d3b37bb436217f8e761b00",
        "line_num": 655,
        "line_str": "expr_stmt|; name|assertBooleanUnknown argument_list|( literal|\"[foo()]\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(647, 657)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 589,
        "line_str": "name|assertBooleanUnknown parameter_list|( name|String name|val parameter_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(712, 717)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 523,
        "line_str": "expr_stmt|; name|assertBooleanUnknown argument_list|( literal|\"b\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(638, 646)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 854,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanUnknown argument_list|( literal|\"a?true:false\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 788,
        "line_str": "literal|\"10\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 722,
        "line_str": "expr_stmt|; name|assertExpressionBooleanFalse argument_list|( literal|\"false||false\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "a42a447357d01f80a2d3b37bb436217f8e761b00",
        "line_num": 656,
        "line_str": "name|assertBooleanUnknown argument_list|( literal|\"[foo()]\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(647, 657)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 524,
        "line_str": "name|assertBooleanUnknown argument_list|( literal|\"b\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(638, 646)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 855,
        "line_str": "expr_stmt|; name|assertExpressionBooleanUnknown argument_list|( literal|\"a?true:false\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 789,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"'0'\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 723,
        "line_str": "name|assertExpressionBooleanFalse argument_list|( literal|\"false||false\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 525,
        "line_str": "argument_list|( literal|\"b\" argument_list|) expr_stmt|; name|assertBooleanUnknown",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(638, 646)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 856,
        "line_str": "name|assertExpressionBooleanUnknown argument_list|( literal|\"a?true:false\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 381,
        "line_str": "case|: name|Node name|trueNode init|= name|trySimpilifyUnusedResult",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(702, 707)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 790,
        "line_str": "expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"'0'\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 724,
        "line_str": "argument_list|( literal|\"false||false\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 526,
        "line_str": "literal|\"b\" argument_list|) expr_stmt|; name|assertBooleanUnknown argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(638, 646)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 460,
        "line_str": "name|void name|testGetBooleanValue parameter_list|() block|{ name|assertBooleanTrue",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 857,
        "line_str": "argument_list|( literal|\"a?true:false\" argument_list|) expr_stmt|; name|assertExpressionBooleanUnknown",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 382,
        "line_str": "name|Node name|trueNode init|= name|trySimpilifyUnusedResult argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(702, 707)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 791,
        "line_str": "name|assertExpressionBooleanTrue argument_list|( literal|\"'0'\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 725,
        "line_str": "literal|\"false||false\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 527,
        "line_str": "argument_list|) expr_stmt|; name|assertBooleanUnknown argument_list|( literal|\"-'0.0'\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(638, 646)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 461,
        "line_str": "name|testGetBooleanValue parameter_list|() block|{ name|assertBooleanTrue argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 858,
        "line_str": "literal|\"a?true:false\" argument_list|) expr_stmt|; name|assertExpressionBooleanUnknown argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 383,
        "line_str": "name|trueNode init|= name|trySimpilifyUnusedResult argument_list|( name|n",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(702, 707)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 792,
        "line_str": "argument_list|( literal|\"'0'\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 726,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"true&&true\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "01fe2966cc0fd004e95af90a6068b9877872d76f",
        "line_num": 528,
        "line_str": "argument_list|( literal|\"void 0\" argument_list|) expr_stmt|; name|assertBooleanFalse",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(631, 638)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 462,
        "line_str": "parameter_list|() block|{ name|assertBooleanTrue argument_list|( literal|\"true\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 859,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanUnknown argument_list|( literal|\"a?true:foo()\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 384,
        "line_str": "init|= name|trySimpilifyUnusedResult argument_list|( name|n operator|.",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(702, 707)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 793,
        "line_str": "literal|\"'0'\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 727,
        "line_str": "expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"true&&true\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "01fe2966cc0fd004e95af90a6068b9877872d76f",
        "line_num": 529,
        "line_str": "literal|\"void 0\" argument_list|) expr_stmt|; name|assertBooleanFalse argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(631, 638)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 463,
        "line_str": "block|{ name|assertBooleanTrue argument_list|( literal|\"true\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 860,
        "line_str": "expr_stmt|; name|assertExpressionBooleanUnknown argument_list|( literal|\"a?true:foo()\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 385,
        "line_str": "name|trySimpilifyUnusedResult argument_list|( name|n operator|. name|getFirstChild",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(702, 707)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 794,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"/a/\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 728,
        "line_str": "name|assertExpressionBooleanTrue argument_list|( literal|\"true&&true\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 3226,
        "line_str": "condition|) block|{ name|increment operator|= name|trySimpilifyUnusedResult",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(3470, 3475)"
      },
      {
        "commit_hash": "01fe2966cc0fd004e95af90a6068b9877872d76f",
        "line_num": 530,
        "line_str": "argument_list|) expr_stmt|; name|assertBooleanFalse argument_list|( literal|\"void foo()\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(631, 638)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 464,
        "line_str": "name|assertBooleanTrue argument_list|( literal|\"true\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 927,
        "line_str": "expr_stmt|; block|} specifier|private name|void name|assertExpressionBooleanUnknown",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(1009, 1014)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 861,
        "line_str": "name|assertExpressionBooleanUnknown argument_list|( literal|\"a?true:foo()\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 795,
        "line_str": "expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"/a/\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 729,
        "line_str": "argument_list|( literal|\"true&&true\" argument_list|) expr_stmt|; name|assertExpressionBooleanFalse",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 3227,
        "line_str": "block|{ name|increment operator|= name|trySimpilifyUnusedResult argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(3470, 3475)"
      },
      {
        "commit_hash": "01fe2966cc0fd004e95af90a6068b9877872d76f",
        "line_num": 531,
        "line_str": "expr_stmt|; name|assertBooleanFalse argument_list|( literal|\"void foo()\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(631, 638)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 465,
        "line_str": "argument_list|( literal|\"true\" argument_list|) expr_stmt|; name|assertBooleanTrue",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 585,
        "line_str": "comment name|Node name|left init|= name|trySimpilifyUnusedResult",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(906, 911)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 928,
        "line_str": "block|} specifier|private name|void name|assertExpressionBooleanUnknown parameter_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(1009, 1014)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 862,
        "line_str": "argument_list|( literal|\"a?true:foo()\" argument_list|) expr_stmt|; name|assertExpressionBooleanUnknown",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 796,
        "line_str": "name|assertExpressionBooleanTrue argument_list|( literal|\"/a/\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 730,
        "line_str": "literal|\"true&&true\" argument_list|) expr_stmt|; name|assertExpressionBooleanFalse argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 3228,
        "line_str": "name|increment operator|= name|trySimpilifyUnusedResult argument_list|( name|increment",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(3470, 3475)"
      },
      {
        "commit_hash": "01fe2966cc0fd004e95af90a6068b9877872d76f",
        "line_num": 532,
        "line_str": "name|assertBooleanFalse argument_list|( literal|\"void foo()\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(631, 638)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 466,
        "line_str": "literal|\"true\" argument_list|) expr_stmt|; name|assertBooleanTrue argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 586,
        "line_str": "name|Node name|left init|= name|trySimpilifyUnusedResult argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(906, 911)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 929,
        "line_str": "specifier|private name|void name|assertExpressionBooleanUnknown parameter_list|( name|String",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(1009, 1014)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 863,
        "line_str": "literal|\"a?true:foo()\" argument_list|) expr_stmt|; name|assertExpressionBooleanUnknown argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 797,
        "line_str": "argument_list|( literal|\"/a/\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 731,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanFalse argument_list|( literal|\"true&&false\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 3229,
        "line_str": "operator|= name|trySimpilifyUnusedResult argument_list|( name|increment argument_list|,",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(3470, 3475)"
      },
      {
        "commit_hash": "01fe2966cc0fd004e95af90a6068b9877872d76f",
        "line_num": 533,
        "line_str": "argument_list|( literal|\"void foo()\" argument_list|) expr_stmt|; name|assertBooleanUnknown",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(631, 638)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 467,
        "line_str": "argument_list|) expr_stmt|; name|assertBooleanTrue argument_list|( literal|\"10\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 587,
        "line_str": "name|left init|= name|trySimpilifyUnusedResult argument_list|( name|n",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(906, 911)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 930,
        "line_str": "name|void name|assertExpressionBooleanUnknown parameter_list|( name|String name|val",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(1009, 1014)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 864,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanUnknown argument_list|( literal|\"b\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 798,
        "line_str": "literal|\"/a/\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 732,
        "line_str": "expr_stmt|; name|assertExpressionBooleanFalse argument_list|( literal|\"true&&false\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 3230,
        "line_str": "name|trySimpilifyUnusedResult argument_list|( name|increment argument_list|, literal|false",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(3470, 3475)"
      },
      {
        "commit_hash": "01fe2966cc0fd004e95af90a6068b9877872d76f",
        "line_num": 534,
        "line_str": "literal|\"void foo()\" argument_list|) expr_stmt|; name|assertBooleanUnknown argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(631, 638)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 468,
        "line_str": "expr_stmt|; name|assertBooleanTrue argument_list|( literal|\"10\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 588,
        "line_str": "init|= name|trySimpilifyUnusedResult argument_list|( name|n operator|.",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(906, 911)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 522,
        "line_str": "comment name|Node name|conditionalResultNode init|= name|trySimpilifyUnusedResult",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(843, 848)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 931,
        "line_str": "name|assertExpressionBooleanUnknown parameter_list|( name|String name|val parameter_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(1009, 1014)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 865,
        "line_str": "expr_stmt|; name|assertExpressionBooleanUnknown argument_list|( literal|\"b\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 799,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"{}\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 733,
        "line_str": "name|assertExpressionBooleanFalse argument_list|( literal|\"true&&false\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 535,
        "line_str": "specifier|private name|void name|assertBooleanTrue parameter_list|( name|String",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(660, 665)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 469,
        "line_str": "name|assertBooleanTrue argument_list|( literal|\"10\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 589,
        "line_str": "name|trySimpilifyUnusedResult argument_list|( name|n operator|. name|getFirstChild",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(906, 911)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 523,
        "line_str": "name|Node name|conditionalResultNode init|= name|trySimpilifyUnusedResult argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(843, 848)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 866,
        "line_str": "name|assertExpressionBooleanUnknown argument_list|( literal|\"b\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 800,
        "line_str": "expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"{}\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 734,
        "line_str": "argument_list|( literal|\"true&&false\" argument_list|) expr_stmt|; name|assertExpressionBooleanFalse",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 536,
        "line_str": "name|void name|assertBooleanTrue parameter_list|( name|String name|val",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(660, 665)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 470,
        "line_str": "argument_list|( literal|\"10\" argument_list|) expr_stmt|; name|assertBooleanTrue",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 524,
        "line_str": "name|conditionalResultNode init|= name|trySimpilifyUnusedResult argument_list|( name|n",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(843, 848)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 867,
        "line_str": "argument_list|( literal|\"b\" argument_list|) expr_stmt|; name|assertExpressionBooleanUnknown",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 801,
        "line_str": "name|assertExpressionBooleanTrue argument_list|( literal|\"{}\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 735,
        "line_str": "literal|\"true&&false\" argument_list|) expr_stmt|; name|assertExpressionBooleanFalse argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 669,
        "line_str": "name|void name|testGetExpressionBooleanValue parameter_list|() block|{ name|assertExpressionBooleanTrue",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 537,
        "line_str": "name|assertBooleanTrue parameter_list|( name|String name|val parameter_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(660, 665)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 471,
        "line_str": "literal|\"10\" argument_list|) expr_stmt|; name|assertBooleanTrue argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 525,
        "line_str": "init|= name|trySimpilifyUnusedResult argument_list|( name|n operator|.",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(843, 848)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 868,
        "line_str": "literal|\"b\" argument_list|) expr_stmt|; name|assertExpressionBooleanUnknown argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 802,
        "line_str": "argument_list|( literal|\"{}\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 736,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanFalse argument_list|( literal|\"!true\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 670,
        "line_str": "name|testGetExpressionBooleanValue parameter_list|() block|{ name|assertExpressionBooleanTrue argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 472,
        "line_str": "argument_list|) expr_stmt|; name|assertBooleanTrue argument_list|( literal|\"'0'\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 526,
        "line_str": "name|trySimpilifyUnusedResult argument_list|( name|n operator|. name|getLastChild",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(843, 848)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 869,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanUnknown argument_list|( literal|\"-'0.0'\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 803,
        "line_str": "literal|\"{}\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 737,
        "line_str": "expr_stmt|; name|assertExpressionBooleanFalse argument_list|( literal|\"!true\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 671,
        "line_str": "parameter_list|() block|{ name|assertExpressionBooleanTrue argument_list|( literal|\"a=true\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 473,
        "line_str": "expr_stmt|; name|assertBooleanTrue argument_list|( literal|\"'0'\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 870,
        "line_str": "expr_stmt|; name|assertExpressionBooleanUnknown argument_list|( literal|\"-'0.0'\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 395,
        "line_str": "decl_stmt|; name|Node name|falseNode init|= name|trySimpilifyUnusedResult",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(716, 721)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 804,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"[]\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 738,
        "line_str": "name|assertExpressionBooleanFalse argument_list|( literal|\"!true\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 672,
        "line_str": "block|{ name|assertExpressionBooleanTrue argument_list|( literal|\"a=true\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 474,
        "line_str": "name|assertBooleanTrue argument_list|( literal|\"'0'\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 871,
        "line_str": "name|assertExpressionBooleanUnknown argument_list|( literal|\"-'0.0'\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 396,
        "line_str": "name|Node name|falseNode init|= name|trySimpilifyUnusedResult argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(716, 721)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 805,
        "line_str": "expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"[]\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 739,
        "line_str": "argument_list|( literal|\"!true\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 673,
        "line_str": "name|assertExpressionBooleanTrue argument_list|( literal|\"a=true\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 475,
        "line_str": "argument_list|( literal|\"'0'\" argument_list|) expr_stmt|; name|assertBooleanTrue",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 397,
        "line_str": "name|falseNode init|= name|trySimpilifyUnusedResult argument_list|( name|n",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(716, 721)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 806,
        "line_str": "name|assertExpressionBooleanTrue argument_list|( literal|\"[]\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 740,
        "line_str": "literal|\"!true\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 674,
        "line_str": "argument_list|( literal|\"a=true\" argument_list|) expr_stmt|; name|assertExpressionBooleanFalse",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 364,
        "line_str": "operator|. name|VOID case|: return|return name|TernaryValue",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(649, 651)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 476,
        "line_str": "literal|\"'0'\" argument_list|) expr_stmt|; name|assertBooleanTrue argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 596,
        "line_str": "decl_stmt|; name|Node name|right init|= name|trySimpilifyUnusedResult",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(917, 922)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 398,
        "line_str": "init|= name|trySimpilifyUnusedResult argument_list|( name|n operator|.",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(716, 721)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 807,
        "line_str": "argument_list|( literal|\"[]\" argument_list|) expr_stmt|; name|assertExpressionBooleanFalse",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 332,
        "line_str": "block|} comment specifier|private name|Node name|trySimpilifyUnusedResult",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(653, 658)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 741,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"!false\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 675,
        "line_str": "literal|\"a=true\" argument_list|) expr_stmt|; name|assertExpressionBooleanFalse argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 365,
        "line_str": "name|VOID case|: return|return name|TernaryValue operator|.",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(649, 651)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 477,
        "line_str": "argument_list|) expr_stmt|; name|assertBooleanTrue argument_list|( literal|\"/a/\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 597,
        "line_str": "name|Node name|right init|= name|trySimpilifyUnusedResult argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(917, 922)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 399,
        "line_str": "name|trySimpilifyUnusedResult argument_list|( name|n operator|. name|getLastChild",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(716, 721)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 808,
        "line_str": "literal|\"[]\" argument_list|) expr_stmt|; name|assertExpressionBooleanFalse argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 333,
        "line_str": "comment specifier|private name|Node name|trySimpilifyUnusedResult parameter_list|(",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(653, 658)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 742,
        "line_str": "expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"!false\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 676,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanFalse argument_list|( literal|\"a=false\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 478,
        "line_str": "expr_stmt|; name|assertBooleanTrue argument_list|( literal|\"/a/\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 598,
        "line_str": "name|right init|= name|trySimpilifyUnusedResult argument_list|( name|n",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(917, 922)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 875,
        "line_str": "expr_stmt|; block|} specifier|private name|void name|assertExpressionBooleanTrue",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(957, 962)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 809,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanFalse argument_list|( literal|\"false\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 334,
        "line_str": "specifier|private name|Node name|trySimpilifyUnusedResult parameter_list|( name|Node",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(653, 658)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 743,
        "line_str": "name|assertExpressionBooleanTrue argument_list|( literal|\"!false\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 677,
        "line_str": "expr_stmt|; name|assertExpressionBooleanFalse argument_list|( literal|\"a=false\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 479,
        "line_str": "name|assertBooleanTrue argument_list|( literal|\"/a/\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 599,
        "line_str": "init|= name|trySimpilifyUnusedResult argument_list|( name|n operator|.",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(917, 922)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 876,
        "line_str": "block|} specifier|private name|void name|assertExpressionBooleanTrue parameter_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(957, 962)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 810,
        "line_str": "expr_stmt|; name|assertExpressionBooleanFalse argument_list|( literal|\"false\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 335,
        "line_str": "name|Node name|trySimpilifyUnusedResult parameter_list|( name|Node name|n",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(653, 658)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 744,
        "line_str": "argument_list|( literal|\"!false\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 678,
        "line_str": "name|assertExpressionBooleanFalse argument_list|( literal|\"a=false\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 480,
        "line_str": "argument_list|( literal|\"/a/\" argument_list|) expr_stmt|; name|assertBooleanTrue",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 600,
        "line_str": "name|trySimpilifyUnusedResult argument_list|( name|n operator|. name|getLastChild",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(917, 922)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 877,
        "line_str": "specifier|private name|void name|assertExpressionBooleanTrue parameter_list|( name|String",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(957, 962)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 811,
        "line_str": "name|assertExpressionBooleanFalse argument_list|( literal|\"false\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 336,
        "line_str": "name|trySimpilifyUnusedResult parameter_list|( name|Node name|n parameter_list|)",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(653, 658)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 745,
        "line_str": "literal|\"!false\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 679,
        "line_str": "argument_list|( literal|\"a=false\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 481,
        "line_str": "literal|\"/a/\" argument_list|) expr_stmt|; name|assertBooleanTrue argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "a42a447357d01f80a2d3b37bb436217f8e761b00",
        "line_num": 944,
        "line_str": "argument_list|( literal|\"-'0.0'\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(944, 954)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 878,
        "line_str": "name|void name|assertExpressionBooleanTrue parameter_list|( name|String name|val",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(957, 962)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 812,
        "line_str": "argument_list|( literal|\"false\" argument_list|) expr_stmt|; name|assertExpressionBooleanFalse",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 746,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"!''\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 680,
        "line_str": "literal|\"a=false\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 482,
        "line_str": "argument_list|) expr_stmt|; name|assertBooleanTrue argument_list|( literal|\"{}\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "a1c31ee858910255b764f9292f74a17860d16442",
        "line_num": 1659,
        "line_str": "operator|= name|trySimpilifyUnusedResult argument_list|( name|left argument_list|)",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(1935, 1937)"
      },
      {
        "commit_hash": "a42a447357d01f80a2d3b37bb436217f8e761b00",
        "line_num": 945,
        "line_str": "literal|\"-'0.0'\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(944, 954)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 879,
        "line_str": "name|assertExpressionBooleanTrue parameter_list|( name|String name|val parameter_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(957, 962)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 813,
        "line_str": "literal|\"false\" argument_list|) expr_stmt|; name|assertExpressionBooleanFalse argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 747,
        "line_str": "expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"!''\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 681,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"a=(false,true)\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 483,
        "line_str": "expr_stmt|; name|assertBooleanTrue argument_list|( literal|\"{}\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "a1c31ee858910255b764f9292f74a17860d16442",
        "line_num": 1660,
        "line_str": "name|trySimpilifyUnusedResult argument_list|( name|left argument_list|) expr_stmt|;",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(1935, 1937)"
      },
      {
        "commit_hash": "a42a447357d01f80a2d3b37bb436217f8e761b00",
        "line_num": 946,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"{a:foo()}\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(944, 954)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 814,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanFalse argument_list|( literal|\"null\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 339,
        "line_str": "name|n parameter_list|) block|{ return|return name|trySimpilifyUnusedResult",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(660, 665)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 748,
        "line_str": "name|assertExpressionBooleanTrue argument_list|( literal|\"!''\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 682,
        "line_str": "expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"a=(false,true)\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 484,
        "line_str": "name|assertBooleanTrue argument_list|( literal|\"{}\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "a42a447357d01f80a2d3b37bb436217f8e761b00",
        "line_num": 947,
        "line_str": "expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"{a:foo()}\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(944, 954)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 815,
        "line_str": "expr_stmt|; name|assertExpressionBooleanFalse argument_list|( literal|\"null\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 340,
        "line_str": "parameter_list|) block|{ return|return name|trySimpilifyUnusedResult argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(660, 665)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 683,
        "line_str": "name|assertExpressionBooleanTrue argument_list|( literal|\"a=(false,true)\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 485,
        "line_str": "argument_list|( literal|\"{}\" argument_list|) expr_stmt|; name|assertBooleanTrue",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "a42a447357d01f80a2d3b37bb436217f8e761b00",
        "line_num": 948,
        "line_str": "name|assertExpressionBooleanTrue argument_list|( literal|\"{a:foo()}\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(944, 954)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 816,
        "line_str": "name|assertExpressionBooleanFalse argument_list|( literal|\"null\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 341,
        "line_str": "block|{ return|return name|trySimpilifyUnusedResult argument_list|( name|n",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(660, 665)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 750,
        "line_str": "literal|\"!''\" argument_list|) expr_stmt|; comment name|assertExpressionBooleanUnknown",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(822, 827)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 684,
        "line_str": "argument_list|( literal|\"a=(false,true)\" argument_list|) expr_stmt|; name|assertExpressionBooleanFalse",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 486,
        "line_str": "literal|\"{}\" argument_list|) expr_stmt|; name|assertBooleanTrue argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "a42a447357d01f80a2d3b37bb436217f8e761b00",
        "line_num": 949,
        "line_str": "argument_list|( literal|\"{a:foo()}\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(944, 954)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 817,
        "line_str": "argument_list|( literal|\"null\" argument_list|) expr_stmt|; name|assertExpressionBooleanFalse",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 342,
        "line_str": "return|return name|trySimpilifyUnusedResult argument_list|( name|n argument_list|,",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(660, 665)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 751,
        "line_str": "argument_list|) expr_stmt|; comment name|assertExpressionBooleanUnknown argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(822, 827)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 685,
        "line_str": "literal|\"a=(false,true)\" argument_list|) expr_stmt|; name|assertExpressionBooleanFalse argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 487,
        "line_str": "argument_list|) expr_stmt|; name|assertBooleanTrue argument_list|( literal|\"[]\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "a42a447357d01f80a2d3b37bb436217f8e761b00",
        "line_num": 950,
        "line_str": "literal|\"{a:foo()}\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(944, 954)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 818,
        "line_str": "literal|\"null\" argument_list|) expr_stmt|; name|assertExpressionBooleanFalse argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 343,
        "line_str": "name|trySimpilifyUnusedResult argument_list|( name|n argument_list|, literal|true",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(660, 665)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 752,
        "line_str": "expr_stmt|; comment name|assertExpressionBooleanUnknown argument_list|( literal|\"a *= 2\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(822, 827)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 686,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanFalse argument_list|( literal|\"a=(true,false)\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 488,
        "line_str": "expr_stmt|; name|assertBooleanTrue argument_list|( literal|\"[]\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "a42a447357d01f80a2d3b37bb436217f8e761b00",
        "line_num": 951,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"[foo()]\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(944, 954)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 819,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanFalse argument_list|( literal|\"0\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 753,
        "line_str": "comment name|assertExpressionBooleanUnknown argument_list|( literal|\"a *= 2\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(822, 827)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 687,
        "line_str": "expr_stmt|; name|assertExpressionBooleanFalse argument_list|( literal|\"a=(true,false)\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 489,
        "line_str": "name|assertBooleanTrue argument_list|( literal|\"[]\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "a42a447357d01f80a2d3b37bb436217f8e761b00",
        "line_num": 952,
        "line_str": "expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"[foo()]\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(944, 954)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 820,
        "line_str": "expr_stmt|; name|assertExpressionBooleanFalse argument_list|( literal|\"0\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 754,
        "line_str": "name|assertExpressionBooleanUnknown argument_list|( literal|\"a *= 2\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(822, 827)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 688,
        "line_str": "name|assertExpressionBooleanFalse argument_list|( literal|\"a=(true,false)\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 490,
        "line_str": "argument_list|( literal|\"[]\" argument_list|) expr_stmt|; name|assertBooleanFalse",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "a42a447357d01f80a2d3b37bb436217f8e761b00",
        "line_num": 953,
        "line_str": "name|assertExpressionBooleanTrue argument_list|( literal|\"[foo()]\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(944, 954)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 821,
        "line_str": "name|assertExpressionBooleanFalse argument_list|( literal|\"0\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 689,
        "line_str": "argument_list|( literal|\"a=(true,false)\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 491,
        "line_str": "literal|\"[]\" argument_list|) expr_stmt|; name|assertBooleanFalse argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 822,
        "line_str": "argument_list|( literal|\"0\" argument_list|) expr_stmt|; name|assertExpressionBooleanFalse",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 690,
        "line_str": "literal|\"a=(true,false)\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 492,
        "line_str": "argument_list|) expr_stmt|; name|assertBooleanFalse argument_list|( literal|\"false\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 823,
        "line_str": "literal|\"0\" argument_list|) expr_stmt|; name|assertExpressionBooleanFalse argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 757,
        "line_str": "argument_list|) expr_stmt|; comment comment name|assertExpressionBooleanUnknown",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 691,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"a=(false || true)\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 559,
        "line_str": "expr_stmt|; block|} specifier|private name|void name|assertBooleanFalse",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(686, 691)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 493,
        "line_str": "expr_stmt|; name|assertBooleanFalse argument_list|( literal|\"false\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 824,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanFalse argument_list|( literal|\"''\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 758,
        "line_str": "expr_stmt|; comment comment name|assertExpressionBooleanUnknown argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 692,
        "line_str": "expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"a=(false || true)\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 560,
        "line_str": "block|} specifier|private name|void name|assertBooleanFalse parameter_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(686, 691)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 494,
        "line_str": "name|assertBooleanFalse argument_list|( literal|\"false\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 825,
        "line_str": "expr_stmt|; name|assertExpressionBooleanFalse argument_list|( literal|\"''\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 350,
        "line_str": "block|} comment specifier|private name|Node name|trySimpilifyUnusedResult",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(671, 676)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 759,
        "line_str": "comment comment name|assertExpressionBooleanUnknown argument_list|( literal|\"2 + 2\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 693,
        "line_str": "name|assertExpressionBooleanTrue argument_list|( literal|\"a=(false || true)\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 561,
        "line_str": "specifier|private name|void name|assertBooleanFalse parameter_list|( name|String",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(686, 691)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 495,
        "line_str": "argument_list|( literal|\"false\" argument_list|) expr_stmt|; name|assertBooleanFalse",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 826,
        "line_str": "name|assertExpressionBooleanFalse argument_list|( literal|\"''\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 351,
        "line_str": "comment specifier|private name|Node name|trySimpilifyUnusedResult parameter_list|(",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(671, 676)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 760,
        "line_str": "comment name|assertExpressionBooleanUnknown argument_list|( literal|\"2 + 2\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 694,
        "line_str": "argument_list|( literal|\"a=(false || true)\" argument_list|) expr_stmt|; name|assertExpressionBooleanFalse",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 562,
        "line_str": "name|void name|assertBooleanFalse parameter_list|( name|String name|val",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(686, 691)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 496,
        "line_str": "literal|\"false\" argument_list|) expr_stmt|; name|assertBooleanFalse argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 827,
        "line_str": "argument_list|( literal|\"''\" argument_list|) expr_stmt|; name|assertExpressionBooleanFalse",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 352,
        "line_str": "specifier|private name|Node name|trySimpilifyUnusedResult parameter_list|( name|Node",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(671, 676)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 761,
        "line_str": "name|assertExpressionBooleanUnknown argument_list|( literal|\"2 + 2\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 695,
        "line_str": "literal|\"a=(false || true)\" argument_list|) expr_stmt|; name|assertExpressionBooleanFalse argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 563,
        "line_str": "name|assertBooleanFalse parameter_list|( name|String name|val parameter_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(686, 691)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 497,
        "line_str": "argument_list|) expr_stmt|; name|assertBooleanFalse argument_list|( literal|\"null\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 551,
        "line_str": "comment comment name|result operator|= name|trySimpilifyUnusedResult",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(872, 877)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 828,
        "line_str": "literal|\"''\" argument_list|) expr_stmt|; name|assertExpressionBooleanFalse argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 353,
        "line_str": "name|Node name|trySimpilifyUnusedResult parameter_list|( name|Node name|n",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(671, 676)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 762,
        "line_str": "argument_list|( literal|\"2 + 2\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 696,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanFalse argument_list|( literal|\"a=(true&& false)\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 498,
        "line_str": "expr_stmt|; name|assertBooleanFalse argument_list|( literal|\"null\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 320,
        "line_str": "name|Token operator|. name|FALSE case|: case|case",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(643, 649)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 552,
        "line_str": "comment name|result operator|= name|trySimpilifyUnusedResult argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(872, 877)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 829,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanFalse argument_list|( literal|\"undefined\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 354,
        "line_str": "name|trySimpilifyUnusedResult parameter_list|( name|Node name|n parameter_list|,",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(671, 676)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 763,
        "line_str": "literal|\"2 + 2\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 697,
        "line_str": "expr_stmt|; name|assertExpressionBooleanFalse argument_list|( literal|\"a=(true&& false)\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 499,
        "line_str": "name|assertBooleanFalse argument_list|( literal|\"null\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 321,
        "line_str": "operator|. name|FALSE case|: case|case name|Token",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(643, 649)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 553,
        "line_str": "name|result operator|= name|trySimpilifyUnusedResult argument_list|( name|n",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(872, 877)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 830,
        "line_str": "expr_stmt|; name|assertExpressionBooleanFalse argument_list|( literal|\"undefined\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 764,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"a=1\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 698,
        "line_str": "name|assertExpressionBooleanFalse argument_list|( literal|\"a=(true&& false)\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 500,
        "line_str": "argument_list|( literal|\"null\" argument_list|) expr_stmt|; name|assertBooleanFalse",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 322,
        "line_str": "name|FALSE case|: case|case name|Token operator|.",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(643, 649)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 554,
        "line_str": "operator|= name|trySimpilifyUnusedResult argument_list|( name|n operator|.",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(872, 877)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 488,
        "line_str": "condition|) block|{ name|result operator|= name|trySimpilifyUnusedResult",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(809, 814)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 831,
        "line_str": "name|assertExpressionBooleanFalse argument_list|( literal|\"undefined\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 765,
        "line_str": "expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"a=1\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 699,
        "line_str": "argument_list|( literal|\"a=(true&& false)\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 501,
        "line_str": "literal|\"null\" argument_list|) expr_stmt|; name|assertBooleanFalse argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 323,
        "line_str": "case|: case|case name|Token operator|. name|VOID",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(643, 649)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 555,
        "line_str": "name|trySimpilifyUnusedResult argument_list|( name|n operator|. name|getFirstChild",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(872, 877)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 489,
        "line_str": "block|{ name|result operator|= name|trySimpilifyUnusedResult argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(809, 814)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 832,
        "line_str": "argument_list|( literal|\"undefined\" argument_list|) expr_stmt|; name|assertExpressionBooleanFalse",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 766,
        "line_str": "name|assertExpressionBooleanTrue argument_list|( literal|\"a=1\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 700,
        "line_str": "literal|\"a=(true&& false)\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 502,
        "line_str": "argument_list|) expr_stmt|; name|assertBooleanFalse argument_list|( literal|\"0\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 324,
        "line_str": "case|case name|Token operator|. name|VOID case|:",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(643, 649)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 490,
        "line_str": "name|result operator|= name|trySimpilifyUnusedResult argument_list|( name|n",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(809, 814)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 833,
        "line_str": "literal|\"undefined\" argument_list|) expr_stmt|; name|assertExpressionBooleanFalse argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 767,
        "line_str": "argument_list|( literal|\"a=1\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 701,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"a=!(true&& false)\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 503,
        "line_str": "expr_stmt|; name|assertBooleanFalse argument_list|( literal|\"0\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 325,
        "line_str": "name|Token operator|. name|VOID case|: return|return",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(643, 649)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 491,
        "line_str": "operator|= name|trySimpilifyUnusedResult argument_list|( name|n operator|.",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(809, 814)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 834,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanFalse argument_list|( literal|\"void 0\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 768,
        "line_str": "literal|\"a=1\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 702,
        "line_str": "expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"a=!(true&& false)\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 504,
        "line_str": "name|assertBooleanFalse argument_list|( literal|\"0\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 492,
        "line_str": "name|trySimpilifyUnusedResult argument_list|( name|n operator|. name|getFirstChild",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(809, 814)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 901,
        "line_str": "expr_stmt|; block|} specifier|private name|void name|assertExpressionBooleanFalse",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(983, 988)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 835,
        "line_str": "expr_stmt|; name|assertExpressionBooleanFalse argument_list|( literal|\"void 0\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 769,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"a=/a/\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 703,
        "line_str": "name|assertExpressionBooleanTrue argument_list|( literal|\"a=!(true&& false)\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 505,
        "line_str": "argument_list|( literal|\"0\" argument_list|) expr_stmt|; name|assertBooleanFalse",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 902,
        "line_str": "block|} specifier|private name|void name|assertExpressionBooleanFalse parameter_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(983, 988)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 836,
        "line_str": "name|assertExpressionBooleanFalse argument_list|( literal|\"void 0\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 770,
        "line_str": "expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"a=/a/\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 704,
        "line_str": "argument_list|( literal|\"a=!(true&& false)\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 506,
        "line_str": "literal|\"0\" argument_list|) expr_stmt|; name|assertBooleanFalse argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 903,
        "line_str": "specifier|private name|void name|assertExpressionBooleanFalse parameter_list|( name|String",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(983, 988)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 837,
        "line_str": "argument_list|( literal|\"void 0\" argument_list|) expr_stmt|; name|assertExpressionBooleanFalse",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 771,
        "line_str": "name|assertExpressionBooleanTrue argument_list|( literal|\"a=/a/\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 705,
        "line_str": "literal|\"a=!(true&& false)\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 507,
        "line_str": "argument_list|) expr_stmt|; name|assertBooleanFalse argument_list|( literal|\"''\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 904,
        "line_str": "name|void name|assertExpressionBooleanFalse parameter_list|( name|String name|val",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(983, 988)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 838,
        "line_str": "literal|\"void 0\" argument_list|) expr_stmt|; name|assertExpressionBooleanFalse argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 772,
        "line_str": "argument_list|( literal|\"a=/a/\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 706,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"a,true\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 3204,
        "line_str": "condition|) block|{ name|init operator|= name|trySimpilifyUnusedResult",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(3448, 3453)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 508,
        "line_str": "expr_stmt|; name|assertBooleanFalse argument_list|( literal|\"''\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 1619,
        "line_str": "argument_list|() decl_stmt|; name|left operator|= name|trySimpilifyUnusedResult",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(1932, 1935)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 905,
        "line_str": "name|assertExpressionBooleanFalse parameter_list|( name|String name|val parameter_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(983, 988)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 839,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanFalse argument_list|( literal|\"void foo()\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 773,
        "line_str": "literal|\"a=/a/\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 298,
        "line_str": "block|{ name|Node name|result init|= name|trySimpilifyUnusedResult",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(567, 572)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 707,
        "line_str": "expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"a,true\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 3205,
        "line_str": "block|{ name|init operator|= name|trySimpilifyUnusedResult argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(3448, 3453)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 509,
        "line_str": "name|assertBooleanFalse argument_list|( literal|\"''\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 331,
        "line_str": "return|; case|case name|Token operator|. name|NAME",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(656, 657)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 1620,
        "line_str": "decl_stmt|; name|left operator|= name|trySimpilifyUnusedResult argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(1932, 1935)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 840,
        "line_str": "expr_stmt|; name|assertExpressionBooleanFalse argument_list|( literal|\"void foo()\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 774,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"a={}\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 299,
        "line_str": "name|Node name|result init|= name|trySimpilifyUnusedResult argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(567, 572)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 708,
        "line_str": "name|assertExpressionBooleanTrue argument_list|( literal|\"a,true\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 3206,
        "line_str": "name|init operator|= name|trySimpilifyUnusedResult argument_list|( name|init",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(3448, 3453)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 510,
        "line_str": "argument_list|( literal|\"''\" argument_list|) expr_stmt|; name|assertBooleanFalse",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 1621,
        "line_str": "name|left operator|= name|trySimpilifyUnusedResult argument_list|( name|left",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(1932, 1935)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 841,
        "line_str": "name|assertExpressionBooleanFalse argument_list|( literal|\"void foo()\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 775,
        "line_str": "expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"a={}\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 300,
        "line_str": "name|result init|= name|trySimpilifyUnusedResult argument_list|( name|subtree",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(567, 572)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 709,
        "line_str": "argument_list|( literal|\"a,true\" argument_list|) expr_stmt|; name|assertExpressionBooleanFalse",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 3207,
        "line_str": "operator|= name|trySimpilifyUnusedResult argument_list|( name|init argument_list|,",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(3448, 3453)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 511,
        "line_str": "literal|\"''\" argument_list|) expr_stmt|; name|assertBooleanFalse argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 842,
        "line_str": "argument_list|( literal|\"void foo()\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 776,
        "line_str": "name|assertExpressionBooleanTrue argument_list|( literal|\"a={}\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 301,
        "line_str": "init|= name|trySimpilifyUnusedResult argument_list|( name|subtree operator|.",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(567, 572)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 710,
        "line_str": "literal|\"a,true\" argument_list|) expr_stmt|; name|assertExpressionBooleanFalse argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 3208,
        "line_str": "name|trySimpilifyUnusedResult argument_list|( name|init argument_list|, literal|false",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(3448, 3453)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 512,
        "line_str": "argument_list|) expr_stmt|; name|assertBooleanFalse argument_list|( literal|\"undefined\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "a42a447357d01f80a2d3b37bb436217f8e761b00",
        "line_num": 731,
        "line_str": "operator|. name|TRUE return|; block|} block|}",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(748, 752)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 843,
        "line_str": "literal|\"void foo()\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 777,
        "line_str": "argument_list|( literal|\"a={}\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "d819cea99925899d1a001fcd7d377e1d9421899a",
        "line_num": 302,
        "line_str": "name|trySimpilifyUnusedResult argument_list|( name|subtree operator|. name|getFirstChild",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(567, 572)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 711,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanFalse argument_list|( literal|\"a,false\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 513,
        "line_str": "expr_stmt|; name|assertBooleanFalse argument_list|( literal|\"undefined\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "a42a447357d01f80a2d3b37bb436217f8e761b00",
        "line_num": 732,
        "line_str": "name|TRUE return|; block|} block|} return|return",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(748, 752)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 844,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"a?true:true\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 778,
        "line_str": "literal|\"a={}\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 712,
        "line_str": "expr_stmt|; name|assertExpressionBooleanFalse argument_list|( literal|\"a,false\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "a42a447357d01f80a2d3b37bb436217f8e761b00",
        "line_num": 534,
        "line_str": "name|TernaryValue operator|. name|TRUE return|; default|default:",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(551, 554)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 514,
        "line_str": "name|assertBooleanFalse argument_list|( literal|\"undefined\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      },
      {
        "commit_hash": "a42a447357d01f80a2d3b37bb436217f8e761b00",
        "line_num": 733,
        "line_str": "return|; block|} block|} return|return name|TernaryValue",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(748, 752)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 845,
        "line_str": "expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"a?true:true\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 779,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"true\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 944)"
      },
      {
        "commit_hash": "efe544b3a55c13eb3681a2ae93ecbe2a8634b0f7",
        "line_num": 713,
        "line_str": "name|assertExpressionBooleanFalse argument_list|( literal|\"a,false\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 821)"
      },
      {
        "commit_hash": "a42a447357d01f80a2d3b37bb436217f8e761b00",
        "line_num": 535,
        "line_str": "operator|. name|TRUE return|; default|default: return|return",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(551, 554)"
      },
      {
        "commit_hash": "d3138b01780019c534974cc4fdf933662e16c8c6",
        "line_num": 515,
        "line_str": "argument_list|( literal|\"undefined\" argument_list|) expr_stmt|; name|assertBooleanFalse",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 631)"
      }
    ]
  },
  {
    "id": 10021,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["6b5e8436f9b3e37c832d834acd7b79f567ec1991"],
    "fix_commit_hash": "81b199564a08da625e559d81de8eca9daaafca1d",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 995,
        "line_str": "argument_list|, literal|\"\" argument_list|) expr_stmt|; comment",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(983, 997)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 120,
        "line_str": "init|= operator|new name|SimpleDefinitionFinder argument_list|( name|compiler",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 151)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 54,
        "line_str": "operator|+ literal|\"/** @nosideeffects */ Math.random = function(){};\" operator|+ literal|\"/** @nosideeffects */ Math.sin = function(){};\" decl_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(43, 59)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 21,
        "line_str": "begin_import import|import name|com operator|.",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(18, 35)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 170,
        "line_str": "name|root argument_list|) expr_stmt|; block|} block|}",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(160, 175)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 137,
        "line_str": "name|PureFunctionIdentifier argument_list|( name|compiler argument_list|, name|definitionFinder",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 151)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 104,
        "line_str": "block|{ annotation|@ name|Override specifier|public name|void",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 151)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 996,
        "line_str": "literal|\"\" argument_list|) expr_stmt|; comment name|fold",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(983, 997)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 121,
        "line_str": "operator|new name|SimpleDefinitionFinder argument_list|( name|compiler argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 151)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 55,
        "line_str": "literal|\"/** @nosideeffects */ Math.random = function(){};\" operator|+ literal|\"/** @nosideeffects */ Math.sin = function(){};\" decl_stmt|; specifier|public",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(43, 59)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 22,
        "line_str": "begin_import import|import name|com operator|. name|google",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(18, 35)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 171,
        "line_str": "argument_list|) expr_stmt|; block|} block|} return|;",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(160, 175)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 138,
        "line_str": "argument_list|( name|compiler argument_list|, name|definitionFinder argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 151)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 105,
        "line_str": "annotation|@ name|Override specifier|public name|void name|process",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 151)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 122,
        "line_str": "name|SimpleDefinitionFinder argument_list|( name|compiler argument_list|) decl_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 151)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 56,
        "line_str": "operator|+ literal|\"/** @nosideeffects */ Math.sin = function(){};\" decl_stmt|; specifier|public name|PeepholeRemoveDeadCodeTest",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(43, 59)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 23,
        "line_str": "import|import name|com operator|. name|google operator|.",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(18, 35)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 172,
        "line_str": "expr_stmt|; block|} block|} return|; block|}",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(160, 175)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 139,
        "line_str": "name|compiler argument_list|, name|definitionFinder argument_list|) operator|.",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 151)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 106,
        "line_str": "name|Override specifier|public name|void name|process parameter_list|(",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 151)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 123,
        "line_str": "argument_list|( name|compiler argument_list|) decl_stmt|; name|definitionFinder",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 151)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 57,
        "line_str": "literal|\"/** @nosideeffects */ Math.sin = function(){};\" decl_stmt|; specifier|public name|PeepholeRemoveDeadCodeTest parameter_list|()",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(43, 59)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 24,
        "line_str": "name|com operator|. name|google operator|. name|javascript",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(18, 35)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 3776,
        "line_str": "return|return literal|false return|; block|} if|if",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(3776, 3779)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 173,
        "line_str": "block|} block|} return|; block|} annotation|@",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(160, 175)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 140,
        "line_str": "argument_list|, name|definitionFinder argument_list|) operator|. name|process",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 151)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 107,
        "line_str": "specifier|public name|void name|process parameter_list|( name|Node",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 151)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 124,
        "line_str": "name|compiler argument_list|) decl_stmt|; name|definitionFinder operator|.",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 151)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 58,
        "line_str": "decl_stmt|; specifier|public name|PeepholeRemoveDeadCodeTest parameter_list|() block|{",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(43, 59)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 25,
        "line_str": "operator|. name|google operator|. name|javascript operator|.",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(18, 35)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 3777,
        "line_str": "literal|false return|; block|} if|if condition|(",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(3776, 3779)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 983,
        "line_str": "argument_list|) expr_stmt|; name|foldSame argument_list|( literal|\"(function () { f(); })();\"",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(983, 997)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 174,
        "line_str": "block|} return|; block|} annotation|@ name|Override",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(160, 175)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 141,
        "line_str": "name|definitionFinder argument_list|) operator|. name|process argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 151)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 108,
        "line_str": "name|void name|process parameter_list|( name|Node name|externs",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 151)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 125,
        "line_str": "argument_list|) decl_stmt|; name|definitionFinder operator|. name|process",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 151)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 26,
        "line_str": "name|google operator|. name|javascript operator|. name|rhino",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(18, 35)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 3778,
        "line_str": "return|; block|} if|if condition|( name|compiler",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(3776, 3779)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 984,
        "line_str": "expr_stmt|; name|foldSame argument_list|( literal|\"(function () { f(); })();\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(983, 997)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 142,
        "line_str": "argument_list|) operator|. name|process argument_list|( name|externs",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 151)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 109,
        "line_str": "name|process parameter_list|( name|Node name|externs parameter_list|,",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 151)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 43,
        "line_str": "name|PeepholeRemoveDeadCodeTest extends|extends name|CompilerTestCase block|{ specifier|private",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(43, 59)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 126,
        "line_str": "decl_stmt|; name|definitionFinder operator|. name|process argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 151)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 27,
        "line_str": "operator|. name|javascript operator|. name|rhino operator|.",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(18, 35)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 985,
        "line_str": "name|foldSame argument_list|( literal|\"(function () { f(); })();\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(983, 997)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 143,
        "line_str": "operator|. name|process argument_list|( name|externs argument_list|,",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 151)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 110,
        "line_str": "parameter_list|( name|Node name|externs parameter_list|, name|Node",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 151)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 44,
        "line_str": "extends|extends name|CompilerTestCase block|{ specifier|private specifier|static",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(43, 59)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 160,
        "line_str": "name|PeepholeRemoveDeadCode argument_list|() argument_list|) decl_stmt|; name|peepholePass",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(160, 175)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 127,
        "line_str": "name|definitionFinder operator|. name|process argument_list|( name|externs",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 151)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 61,
        "line_str": "parameter_list|() block|{ name|super argument_list|( name|MATH",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(61, 66)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 28,
        "line_str": "name|javascript operator|. name|rhino operator|. name|Node",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(18, 35)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 986,
        "line_str": "argument_list|( literal|\"(function () { f(); })();\" argument_list|) expr_stmt|; comment",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(983, 997)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 144,
        "line_str": "name|process argument_list|( name|externs argument_list|, name|root",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 151)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 111,
        "line_str": "name|Node name|externs parameter_list|, name|Node name|root",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 151)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 45,
        "line_str": "name|CompilerTestCase block|{ specifier|private specifier|static specifier|final",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(43, 59)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 161,
        "line_str": "argument_list|() argument_list|) decl_stmt|; name|peepholePass operator|.",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(160, 175)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 128,
        "line_str": "operator|. name|process argument_list|( name|externs argument_list|,",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 151)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 62,
        "line_str": "block|{ name|super argument_list|( name|MATH argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(61, 66)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 29,
        "line_str": "operator|. name|rhino operator|. name|Node import|;",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(18, 35)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 987,
        "line_str": "literal|\"(function () { f(); })();\" argument_list|) expr_stmt|; comment comment",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(983, 997)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 145,
        "line_str": "argument_list|( name|externs argument_list|, name|root argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 151)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 112,
        "line_str": "name|externs parameter_list|, name|Node name|root parameter_list|)",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 151)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 46,
        "line_str": "block|{ specifier|private specifier|static specifier|final name|String",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(43, 59)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 162,
        "line_str": "argument_list|) decl_stmt|; name|peepholePass operator|. name|process",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(160, 175)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 129,
        "line_str": "name|process argument_list|( name|externs argument_list|, name|root",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 151)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 96,
        "line_str": "name|Compiler name|compiler parameter_list|) block|{ return|return",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 151)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 63,
        "line_str": "name|super argument_list|( name|MATH argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(61, 66)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 30,
        "line_str": "name|rhino operator|. name|Node import|; end_import",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(18, 35)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 988,
        "line_str": "argument_list|) expr_stmt|; comment comment name|fold",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(983, 997)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 146,
        "line_str": "name|externs argument_list|, name|root argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 151)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 113,
        "line_str": "parameter_list|, name|Node name|root parameter_list|) block|{",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 151)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 47,
        "line_str": "specifier|private specifier|static specifier|final name|String name|MATH",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(43, 59)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 163,
        "line_str": "decl_stmt|; name|peepholePass operator|. name|process argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(160, 175)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 130,
        "line_str": "argument_list|( name|externs argument_list|, name|root argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 151)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 97,
        "line_str": "name|compiler parameter_list|) block|{ return|return operator|new",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 151)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 64,
        "line_str": "argument_list|( name|MATH argument_list|) expr_stmt|; block|}",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(61, 66)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 31,
        "line_str": "operator|. name|Node import|; end_import",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(18, 35)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 989,
        "line_str": "expr_stmt|; comment comment name|fold argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(983, 997)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 147,
        "line_str": "argument_list|, name|root argument_list|) expr_stmt|; name|PeepholeOptimizationsPass",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 151)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 114,
        "line_str": "name|Node name|root parameter_list|) block|{ name|SimpleDefinitionFinder",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 151)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 48,
        "line_str": "specifier|static specifier|final name|String name|MATH init|=",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(43, 59)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 164,
        "line_str": "name|peepholePass operator|. name|process argument_list|( name|externs",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(160, 175)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 131,
        "line_str": "name|externs argument_list|, name|root argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 151)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 98,
        "line_str": "parameter_list|) block|{ return|return operator|new name|CompilerPass",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 151)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 65,
        "line_str": "name|MATH argument_list|) expr_stmt|; block|} annotation|@",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(61, 66)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 32,
        "line_str": "name|Node import|; end_import  begin_comment",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(18, 35)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 990,
        "line_str": "comment comment name|fold argument_list|( literal|\"(function () {})();\"",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(983, 997)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 148,
        "line_str": "name|root argument_list|) expr_stmt|; name|PeepholeOptimizationsPass name|peepholePass",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 151)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 115,
        "line_str": "name|root parameter_list|) block|{ name|SimpleDefinitionFinder name|definitionFinder",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 151)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 49,
        "line_str": "specifier|final name|String name|MATH init|= literal|\"/** @const */ var Math = {};\"",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(43, 59)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 165,
        "line_str": "operator|. name|process argument_list|( name|externs argument_list|,",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(160, 175)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 132,
        "line_str": "argument_list|, name|root argument_list|) expr_stmt|; operator|new",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 151)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 99,
        "line_str": "block|{ return|return operator|new name|CompilerPass argument_list|()",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 151)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 33,
        "line_str": "import|; end_import  begin_comment comment",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(18, 35)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 991,
        "line_str": "comment name|fold argument_list|( literal|\"(function () {})();\" argument_list|,",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(983, 997)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 149,
        "line_str": "argument_list|) expr_stmt|; name|PeepholeOptimizationsPass name|peepholePass init|=",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 151)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 116,
        "line_str": "parameter_list|) block|{ name|SimpleDefinitionFinder name|definitionFinder init|=",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 151)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 50,
        "line_str": "name|String name|MATH init|= literal|\"/** @const */ var Math = {};\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(43, 59)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 166,
        "line_str": "name|process argument_list|( name|externs argument_list|, name|root",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(160, 175)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 133,
        "line_str": "name|root argument_list|) expr_stmt|; operator|new name|PureFunctionIdentifier",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 151)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 100,
        "line_str": "return|return operator|new name|CompilerPass argument_list|() block|{",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 151)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 34,
        "line_str": "end_import  begin_comment comment end_comment",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(18, 35)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 992,
        "line_str": "name|fold argument_list|( literal|\"(function () {})();\" argument_list|, literal|\"\"",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(983, 997)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 150,
        "line_str": "expr_stmt|; name|PeepholeOptimizationsPass name|peepholePass init|= operator|new",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 151)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 117,
        "line_str": "block|{ name|SimpleDefinitionFinder name|definitionFinder init|= operator|new",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 151)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 51,
        "line_str": "name|MATH init|= literal|\"/** @const */ var Math = {};\" operator|+ literal|\"/** @nosideeffects */ Math.random = function(){};\"",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(43, 59)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 18,
        "line_str": "name|jscomp package|; end_package  begin_import",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(18, 35)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 167,
        "line_str": "argument_list|( name|externs argument_list|, name|root argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(160, 175)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 134,
        "line_str": "argument_list|) expr_stmt|; operator|new name|PureFunctionIdentifier argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 151)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 101,
        "line_str": "operator|new name|CompilerPass argument_list|() block|{ annotation|@",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 151)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 993,
        "line_str": "argument_list|( literal|\"(function () {})();\" argument_list|, literal|\"\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(983, 997)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 118,
        "line_str": "name|SimpleDefinitionFinder name|definitionFinder init|= operator|new name|SimpleDefinitionFinder",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 151)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 52,
        "line_str": "init|= literal|\"/** @const */ var Math = {};\" operator|+ literal|\"/** @nosideeffects */ Math.random = function(){};\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(43, 59)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 19,
        "line_str": "package|; end_package  begin_import import|import",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(18, 35)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 168,
        "line_str": "name|externs argument_list|, name|root argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(160, 175)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 135,
        "line_str": "expr_stmt|; operator|new name|PureFunctionIdentifier argument_list|( name|compiler",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 151)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 102,
        "line_str": "name|CompilerPass argument_list|() block|{ annotation|@ name|Override",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 151)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 994,
        "line_str": "literal|\"(function () {})();\" argument_list|, literal|\"\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(983, 997)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 119,
        "line_str": "name|definitionFinder init|= operator|new name|SimpleDefinitionFinder argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 151)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 53,
        "line_str": "literal|\"/** @const */ var Math = {};\" operator|+ literal|\"/** @nosideeffects */ Math.random = function(){};\" operator|+ literal|\"/** @nosideeffects */ Math.sin = function(){};\"",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(43, 59)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 20,
        "line_str": "end_package  begin_import import|import name|com",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(18, 35)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 169,
        "line_str": "argument_list|, name|root argument_list|) expr_stmt|; block|}",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(160, 175)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 136,
        "line_str": "operator|new name|PureFunctionIdentifier argument_list|( name|compiler argument_list|,",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 151)"
      },
      {
        "commit_hash": "6b5e8436f9b3e37c832d834acd7b79f567ec1991",
        "line_num": 103,
        "line_str": "argument_list|() block|{ annotation|@ name|Override specifier|public",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 151)"
      }
    ]
  },
  {
    "id": 10022,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["a4829f130203aad361b22b4899c57535bf3e56cf"],
    "fix_commit_hash": "a0e4555b339bc25c79b755adb4d09f04d6faa30a",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "a4829f130203aad361b22b4899c57535bf3e56cf",
        "line_num": 416,
        "line_str": "operator|<= name|charno operator|&& name|charno operator|<",
        "file_path": "src/com/google/javascript/jscomp/LightweightMessageFormatter.java",
        "input_file_path": "src/com/google/javascript/jscomp/LightweightMessageFormatter.java",
        "input_line_num": "range(416, 421)"
      },
      {
        "commit_hash": "a4829f130203aad361b22b4899c57535bf3e56cf",
        "line_num": 404,
        "line_str": "decl_stmt|; comment if|if condition|( name|excerpt",
        "file_path": "src/com/google/javascript/jscomp/LightweightMessageFormatter.java",
        "input_file_path": "src/com/google/javascript/jscomp/LightweightMessageFormatter.java",
        "input_line_num": "range(402, 405)"
      },
      {
        "commit_hash": "a4829f130203aad361b22b4899c57535bf3e56cf",
        "line_num": 403,
        "line_str": "argument_list|() decl_stmt|; comment if|if condition|(",
        "file_path": "src/com/google/javascript/jscomp/LightweightMessageFormatter.java",
        "input_file_path": "src/com/google/javascript/jscomp/LightweightMessageFormatter.java",
        "input_line_num": "range(402, 405)"
      },
      {
        "commit_hash": "a4829f130203aad361b22b4899c57535bf3e56cf",
        "line_num": 402,
        "line_str": "name|getCharno argument_list|() decl_stmt|; comment if|if",
        "file_path": "src/com/google/javascript/jscomp/LightweightMessageFormatter.java",
        "input_file_path": "src/com/google/javascript/jscomp/LightweightMessageFormatter.java",
        "input_line_num": "range(402, 405)"
      },
      {
        "commit_hash": "a4829f130203aad361b22b4899c57535bf3e56cf",
        "line_num": 420,
        "line_str": "operator|< name|sourceExcerpt operator|. name|length argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/LightweightMessageFormatter.java",
        "input_file_path": "src/com/google/javascript/jscomp/LightweightMessageFormatter.java",
        "input_line_num": "range(416, 421)"
      },
      {
        "commit_hash": "a4829f130203aad361b22b4899c57535bf3e56cf",
        "line_num": 419,
        "line_str": "name|charno operator|< name|sourceExcerpt operator|. name|length",
        "file_path": "src/com/google/javascript/jscomp/LightweightMessageFormatter.java",
        "input_file_path": "src/com/google/javascript/jscomp/LightweightMessageFormatter.java",
        "input_line_num": "range(416, 421)"
      },
      {
        "commit_hash": "a4829f130203aad361b22b4899c57535bf3e56cf",
        "line_num": 418,
        "line_str": "operator|&& name|charno operator|< name|sourceExcerpt operator|.",
        "file_path": "src/com/google/javascript/jscomp/LightweightMessageFormatter.java",
        "input_file_path": "src/com/google/javascript/jscomp/LightweightMessageFormatter.java",
        "input_line_num": "range(416, 421)"
      },
      {
        "commit_hash": "a4829f130203aad361b22b4899c57535bf3e56cf",
        "line_num": 417,
        "line_str": "name|charno operator|&& name|charno operator|< name|sourceExcerpt",
        "file_path": "src/com/google/javascript/jscomp/LightweightMessageFormatter.java",
        "input_file_path": "src/com/google/javascript/jscomp/LightweightMessageFormatter.java",
        "input_line_num": "range(416, 421)"
      }
    ]
  },
  {
    "id": 10023,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["95a0f8338a74b9e99b9318061ba0e5f9c64324ab"],
    "fix_commit_hash": "af56713817b291e93ee7d8b320ac574778164fc0",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "7ec7fcc0c20a3044e1771c8fa9fb3cde4c88bbbc",
        "line_num": 5817,
        "line_str": "name|builder operator|. name|setTagAsStrict argument_list|( name|options",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(5934, 5938)"
      },
      {
        "commit_hash": "93623a3a3282efc327af3ed76d6beb12cbce7dcd",
        "line_num": 5140,
        "line_str": "name|sourceMap argument_list|) decl_stmt|; if|if condition|(",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(5750, 5754)"
      },
      {
        "commit_hash": "93623a3a3282efc327af3ed76d6beb12cbce7dcd",
        "line_num": 5202,
        "line_str": "argument_list|( name|n argument_list|, literal|null argument_list|)",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(5868, 5872)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 4657,
        "line_str": "argument_list|() argument_list|) expr_stmt|; block|} name|String",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(5742, 5746)"
      },
      {
        "commit_hash": "93623a3a3282efc327af3ed76d6beb12cbce7dcd",
        "line_num": 5215,
        "line_str": "name|n parameter_list|, name|SourceMap name|sourceMap parameter_list|)",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(5881, 5885)"
      },
      {
        "commit_hash": "7ec7fcc0c20a3044e1771c8fa9fb3cde4c88bbbc",
        "line_num": 5818,
        "line_str": "operator|. name|setTagAsStrict argument_list|( name|options operator|.",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(5934, 5938)"
      },
      {
        "commit_hash": "93623a3a3282efc327af3ed76d6beb12cbce7dcd",
        "line_num": 5203,
        "line_str": "name|n argument_list|, literal|null argument_list|) return|;",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(5868, 5872)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 4658,
        "line_str": "argument_list|) expr_stmt|; block|} name|String name|code",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(5742, 5746)"
      },
      {
        "commit_hash": "93623a3a3282efc327af3ed76d6beb12cbce7dcd",
        "line_num": 5137,
        "line_str": "argument_list|( name|root argument_list|, name|sourceMap argument_list|)",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(5750, 5754)"
      },
      {
        "commit_hash": "c0494fddc34d9dfef8e0eeb22eb4bccd1fa06632",
        "line_num": 2916,
        "line_str": "name|PARSE_ERROR argument_list|) expr_stmt|; block|} comment",
        "file_path": "test/com/google/javascript/jscomp/CommandLineRunnerTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/CommandLineRunnerTest.java",
        "input_line_num": "range(2945, 2946)"
      },
      {
        "commit_hash": "93623a3a3282efc327af3ed76d6beb12cbce7dcd",
        "line_num": 5216,
        "line_str": "parameter_list|, name|SourceMap name|sourceMap parameter_list|) block|{",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(5881, 5885)"
      },
      {
        "commit_hash": "7ec7fcc0c20a3044e1771c8fa9fb3cde4c88bbbc",
        "line_num": 5819,
        "line_str": "name|setTagAsStrict argument_list|( name|options operator|. name|getLanguageOut",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(5934, 5938)"
      },
      {
        "commit_hash": "93623a3a3282efc327af3ed76d6beb12cbce7dcd",
        "line_num": 5204,
        "line_str": "argument_list|, literal|null argument_list|) return|; block|}",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(5868, 5872)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 4659,
        "line_str": "expr_stmt|; block|} name|String name|code init|=",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(5742, 5746)"
      },
      {
        "commit_hash": "93623a3a3282efc327af3ed76d6beb12cbce7dcd",
        "line_num": 5138,
        "line_str": "name|root argument_list|, name|sourceMap argument_list|) decl_stmt|;",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(5750, 5754)"
      },
      {
        "commit_hash": "93623a3a3282efc327af3ed76d6beb12cbce7dcd",
        "line_num": 5217,
        "line_str": "name|SourceMap name|sourceMap parameter_list|) block|{ name|CodePrinter",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(5881, 5885)"
      },
      {
        "commit_hash": "7ec7fcc0c20a3044e1771c8fa9fb3cde4c88bbbc",
        "line_num": 5820,
        "line_str": "argument_list|( name|options operator|. name|getLanguageOut argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(5934, 5938)"
      },
      {
        "commit_hash": "93623a3a3282efc327af3ed76d6beb12cbce7dcd",
        "line_num": 5205,
        "line_str": "literal|null argument_list|) return|; block|} comment",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(5868, 5872)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 4660,
        "line_str": "block|} name|String name|code init|= name|toSource",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(5742, 5746)"
      },
      {
        "commit_hash": "93623a3a3282efc327af3ed76d6beb12cbce7dcd",
        "line_num": 5139,
        "line_str": "argument_list|, name|sourceMap argument_list|) decl_stmt|; if|if",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(5750, 5754)"
      },
      {
        "commit_hash": "93623a3a3282efc327af3ed76d6beb12cbce7dcd",
        "line_num": 5218,
        "line_str": "name|sourceMap parameter_list|) block|{ name|CodePrinter operator|.",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(5881, 5885)"
      }
    ]
  },
  {
    "id": 10024,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["ce96908b15025192ceb227949e21c18240e884b4"],
    "fix_commit_hash": "5f9411b9f6508d342d20a0231c10241d82e9e42d",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "b14b772ba2545f9cfa64f24699ed8e836a79fc81",
        "line_num": 4316,
        "line_str": "argument_list|, literal|\"var x=\\\"\\\\0\\\"\" argument_list|) expr_stmt|; block|}",
        "file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_line_num": "range(4475, 4479)"
      },
      {
        "commit_hash": "b14b772ba2545f9cfa64f24699ed8e836a79fc81",
        "line_num": 4308,
        "line_str": "literal|\"var x ='\\\\x00';\" argument_list|, literal|\"var x=\\\"\\\\0\\\"\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_line_num": "range(4468, 4473)"
      },
      {
        "commit_hash": "b14b772ba2545f9cfa64f24699ed8e836a79fc81",
        "line_num": 4580,
        "line_str": "argument_list|( literal|\"\\\\0\" argument_list|) expr_stmt|; break|break;",
        "file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_line_num": "range(4814, 4819)"
      },
      {
        "commit_hash": "567341c2554b2ae59341de464cca09cc70252a45",
        "line_num": 4428,
        "line_str": "literal|\"var x=\\\"\\\\0\\\"\" argument_list|) expr_stmt|; block|} specifier|public",
        "file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_line_num": "range(4479, 4480)"
      },
      {
        "commit_hash": "b14b772ba2545f9cfa64f24699ed8e836a79fc81",
        "line_num": 4300,
        "line_str": "argument_list|( literal|\"var x ='\\\\0';\" argument_list|, literal|\"var x=\\\"\\\\0\\\"\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_line_num": "range(4461, 4466)"
      },
      {
        "commit_hash": "b14b772ba2545f9cfa64f24699ed8e836a79fc81",
        "line_num": 4313,
        "line_str": "name|assertPrint argument_list|( literal|\"var x ='\\\\u0000';\" argument_list|, literal|\"var x=\\\"\\\\0\\\"\"",
        "file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_line_num": "range(4475, 4479)"
      },
      {
        "commit_hash": "b14b772ba2545f9cfa64f24699ed8e836a79fc81",
        "line_num": 4309,
        "line_str": "argument_list|, literal|\"var x=\\\"\\\\0\\\"\" argument_list|) expr_stmt|; name|assertPrint",
        "file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_line_num": "range(4468, 4473)"
      },
      {
        "commit_hash": "b14b772ba2545f9cfa64f24699ed8e836a79fc81",
        "line_num": 4581,
        "line_str": "literal|\"\\\\0\" argument_list|) expr_stmt|; break|break; case|case",
        "file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_line_num": "range(4814, 4819)"
      },
      {
        "commit_hash": "b14b772ba2545f9cfa64f24699ed8e836a79fc81",
        "line_num": 4577,
        "line_str": "name|sb operator|. name|append argument_list|( literal|\"\\\\0\"",
        "file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_line_num": "range(4814, 4819)"
      },
      {
        "commit_hash": "b14b772ba2545f9cfa64f24699ed8e836a79fc81",
        "line_num": 4301,
        "line_str": "literal|\"var x ='\\\\0';\" argument_list|, literal|\"var x=\\\"\\\\0\\\"\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_line_num": "range(4461, 4466)"
      },
      {
        "commit_hash": "b14b772ba2545f9cfa64f24699ed8e836a79fc81",
        "line_num": 4314,
        "line_str": "argument_list|( literal|\"var x ='\\\\u0000';\" argument_list|, literal|\"var x=\\\"\\\\0\\\"\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_line_num": "range(4475, 4479)"
      },
      {
        "commit_hash": "b14b772ba2545f9cfa64f24699ed8e836a79fc81",
        "line_num": 4310,
        "line_str": "literal|\"var x=\\\"\\\\0\\\"\" argument_list|) expr_stmt|; name|assertPrint argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_line_num": "range(4468, 4473)"
      },
      {
        "commit_hash": "b14b772ba2545f9cfa64f24699ed8e836a79fc81",
        "line_num": 4306,
        "line_str": "name|assertPrint argument_list|( literal|\"var x ='\\\\x00';\" argument_list|, literal|\"var x=\\\"\\\\0\\\"\"",
        "file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_line_num": "range(4468, 4473)"
      },
      {
        "commit_hash": "b14b772ba2545f9cfa64f24699ed8e836a79fc81",
        "line_num": 4578,
        "line_str": "operator|. name|append argument_list|( literal|\"\\\\0\" argument_list|)",
        "file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_line_num": "range(4814, 4819)"
      },
      {
        "commit_hash": "b14b772ba2545f9cfa64f24699ed8e836a79fc81",
        "line_num": 4302,
        "line_str": "argument_list|, literal|\"var x=\\\"\\\\0\\\"\" argument_list|) expr_stmt|; name|assertPrint",
        "file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_line_num": "range(4461, 4466)"
      },
      {
        "commit_hash": "b14b772ba2545f9cfa64f24699ed8e836a79fc81",
        "line_num": 4315,
        "line_str": "literal|\"var x ='\\\\u0000';\" argument_list|, literal|\"var x=\\\"\\\\0\\\"\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_line_num": "range(4475, 4479)"
      },
      {
        "commit_hash": "b14b772ba2545f9cfa64f24699ed8e836a79fc81",
        "line_num": 4307,
        "line_str": "argument_list|( literal|\"var x ='\\\\x00';\" argument_list|, literal|\"var x=\\\"\\\\0\\\"\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_line_num": "range(4468, 4473)"
      },
      {
        "commit_hash": "b14b772ba2545f9cfa64f24699ed8e836a79fc81",
        "line_num": 4579,
        "line_str": "name|append argument_list|( literal|\"\\\\0\" argument_list|) expr_stmt|;",
        "file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_line_num": "range(4814, 4819)"
      },
      {
        "commit_hash": "b14b772ba2545f9cfa64f24699ed8e836a79fc81",
        "line_num": 4303,
        "line_str": "literal|\"var x=\\\"\\\\0\\\"\" argument_list|) expr_stmt|; name|assertPrint argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_line_num": "range(4461, 4466)"
      },
      {
        "commit_hash": "b14b772ba2545f9cfa64f24699ed8e836a79fc81",
        "line_num": 4299,
        "line_str": "name|assertPrint argument_list|( literal|\"var x ='\\\\0';\" argument_list|, literal|\"var x=\\\"\\\\0\\\"\"",
        "file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_line_num": "range(4461, 4466)"
      }
    ]
  },
  {
    "id": 10025,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["afd96729fe6ebfe24b99118f632c3b4ea975cc89"],
    "fix_commit_hash": "e0412198c4cb5f4f75ed2c4d2585e85029f5ae23",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "afd96729fe6ebfe24b99118f632c3b4ea975cc89",
        "line_num": 2033,
        "line_str": "argument_list|) expr_stmt|; block|} break|break; case|case",
        "file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_line_num": "range(2068, 2070)"
      },
      {
        "commit_hash": "afd96729fe6ebfe24b99118f632c3b4ea975cc89",
        "line_num": 2032,
        "line_str": "name|STRING_TYPE argument_list|) expr_stmt|; block|} break|break;",
        "file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_line_num": "range(2068, 2070)"
      }
    ]
  },
  {
    "id": 10026,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["d985623615ee8ab35d5d12b5b5e1ada81a26bad5"],
    "fix_commit_hash": "583b7d8fb53fa1f7ac3a03937f54bf2396bab85b",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 3653,
        "line_str": "block|} continue|continue name|retry continue|; block|}",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(3878, 3883)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 3652,
        "line_str": "expr_stmt|; block|} continue|continue name|retry continue|;",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(3878, 3883)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 3651,
        "line_str": "argument_list|() expr_stmt|; block|} continue|continue name|retry",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(3878, 3883)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 3650,
        "line_str": "name|eatTokensUntilEOL argument_list|() expr_stmt|; block|} continue|continue",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(3878, 3883)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 3649,
        "line_str": "operator|= name|eatTokensUntilEOL argument_list|() expr_stmt|; block|}",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(3878, 3883)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 3646,
        "line_str": "break|break; block|} name|token operator|= name|eatTokensUntilEOL",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(3873, 3876)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 3645,
        "line_str": "block|} break|break; block|} name|token operator|=",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(3873, 3876)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 3644,
        "line_str": "expr_stmt|; block|} break|break; block|} name|token",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(3873, 3876)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 6043,
        "line_str": "argument_list|) return|; block|} block|} return|return",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(6737, 6741)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 6044,
        "line_str": "return|; block|} block|} return|return name|reportGenericTypeSyntaxWarning",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(6737, 6741)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 6045,
        "line_str": "block|} block|} return|return name|reportGenericTypeSyntaxWarning argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(6737, 6741)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 6046,
        "line_str": "block|} return|return name|reportGenericTypeSyntaxWarning argument_list|() return|;",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(6737, 6741)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 6171,
        "line_str": "operator|. name|LP condition|) block|{ return|return",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(6919, 6923)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 6172,
        "line_str": "name|LP condition|) block|{ return|return name|reportTypeSyntaxWarning",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(6919, 6923)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 6173,
        "line_str": "condition|) block|{ return|return name|reportTypeSyntaxWarning argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(6919, 6923)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 6174,
        "line_str": "block|{ return|return name|reportTypeSyntaxWarning argument_list|( literal|\"msg.jsdoc.missing.lp\"",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(6919, 6923)"
      }
    ]
  },
  {
    "id": 10027,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["2a8b8849d10903e6aceb9c96e692ced73c237bcb"],
    "fix_commit_hash": "567341c2554b2ae59341de464cca09cc70252a45",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "b14b772ba2545f9cfa64f24699ed8e836a79fc81",
        "line_num": 4317,
        "line_str": "literal|\"var x=\\\"\\\\0\\\"\" argument_list|) expr_stmt|; block|} block|}",
        "file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_line_num": "range(4428, 4429)"
      },
      {
        "commit_hash": "2a8b8849d10903e6aceb9c96e692ced73c237bcb",
        "line_num": 3968,
        "line_str": "operator|<= literal|0x7f condition|) block|{ name|sb",
        "file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_line_num": "range(5022, 5027)"
      },
      {
        "commit_hash": "2a8b8849d10903e6aceb9c96e692ced73c237bcb",
        "line_num": 3967,
        "line_str": "name|c operator|<= literal|0x7f condition|) block|{",
        "file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_line_num": "range(5022, 5027)"
      },
      {
        "commit_hash": "2a8b8849d10903e6aceb9c96e692ced73c237bcb",
        "line_num": 3966,
        "line_str": "operator|&& name|c operator|<= literal|0x7f condition|)",
        "file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_line_num": "range(5022, 5027)"
      },
      {
        "commit_hash": "2a8b8849d10903e6aceb9c96e692ced73c237bcb",
        "line_num": 3965,
        "line_str": "literal|0x1f operator|&& name|c operator|<= literal|0x7f",
        "file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_line_num": "range(5022, 5027)"
      },
      {
        "commit_hash": "2a8b8849d10903e6aceb9c96e692ced73c237bcb",
        "line_num": 3964,
        "line_str": "operator|> literal|0x1f operator|&& name|c operator|<=",
        "file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_line_num": "range(5022, 5027)"
      }
    ]
  },
  {
    "id": 10028,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["ce96908b15025192ceb227949e21c18240e884b4"],
    "fix_commit_hash": "2e7e6f360783cb34fb120a4c8016314ea41e073d",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "05199124fe66e89ccb1d1e94e1585efcbeebd5ee",
        "line_num": 1970,
        "line_str": "expr_stmt|; name|fold argument_list|( literal|\"x = true == true\" argument_list|,",
        "file_path": "test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java",
        "input_line_num": "range(2931, 2936)"
      },
      {
        "commit_hash": "90660dd7eec395d3de1d06c6cd34f495a1a35244",
        "line_num": 3240,
        "line_str": "name|getType argument_list|() decl_stmt|; if|if condition|(",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4185, 4189)"
      },
      {
        "commit_hash": "90660dd7eec395d3de1d06c6cd34f495a1a35244",
        "line_num": 3046,
        "line_str": "argument_list|() condition|) block|{ case|case name|Token",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4092, 4102)"
      },
      {
        "commit_hash": "90660dd7eec395d3de1d06c6cd34f495a1a35244",
        "line_num": 3042,
        "line_str": "condition|( name|left operator|. name|getType argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4092, 4102)"
      },
      {
        "commit_hash": "90660dd7eec395d3de1d06c6cd34f495a1a35244",
        "line_num": 3298,
        "line_str": "name|getType argument_list|() expr_stmt|; break|break; case|case",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4229, 4242)"
      },
      {
        "commit_hash": "bb7e34ddf649dce040dd79a08be8e4c5859fad82",
        "line_num": 3422,
        "line_str": "name|getType argument_list|() expr_stmt|; break|break; case|case",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4263, 4265)"
      },
      {
        "commit_hash": "90660dd7eec395d3de1d06c6cd34f495a1a35244",
        "line_num": 3038,
        "line_str": "operator|) operator|) decl_stmt|; switch|switch condition|(",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4092, 4102)"
      },
      {
        "commit_hash": "90660dd7eec395d3de1d06c6cd34f495a1a35244",
        "line_num": 3294,
        "line_str": "argument_list|() operator|== name|right operator|. name|getType",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4229, 4242)"
      },
      {
        "commit_hash": "05199124fe66e89ccb1d1e94e1585efcbeebd5ee",
        "line_num": 2247,
        "line_str": "name|fold argument_list|( literal|\"x = true === true\" argument_list|, literal|\"x = true\"",
        "file_path": "test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java",
        "input_line_num": "range(3207, 3212)"
      },
      {
        "commit_hash": "90660dd7eec395d3de1d06c6cd34f495a1a35244",
        "line_num": 3290,
        "line_str": "operator|= name|left operator|. name|getType argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4229, 4242)"
      },
      {
        "commit_hash": "90660dd7eec395d3de1d06c6cd34f495a1a35244",
        "line_num": 3319,
        "line_str": "name|right operator|. name|getType argument_list|() expr_stmt|;",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4252, 4263)"
      },
      {
        "commit_hash": "bb7e34ddf649dce040dd79a08be8e4c5859fad82",
        "line_num": 3348,
        "line_str": "argument_list|() decl_stmt|; if|if condition|( name|rhType",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4189, 4191)"
      },
      {
        "commit_hash": "90660dd7eec395d3de1d06c6cd34f495a1a35244",
        "line_num": 3315,
        "line_str": "operator|. name|getType argument_list|() operator|!= name|right",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4252, 4263)"
      },
      {
        "commit_hash": "90660dd7eec395d3de1d06c6cd34f495a1a35244",
        "line_num": 3311,
        "line_str": "case|: name|result operator|= name|left operator|.",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4252, 4263)"
      },
      {
        "commit_hash": "bb7e34ddf649dce040dd79a08be8e4c5859fad82",
        "line_num": 3340,
        "line_str": "break|break; block|} name|int name|rhType init|=",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4179, 4185)"
      },
      {
        "commit_hash": "05199124fe66e89ccb1d1e94e1585efcbeebd5ee",
        "line_num": 1971,
        "line_str": "name|fold argument_list|( literal|\"x = true == true\" argument_list|, literal|\"x = true\"",
        "file_path": "test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java",
        "input_line_num": "range(2931, 2936)"
      },
      {
        "commit_hash": "90660dd7eec395d3de1d06c6cd34f495a1a35244",
        "line_num": 3237,
        "line_str": "init|= name|right operator|. name|getType argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4185, 4189)"
      },
      {
        "commit_hash": "90660dd7eec395d3de1d06c6cd34f495a1a35244",
        "line_num": 3043,
        "line_str": "name|left operator|. name|getType argument_list|() condition|)",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4092, 4102)"
      },
      {
        "commit_hash": "90660dd7eec395d3de1d06c6cd34f495a1a35244",
        "line_num": 3299,
        "line_str": "argument_list|() expr_stmt|; break|break; case|case name|Token",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4229, 4242)"
      },
      {
        "commit_hash": "bb7e34ddf649dce040dd79a08be8e4c5859fad82",
        "line_num": 3423,
        "line_str": "argument_list|() expr_stmt|; break|break; case|case name|Token",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4263, 4265)"
      },
      {
        "commit_hash": "90660dd7eec395d3de1d06c6cd34f495a1a35244",
        "line_num": 3039,
        "line_str": "operator|) decl_stmt|; switch|switch condition|( name|left",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4092, 4102)"
      },
      {
        "commit_hash": "90660dd7eec395d3de1d06c6cd34f495a1a35244",
        "line_num": 3295,
        "line_str": "operator|== name|right operator|. name|getType argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4229, 4242)"
      },
      {
        "commit_hash": "05199124fe66e89ccb1d1e94e1585efcbeebd5ee",
        "line_num": 2248,
        "line_str": "argument_list|( literal|\"x = true === true\" argument_list|, literal|\"x = true\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java",
        "input_line_num": "range(3207, 3212)"
      },
      {
        "commit_hash": "90660dd7eec395d3de1d06c6cd34f495a1a35244",
        "line_num": 3291,
        "line_str": "name|left operator|. name|getType argument_list|() operator|==",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4229, 4242)"
      },
      {
        "commit_hash": "90660dd7eec395d3de1d06c6cd34f495a1a35244",
        "line_num": 3320,
        "line_str": "operator|. name|getType argument_list|() expr_stmt|; break|break;",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4252, 4263)"
      },
      {
        "commit_hash": "90660dd7eec395d3de1d06c6cd34f495a1a35244",
        "line_num": 3287,
        "line_str": "name|EQ case|: name|result operator|= name|left",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4229, 4242)"
      },
      {
        "commit_hash": "9fd43405dea011e395d64ff832a01b5ac5cc99fa",
        "line_num": 3487,
        "line_str": "literal|\"true\" argument_list|, literal|\"false\" argument_list|, literal|\"0\"",
        "file_path": "test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java",
        "input_line_num": "range(4831, 4834)"
      },
      {
        "commit_hash": "bb7e34ddf649dce040dd79a08be8e4c5859fad82",
        "line_num": 3349,
        "line_str": "decl_stmt|; if|if condition|( name|rhType operator|!=",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4189, 4191)"
      },
      {
        "commit_hash": "90660dd7eec395d3de1d06c6cd34f495a1a35244",
        "line_num": 3316,
        "line_str": "name|getType argument_list|() operator|!= name|right operator|.",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4252, 4263)"
      },
      {
        "commit_hash": "90660dd7eec395d3de1d06c6cd34f495a1a35244",
        "line_num": 3312,
        "line_str": "name|result operator|= name|left operator|. name|getType",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4252, 4263)"
      },
      {
        "commit_hash": "bb7e34ddf649dce040dd79a08be8e4c5859fad82",
        "line_num": 3341,
        "line_str": "block|} name|int name|rhType init|= name|right",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4179, 4185)"
      },
      {
        "commit_hash": "05199124fe66e89ccb1d1e94e1585efcbeebd5ee",
        "line_num": 1972,
        "line_str": "argument_list|( literal|\"x = true == true\" argument_list|, literal|\"x = true\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java",
        "input_line_num": "range(2931, 2936)"
      },
      {
        "commit_hash": "90660dd7eec395d3de1d06c6cd34f495a1a35244",
        "line_num": 3238,
        "line_str": "name|right operator|. name|getType argument_list|() decl_stmt|;",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4185, 4189)"
      },
      {
        "commit_hash": "90660dd7eec395d3de1d06c6cd34f495a1a35244",
        "line_num": 3044,
        "line_str": "operator|. name|getType argument_list|() condition|) block|{",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4092, 4102)"
      },
      {
        "commit_hash": "90660dd7eec395d3de1d06c6cd34f495a1a35244",
        "line_num": 3040,
        "line_str": "decl_stmt|; switch|switch condition|( name|left operator|.",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4092, 4102)"
      },
      {
        "commit_hash": "90660dd7eec395d3de1d06c6cd34f495a1a35244",
        "line_num": 3296,
        "line_str": "name|right operator|. name|getType argument_list|() expr_stmt|;",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4229, 4242)"
      },
      {
        "commit_hash": "05199124fe66e89ccb1d1e94e1585efcbeebd5ee",
        "line_num": 2249,
        "line_str": "literal|\"x = true === true\" argument_list|, literal|\"x = true\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java",
        "input_line_num": "range(3207, 3212)"
      },
      {
        "commit_hash": "90660dd7eec395d3de1d06c6cd34f495a1a35244",
        "line_num": 3292,
        "line_str": "operator|. name|getType argument_list|() operator|== name|right",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4229, 4242)"
      },
      {
        "commit_hash": "05199124fe66e89ccb1d1e94e1585efcbeebd5ee",
        "line_num": 2245,
        "line_str": "argument_list|) expr_stmt|; name|fold argument_list|( literal|\"x = true === true\"",
        "file_path": "test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java",
        "input_line_num": "range(3207, 3212)"
      },
      {
        "commit_hash": "90660dd7eec395d3de1d06c6cd34f495a1a35244",
        "line_num": 3288,
        "line_str": "case|: name|result operator|= name|left operator|.",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4229, 4242)"
      },
      {
        "commit_hash": "9fd43405dea011e395d64ff832a01b5ac5cc99fa",
        "line_num": 3488,
        "line_str": "argument_list|, literal|\"false\" argument_list|, literal|\"0\" argument_list|,",
        "file_path": "test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java",
        "input_line_num": "range(4831, 4834)"
      },
      {
        "commit_hash": "90660dd7eec395d3de1d06c6cd34f495a1a35244",
        "line_num": 3317,
        "line_str": "argument_list|() operator|!= name|right operator|. name|getType",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4252, 4263)"
      },
      {
        "commit_hash": "90660dd7eec395d3de1d06c6cd34f495a1a35244",
        "line_num": 3313,
        "line_str": "operator|= name|left operator|. name|getType argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4252, 4263)"
      },
      {
        "commit_hash": "bb7e34ddf649dce040dd79a08be8e4c5859fad82",
        "line_num": 3342,
        "line_str": "name|int name|rhType init|= name|right operator|.",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4179, 4185)"
      },
      {
        "commit_hash": "05199124fe66e89ccb1d1e94e1585efcbeebd5ee",
        "line_num": 1973,
        "line_str": "literal|\"x = true == true\" argument_list|, literal|\"x = true\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java",
        "input_line_num": "range(2931, 2936)"
      },
      {
        "commit_hash": "bb7e34ddf649dce040dd79a08be8e4c5859fad82",
        "line_num": 3338,
        "line_str": "argument_list|) expr_stmt|; break|break; block|} name|int",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4179, 4185)"
      },
      {
        "commit_hash": "05199124fe66e89ccb1d1e94e1585efcbeebd5ee",
        "line_num": 1969,
        "line_str": "argument_list|) expr_stmt|; name|fold argument_list|( literal|\"x = true == true\"",
        "file_path": "test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java",
        "input_line_num": "range(2931, 2936)"
      },
      {
        "commit_hash": "90660dd7eec395d3de1d06c6cd34f495a1a35244",
        "line_num": 3239,
        "line_str": "operator|. name|getType argument_list|() decl_stmt|; if|if",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4185, 4189)"
      },
      {
        "commit_hash": "90660dd7eec395d3de1d06c6cd34f495a1a35244",
        "line_num": 3045,
        "line_str": "name|getType argument_list|() condition|) block|{ case|case",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4092, 4102)"
      },
      {
        "commit_hash": "90660dd7eec395d3de1d06c6cd34f495a1a35244",
        "line_num": 3041,
        "line_str": "switch|switch condition|( name|left operator|. name|getType",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4092, 4102)"
      },
      {
        "commit_hash": "90660dd7eec395d3de1d06c6cd34f495a1a35244",
        "line_num": 3297,
        "line_str": "operator|. name|getType argument_list|() expr_stmt|; break|break;",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4229, 4242)"
      },
      {
        "commit_hash": "90660dd7eec395d3de1d06c6cd34f495a1a35244",
        "line_num": 3037,
        "line_str": "argument_list|) operator|) operator|) decl_stmt|; switch|switch",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4092, 4102)"
      },
      {
        "commit_hash": "90660dd7eec395d3de1d06c6cd34f495a1a35244",
        "line_num": 3293,
        "line_str": "name|getType argument_list|() operator|== name|right operator|.",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4229, 4242)"
      },
      {
        "commit_hash": "05199124fe66e89ccb1d1e94e1585efcbeebd5ee",
        "line_num": 2246,
        "line_str": "expr_stmt|; name|fold argument_list|( literal|\"x = true === true\" argument_list|,",
        "file_path": "test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java",
        "input_line_num": "range(3207, 3212)"
      },
      {
        "commit_hash": "90660dd7eec395d3de1d06c6cd34f495a1a35244",
        "line_num": 3289,
        "line_str": "name|result operator|= name|left operator|. name|getType",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4229, 4242)"
      },
      {
        "commit_hash": "9fd43405dea011e395d64ff832a01b5ac5cc99fa",
        "line_num": 3489,
        "line_str": "literal|\"false\" argument_list|, literal|\"0\" argument_list|, literal|\"1\"",
        "file_path": "test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java",
        "input_line_num": "range(4831, 4834)"
      },
      {
        "commit_hash": "90660dd7eec395d3de1d06c6cd34f495a1a35244",
        "line_num": 3318,
        "line_str": "operator|!= name|right operator|. name|getType argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4252, 4263)"
      },
      {
        "commit_hash": "90660dd7eec395d3de1d06c6cd34f495a1a35244",
        "line_num": 3314,
        "line_str": "name|left operator|. name|getType argument_list|() operator|!=",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4252, 4263)"
      },
      {
        "commit_hash": "bb7e34ddf649dce040dd79a08be8e4c5859fad82",
        "line_num": 3343,
        "line_str": "name|rhType init|= name|right operator|. name|getType",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4179, 4185)"
      },
      {
        "commit_hash": "90660dd7eec395d3de1d06c6cd34f495a1a35244",
        "line_num": 3310,
        "line_str": "name|NE case|: name|result operator|= name|left",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4252, 4263)"
      },
      {
        "commit_hash": "bb7e34ddf649dce040dd79a08be8e4c5859fad82",
        "line_num": 3339,
        "line_str": "expr_stmt|; break|break; block|} name|int name|rhType",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4179, 4185)"
      }
    ]
  },
  {
    "id": 10029,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["e44b2a44cee3ea7213bc734d3023802d4838883b"],
    "fix_commit_hash": "900554155b9019e818ca0c0ce90a261458a6062f",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "9c7350e51f8349d3bc430013dfc2c97e5a56dc2b",
        "line_num": 1537,
        "line_str": "block|} block|} comment for|for control|(",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1535, 1539)"
      },
      {
        "commit_hash": "e44b2a44cee3ea7213bc734d3023802d4838883b",
        "line_num": 1025,
        "line_str": "name|sibling argument_list|, name|variable argument_list|) decl_stmt|;",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1365, 1370)"
      },
      {
        "commit_hash": "e44b2a44cee3ea7213bc734d3023802d4838883b",
        "line_num": 1054,
        "line_str": "literal|false return|; block|} block|} block|}",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1393, 1398)"
      },
      {
        "commit_hash": "e44b2a44cee3ea7213bc734d3023802d4838883b",
        "line_num": 1017,
        "line_str": "argument_list|) condition|) block|{ name|VariableLiveness name|state",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1345, 1359)"
      },
      {
        "commit_hash": "e44b2a44cee3ea7213bc734d3023802d4838883b",
        "line_num": 984,
        "line_str": "name|exprRoot condition|) block|{ for|for control|(",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1323, 1327)"
      },
      {
        "commit_hash": "e44b2a44cee3ea7213bc734d3023802d4838883b",
        "line_num": 1174,
        "line_str": "operator|. name|isEnteringNewCfgNode argument_list|( name|child argument_list|)",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1558, 1569)"
      },
      {
        "commit_hash": "e44b2a44cee3ea7213bc734d3023802d4838883b",
        "line_num": 1013,
        "line_str": "operator|. name|isEnteringNewCfgNode argument_list|( name|sibling argument_list|)",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1345, 1359)"
      },
      {
        "commit_hash": "e44b2a44cee3ea7213bc734d3023802d4838883b",
        "line_num": 1170,
        "line_str": "if|if condition|( operator|! name|ControlFlowGraph operator|.",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1558, 1569)"
      },
      {
        "commit_hash": "e44b2a44cee3ea7213bc734d3023802d4838883b",
        "line_num": 1009,
        "line_str": "if|if condition|( operator|! name|ControlFlowGraph operator|.",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1345, 1359)"
      },
      {
        "commit_hash": "9c7350e51f8349d3bc430013dfc2c97e5a56dc2b",
        "line_num": 1360,
        "line_str": "name|VariableLiveness name|state init|= name|isVariableReadBeforeKill argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1359, 1363)"
      },
      {
        "commit_hash": "e44b2a44cee3ea7213bc734d3023802d4838883b",
        "line_num": 1166,
        "line_str": "name|getNext argument_list|() control|) block|{ if|if",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1558, 1569)"
      },
      {
        "commit_hash": "e44b2a44cee3ea7213bc734d3023802d4838883b",
        "line_num": 1005,
        "line_str": "name|getNext argument_list|() control|) block|{ if|if",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1345, 1359)"
      },
      {
        "commit_hash": "9c7350e51f8349d3bc430013dfc2c97e5a56dc2b",
        "line_num": 1397,
        "line_str": "block|} specifier|public name|void name|testInExpression parameter_list|()",
        "file_path": "test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java",
        "input_line_num": "range(1396, 1401)"
      },
      {
        "commit_hash": "e44b2a44cee3ea7213bc734d3023802d4838883b",
        "line_num": 1096,
        "line_str": "parameter_list|) block|{ if|if condition|( name|NodeUtil",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1436, 1438)"
      },
      {
        "commit_hash": "9c7350e51f8349d3bc430013dfc2c97e5a56dc2b",
        "line_num": 1571,
        "line_str": "condition|) block|{ comment name|VariableLiveness name|state",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1569, 1574)"
      },
      {
        "commit_hash": "e44b2a44cee3ea7213bc734d3023802d4838883b",
        "line_num": 1026,
        "line_str": "argument_list|, name|variable argument_list|) decl_stmt|; comment",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1365, 1370)"
      },
      {
        "commit_hash": "9c7350e51f8349d3bc430013dfc2c97e5a56dc2b",
        "line_num": 1538,
        "line_str": "block|} comment for|for control|( name|Node",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1535, 1539)"
      },
      {
        "commit_hash": "e44b2a44cee3ea7213bc734d3023802d4838883b",
        "line_num": 1055,
        "line_str": "return|; block|} block|} block|} name|n",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1393, 1398)"
      },
      {
        "commit_hash": "e44b2a44cee3ea7213bc734d3023802d4838883b",
        "line_num": 1018,
        "line_str": "condition|) block|{ name|VariableLiveness name|state init|=",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1345, 1359)"
      },
      {
        "commit_hash": "e44b2a44cee3ea7213bc734d3023802d4838883b",
        "line_num": 985,
        "line_str": "condition|) block|{ for|for control|( name|Node",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1323, 1327)"
      },
      {
        "commit_hash": "e44b2a44cee3ea7213bc734d3023802d4838883b",
        "line_num": 1175,
        "line_str": "name|isEnteringNewCfgNode argument_list|( name|child argument_list|) condition|)",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1558, 1569)"
      },
      {
        "commit_hash": "e44b2a44cee3ea7213bc734d3023802d4838883b",
        "line_num": 1014,
        "line_str": "name|isEnteringNewCfgNode argument_list|( name|sibling argument_list|) condition|)",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1345, 1359)"
      },
      {
        "commit_hash": "e44b2a44cee3ea7213bc734d3023802d4838883b",
        "line_num": 1171,
        "line_str": "condition|( operator|! name|ControlFlowGraph operator|. name|isEnteringNewCfgNode",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1558, 1569)"
      },
      {
        "commit_hash": "e44b2a44cee3ea7213bc734d3023802d4838883b",
        "line_num": 1010,
        "line_str": "condition|( operator|! name|ControlFlowGraph operator|. name|isEnteringNewCfgNode",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1345, 1359)"
      },
      {
        "commit_hash": "9c7350e51f8349d3bc430013dfc2c97e5a56dc2b",
        "line_num": 1361,
        "line_str": "name|state init|= name|isVariableReadBeforeKill argument_list|( name|sibling",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1359, 1363)"
      },
      {
        "commit_hash": "e44b2a44cee3ea7213bc734d3023802d4838883b",
        "line_num": 1167,
        "line_str": "argument_list|() control|) block|{ if|if condition|(",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1558, 1569)"
      },
      {
        "commit_hash": "e44b2a44cee3ea7213bc734d3023802d4838883b",
        "line_num": 1006,
        "line_str": "argument_list|() control|) block|{ if|if condition|(",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1345, 1359)"
      },
      {
        "commit_hash": "9c7350e51f8349d3bc430013dfc2c97e5a56dc2b",
        "line_num": 1435,
        "line_str": "literal|\"var a; return f(f(f(a)));\" argument_list|) expr_stmt|; block|} block|}",
        "file_path": "test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java",
        "input_line_num": "range(1435, 1436)"
      },
      {
        "commit_hash": "9c7350e51f8349d3bc430013dfc2c97e5a56dc2b",
        "line_num": 1398,
        "line_str": "specifier|public name|void name|testInExpression parameter_list|() block|{",
        "file_path": "test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java",
        "input_line_num": "range(1396, 1401)"
      },
      {
        "commit_hash": "e44b2a44cee3ea7213bc734d3023802d4838883b",
        "line_num": 1097,
        "line_str": "block|{ if|if condition|( name|NodeUtil operator|.",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1436, 1438)"
      },
      {
        "commit_hash": "9c7350e51f8349d3bc430013dfc2c97e5a56dc2b",
        "line_num": 1572,
        "line_str": "block|{ comment name|VariableLiveness name|state init|=",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1569, 1574)"
      },
      {
        "commit_hash": "e44b2a44cee3ea7213bc734d3023802d4838883b",
        "line_num": 1027,
        "line_str": "name|variable argument_list|) decl_stmt|; comment if|if",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1365, 1370)"
      },
      {
        "commit_hash": "e44b2a44cee3ea7213bc734d3023802d4838883b",
        "line_num": 1056,
        "line_str": "block|} block|} block|} name|n operator|=",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1393, 1398)"
      },
      {
        "commit_hash": "9c7350e51f8349d3bc430013dfc2c97e5a56dc2b",
        "line_num": 1535,
        "line_str": "name|READ return|; block|} block|} comment",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1535, 1539)"
      },
      {
        "commit_hash": "e44b2a44cee3ea7213bc734d3023802d4838883b",
        "line_num": 986,
        "line_str": "block|{ for|for control|( name|Node name|sibling",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1323, 1327)"
      },
      {
        "commit_hash": "e44b2a44cee3ea7213bc734d3023802d4838883b",
        "line_num": 1209,
        "line_str": "name|MAYBE_LIVE return|; block|} block|} end_class",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1602, 1604)"
      },
      {
        "commit_hash": "e44b2a44cee3ea7213bc734d3023802d4838883b",
        "line_num": 1176,
        "line_str": "argument_list|( name|child argument_list|) condition|) block|{",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1558, 1569)"
      },
      {
        "commit_hash": "e44b2a44cee3ea7213bc734d3023802d4838883b",
        "line_num": 1015,
        "line_str": "argument_list|( name|sibling argument_list|) condition|) block|{",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1345, 1359)"
      },
      {
        "commit_hash": "e44b2a44cee3ea7213bc734d3023802d4838883b",
        "line_num": 1172,
        "line_str": "operator|! name|ControlFlowGraph operator|. name|isEnteringNewCfgNode argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1558, 1569)"
      },
      {
        "commit_hash": "e44b2a44cee3ea7213bc734d3023802d4838883b",
        "line_num": 1011,
        "line_str": "operator|! name|ControlFlowGraph operator|. name|isEnteringNewCfgNode argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1345, 1359)"
      },
      {
        "commit_hash": "9c7350e51f8349d3bc430013dfc2c97e5a56dc2b",
        "line_num": 1362,
        "line_str": "init|= name|isVariableReadBeforeKill argument_list|( name|sibling argument_list|,",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1359, 1363)"
      },
      {
        "commit_hash": "e44b2a44cee3ea7213bc734d3023802d4838883b",
        "line_num": 1168,
        "line_str": "control|) block|{ if|if condition|( operator|!",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1558, 1569)"
      },
      {
        "commit_hash": "e44b2a44cee3ea7213bc734d3023802d4838883b",
        "line_num": 1007,
        "line_str": "control|) block|{ if|if condition|( operator|!",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1345, 1359)"
      },
      {
        "commit_hash": "9c7350e51f8349d3bc430013dfc2c97e5a56dc2b",
        "line_num": 1399,
        "line_str": "name|void name|testInExpression parameter_list|() block|{ name|inFunction",
        "file_path": "test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java",
        "input_line_num": "range(1396, 1401)"
      },
      {
        "commit_hash": "9c7350e51f8349d3bc430013dfc2c97e5a56dc2b",
        "line_num": 1573,
        "line_str": "comment name|VariableLiveness name|state init|= name|isVariableReadBeforeKill",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1569, 1574)"
      },
      {
        "commit_hash": "e44b2a44cee3ea7213bc734d3023802d4838883b",
        "line_num": 1028,
        "line_str": "argument_list|) decl_stmt|; comment if|if condition|(",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1365, 1370)"
      },
      {
        "commit_hash": "9c7350e51f8349d3bc430013dfc2c97e5a56dc2b",
        "line_num": 1569,
        "line_str": "name|child argument_list|) condition|) block|{ comment",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1569, 1574)"
      },
      {
        "commit_hash": "9c7350e51f8349d3bc430013dfc2c97e5a56dc2b",
        "line_num": 1536,
        "line_str": "return|; block|} block|} comment for|for",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1535, 1539)"
      },
      {
        "commit_hash": "e44b2a44cee3ea7213bc734d3023802d4838883b",
        "line_num": 1057,
        "line_str": "block|} block|} name|n operator|= name|n",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1393, 1398)"
      },
      {
        "commit_hash": "e44b2a44cee3ea7213bc734d3023802d4838883b",
        "line_num": 1053,
        "line_str": "return|return literal|false return|; block|} block|}",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1393, 1398)"
      },
      {
        "commit_hash": "e44b2a44cee3ea7213bc734d3023802d4838883b",
        "line_num": 1210,
        "line_str": "return|; block|} block|} end_class",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1602, 1604)"
      },
      {
        "commit_hash": "e44b2a44cee3ea7213bc734d3023802d4838883b",
        "line_num": 1016,
        "line_str": "name|sibling argument_list|) condition|) block|{ name|VariableLiveness",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1345, 1359)"
      },
      {
        "commit_hash": "e44b2a44cee3ea7213bc734d3023802d4838883b",
        "line_num": 983,
        "line_str": "operator|!= name|exprRoot condition|) block|{ for|for",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1323, 1327)"
      },
      {
        "commit_hash": "e44b2a44cee3ea7213bc734d3023802d4838883b",
        "line_num": 1173,
        "line_str": "name|ControlFlowGraph operator|. name|isEnteringNewCfgNode argument_list|( name|child",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1558, 1569)"
      },
      {
        "commit_hash": "e44b2a44cee3ea7213bc734d3023802d4838883b",
        "line_num": 1012,
        "line_str": "name|ControlFlowGraph operator|. name|isEnteringNewCfgNode argument_list|( name|sibling",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1345, 1359)"
      },
      {
        "commit_hash": "e44b2a44cee3ea7213bc734d3023802d4838883b",
        "line_num": 1169,
        "line_str": "block|{ if|if condition|( operator|! name|ControlFlowGraph",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1558, 1569)"
      },
      {
        "commit_hash": "e44b2a44cee3ea7213bc734d3023802d4838883b",
        "line_num": 1008,
        "line_str": "block|{ if|if condition|( operator|! name|ControlFlowGraph",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1345, 1359)"
      },
      {
        "commit_hash": "9c7350e51f8349d3bc430013dfc2c97e5a56dc2b",
        "line_num": 1359,
        "line_str": "block|{ name|VariableLiveness name|state init|= name|isVariableReadBeforeKill",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1359, 1363)"
      },
      {
        "commit_hash": "9c7350e51f8349d3bc430013dfc2c97e5a56dc2b",
        "line_num": 1400,
        "line_str": "name|testInExpression parameter_list|() block|{ name|inFunction argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java",
        "input_line_num": "range(1396, 1401)"
      },
      {
        "commit_hash": "9c7350e51f8349d3bc430013dfc2c97e5a56dc2b",
        "line_num": 1396,
        "line_str": "expr_stmt|; block|} specifier|public name|void name|testInExpression",
        "file_path": "test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java",
        "input_line_num": "range(1396, 1401)"
      },
      {
        "commit_hash": "e44b2a44cee3ea7213bc734d3023802d4838883b",
        "line_num": 1029,
        "line_str": "decl_stmt|; comment if|if condition|( name|state",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1365, 1370)"
      },
      {
        "commit_hash": "9c7350e51f8349d3bc430013dfc2c97e5a56dc2b",
        "line_num": 1570,
        "line_str": "argument_list|) condition|) block|{ comment name|VariableLiveness",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1569, 1574)"
      }
    ]
  },
  {
    "id": 10030,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["116029987341daba955a51ecde15e4bfb0aab268"],
    "fix_commit_hash": "3ffb1227a3b5c4ecc7acdc820e7233747a0d4e3f",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "84cecdf5017891ab755499bd341ba47949c4f0c0",
        "line_num": 726,
        "line_str": "block|} block|} specifier|private name|void name|applyCollapses",
        "file_path": "src/com/google/javascript/jscomp/CollapseVariableDeclarations.java",
        "input_file_path": "src/com/google/javascript/jscomp/CollapseVariableDeclarations.java",
        "input_line_num": "range(706, 708)"
      },
      {
        "commit_hash": "84cecdf5017891ab755499bd341ba47949c4f0c0",
        "line_num": 725,
        "line_str": "return|; block|} block|} specifier|private name|void",
        "file_path": "src/com/google/javascript/jscomp/CollapseVariableDeclarations.java",
        "input_file_path": "src/com/google/javascript/jscomp/CollapseVariableDeclarations.java",
        "input_line_num": "range(706, 708)"
      },
      {
        "commit_hash": "84cecdf5017891ab755499bd341ba47949c4f0c0",
        "line_num": 716,
        "line_str": "name|s operator|&& operator|! name|blacklistedVars operator|.",
        "file_path": "src/com/google/javascript/jscomp/CollapseVariableDeclarations.java",
        "input_file_path": "src/com/google/javascript/jscomp/CollapseVariableDeclarations.java",
        "input_line_num": "range(696, 698)"
      },
      {
        "commit_hash": "84cecdf5017891ab755499bd341ba47949c4f0c0",
        "line_num": 715,
        "line_str": "operator|== name|s operator|&& operator|! name|blacklistedVars",
        "file_path": "src/com/google/javascript/jscomp/CollapseVariableDeclarations.java",
        "input_file_path": "src/com/google/javascript/jscomp/CollapseVariableDeclarations.java",
        "input_line_num": "range(696, 698)"
      }
    ]
  },
  {
    "id": 10031,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["98f4189d7e3fea4d8ce9c696c7906e403b17f451"],
    "fix_commit_hash": "3d0c0fbdffc5ce40d35e9e14bafd50fe1625c634",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "dcb2bdd2b0775b98cab1207366631cf3f6ad008d",
        "line_num": 6110,
        "line_str": "literal|\"o.valueOf()\" argument_list|) argument_list|) expr_stmt|; block|}",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(6812, 6813)"
      },
      {
        "commit_hash": "98f4189d7e3fea4d8ce9c696c7906e403b17f451",
        "line_num": 4164,
        "line_str": "name|NOT case|: return|return literal|true return|;",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(5082, 5085)"
      },
      {
        "commit_hash": "98f4189d7e3fea4d8ce9c696c7906e403b17f451",
        "line_num": 4163,
        "line_str": "operator|. name|NOT case|: return|return literal|true",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(5082, 5085)"
      },
      {
        "commit_hash": "98f4189d7e3fea4d8ce9c696c7906e403b17f451",
        "line_num": 4162,
        "line_str": "name|Token operator|. name|NOT case|: return|return",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(5082, 5085)"
      },
      {
        "commit_hash": "56d1a62401e971b86e5c9a05ef535b5bc948ac86",
        "line_num": 8831,
        "line_str": "return|; case|case name|Token operator|. name|IN",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(11527, 11528)"
      }
    ]
  },
  {
    "id": 10032,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["01d444172fce6345a085f132892b3c6f897714d6"],
    "fix_commit_hash": "9f1f09f3509c673f6573cb2477a3db20205a98f3",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "dfb23d7c781229feea250d789fc2ee51a5325ce3",
        "line_num": 369,
        "line_str": "argument_list|() operator||| name|isNoResolvedType argument_list|() return|;",
        "file_path": "src/com/google/javascript/rhino/jstype/JSType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/JSType.java",
        "input_line_num": "range(369, 372)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 321,
        "line_str": "argument_list|() return|; block|} specifier|public name|boolean",
        "file_path": "src/com/google/javascript/rhino/jstype/JSType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/JSType.java",
        "input_line_num": "range(372, 373)"
      },
      {
        "commit_hash": "dfb23d7c781229feea250d789fc2ee51a5325ce3",
        "line_num": 370,
        "line_str": "operator||| name|isNoResolvedType argument_list|() return|; block|}",
        "file_path": "src/com/google/javascript/rhino/jstype/JSType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/JSType.java",
        "input_line_num": "range(369, 372)"
      },
      {
        "commit_hash": "dfb23d7c781229feea250d789fc2ee51a5325ce3",
        "line_num": 371,
        "line_str": "name|isNoResolvedType argument_list|() return|; block|} specifier|public",
        "file_path": "src/com/google/javascript/rhino/jstype/JSType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/JSType.java",
        "input_line_num": "range(369, 372)"
      },
      {
        "commit_hash": "bae0a84914d1b64afbff24c1bebf8dade6836bad",
        "line_num": 12250,
        "line_str": "literal|\"required: number\" argument_list|) expr_stmt|; block|} comment",
        "file_path": "test/com/google/javascript/jscomp/TypeCheckTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/TypeCheckTest.java",
        "input_line_num": "range(12985, 12986)"
      }
    ]
  },
  {
    "id": 10033,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["5d8073d856b0797c4952c4220cce711623f17902"],
    "fix_commit_hash": "4ea8ddca7a6d9caacc60172b8ef86ab2ce856573",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 784,
        "line_str": "operator|. name|computeFollowNode argument_list|( name|n argument_list|)",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 707)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 751,
        "line_str": "name|Token operator|. name|BLOCK case|: if|if",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 707)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 718,
        "line_str": "argument_list|() operator|== literal|1 condition|) block|{",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 685,
        "line_str": "comment comment if|if condition|( name|n",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 768,
        "line_str": "name|getFirstChild argument_list|() decl_stmt|; return|return name|tryRemoveUnconditionalBranching",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 707)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 735,
        "line_str": "operator|. name|getValue argument_list|() argument_list|) return|;",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 702,
        "line_str": "argument_list|, name|Branch argument_list|> argument_list|> name|outEdges",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 785,
        "line_str": "name|computeFollowNode argument_list|( name|n argument_list|) argument_list|)",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 707)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 752,
        "line_str": "operator|. name|BLOCK case|: if|if condition|(",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 707)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 719,
        "line_str": "operator|== literal|1 condition|) block|{ return|return",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 686,
        "line_str": "comment if|if condition|( name|n operator|.",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 769,
        "line_str": "argument_list|() decl_stmt|; return|return name|tryRemoveUnconditionalBranching argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 707)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 736,
        "line_str": "name|getValue argument_list|() argument_list|) return|; block|}",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 703,
        "line_str": "name|Branch argument_list|> argument_list|> name|outEdges init|=",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 786,
        "line_str": "argument_list|( name|n argument_list|) argument_list|) return|;",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 707)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 753,
        "line_str": "name|BLOCK case|: if|if condition|( name|n",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 707)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 720,
        "line_str": "literal|1 condition|) block|{ return|return name|tryRemoveUnconditionalBranching",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 687,
        "line_str": "if|if condition|( name|n operator|. name|getParent",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 935,
        "line_str": "name|n return|; block|} specifier|private name|void",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(850, 851)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 770,
        "line_str": "decl_stmt|; return|return name|tryRemoveUnconditionalBranching argument_list|( name|first",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 707)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 737,
        "line_str": "argument_list|() argument_list|) return|; block|} block|}",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 704,
        "line_str": "argument_list|> argument_list|> name|outEdges init|= name|gNode",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 886,
        "line_str": "expr_stmt|; name|Node name|fallThrough init|= name|tryRemoveUnconditionalBranching",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(801, 807)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 787,
        "line_str": "name|n argument_list|) argument_list|) return|; block|}",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 707)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 754,
        "line_str": "case|: if|if condition|( name|n operator|.",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 707)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 721,
        "line_str": "condition|) block|{ return|return name|tryRemoveUnconditionalBranching argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 688,
        "line_str": "condition|( name|n operator|. name|getParent argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 705,
        "line_str": "name|test argument_list|( literal|\"switch (a) { case 'a': break; case 'b': break; case 'c': break }\" argument_list|, literal|\"switch (a) { case 'a': case 'b': case 'c': }\"",
        "file_path": "test/com/google/javascript/jscomp/UnreachableCodeEliminationTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/UnreachableCodeEliminationTest.java",
        "input_line_num": "range(703, 706)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 771,
        "line_str": "return|return name|tryRemoveUnconditionalBranching argument_list|( name|first argument_list|)",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 707)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 738,
        "line_str": "argument_list|) return|; block|} block|} switch|switch",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 705,
        "line_str": "argument_list|> name|outEdges init|= name|gNode operator|.",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 887,
        "line_str": "name|Node name|fallThrough init|= name|tryRemoveUnconditionalBranching argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(801, 807)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 788,
        "line_str": "argument_list|) argument_list|) return|; block|} case|case",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 707)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 755,
        "line_str": "if|if condition|( name|n operator|. name|hasChildren",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 707)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 722,
        "line_str": "block|{ return|return name|tryRemoveUnconditionalBranching argument_list|( name|outEdges",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 689,
        "line_str": "name|n operator|. name|getParent argument_list|() operator|==",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 706,
        "line_str": "argument_list|( literal|\"switch (a) { case 'a': break; case 'b': break; case 'c': break }\" argument_list|, literal|\"switch (a) { case 'a': case 'b': case 'c': }\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/UnreachableCodeEliminationTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/UnreachableCodeEliminationTest.java",
        "input_line_num": "range(703, 706)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 772,
        "line_str": "name|tryRemoveUnconditionalBranching argument_list|( name|first argument_list|) return|;",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 707)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 739,
        "line_str": "return|; block|} block|} switch|switch condition|(",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 706,
        "line_str": "name|outEdges init|= name|gNode operator|. name|getOutEdges",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 888,
        "line_str": "name|fallThrough init|= name|tryRemoveUnconditionalBranching argument_list|( name|ControlFlowAnalysis",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(801, 807)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 789,
        "line_str": "argument_list|) return|; block|} case|case name|Token",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 707)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 756,
        "line_str": "condition|( name|n operator|. name|hasChildren argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 707)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 723,
        "line_str": "return|return name|tryRemoveUnconditionalBranching argument_list|( name|outEdges operator|.",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 690,
        "line_str": "operator|. name|getParent argument_list|() operator|== literal|null",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 707,
        "line_str": "literal|\"switch (a) { case 'a': break; case 'b': break; case 'c': break }\" argument_list|, literal|\"switch (a) { case 'a': case 'b': case 'c': }\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/UnreachableCodeEliminationTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/UnreachableCodeEliminationTest.java",
        "input_line_num": "range(703, 706)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 773,
        "line_str": "argument_list|( name|first argument_list|) return|; block|}",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 707)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 740,
        "line_str": "block|} block|} switch|switch condition|( name|n",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 707,
        "line_str": "init|= name|gNode operator|. name|getOutEdges argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 889,
        "line_str": "init|= name|tryRemoveUnconditionalBranching argument_list|( name|ControlFlowAnalysis operator|.",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(801, 807)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 790,
        "line_str": "return|; block|} case|case name|Token operator|.",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 707)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 757,
        "line_str": "name|n operator|. name|hasChildren argument_list|() condition|)",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 707)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 724,
        "line_str": "name|tryRemoveUnconditionalBranching argument_list|( name|outEdges operator|. name|get",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 691,
        "line_str": "name|getParent argument_list|() operator|== literal|null condition|)",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 774,
        "line_str": "name|first argument_list|) return|; block|} else|else",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 707)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 708,
        "line_str": "name|gNode operator|. name|getOutEdges argument_list|() decl_stmt|;",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 725,
        "line_str": "literal|\"switch (a) { case 'a':return 2; case 'b':return 1}}\" argument_list|) expr_stmt|; block|} block|}",
        "file_path": "test/com/google/javascript/jscomp/UnreachableCodeEliminationTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/UnreachableCodeEliminationTest.java",
        "input_line_num": "range(723, 724)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 890,
        "line_str": "name|tryRemoveUnconditionalBranching argument_list|( name|ControlFlowAnalysis operator|. name|computeFollowNode",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(801, 807)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 791,
        "line_str": "block|} case|case name|Token operator|. name|RETURN",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 707)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 758,
        "line_str": "operator|. name|hasChildren argument_list|() condition|) block|{",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 707)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 725,
        "line_str": "argument_list|( name|outEdges operator|. name|get argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 692,
        "line_str": "argument_list|() operator|== literal|null condition|) block|{",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 775,
        "line_str": "argument_list|) return|; block|} else|else block|{",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 707)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 709,
        "line_str": "operator|. name|getOutEdges argument_list|() decl_stmt|; if|if",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 891,
        "line_str": "argument_list|( name|ControlFlowAnalysis operator|. name|computeFollowNode argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(801, 807)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 759,
        "line_str": "name|hasChildren argument_list|() condition|) block|{ name|Node",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 707)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 726,
        "line_str": "name|outEdges operator|. name|get argument_list|( literal|0",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 693,
        "line_str": "operator|== literal|null condition|) block|{ name|List",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 776,
        "line_str": "return|; block|} else|else block|{ return|return",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 707)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 710,
        "line_str": "name|getOutEdges argument_list|() decl_stmt|; if|if condition|(",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 760,
        "line_str": "argument_list|() condition|) block|{ name|Node name|first",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 707)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 727,
        "line_str": "operator|. name|get argument_list|( literal|0 argument_list|)",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 694,
        "line_str": "literal|null condition|) block|{ name|List argument_list|<",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 777,
        "line_str": "block|} else|else block|{ return|return name|tryRemoveUnconditionalBranching",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 707)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 711,
        "line_str": "argument_list|() decl_stmt|; if|if condition|( name|outEdges",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 761,
        "line_str": "condition|) block|{ name|Node name|first init|=",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 707)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 728,
        "line_str": "name|get argument_list|( literal|0 argument_list|) operator|.",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 695,
        "line_str": "condition|) block|{ name|List argument_list|< name|DiGraphEdge",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 778,
        "line_str": "else|else block|{ return|return name|tryRemoveUnconditionalBranching argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 707)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 712,
        "line_str": "decl_stmt|; if|if condition|( name|outEdges operator|.",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 679,
        "line_str": "return|return name|n return|; block|} comment",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 894,
        "line_str": "name|computeFollowNode argument_list|( name|n argument_list|) argument_list|)",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(809, 813)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 762,
        "line_str": "block|{ name|Node name|first init|= name|n",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 707)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 729,
        "line_str": "argument_list|( literal|0 argument_list|) operator|. name|getDestination",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 696,
        "line_str": "block|{ name|List argument_list|< name|DiGraphEdge argument_list|<",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 779,
        "line_str": "block|{ return|return name|tryRemoveUnconditionalBranching argument_list|( name|ControlFlowAnalysis",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 707)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 713,
        "line_str": "if|if condition|( name|outEdges operator|. name|size",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 680,
        "line_str": "name|n return|; block|} comment comment",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 895,
        "line_str": "argument_list|( name|n argument_list|) argument_list|) decl_stmt|;",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(809, 813)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 763,
        "line_str": "name|Node name|first init|= name|n operator|.",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 707)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 730,
        "line_str": "literal|0 argument_list|) operator|. name|getDestination argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 697,
        "line_str": "name|List argument_list|< name|DiGraphEdge argument_list|< name|Node",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 714,
        "line_str": "literal|\"function foo() {\" operator|+ literal|\"  switch (a) { case 'a':return; case 'b':return; case 'c':return }}\" argument_list|, literal|\"function foo() { switch (a) { case 'a': case 'b': case 'c': }}\"",
        "file_path": "test/com/google/javascript/jscomp/UnreachableCodeEliminationTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/UnreachableCodeEliminationTest.java",
        "input_line_num": "range(712, 715)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 780,
        "line_str": "return|return name|tryRemoveUnconditionalBranching argument_list|( name|ControlFlowAnalysis operator|.",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 707)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 714,
        "line_str": "condition|( name|outEdges operator|. name|size argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 681,
        "line_str": "return|; block|} comment comment comment",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 896,
        "line_str": "name|n argument_list|) argument_list|) decl_stmt|; name|Node",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(809, 813)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 764,
        "line_str": "name|first init|= name|n operator|. name|getFirstChild",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 707)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 731,
        "line_str": "argument_list|) operator|. name|getDestination argument_list|() operator|.",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 698,
        "line_str": "argument_list|< name|DiGraphEdge argument_list|< name|Node argument_list|,",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 715,
        "line_str": "operator|+ literal|\"  switch (a) { case 'a':return; case 'b':return; case 'c':return }}\" argument_list|, literal|\"function foo() { switch (a) { case 'a': case 'b': case 'c': }}\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/UnreachableCodeEliminationTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/UnreachableCodeEliminationTest.java",
        "input_line_num": "range(712, 715)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 781,
        "line_str": "name|tryRemoveUnconditionalBranching argument_list|( name|ControlFlowAnalysis operator|. name|computeFollowNode",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 707)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 715,
        "line_str": "name|outEdges operator|. name|size argument_list|() operator|==",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 682,
        "line_str": "block|} comment comment comment comment",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 897,
        "line_str": "argument_list|) argument_list|) decl_stmt|; name|Node name|nextCfgNode",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(809, 813)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 765,
        "line_str": "init|= name|n operator|. name|getFirstChild argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 707)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 732,
        "line_str": "operator|. name|getDestination argument_list|() operator|. name|getValue",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 699,
        "line_str": "name|DiGraphEdge argument_list|< name|Node argument_list|, name|Branch",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 716,
        "line_str": "literal|\"  switch (a) { case 'a':return; case 'b':return; case 'c':return }}\" argument_list|, literal|\"function foo() { switch (a) { case 'a': case 'b': case 'c': }}\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/UnreachableCodeEliminationTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/UnreachableCodeEliminationTest.java",
        "input_line_num": "range(712, 715)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 782,
        "line_str": "argument_list|( name|ControlFlowAnalysis operator|. name|computeFollowNode argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 707)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 749,
        "line_str": "block|{ case|case name|Token operator|. name|BLOCK",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 707)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 716,
        "line_str": "operator|. name|size argument_list|() operator|== literal|1",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 683,
        "line_str": "comment comment comment comment if|if",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 766,
        "line_str": "name|n operator|. name|getFirstChild argument_list|() decl_stmt|;",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 707)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 733,
        "line_str": "name|getDestination argument_list|() operator|. name|getValue argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 700,
        "line_str": "argument_list|< name|Node argument_list|, name|Branch argument_list|>",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 783,
        "line_str": "name|ControlFlowAnalysis operator|. name|computeFollowNode argument_list|( name|n",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 707)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 750,
        "line_str": "case|case name|Token operator|. name|BLOCK case|:",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 707)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 717,
        "line_str": "name|size argument_list|() operator|== literal|1 condition|)",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 684,
        "line_str": "comment comment comment if|if condition|(",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 767,
        "line_str": "operator|. name|getFirstChild argument_list|() decl_stmt|; return|return",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 707)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 734,
        "line_str": "argument_list|() operator|. name|getValue argument_list|() argument_list|)",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      },
      {
        "commit_hash": "5d8073d856b0797c4952c4220cce711623f17902",
        "line_num": 701,
        "line_str": "name|Node argument_list|, name|Branch argument_list|> argument_list|>",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 656)"
      }
    ]
  },
  {
    "id": 10034,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["cae0ba2c85de615494de4c9da2d2d0d8cc105812"],
    "fix_commit_hash": "6f8896a4c043de767336f6686238fe8259cd6132",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "cae0ba2c85de615494de4c9da2d2d0d8cc105812",
        "line_num": 610,
        "line_str": "literal|\"Foo.prototype = {write: function() { this.foo = 3; }};\" argument_list|) expr_stmt|; block|} block|}",
        "file_path": "test/com/google/javascript/jscomp/CheckGlobalThisTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/CheckGlobalThisTest.java",
        "input_line_num": "range(610, 611)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 216,
        "line_str": "return|; block|} block|} if|if condition|(",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(286, 288)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 215,
        "line_str": "literal|false return|; block|} block|} if|if",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(286, 288)"
      }
    ]
  },
  {
    "id": 10035,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["03a6b06985852cda025def728ef2e1e8a2fb498b"],
    "fix_commit_hash": "6918bf598bfb127fd285588fd8664c06d238c0bd",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "03a6b06985852cda025def728ef2e1e8a2fb498b",
        "line_num": 3591,
        "line_str": "name|indexOf argument_list|( literal|'.' argument_list|) decl_stmt|;",
        "file_path": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
        "input_file_path": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
        "input_line_num": "range(3587, 3592)"
      },
      {
        "commit_hash": "03a6b06985852cda025def728ef2e1e8a2fb498b",
        "line_num": 3590,
        "line_str": "operator|. name|indexOf argument_list|( literal|'.' argument_list|)",
        "file_path": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
        "input_file_path": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
        "input_line_num": "range(3587, 3592)"
      },
      {
        "commit_hash": "03a6b06985852cda025def728ef2e1e8a2fb498b",
        "line_num": 3589,
        "line_str": "name|namespace operator|. name|indexOf argument_list|( literal|'.'",
        "file_path": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
        "input_file_path": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
        "input_line_num": "range(3587, 3592)"
      },
      {
        "commit_hash": "03a6b06985852cda025def728ef2e1e8a2fb498b",
        "line_num": 3588,
        "line_str": "init|= name|namespace operator|. name|indexOf argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
        "input_file_path": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
        "input_line_num": "range(3587, 3592)"
      },
      {
        "commit_hash": "03a6b06985852cda025def728ef2e1e8a2fb498b",
        "line_num": 3587,
        "line_str": "name|indexOfDot init|= name|namespace operator|. name|indexOf",
        "file_path": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
        "input_file_path": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
        "input_line_num": "range(3587, 3592)"
      }
    ]
  },
  {
    "id": 10036,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["16009bc1075b0deb4d7389776aad9b10de828b31"],
    "fix_commit_hash": "f0c15ddd15cdef59c3b06a94afedd0467e92dea7",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 277,
        "line_str": "comment if|if condition|( name|lhs operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(328, 330)"
      },
      {
        "commit_hash": "86bf3202374a4fc1869d6d608aa61e9fed81a1b3",
        "line_num": 3422,
        "line_str": "name|size return|; block|} annotation|@ name|Override",
        "file_path": "gen/com/google/javascript/jscomp/FunctionInformationMap.java",
        "input_file_path": "gen/com/google/javascript/jscomp/FunctionInformationMap.java",
        "input_line_num": "range(3422, 3426)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 306,
        "line_str": "return|return literal|false return|; block|} name|String",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(358, 381)"
      },
      {
        "commit_hash": "86bf3202374a4fc1869d6d608aa61e9fed81a1b3",
        "line_num": 982,
        "line_str": "annotation|@ name|Override specifier|protected name|Object name|writeReplace",
        "file_path": "gen/com/google/javascript/jscomp/FunctionInformationMap.java",
        "input_file_path": "gen/com/google/javascript/jscomp/FunctionInformationMap.java",
        "input_line_num": "range(979, 983)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 327,
        "line_str": "argument_list|( literal|\".prototype.\" argument_list|) condition|) block|{",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(358, 381)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 323,
        "line_str": "operator|&& name|leftName operator|. name|contains argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(358, 381)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 290,
        "line_str": "if|if condition|( name|lhs operator|. name|getLastChild",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(336, 344)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 319,
        "line_str": "condition|( name|leftName operator|!= literal|null operator|&&",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(358, 381)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 286,
        "line_str": "operator|. name|GETPROP condition|) block|{ if|if",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(336, 344)"
      },
      {
        "commit_hash": "86bf3202374a4fc1869d6d608aa61e9fed81a1b3",
        "line_num": 894,
        "line_str": "block|} annotation|@ name|Override specifier|protected name|Object",
        "file_path": "gen/com/google/javascript/jscomp/Instrumentation.java",
        "input_file_path": "gen/com/google/javascript/jscomp/Instrumentation.java",
        "input_line_num": "range(892, 896)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 315,
        "line_str": "name|getQualifiedName argument_list|() decl_stmt|; if|if condition|(",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(358, 381)"
      },
      {
        "commit_hash": "86bf3202374a4fc1869d6d608aa61e9fed81a1b3",
        "line_num": 5413,
        "line_str": "annotation|@ name|Override specifier|protected name|Object name|writeReplace",
        "file_path": "gen/com/google/javascript/jscomp/FunctionInformationMap.java",
        "input_file_path": "gen/com/google/javascript/jscomp/FunctionInformationMap.java",
        "input_line_num": "range(5410, 5414)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 311,
        "line_str": "name|leftName init|= name|lhs operator|. name|getQualifiedName",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(358, 381)"
      },
      {
        "commit_hash": "86bf3202374a4fc1869d6d608aa61e9fed81a1b3",
        "line_num": 3423,
        "line_str": "return|; block|} annotation|@ name|Override specifier|protected",
        "file_path": "gen/com/google/javascript/jscomp/FunctionInformationMap.java",
        "input_file_path": "gen/com/google/javascript/jscomp/FunctionInformationMap.java",
        "input_line_num": "range(3422, 3426)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 307,
        "line_str": "literal|false return|; block|} name|String name|leftName",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(358, 381)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 328,
        "line_str": "literal|\".prototype.\" argument_list|) condition|) block|{ return|return",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(358, 381)"
      },
      {
        "commit_hash": "86bf3202374a4fc1869d6d608aa61e9fed81a1b3",
        "line_num": 979,
        "line_str": "name|size return|; block|} annotation|@ name|Override",
        "file_path": "gen/com/google/javascript/jscomp/FunctionInformationMap.java",
        "input_file_path": "gen/com/google/javascript/jscomp/FunctionInformationMap.java",
        "input_line_num": "range(979, 983)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 324,
        "line_str": "name|leftName operator|. name|contains argument_list|( literal|\".prototype.\"",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(358, 381)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 291,
        "line_str": "condition|( name|lhs operator|. name|getLastChild argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(336, 344)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 320,
        "line_str": "name|leftName operator|!= literal|null operator|&& name|leftName",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(358, 381)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 287,
        "line_str": "name|GETPROP condition|) block|{ if|if condition|(",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(336, 344)"
      },
      {
        "commit_hash": "86bf3202374a4fc1869d6d608aa61e9fed81a1b3",
        "line_num": 895,
        "line_str": "annotation|@ name|Override specifier|protected name|Object name|writeReplace",
        "file_path": "gen/com/google/javascript/jscomp/Instrumentation.java",
        "input_file_path": "gen/com/google/javascript/jscomp/Instrumentation.java",
        "input_line_num": "range(892, 896)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 316,
        "line_str": "argument_list|() decl_stmt|; if|if condition|( name|leftName",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(358, 381)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 312,
        "line_str": "init|= name|lhs operator|. name|getQualifiedName argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(358, 381)"
      },
      {
        "commit_hash": "86bf3202374a4fc1869d6d608aa61e9fed81a1b3",
        "line_num": 5410,
        "line_str": "name|size return|; block|} annotation|@ name|Override",
        "file_path": "gen/com/google/javascript/jscomp/FunctionInformationMap.java",
        "input_file_path": "gen/com/google/javascript/jscomp/FunctionInformationMap.java",
        "input_line_num": "range(5410, 5414)"
      },
      {
        "commit_hash": "86bf3202374a4fc1869d6d608aa61e9fed81a1b3",
        "line_num": 3424,
        "line_str": "block|} annotation|@ name|Override specifier|protected name|Object",
        "file_path": "gen/com/google/javascript/jscomp/FunctionInformationMap.java",
        "input_file_path": "gen/com/google/javascript/jscomp/FunctionInformationMap.java",
        "input_line_num": "range(3422, 3426)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 308,
        "line_str": "return|; block|} name|String name|leftName init|=",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(358, 381)"
      },
      {
        "commit_hash": "86bf3202374a4fc1869d6d608aa61e9fed81a1b3",
        "line_num": 980,
        "line_str": "return|; block|} annotation|@ name|Override specifier|protected",
        "file_path": "gen/com/google/javascript/jscomp/FunctionInformationMap.java",
        "input_file_path": "gen/com/google/javascript/jscomp/FunctionInformationMap.java",
        "input_line_num": "range(979, 983)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 325,
        "line_str": "operator|. name|contains argument_list|( literal|\".prototype.\" argument_list|)",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(358, 381)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 321,
        "line_str": "operator|!= literal|null operator|&& name|leftName operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(358, 381)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 288,
        "line_str": "condition|) block|{ if|if condition|( name|lhs",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(336, 344)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 317,
        "line_str": "decl_stmt|; if|if condition|( name|leftName operator|!=",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(358, 381)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 284,
        "line_str": "operator|== name|Token operator|. name|GETPROP condition|)",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(336, 344)"
      },
      {
        "commit_hash": "86bf3202374a4fc1869d6d608aa61e9fed81a1b3",
        "line_num": 892,
        "line_str": "name|size return|; block|} annotation|@ name|Override",
        "file_path": "gen/com/google/javascript/jscomp/Instrumentation.java",
        "input_file_path": "gen/com/google/javascript/jscomp/Instrumentation.java",
        "input_line_num": "range(892, 896)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 313,
        "line_str": "name|lhs operator|. name|getQualifiedName argument_list|() decl_stmt|;",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(358, 381)"
      },
      {
        "commit_hash": "86bf3202374a4fc1869d6d608aa61e9fed81a1b3",
        "line_num": 5411,
        "line_str": "return|; block|} annotation|@ name|Override specifier|protected",
        "file_path": "gen/com/google/javascript/jscomp/FunctionInformationMap.java",
        "input_file_path": "gen/com/google/javascript/jscomp/FunctionInformationMap.java",
        "input_line_num": "range(5410, 5414)"
      },
      {
        "commit_hash": "86bf3202374a4fc1869d6d608aa61e9fed81a1b3",
        "line_num": 3425,
        "line_str": "annotation|@ name|Override specifier|protected name|Object name|writeReplace",
        "file_path": "gen/com/google/javascript/jscomp/FunctionInformationMap.java",
        "input_file_path": "gen/com/google/javascript/jscomp/FunctionInformationMap.java",
        "input_line_num": "range(3422, 3426)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 309,
        "line_str": "block|} name|String name|leftName init|= name|lhs",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(358, 381)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 276,
        "line_str": "comment comment if|if condition|( name|lhs",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(328, 330)"
      },
      {
        "commit_hash": "86bf3202374a4fc1869d6d608aa61e9fed81a1b3",
        "line_num": 981,
        "line_str": "block|} annotation|@ name|Override specifier|protected name|Object",
        "file_path": "gen/com/google/javascript/jscomp/FunctionInformationMap.java",
        "input_file_path": "gen/com/google/javascript/jscomp/FunctionInformationMap.java",
        "input_line_num": "range(979, 983)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 326,
        "line_str": "name|contains argument_list|( literal|\".prototype.\" argument_list|) condition|)",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(358, 381)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 322,
        "line_str": "literal|null operator|&& name|leftName operator|. name|contains",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(358, 381)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 289,
        "line_str": "block|{ if|if condition|( name|lhs operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(336, 344)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 318,
        "line_str": "if|if condition|( name|leftName operator|!= literal|null",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(358, 381)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 285,
        "line_str": "name|Token operator|. name|GETPROP condition|) block|{",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(336, 344)"
      },
      {
        "commit_hash": "86bf3202374a4fc1869d6d608aa61e9fed81a1b3",
        "line_num": 893,
        "line_str": "return|; block|} annotation|@ name|Override specifier|protected",
        "file_path": "gen/com/google/javascript/jscomp/Instrumentation.java",
        "input_file_path": "gen/com/google/javascript/jscomp/Instrumentation.java",
        "input_line_num": "range(892, 896)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 314,
        "line_str": "operator|. name|getQualifiedName argument_list|() decl_stmt|; if|if",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(358, 381)"
      },
      {
        "commit_hash": "86bf3202374a4fc1869d6d608aa61e9fed81a1b3",
        "line_num": 5412,
        "line_str": "block|} annotation|@ name|Override specifier|protected name|Object",
        "file_path": "gen/com/google/javascript/jscomp/FunctionInformationMap.java",
        "input_file_path": "gen/com/google/javascript/jscomp/FunctionInformationMap.java",
        "input_line_num": "range(5410, 5414)"
      },
      {
        "commit_hash": "ce96908b15025192ceb227949e21c18240e884b4",
        "line_num": 310,
        "line_str": "name|String name|leftName init|= name|lhs operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(358, 381)"
      }
    ]
  },
  {
    "id": 10037,
    "repo_name": "apache/commons-codec",
    "bug_commit_hash": ["4bc1d92516a73d696d2d20d2a3ec8926332b81c8"],
    "fix_commit_hash": "bfe02f5cf08a5ce136a3ba4c4bf6fe703b5df6dd",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 517,
        "line_str": "block|, literal|\"Tjader\" block|, literal|\"Toddie\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 484,
        "line_str": "literal|\"Tedie\" block|, literal|\"Teeter\" block|, literal|\"Teodoor\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 451,
        "line_str": "block|, literal|\"Doughty\" block|, literal|\"Douty\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 418,
        "line_str": "literal|\"Didier\" block|, literal|\"Dido\" block|, literal|\"Dierdre\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 385,
        "line_str": "name|testDavidHoodRevisitedRandomNameTTA1111111 parameter_list|() throws|throws name|EncoderException block|{",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 534,
        "line_str": "literal|\"Tutto\" block|} argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 501,
        "line_str": "block|, literal|\"Thilda\" block|, literal|\"Thordia\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 468,
        "line_str": "literal|\"Tati\" block|, literal|\"Teador\" block|, literal|\"Tedda\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 435,
        "line_str": "block|, literal|\"Doherty\" block|, literal|\"Dorthea\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 402,
        "line_str": "literal|\"Datha\" block|, literal|\"Dedie\" block|, literal|\"Deedee\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 518,
        "line_str": "literal|\"Tjader\" block|, literal|\"Toddie\" block|, literal|\"Toddy\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 485,
        "line_str": "block|, literal|\"Teeter\" block|, literal|\"Teodoor\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 452,
        "line_str": "literal|\"Doughty\" block|, literal|\"Douty\" block|, literal|\"Dowdell\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 419,
        "line_str": "block|, literal|\"Dido\" block|, literal|\"Dierdre\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 386,
        "line_str": "parameter_list|() throws|throws name|EncoderException block|{ name|this",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 535,
        "line_str": "block|} argument_list|) expr_stmt|; block|} comment",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 502,
        "line_str": "literal|\"Thilda\" block|, literal|\"Thordia\" block|, literal|\"Tilda\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 469,
        "line_str": "block|, literal|\"Teador\" block|, literal|\"Tedda\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 436,
        "line_str": "literal|\"Doherty\" block|, literal|\"Dorthea\" block|, literal|\"Dorthy\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 403,
        "line_str": "block|, literal|\"Dedie\" block|, literal|\"Deedee\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 519,
        "line_str": "block|, literal|\"Toddie\" block|, literal|\"Toddy\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 486,
        "line_str": "literal|\"Teeter\" block|, literal|\"Teodoor\" block|, literal|\"Teodor\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 453,
        "line_str": "block|, literal|\"Douty\" block|, literal|\"Dowdell\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 420,
        "line_str": "literal|\"Dido\" block|, literal|\"Dierdre\" block|, literal|\"Dieter\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 387,
        "line_str": "throws|throws name|EncoderException block|{ name|this operator|.",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 536,
        "line_str": "argument_list|) expr_stmt|; block|} comment specifier|public",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 503,
        "line_str": "block|, literal|\"Thordia\" block|, literal|\"Tilda\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 470,
        "line_str": "literal|\"Teador\" block|, literal|\"Tedda\" block|, literal|\"Tedder\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 437,
        "line_str": "block|, literal|\"Dorthea\" block|, literal|\"Dorthy\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 404,
        "line_str": "literal|\"Dedie\" block|, literal|\"Deedee\" block|, literal|\"Deerdre\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 520,
        "line_str": "literal|\"Toddie\" block|, literal|\"Toddy\" block|, literal|\"Torto\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 487,
        "line_str": "block|, literal|\"Teodoor\" block|, literal|\"Teodor\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 454,
        "line_str": "literal|\"Douty\" block|, literal|\"Dowdell\" block|, literal|\"Duthie\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 421,
        "line_str": "block|, literal|\"Dierdre\" block|, literal|\"Dieter\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 388,
        "line_str": "name|EncoderException block|{ name|this operator|. name|checkEncodingVariations",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 537,
        "line_str": "expr_stmt|; block|} comment specifier|public name|void",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 504,
        "line_str": "literal|\"Thordia\" block|, literal|\"Tilda\" block|, literal|\"Tildi\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 471,
        "line_str": "block|, literal|\"Tedda\" block|, literal|\"Tedder\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 438,
        "line_str": "literal|\"Dorthea\" block|, literal|\"Dorthy\" block|, literal|\"Doti\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 405,
        "line_str": "block|, literal|\"Deedee\" block|, literal|\"Deerdre\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 521,
        "line_str": "block|, literal|\"Toddy\" block|, literal|\"Torto\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 488,
        "line_str": "literal|\"Teodoor\" block|, literal|\"Teodor\" block|, literal|\"Terti\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 455,
        "line_str": "block|, literal|\"Dowdell\" block|, literal|\"Duthie\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 422,
        "line_str": "literal|\"Dierdre\" block|, literal|\"Dieter\" block|, literal|\"Dita\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 389,
        "line_str": "block|{ name|this operator|. name|checkEncodingVariations argument_list|(",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 505,
        "line_str": "block|, literal|\"Tilda\" block|, literal|\"Tildi\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 472,
        "line_str": "literal|\"Tedda\" block|, literal|\"Tedder\" block|, literal|\"Teddi\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 439,
        "line_str": "block|, literal|\"Dorthy\" block|, literal|\"Doti\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 406,
        "line_str": "literal|\"Deedee\" block|, literal|\"Deerdre\" block|, literal|\"Deidre\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "856794705891cde01ba551aa0af2fb248aec2cb1",
        "line_num": 199,
        "line_str": "argument_list|, literal|\"2n\" argument_list|) expr_stmt|; name|txt",
        "file_path": "src/java/org/apache/commons/codec/language/Caverphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/Caverphone.java",
        "input_line_num": "range(207, 211)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 522,
        "line_str": "literal|\"Toddy\" block|, literal|\"Torto\" block|, literal|\"Tuddor\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 489,
        "line_str": "block|, literal|\"Teodor\" block|, literal|\"Terti\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 456,
        "line_str": "literal|\"Dowdell\" block|, literal|\"Duthie\" block|, literal|\"Tada\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 423,
        "line_str": "block|, literal|\"Dieter\" block|, literal|\"Dita\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 390,
        "line_str": "name|this operator|. name|checkEncodingVariations argument_list|( literal|\"TTA1111111\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 506,
        "line_str": "literal|\"Tilda\" block|, literal|\"Tildi\" block|, literal|\"Tildie\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 473,
        "line_str": "block|, literal|\"Tedder\" block|, literal|\"Teddi\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 440,
        "line_str": "literal|\"Dorthy\" block|, literal|\"Doti\" block|, literal|\"Dotti\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 407,
        "line_str": "block|, literal|\"Deerdre\" block|, literal|\"Deidre\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "856794705891cde01ba551aa0af2fb248aec2cb1",
        "line_num": 200,
        "line_str": "literal|\"2n\" argument_list|) expr_stmt|; name|txt operator|=",
        "file_path": "src/java/org/apache/commons/codec/language/Caverphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/Caverphone.java",
        "input_line_num": "range(207, 211)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 523,
        "line_str": "block|, literal|\"Torto\" block|, literal|\"Tuddor\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 490,
        "line_str": "literal|\"Teodor\" block|, literal|\"Terti\" block|, literal|\"Theda\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 457,
        "line_str": "block|, literal|\"Duthie\" block|, literal|\"Tada\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 424,
        "line_str": "literal|\"Dieter\" block|, literal|\"Dita\" block|, literal|\"Ditter\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 391,
        "line_str": "operator|. name|checkEncodingVariations argument_list|( literal|\"TTA1111111\" argument_list|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 507,
        "line_str": "block|, literal|\"Tildi\" block|, literal|\"Tildie\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 474,
        "line_str": "literal|\"Tedder\" block|, literal|\"Teddi\" block|, literal|\"Teddie\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 441,
        "line_str": "block|, literal|\"Doti\" block|, literal|\"Dotti\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 408,
        "line_str": "literal|\"Deerdre\" block|, literal|\"Deidre\" block|, literal|\"Deirdre\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "856794705891cde01ba551aa0af2fb248aec2cb1",
        "line_num": 201,
        "line_str": "argument_list|) expr_stmt|; name|txt operator|= name|txt",
        "file_path": "src/java/org/apache/commons/codec/language/Caverphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/Caverphone.java",
        "input_line_num": "range(207, 211)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 524,
        "line_str": "literal|\"Torto\" block|, literal|\"Tuddor\" block|, literal|\"Tudor\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 491,
        "line_str": "block|, literal|\"Terti\" block|, literal|\"Theda\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 458,
        "line_str": "literal|\"Duthie\" block|, literal|\"Tada\" block|, literal|\"Taddeo\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 425,
        "line_str": "block|, literal|\"Dita\" block|, literal|\"Ditter\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 392,
        "line_str": "name|checkEncodingVariations argument_list|( literal|\"TTA1111111\" argument_list|, operator|new",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 508,
        "line_str": "literal|\"Tildi\" block|, literal|\"Tildie\" block|, literal|\"Tildy\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 475,
        "line_str": "block|, literal|\"Teddi\" block|, literal|\"Teddie\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 442,
        "line_str": "literal|\"Doti\" block|, literal|\"Dotti\" block|, literal|\"Dottie\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 409,
        "line_str": "block|, literal|\"Deidre\" block|, literal|\"Deirdre\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "856794705891cde01ba551aa0af2fb248aec2cb1",
        "line_num": 202,
        "line_str": "expr_stmt|; name|txt operator|= name|txt operator|.",
        "file_path": "src/java/org/apache/commons/codec/language/Caverphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/Caverphone.java",
        "input_line_num": "range(207, 211)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 525,
        "line_str": "block|, literal|\"Tuddor\" block|, literal|\"Tudor\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 492,
        "line_str": "literal|\"Terti\" block|, literal|\"Theda\" block|, literal|\"Theodor\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 459,
        "line_str": "block|, literal|\"Tada\" block|, literal|\"Taddeo\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 426,
        "line_str": "literal|\"Dita\" block|, literal|\"Ditter\" block|, literal|\"Dodi\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 393,
        "line_str": "argument_list|( literal|\"TTA1111111\" argument_list|, operator|new name|String",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 509,
        "line_str": "block|, literal|\"Tildie\" block|, literal|\"Tildy\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 476,
        "line_str": "literal|\"Teddi\" block|, literal|\"Teddie\" block|, literal|\"Teddy\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 443,
        "line_str": "block|, literal|\"Dotti\" block|, literal|\"Dottie\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 410,
        "line_str": "literal|\"Deidre\" block|, literal|\"Deirdre\" block|, literal|\"Detta\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 526,
        "line_str": "literal|\"Tuddor\" block|, literal|\"Tudor\" block|, literal|\"Turtle\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 493,
        "line_str": "block|, literal|\"Theda\" block|, literal|\"Theodor\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 460,
        "line_str": "literal|\"Tada\" block|, literal|\"Taddeo\" block|, literal|\"Tadeo\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 427,
        "line_str": "block|, literal|\"Ditter\" block|, literal|\"Dodi\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 394,
        "line_str": "literal|\"TTA1111111\" argument_list|, operator|new name|String index|[]",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 510,
        "line_str": "literal|\"Tildie\" block|, literal|\"Tildy\" block|, literal|\"Tita\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 477,
        "line_str": "block|, literal|\"Teddie\" block|, literal|\"Teddy\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 444,
        "line_str": "literal|\"Dotti\" block|, literal|\"Dottie\" block|, literal|\"Dotty\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 411,
        "line_str": "block|, literal|\"Deirdre\" block|, literal|\"Detta\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 527,
        "line_str": "block|, literal|\"Tudor\" block|, literal|\"Turtle\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 494,
        "line_str": "literal|\"Theda\" block|, literal|\"Theodor\" block|, literal|\"Theodore\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 461,
        "line_str": "block|, literal|\"Taddeo\" block|, literal|\"Tadeo\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 428,
        "line_str": "literal|\"Ditter\" block|, literal|\"Dodi\" block|, literal|\"Dodie\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 395,
        "line_str": "argument_list|, operator|new name|String index|[] block|{",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 511,
        "line_str": "block|, literal|\"Tildy\" block|, literal|\"Tita\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 478,
        "line_str": "literal|\"Teddie\" block|, literal|\"Teddy\" block|, literal|\"Tedi\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 445,
        "line_str": "block|, literal|\"Dottie\" block|, literal|\"Dotty\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 412,
        "line_str": "literal|\"Deirdre\" block|, literal|\"Detta\" block|, literal|\"Didi\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "4bc1d92516a73d696d2d20d2a3ec8926332b81c8",
        "line_num": 205,
        "line_str": "name|txt operator|. name|replaceAll argument_list|( literal|\"^mb\"",
        "file_path": "src/java/org/apache/commons/codec/language/Caverphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/Caverphone.java",
        "input_line_num": "range(213, 216)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 528,
        "line_str": "literal|\"Tudor\" block|, literal|\"Turtle\" block|, literal|\"Tuttle\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 495,
        "line_str": "block|, literal|\"Theodor\" block|, literal|\"Theodore\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 462,
        "line_str": "literal|\"Taddeo\" block|, literal|\"Tadeo\" block|, literal|\"Tadio\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 429,
        "line_str": "block|, literal|\"Dodi\" block|, literal|\"Dodie\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 396,
        "line_str": "operator|new name|String index|[] block|{ literal|\"Darda\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 512,
        "line_str": "literal|\"Tildy\" block|, literal|\"Tita\" block|, literal|\"Tito\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 479,
        "line_str": "block|, literal|\"Teddy\" block|, literal|\"Tedi\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 446,
        "line_str": "literal|\"Dottie\" block|, literal|\"Dotty\" block|, literal|\"Doty\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 413,
        "line_str": "block|, literal|\"Detta\" block|, literal|\"Didi\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "4bc1d92516a73d696d2d20d2a3ec8926332b81c8",
        "line_num": 206,
        "line_str": "operator|. name|replaceAll argument_list|( literal|\"^mb\" argument_list|,",
        "file_path": "src/java/org/apache/commons/codec/language/Caverphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/Caverphone.java",
        "input_line_num": "range(213, 216)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 529,
        "line_str": "block|, literal|\"Turtle\" block|, literal|\"Tuttle\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 496,
        "line_str": "literal|\"Theodor\" block|, literal|\"Theodore\" block|, literal|\"Theta\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 463,
        "line_str": "block|, literal|\"Tadeo\" block|, literal|\"Tadio\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 430,
        "line_str": "literal|\"Dodi\" block|, literal|\"Dodie\" block|, literal|\"Dody\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 397,
        "line_str": "name|String index|[] block|{ literal|\"Darda\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 513,
        "line_str": "block|, literal|\"Tita\" block|, literal|\"Tito\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 480,
        "line_str": "literal|\"Teddy\" block|, literal|\"Tedi\" block|, literal|\"Tedie\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 447,
        "line_str": "block|, literal|\"Dotty\" block|, literal|\"Doty\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 414,
        "line_str": "literal|\"Detta\" block|, literal|\"Didi\" block|, literal|\"Didier\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "4bc1d92516a73d696d2d20d2a3ec8926332b81c8",
        "line_num": 207,
        "line_str": "name|replaceAll argument_list|( literal|\"^mb\" argument_list|, literal|\"m2\"",
        "file_path": "src/java/org/apache/commons/codec/language/Caverphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/Caverphone.java",
        "input_line_num": "range(213, 216)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 381,
        "line_str": "block|} comment specifier|public name|void name|testDavidHoodRevisitedRandomNameTTA1111111",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 530,
        "line_str": "literal|\"Turtle\" block|, literal|\"Tuttle\" block|, literal|\"Tutto\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 497,
        "line_str": "block|, literal|\"Theodore\" block|, literal|\"Theta\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 464,
        "line_str": "literal|\"Tadeo\" block|, literal|\"Tadio\" block|, literal|\"Tati\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 431,
        "line_str": "block|, literal|\"Dodie\" block|, literal|\"Dody\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 398,
        "line_str": "index|[] block|{ literal|\"Darda\" block|, literal|\"Datha\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 514,
        "line_str": "literal|\"Tita\" block|, literal|\"Tito\" block|, literal|\"Tjader\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 481,
        "line_str": "block|, literal|\"Tedi\" block|, literal|\"Tedie\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 448,
        "line_str": "literal|\"Dotty\" block|, literal|\"Doty\" block|, literal|\"Doughty\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 415,
        "line_str": "block|, literal|\"Didi\" block|, literal|\"Didier\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "856794705891cde01ba551aa0af2fb248aec2cb1",
        "line_num": 208,
        "line_str": "argument_list|( literal|\"^mb\" argument_list|, literal|\"m2\" argument_list|)",
        "file_path": "src/java/org/apache/commons/codec/language/Caverphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/Caverphone.java",
        "input_line_num": "range(216, 218)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 382,
        "line_str": "comment specifier|public name|void name|testDavidHoodRevisitedRandomNameTTA1111111 parameter_list|()",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 531,
        "line_str": "block|, literal|\"Tuttle\" block|, literal|\"Tutto\" block|}",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 498,
        "line_str": "literal|\"Theodore\" block|, literal|\"Theta\" block|, literal|\"Thilda\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 465,
        "line_str": "block|, literal|\"Tadio\" block|, literal|\"Tati\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 432,
        "line_str": "literal|\"Dodie\" block|, literal|\"Dody\" block|, literal|\"Doherty\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 399,
        "line_str": "block|{ literal|\"Darda\" block|, literal|\"Datha\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 746,
        "line_str": "block|} argument_list|) expr_stmt|; block|} comment",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(746, 747)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 515,
        "line_str": "block|, literal|\"Tito\" block|, literal|\"Tjader\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 482,
        "line_str": "literal|\"Tedi\" block|, literal|\"Tedie\" block|, literal|\"Teeter\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 449,
        "line_str": "block|, literal|\"Doty\" block|, literal|\"Doughty\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 416,
        "line_str": "literal|\"Didi\" block|, literal|\"Didier\" block|, literal|\"Dido\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "856794705891cde01ba551aa0af2fb248aec2cb1",
        "line_num": 209,
        "line_str": "literal|\"^mb\" argument_list|, literal|\"m2\" argument_list|) expr_stmt|;",
        "file_path": "src/java/org/apache/commons/codec/language/Caverphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/Caverphone.java",
        "input_line_num": "range(216, 218)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 383,
        "line_str": "specifier|public name|void name|testDavidHoodRevisitedRandomNameTTA1111111 parameter_list|() throws|throws",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 532,
        "line_str": "literal|\"Tuttle\" block|, literal|\"Tutto\" block|} argument_list|)",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 499,
        "line_str": "block|, literal|\"Theta\" block|, literal|\"Thilda\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 466,
        "line_str": "literal|\"Tadio\" block|, literal|\"Tati\" block|, literal|\"Teador\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 433,
        "line_str": "block|, literal|\"Dody\" block|, literal|\"Doherty\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 400,
        "line_str": "literal|\"Darda\" block|, literal|\"Datha\" block|, literal|\"Dedie\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 516,
        "line_str": "literal|\"Tito\" block|, literal|\"Tjader\" block|, literal|\"Toddie\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 483,
        "line_str": "block|, literal|\"Tedie\" block|, literal|\"Teeter\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 450,
        "line_str": "literal|\"Doty\" block|, literal|\"Doughty\" block|, literal|\"Douty\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 417,
        "line_str": "block|, literal|\"Didier\" block|, literal|\"Dido\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 384,
        "line_str": "name|void name|testDavidHoodRevisitedRandomNameTTA1111111 parameter_list|() throws|throws name|EncoderException",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 533,
        "line_str": "block|, literal|\"Tutto\" block|} argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 500,
        "line_str": "literal|\"Theta\" block|, literal|\"Thilda\" block|, literal|\"Thordia\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 467,
        "line_str": "block|, literal|\"Tati\" block|, literal|\"Teador\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 434,
        "line_str": "literal|\"Dody\" block|, literal|\"Doherty\" block|, literal|\"Dorthea\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "cca17bdff57001e87b29940ef5c38f5a8b528cb2",
        "line_num": 401,
        "line_str": "block|, literal|\"Datha\" block|, literal|\"Dedie\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      }
    ]
  },
  {
    "id": 10038,
    "repo_name": "apache/commons-codec",
    "bug_commit_hash": ["1a5582ddf3cbaaf27fca9b8050b45e8820a2ae2a"],
    "fix_commit_hash": "dfad50a124a73b3512b08855867c040fa14a6995",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "1a5582ddf3cbaaf27fca9b8050b45e8820a2ae2a",
        "line_num": 142,
        "line_str": "return|; block|} return|return name|CharSequenceUtils operator|.",
        "file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_line_num": "range(151, 155)"
      },
      {
        "commit_hash": "1a5582ddf3cbaaf27fca9b8050b45e8820a2ae2a",
        "line_num": 171,
        "line_str": "argument_list|() argument_list|) argument_list|) return|; block|}",
        "file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_line_num": "range(165, 183)"
      },
      {
        "commit_hash": "1a5582ddf3cbaaf27fca9b8050b45e8820a2ae2a",
        "line_num": 167,
        "line_str": "argument_list|, name|cs2 operator|. name|length argument_list|()",
        "file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_line_num": "range(165, 183)"
      },
      {
        "commit_hash": "1a5582ddf3cbaaf27fca9b8050b45e8820a2ae2a",
        "line_num": 163,
        "line_str": "name|cs1 operator|. name|length argument_list|() argument_list|,",
        "file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_line_num": "range(165, 183)"
      },
      {
        "commit_hash": "1a5582ddf3cbaaf27fca9b8050b45e8820a2ae2a",
        "line_num": 159,
        "line_str": "name|Math operator|. name|max argument_list|( name|cs1",
        "file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_line_num": "range(165, 183)"
      },
      {
        "commit_hash": "1a5582ddf3cbaaf27fca9b8050b45e8820a2ae2a",
        "line_num": 155,
        "line_str": "name|cs2 argument_list|, literal|0 argument_list|, name|Math",
        "file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_line_num": "range(165, 183)"
      },
      {
        "commit_hash": "8a23f426945fc4c7465acc203fdd0d50c4df39a1",
        "line_num": 900,
        "line_str": "name|actual argument_list|) expr_stmt|; block|} block|}",
        "file_path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
        "input_file_path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
        "input_line_num": "range(1129, 1130)"
      },
      {
        "commit_hash": "1a5582ddf3cbaaf27fca9b8050b45e8820a2ae2a",
        "line_num": 143,
        "line_str": "block|} return|return name|CharSequenceUtils operator|. name|regionMatches",
        "file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_line_num": "range(151, 155)"
      },
      {
        "commit_hash": "1a5582ddf3cbaaf27fca9b8050b45e8820a2ae2a",
        "line_num": 172,
        "line_str": "argument_list|) argument_list|) return|; block|} comment",
        "file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_line_num": "range(165, 183)"
      },
      {
        "commit_hash": "1a5582ddf3cbaaf27fca9b8050b45e8820a2ae2a",
        "line_num": 168,
        "line_str": "name|cs2 operator|. name|length argument_list|() argument_list|)",
        "file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_line_num": "range(165, 183)"
      },
      {
        "commit_hash": "1a5582ddf3cbaaf27fca9b8050b45e8820a2ae2a",
        "line_num": 164,
        "line_str": "operator|. name|length argument_list|() argument_list|, name|cs2",
        "file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_line_num": "range(165, 183)"
      },
      {
        "commit_hash": "1a5582ddf3cbaaf27fca9b8050b45e8820a2ae2a",
        "line_num": 160,
        "line_str": "operator|. name|max argument_list|( name|cs1 operator|.",
        "file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_line_num": "range(165, 183)"
      },
      {
        "commit_hash": "1a5582ddf3cbaaf27fca9b8050b45e8820a2ae2a",
        "line_num": 156,
        "line_str": "argument_list|, literal|0 argument_list|, name|Math operator|.",
        "file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_line_num": "range(165, 183)"
      },
      {
        "commit_hash": "1a5582ddf3cbaaf27fca9b8050b45e8820a2ae2a",
        "line_num": 144,
        "line_str": "return|return name|CharSequenceUtils operator|. name|regionMatches argument_list|(",
        "file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_line_num": "range(151, 155)"
      },
      {
        "commit_hash": "1a5582ddf3cbaaf27fca9b8050b45e8820a2ae2a",
        "line_num": 169,
        "line_str": "operator|. name|length argument_list|() argument_list|) argument_list|)",
        "file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_line_num": "range(165, 183)"
      },
      {
        "commit_hash": "1a5582ddf3cbaaf27fca9b8050b45e8820a2ae2a",
        "line_num": 165,
        "line_str": "name|length argument_list|() argument_list|, name|cs2 operator|.",
        "file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_line_num": "range(165, 183)"
      },
      {
        "commit_hash": "1a5582ddf3cbaaf27fca9b8050b45e8820a2ae2a",
        "line_num": 161,
        "line_str": "name|max argument_list|( name|cs1 operator|. name|length",
        "file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_line_num": "range(165, 183)"
      },
      {
        "commit_hash": "1a5582ddf3cbaaf27fca9b8050b45e8820a2ae2a",
        "line_num": 157,
        "line_str": "literal|0 argument_list|, name|Math operator|. name|max",
        "file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_line_num": "range(165, 183)"
      },
      {
        "commit_hash": "1a5582ddf3cbaaf27fca9b8050b45e8820a2ae2a",
        "line_num": 141,
        "line_str": "argument_list|) return|; block|} return|return name|CharSequenceUtils",
        "file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_line_num": "range(151, 155)"
      },
      {
        "commit_hash": "1a5582ddf3cbaaf27fca9b8050b45e8820a2ae2a",
        "line_num": 170,
        "line_str": "name|length argument_list|() argument_list|) argument_list|) return|;",
        "file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_line_num": "range(165, 183)"
      },
      {
        "commit_hash": "1a5582ddf3cbaaf27fca9b8050b45e8820a2ae2a",
        "line_num": 166,
        "line_str": "argument_list|() argument_list|, name|cs2 operator|. name|length",
        "file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_line_num": "range(165, 183)"
      },
      {
        "commit_hash": "1a5582ddf3cbaaf27fca9b8050b45e8820a2ae2a",
        "line_num": 162,
        "line_str": "argument_list|( name|cs1 operator|. name|length argument_list|()",
        "file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_line_num": "range(165, 183)"
      },
      {
        "commit_hash": "1a5582ddf3cbaaf27fca9b8050b45e8820a2ae2a",
        "line_num": 158,
        "line_str": "argument_list|, name|Math operator|. name|max argument_list|(",
        "file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_line_num": "range(165, 183)"
      }
    ]
  },
  {
    "id": 10039,
    "repo_name": "apache/commons-codec",
    "bug_commit_hash": ["bee4af782d743759d8135eedb246ad7e992d4b19"],
    "fix_commit_hash": "dcbca558fb505edf58a14f6acc05087afc3562fb",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "496ef6e96d3e4590e1a78335f7264bdd42703dde",
        "line_num": 12876,
        "line_str": "block|} block|, comment operator|new name|String",
        "file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_line_num": "range(12874, 12879)"
      },
      {
        "commit_hash": "bee4af782d743759d8135eedb246ad7e992d4b19",
        "line_num": 2945,
        "line_str": "name|index operator|++ expr_stmt|; block|} return|return",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(2941, 2944)"
      },
      {
        "commit_hash": "bee4af782d743759d8135eedb246ad7e992d4b19",
        "line_num": 2904,
        "line_str": "argument_list|) expr_stmt|; if|if condition|( name|charAt",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(2892, 2903)"
      },
      {
        "commit_hash": "496ef6e96d3e4590e1a78335f7264bdd42703dde",
        "line_num": 13054,
        "line_str": "block|, comment operator|new name|String index|[]",
        "file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_line_num": "range(13051, 13056)"
      },
      {
        "commit_hash": "bee4af782d743759d8135eedb246ad7e992d4b19",
        "line_num": 2198,
        "line_str": "literal|1 argument_list|, literal|4 argument_list|, literal|\"IER\"",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(2193, 2198)"
      },
      {
        "commit_hash": "bee4af782d743759d8135eedb246ad7e992d4b19",
        "line_num": 2933,
        "line_str": "argument_list|( literal|' ' argument_list|) expr_stmt|; block|}",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(2925, 2932)"
      },
      {
        "commit_hash": "bee4af782d743759d8135eedb246ad7e992d4b19",
        "line_num": 2900,
        "line_str": "operator|. name|append argument_list|( literal|'L' argument_list|)",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(2892, 2903)"
      },
      {
        "commit_hash": "bee4af782d743759d8135eedb246ad7e992d4b19",
        "line_num": 4787,
        "line_str": "argument_list|, name|index operator|- literal|1 argument_list|,",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(4771, 4778)"
      },
      {
        "commit_hash": "bee4af782d743759d8135eedb246ad7e992d4b19",
        "line_num": 2929,
        "line_str": "block|{ name|result operator|. name|appendAlternate argument_list|(",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(2925, 2932)"
      },
      {
        "commit_hash": "bee4af782d743759d8135eedb246ad7e992d4b19",
        "line_num": 2896,
        "line_str": "name|index parameter_list|) block|{ name|result operator|.",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(2892, 2903)"
      },
      {
        "commit_hash": "496ef6e96d3e4590e1a78335f7264bdd42703dde",
        "line_num": 502,
        "line_str": "comment operator|new name|String index|[] block|{",
        "file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_line_num": "range(498, 503)"
      },
      {
        "commit_hash": "496ef6e96d3e4590e1a78335f7264bdd42703dde",
        "line_num": 498,
        "line_str": "block|, literal|\"ANTR\" block|} block|, comment",
        "file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_line_num": "range(498, 503)"
      },
      {
        "commit_hash": "496ef6e96d3e4590e1a78335f7264bdd42703dde",
        "line_num": 13298,
        "line_str": "comment operator|new name|String index|[] block|{",
        "file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_line_num": "range(13294, 13299)"
      },
      {
        "commit_hash": "496ef6e96d3e4590e1a78335f7264bdd42703dde",
        "line_num": 13294,
        "line_str": "block|, literal|\"RSNS\" block|} block|, comment",
        "file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_line_num": "range(13294, 13299)"
      },
      {
        "commit_hash": "496ef6e96d3e4590e1a78335f7264bdd42703dde",
        "line_num": 12877,
        "line_str": "block|, comment operator|new name|String index|[]",
        "file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_line_num": "range(12874, 12879)"
      },
      {
        "commit_hash": "bee4af782d743759d8135eedb246ad7e992d4b19",
        "line_num": 2946,
        "line_str": "operator|++ expr_stmt|; block|} return|return name|index",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(2941, 2944)"
      },
      {
        "commit_hash": "bee4af782d743759d8135eedb246ad7e992d4b19",
        "line_num": 2905,
        "line_str": "expr_stmt|; if|if condition|( name|charAt argument_list|(",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(2892, 2903)"
      },
      {
        "commit_hash": "496ef6e96d3e4590e1a78335f7264bdd42703dde",
        "line_num": 13055,
        "line_str": "comment operator|new name|String index|[] block|{",
        "file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_line_num": "range(13051, 13056)"
      },
      {
        "commit_hash": "bee4af782d743759d8135eedb246ad7e992d4b19",
        "line_num": 2199,
        "line_str": "argument_list|, literal|4 argument_list|, literal|\"IER\" argument_list|)",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(2193, 2198)"
      },
      {
        "commit_hash": "bee4af782d743759d8135eedb246ad7e992d4b19",
        "line_num": 2934,
        "line_str": "literal|' ' argument_list|) expr_stmt|; block|} name|index",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(2925, 2932)"
      },
      {
        "commit_hash": "bee4af782d743759d8135eedb246ad7e992d4b19",
        "line_num": 2901,
        "line_str": "name|append argument_list|( literal|'L' argument_list|) expr_stmt|;",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(2892, 2903)"
      },
      {
        "commit_hash": "bee4af782d743759d8135eedb246ad7e992d4b19",
        "line_num": 4788,
        "line_str": "name|index operator|- literal|1 argument_list|, literal|2",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(4771, 4778)"
      },
      {
        "commit_hash": "496ef6e96d3e4590e1a78335f7264bdd42703dde",
        "line_num": 13051,
        "line_str": "block|, literal|\"FKX\" block|} block|, comment",
        "file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_line_num": "range(13051, 13056)"
      },
      {
        "commit_hash": "bee4af782d743759d8135eedb246ad7e992d4b19",
        "line_num": 2930,
        "line_str": "name|result operator|. name|appendAlternate argument_list|( literal|' '",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(2925, 2932)"
      },
      {
        "commit_hash": "bee4af782d743759d8135eedb246ad7e992d4b19",
        "line_num": 2897,
        "line_str": "parameter_list|) block|{ name|result operator|. name|append",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(2892, 2903)"
      },
      {
        "commit_hash": "bee4af782d743759d8135eedb246ad7e992d4b19",
        "line_num": 4784,
        "line_str": "name|contains argument_list|( name|value argument_list|, name|index",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(4771, 4778)"
      },
      {
        "commit_hash": "496ef6e96d3e4590e1a78335f7264bdd42703dde",
        "line_num": 499,
        "line_str": "literal|\"ANTR\" block|} block|, comment operator|new",
        "file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_line_num": "range(498, 503)"
      },
      {
        "commit_hash": "496ef6e96d3e4590e1a78335f7264bdd42703dde",
        "line_num": 13295,
        "line_str": "literal|\"RSNS\" block|} block|, comment operator|new",
        "file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_line_num": "range(13294, 13299)"
      },
      {
        "commit_hash": "496ef6e96d3e4590e1a78335f7264bdd42703dde",
        "line_num": 12878,
        "line_str": "comment operator|new name|String index|[] block|{",
        "file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_line_num": "range(12874, 12879)"
      },
      {
        "commit_hash": "496ef6e96d3e4590e1a78335f7264bdd42703dde",
        "line_num": 12874,
        "line_str": "block|, literal|\"PRTN\" block|} block|, comment",
        "file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_line_num": "range(12874, 12879)"
      },
      {
        "commit_hash": "496ef6e96d3e4590e1a78335f7264bdd42703dde",
        "line_num": 501,
        "line_str": "block|, comment operator|new name|String index|[]",
        "file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_line_num": "range(498, 503)"
      },
      {
        "commit_hash": "bee4af782d743759d8135eedb246ad7e992d4b19",
        "line_num": 2200,
        "line_str": "literal|4 argument_list|, literal|\"IER\" argument_list|) condition|)",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(2193, 2198)"
      },
      {
        "commit_hash": "bee4af782d743759d8135eedb246ad7e992d4b19",
        "line_num": 2902,
        "line_str": "argument_list|( literal|'L' argument_list|) expr_stmt|; if|if",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(2892, 2903)"
      },
      {
        "commit_hash": "bee4af782d743759d8135eedb246ad7e992d4b19",
        "line_num": 4789,
        "line_str": "operator|- literal|1 argument_list|, literal|2 argument_list|,",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(4771, 4778)"
      },
      {
        "commit_hash": "bee4af782d743759d8135eedb246ad7e992d4b19",
        "line_num": 2196,
        "line_str": "name|index operator|+ literal|1 argument_list|, literal|4",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(2193, 2198)"
      },
      {
        "commit_hash": "bee4af782d743759d8135eedb246ad7e992d4b19",
        "line_num": 2931,
        "line_str": "operator|. name|appendAlternate argument_list|( literal|' ' argument_list|)",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(2925, 2932)"
      },
      {
        "commit_hash": "bee4af782d743759d8135eedb246ad7e992d4b19",
        "line_num": 2898,
        "line_str": "block|{ name|result operator|. name|append argument_list|(",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(2892, 2903)"
      },
      {
        "commit_hash": "bee4af782d743759d8135eedb246ad7e992d4b19",
        "line_num": 4785,
        "line_str": "argument_list|( name|value argument_list|, name|index operator|-",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(4771, 4778)"
      },
      {
        "commit_hash": "496ef6e96d3e4590e1a78335f7264bdd42703dde",
        "line_num": 13052,
        "line_str": "literal|\"FKX\" block|} block|, comment operator|new",
        "file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_line_num": "range(13051, 13056)"
      },
      {
        "commit_hash": "496ef6e96d3e4590e1a78335f7264bdd42703dde",
        "line_num": 500,
        "line_str": "block|} block|, comment operator|new name|String",
        "file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_line_num": "range(498, 503)"
      },
      {
        "commit_hash": "496ef6e96d3e4590e1a78335f7264bdd42703dde",
        "line_num": 13296,
        "line_str": "block|} block|, comment operator|new name|String",
        "file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_line_num": "range(13294, 13299)"
      },
      {
        "commit_hash": "496ef6e96d3e4590e1a78335f7264bdd42703dde",
        "line_num": 12875,
        "line_str": "literal|\"PRTN\" block|} block|, comment operator|new",
        "file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_line_num": "range(12874, 12879)"
      },
      {
        "commit_hash": "bee4af782d743759d8135eedb246ad7e992d4b19",
        "line_num": 2944,
        "line_str": "block|{ name|index operator|++ expr_stmt|; block|}",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(2941, 2944)"
      },
      {
        "commit_hash": "bee4af782d743759d8135eedb246ad7e992d4b19",
        "line_num": 2903,
        "line_str": "literal|'L' argument_list|) expr_stmt|; if|if condition|(",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(2892, 2903)"
      },
      {
        "commit_hash": "bee4af782d743759d8135eedb246ad7e992d4b19",
        "line_num": 4790,
        "line_str": "literal|1 argument_list|, literal|2 argument_list|, literal|\"AS\"",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(4771, 4778)"
      },
      {
        "commit_hash": "bee4af782d743759d8135eedb246ad7e992d4b19",
        "line_num": 2197,
        "line_str": "operator|+ literal|1 argument_list|, literal|4 argument_list|,",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(2193, 2198)"
      },
      {
        "commit_hash": "bee4af782d743759d8135eedb246ad7e992d4b19",
        "line_num": 2932,
        "line_str": "name|appendAlternate argument_list|( literal|' ' argument_list|) expr_stmt|;",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(2925, 2932)"
      },
      {
        "commit_hash": "bee4af782d743759d8135eedb246ad7e992d4b19",
        "line_num": 2899,
        "line_str": "name|result operator|. name|append argument_list|( literal|'L'",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(2892, 2903)"
      },
      {
        "commit_hash": "bee4af782d743759d8135eedb246ad7e992d4b19",
        "line_num": 4786,
        "line_str": "name|value argument_list|, name|index operator|- literal|1",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(4771, 4778)"
      },
      {
        "commit_hash": "496ef6e96d3e4590e1a78335f7264bdd42703dde",
        "line_num": 13053,
        "line_str": "block|} block|, comment operator|new name|String",
        "file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_line_num": "range(13051, 13056)"
      },
      {
        "commit_hash": "bee4af782d743759d8135eedb246ad7e992d4b19",
        "line_num": 2928,
        "line_str": "condition|) block|{ name|result operator|. name|appendAlternate",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(2925, 2932)"
      },
      {
        "commit_hash": "bee4af782d743759d8135eedb246ad7e992d4b19",
        "line_num": 2895,
        "line_str": "name|int name|index parameter_list|) block|{ name|result",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(2892, 2903)"
      },
      {
        "commit_hash": "496ef6e96d3e4590e1a78335f7264bdd42703dde",
        "line_num": 13297,
        "line_str": "block|, comment operator|new name|String index|[]",
        "file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_line_num": "range(13294, 13299)"
      }
    ]
  },
  {
    "id": 10040,
    "repo_name": "apache/commons-compress",
    "bug_commit_hash": ["97406ce9573850f9f33b22da6bdaf65073f4a09f"],
    "fix_commit_hash": "ca90692bceba18a222377e4600e33ecd4e564f9b",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "f8fa898bad80c55a3fb829808385b5ecf24d2a3b",
        "line_num": 63,
        "line_str": "block|{ comment specifier|private name|IOUtils parameter_list|()",
        "file_path": "src/main/java/org/apache/commons/compress/utils/IOUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/utils/IOUtils.java",
        "input_line_num": "range(81, 84)"
      },
      {
        "commit_hash": "f8fa898bad80c55a3fb829808385b5ecf24d2a3b",
        "line_num": 62,
        "line_str": "name|IOUtils block|{ comment specifier|private name|IOUtils",
        "file_path": "src/main/java/org/apache/commons/compress/utils/IOUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/utils/IOUtils.java",
        "input_line_num": "range(81, 84)"
      },
      {
        "commit_hash": "f8fa898bad80c55a3fb829808385b5ecf24d2a3b",
        "line_num": 61,
        "line_str": "class|class name|IOUtils block|{ comment specifier|private",
        "file_path": "src/main/java/org/apache/commons/compress/utils/IOUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/utils/IOUtils.java",
        "input_line_num": "range(81, 84)"
      },
      {
        "commit_hash": "786c37888c166853553d0c5bbae2f57c1513ef89",
        "line_num": 88,
        "line_str": "literal|8024 argument_list|) return|; block|} comment",
        "file_path": "src/main/java/org/apache/commons/compress/utils/IOUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/utils/IOUtils.java",
        "input_line_num": "range(112, 115)"
      },
      {
        "commit_hash": "786c37888c166853553d0c5bbae2f57c1513ef89",
        "line_num": 87,
        "line_str": "argument_list|, literal|8024 argument_list|) return|; block|}",
        "file_path": "src/main/java/org/apache/commons/compress/utils/IOUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/utils/IOUtils.java",
        "input_line_num": "range(112, 115)"
      },
      {
        "commit_hash": "786c37888c166853553d0c5bbae2f57c1513ef89",
        "line_num": 86,
        "line_str": "name|output argument_list|, literal|8024 argument_list|) return|;",
        "file_path": "src/main/java/org/apache/commons/compress/utils/IOUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/utils/IOUtils.java",
        "input_line_num": "range(112, 115)"
      },
      {
        "commit_hash": "cc2f3a381c4edd43e9efffda3ac5b2671b3d5c9b",
        "line_num": 56,
        "line_str": "specifier|final class|class name|IOUtils block|{ comment",
        "file_path": "src/main/java/org/apache/commons/compress/utils/IOUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/utils/IOUtils.java",
        "input_line_num": "range(80, 81)"
      },
      {
        "commit_hash": "bbebf627a27badb5466f4a39e11afd08b86fe068",
        "line_num": 80,
        "line_str": "argument_list|, name|output argument_list|, literal|8024 argument_list|)",
        "file_path": "src/main/java/org/apache/commons/compress/utils/IOUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/utils/IOUtils.java",
        "input_line_num": "range(110, 112)"
      },
      {
        "commit_hash": "bbebf627a27badb5466f4a39e11afd08b86fe068",
        "line_num": 79,
        "line_str": "name|input argument_list|, name|output argument_list|, literal|8024",
        "file_path": "src/main/java/org/apache/commons/compress/utils/IOUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/utils/IOUtils.java",
        "input_line_num": "range(110, 112)"
      },
      {
        "commit_hash": "fa91c02a9cb833e3471e885c633055362a68e0af",
        "line_num": 235,
        "line_str": "expr_stmt|; block|} return|return name|available operator|-",
        "file_path": "src/main/java/org/apache/commons/compress/utils/IOUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/utils/IOUtils.java",
        "input_line_num": "range(244, 246)"
      },
      {
        "commit_hash": "fa91c02a9cb833e3471e885c633055362a68e0af",
        "line_num": 234,
        "line_str": "name|skipped expr_stmt|; block|} return|return name|available",
        "file_path": "src/main/java/org/apache/commons/compress/utils/IOUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/utils/IOUtils.java",
        "input_line_num": "range(244, 246)"
      },
      {
        "commit_hash": "97406ce9573850f9f33b22da6bdaf65073f4a09f",
        "line_num": 233,
        "line_str": "operator|-= name|skipped expr_stmt|; block|} return|return",
        "file_path": "src/main/java/org/apache/commons/compress/utils/IOUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/utils/IOUtils.java",
        "input_line_num": "range(243, 244)"
      }
    ]
  },
  {
    "id": 10041,
    "repo_name": "apache/commons-compress",
    "bug_commit_hash": ["976d007ecc25745c4840a8dce8ddaae5d7fdcd78"],
    "fix_commit_hash": "de0a15d2ea236758f5f69c354d21ac6eee7ed265",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "976d007ecc25745c4840a8dce8ddaae5d7fdcd78",
        "line_num": 858,
        "line_str": "block|{ specifier|final name|char index|[] name|chars",
        "file_path": "src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java",
        "input_line_num": "range(858, 863)"
      },
      {
        "commit_hash": "f8fa898bad80c55a3fb829808385b5ecf24d2a3b",
        "line_num": 57,
        "line_str": "name|ArchiveUtils block|{ comment specifier|private name|ArchiveUtils",
        "file_path": "src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java",
        "input_line_num": "range(56, 59)"
      },
      {
        "commit_hash": "f8fa898bad80c55a3fb829808385b5ecf24d2a3b",
        "line_num": 56,
        "line_str": "class|class name|ArchiveUtils block|{ comment specifier|private",
        "file_path": "src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java",
        "input_line_num": "range(56, 59)"
      },
      {
        "commit_hash": "f8fa898bad80c55a3fb829808385b5ecf24d2a3b",
        "line_num": 58,
        "line_str": "block|{ comment specifier|private name|ArchiveUtils parameter_list|()",
        "file_path": "src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java",
        "input_line_num": "range(56, 59)"
      },
      {
        "commit_hash": "b9c42f6334649b604f41472eecb2257e4dbe8318",
        "line_num": 357,
        "line_str": "literal|\"\\u8025\" argument_list|) expr_stmt|; block|} specifier|private",
        "file_path": "src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java",
        "input_file_path": "src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java",
        "input_line_num": "range(390, 391)"
      },
      {
        "commit_hash": "9d720cc80ad6a8b9bfc9dec06e28c7727a2bb118",
        "line_num": 45,
        "line_str": "specifier|public class|class name|ArchiveUtils block|{ comment",
        "file_path": "src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java",
        "input_line_num": "range(55, 56)"
      },
      {
        "commit_hash": "976d007ecc25745c4840a8dce8ddaae5d7fdcd78",
        "line_num": 868,
        "line_str": "decl_stmt|; specifier|final name|int name|len init|=",
        "file_path": "src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java",
        "input_line_num": "range(866, 869)"
      },
      {
        "commit_hash": "976d007ecc25745c4840a8dce8ddaae5d7fdcd78",
        "line_num": 867,
        "line_str": "argument_list|() decl_stmt|; specifier|final name|int name|len",
        "file_path": "src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java",
        "input_line_num": "range(866, 869)"
      },
      {
        "commit_hash": "976d007ecc25745c4840a8dce8ddaae5d7fdcd78",
        "line_num": 866,
        "line_str": "name|toCharArray argument_list|() decl_stmt|; specifier|final name|int",
        "file_path": "src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java",
        "input_line_num": "range(866, 869)"
      },
      {
        "commit_hash": "976d007ecc25745c4840a8dce8ddaae5d7fdcd78",
        "line_num": 862,
        "line_str": "name|chars init|= name|s operator|. name|toCharArray",
        "file_path": "src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java",
        "input_line_num": "range(858, 863)"
      },
      {
        "commit_hash": "976d007ecc25745c4840a8dce8ddaae5d7fdcd78",
        "line_num": 861,
        "line_str": "index|[] name|chars init|= name|s operator|.",
        "file_path": "src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java",
        "input_line_num": "range(858, 863)"
      },
      {
        "commit_hash": "976d007ecc25745c4840a8dce8ddaae5d7fdcd78",
        "line_num": 860,
        "line_str": "name|char index|[] name|chars init|= name|s",
        "file_path": "src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java",
        "input_line_num": "range(858, 863)"
      },
      {
        "commit_hash": "976d007ecc25745c4840a8dce8ddaae5d7fdcd78",
        "line_num": 859,
        "line_str": "specifier|final name|char index|[] name|chars init|=",
        "file_path": "src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java",
        "input_line_num": "range(858, 863)"
      }
    ]
  },
  {
    "id": 10042,
    "repo_name": "apache/commons-compress",
    "bug_commit_hash": ["75bfb688df3657d70ee6a41468328233bde5d218"],
    "fix_commit_hash": "d542fc2a2a18722f9bc3a6320133381a27b32b4e",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "6b1a5f2115e1d2434101f1361102d9ea9452a10d",
        "line_num": 477,
        "line_str": "expr_stmt|; block|} block|} end_class",
        "file_path": "src/test/java/org/apache/commons/compress/utils/ChecksumCalculatingInputStreamTest.java",
        "input_file_path": "src/test/java/org/apache/commons/compress/utils/ChecksumCalculatingInputStreamTest.java",
        "input_line_num": "range(443, 446)"
      },
      {
        "commit_hash": "6b1a5f2115e1d2434101f1361102d9ea9452a10d",
        "line_num": 476,
        "line_str": "argument_list|) expr_stmt|; block|} block|} end_class",
        "file_path": "src/test/java/org/apache/commons/compress/utils/ChecksumCalculatingInputStreamTest.java",
        "input_file_path": "src/test/java/org/apache/commons/compress/utils/ChecksumCalculatingInputStreamTest.java",
        "input_line_num": "range(443, 446)"
      },
      {
        "commit_hash": "6b1a5f2115e1d2434101f1361102d9ea9452a10d",
        "line_num": 475,
        "line_str": "argument_list|() argument_list|) expr_stmt|; block|} block|}",
        "file_path": "src/test/java/org/apache/commons/compress/utils/ChecksumCalculatingInputStreamTest.java",
        "input_file_path": "src/test/java/org/apache/commons/compress/utils/ChecksumCalculatingInputStreamTest.java",
        "input_line_num": "range(443, 446)"
      },
      {
        "commit_hash": "75bfb688df3657d70ee6a41468328233bde5d218",
        "line_num": 98,
        "line_str": "block|{ name|this operator|. name|checksum operator|=",
        "file_path": "src/main/java/org/apache/commons/compress/utils/ChecksumCalculatingInputStream.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/utils/ChecksumCalculatingInputStream.java",
        "input_line_num": "range(85, 89)"
      },
      {
        "commit_hash": "75bfb688df3657d70ee6a41468328233bde5d218",
        "line_num": 97,
        "line_str": "parameter_list|) block|{ name|this operator|. name|checksum",
        "file_path": "src/main/java/org/apache/commons/compress/utils/ChecksumCalculatingInputStream.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/utils/ChecksumCalculatingInputStream.java",
        "input_line_num": "range(85, 89)"
      },
      {
        "commit_hash": "75bfb688df3657d70ee6a41468328233bde5d218",
        "line_num": 96,
        "line_str": "name|in parameter_list|) block|{ name|this operator|.",
        "file_path": "src/main/java/org/apache/commons/compress/utils/ChecksumCalculatingInputStream.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/utils/ChecksumCalculatingInputStream.java",
        "input_line_num": "range(85, 89)"
      },
      {
        "commit_hash": "75bfb688df3657d70ee6a41468328233bde5d218",
        "line_num": 95,
        "line_str": "name|InputStream name|in parameter_list|) block|{ name|this",
        "file_path": "src/main/java/org/apache/commons/compress/utils/ChecksumCalculatingInputStream.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/utils/ChecksumCalculatingInputStream.java",
        "input_line_num": "range(85, 89)"
      }
    ]
  },
  {
    "id": 10043,
    "repo_name": "apache/commons-compress",
    "bug_commit_hash": ["e040d5cc65263efd31fac0e06ec2694cf147c041"],
    "fix_commit_hash": "ad5113ffe87f39ce33dbf4753cb5325f9a414438",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "f218e38a9ade8e51b98b1f8c9d16512c78b73dbc",
        "line_num": 233,
        "line_str": "name|buffer index|[ name|i index|] operator|==",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(268, 273)"
      },
      {
        "commit_hash": "f218e38a9ade8e51b98b1f8c9d16512c78b73dbc",
        "line_num": 232,
        "line_str": "condition|( name|buffer index|[ name|i index|]",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(268, 273)"
      },
      {
        "commit_hash": "f218e38a9ade8e51b98b1f8c9d16512c78b73dbc",
        "line_num": 231,
        "line_str": "if|if condition|( name|buffer index|[ name|i",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(268, 273)"
      },
      {
        "commit_hash": "f218e38a9ade8e51b98b1f8c9d16512c78b73dbc",
        "line_num": 230,
        "line_str": "block|{ if|if condition|( name|buffer index|[",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(268, 273)"
      },
      {
        "commit_hash": "f218e38a9ade8e51b98b1f8c9d16512c78b73dbc",
        "line_num": 229,
        "line_str": "control|) block|{ if|if condition|( name|buffer",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(268, 273)"
      },
      {
        "commit_hash": "4d9a915f2e87a6678d5c74883551023a2242def3",
        "line_num": 803,
        "line_str": "block|{ block|} block|} block|} end_class",
        "file_path": "src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java",
        "input_file_path": "src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java",
        "input_line_num": "range(808, 811)"
      },
      {
        "commit_hash": "4d9a915f2e87a6678d5c74883551023a2242def3",
        "line_num": 804,
        "line_str": "block|} block|} block|} end_class",
        "file_path": "src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java",
        "input_file_path": "src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java",
        "input_line_num": "range(808, 811)"
      },
      {
        "commit_hash": "4d9a915f2e87a6678d5c74883551023a2242def3",
        "line_num": 289,
        "line_str": "expr_stmt|; block|} return|return name|result operator|.",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(295, 296)"
      },
      {
        "commit_hash": "e040d5cc65263efd31fac0e06ec2694cf147c041",
        "line_num": 224,
        "line_str": "name|i control|) block|{ if|if condition|(",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(266, 268)"
      },
      {
        "commit_hash": "e040d5cc65263efd31fac0e06ec2694cf147c041",
        "line_num": 223,
        "line_str": "operator|++ name|i control|) block|{ if|if",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(266, 268)"
      },
      {
        "commit_hash": "4d9a915f2e87a6678d5c74883551023a2242def3",
        "line_num": 802,
        "line_str": "parameter_list|) block|{ block|} block|} block|}",
        "file_path": "src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java",
        "input_file_path": "src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java",
        "input_line_num": "range(808, 811)"
      },
      {
        "commit_hash": "f218e38a9ade8e51b98b1f8c9d16512c78b73dbc",
        "line_num": 251,
        "line_str": "name|buffer index|[ name|i index|] argument_list|)",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(286, 291)"
      },
      {
        "commit_hash": "f218e38a9ade8e51b98b1f8c9d16512c78b73dbc",
        "line_num": 250,
        "line_str": "operator|) name|buffer index|[ name|i index|]",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(286, 291)"
      },
      {
        "commit_hash": "f218e38a9ade8e51b98b1f8c9d16512c78b73dbc",
        "line_num": 249,
        "line_str": "name|char operator|) name|buffer index|[ name|i",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(286, 291)"
      },
      {
        "commit_hash": "f218e38a9ade8e51b98b1f8c9d16512c78b73dbc",
        "line_num": 248,
        "line_str": "operator|( name|char operator|) name|buffer index|[",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(286, 291)"
      },
      {
        "commit_hash": "f218e38a9ade8e51b98b1f8c9d16512c78b73dbc",
        "line_num": 247,
        "line_str": "argument_list|( operator|( name|char operator|) name|buffer",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(286, 291)"
      }
    ]
  },
  {
    "id": 10044,
    "repo_name": "apache/commons-compress",
    "bug_commit_hash": ["e040d5cc65263efd31fac0e06ec2694cf147c041"],
    "fix_commit_hash": "9bfc9b3592f909a00c386b13b3cb25f444aa2b03",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "4d9a915f2e87a6678d5c74883551023a2242def3",
        "line_num": 172,
        "line_str": "argument_list|( literal|\"Invalid octal digit at position \" operator|+ name|i operator|+",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(175, 187)"
      },
      {
        "commit_hash": "4d9a915f2e87a6678d5c74883551023a2242def3",
        "line_num": 139,
        "line_str": "if|if condition|( name|currentByte operator|== operator|(",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(143, 148)"
      },
      {
        "commit_hash": "4d9a915f2e87a6678d5c74883551023a2242def3",
        "line_num": 106,
        "line_str": "decl_stmt|; if|if condition|( name|currentByte operator|==",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(106, 116)"
      },
      {
        "commit_hash": "4d9a915f2e87a6678d5c74883551023a2242def3",
        "line_num": 189,
        "line_str": "literal|\"'\" argument_list|) throw|; block|} name|result",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(189, 196)"
      },
      {
        "commit_hash": "4d9a915f2e87a6678d5c74883551023a2242def3",
        "line_num": 156,
        "line_str": "expr_stmt|; comment if|if condition|( name|currentByte",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(160, 163)"
      },
      {
        "commit_hash": "4d9a915f2e87a6678d5c74883551023a2242def3",
        "line_num": 123,
        "line_str": "name|byte operator|) literal|' ' operator||| name|currentByte",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(129, 134)"
      },
      {
        "commit_hash": "e040d5cc65263efd31fac0e06ec2694cf147c041",
        "line_num": 90,
        "line_str": "name|end condition|; operator|++ name|i control|)",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(96, 100)"
      },
      {
        "commit_hash": "4d9a915f2e87a6678d5c74883551023a2242def3",
        "line_num": 173,
        "line_str": "literal|\"Invalid octal digit at position \" operator|+ name|i operator|+ literal|\" in '\"",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(175, 187)"
      },
      {
        "commit_hash": "4d9a915f2e87a6678d5c74883551023a2242def3",
        "line_num": 140,
        "line_str": "condition|( name|currentByte operator|== operator|( name|byte",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(143, 148)"
      },
      {
        "commit_hash": "4d9a915f2e87a6678d5c74883551023a2242def3",
        "line_num": 107,
        "line_str": "if|if condition|( name|currentByte operator|== literal|0",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(106, 116)"
      },
      {
        "commit_hash": "4d9a915f2e87a6678d5c74883551023a2242def3",
        "line_num": 124,
        "line_str": "operator|) literal|' ' operator||| name|currentByte operator|==",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(129, 134)"
      },
      {
        "commit_hash": "e040d5cc65263efd31fac0e06ec2694cf147c041",
        "line_num": 91,
        "line_str": "condition|; operator|++ name|i control|) block|{",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(96, 100)"
      },
      {
        "commit_hash": "4d9a915f2e87a6678d5c74883551023a2242def3",
        "line_num": 174,
        "line_str": "operator|+ name|i operator|+ literal|\" in '\" operator|+",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(175, 187)"
      },
      {
        "commit_hash": "4d9a915f2e87a6678d5c74883551023a2242def3",
        "line_num": 141,
        "line_str": "name|currentByte operator|== operator|( name|byte operator|)",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(143, 148)"
      },
      {
        "commit_hash": "4d9a915f2e87a6678d5c74883551023a2242def3",
        "line_num": 108,
        "line_str": "condition|( name|currentByte operator|== literal|0 condition|)",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(106, 116)"
      },
      {
        "commit_hash": "4d9a915f2e87a6678d5c74883551023a2242def3",
        "line_num": 125,
        "line_str": "literal|' ' operator||| name|currentByte operator|== literal|'0'",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(129, 134)"
      },
      {
        "commit_hash": "4d9a915f2e87a6678d5c74883551023a2242def3",
        "line_num": 175,
        "line_str": "name|i operator|+ literal|\" in '\" operator|+ operator|new",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(175, 187)"
      },
      {
        "commit_hash": "e040d5cc65263efd31fac0e06ec2694cf147c041",
        "line_num": 142,
        "line_str": "operator|( name|byte operator|) literal|' ' condition|)",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(148, 151)"
      },
      {
        "commit_hash": "4d9a915f2e87a6678d5c74883551023a2242def3",
        "line_num": 109,
        "line_str": "name|currentByte operator|== literal|0 condition|) block|{",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(106, 116)"
      },
      {
        "commit_hash": "4d9a915f2e87a6678d5c74883551023a2242def3",
        "line_num": 126,
        "line_str": "operator||| name|currentByte operator|== literal|'0' condition|)",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(129, 134)"
      },
      {
        "commit_hash": "4d9a915f2e87a6678d5c74883551023a2242def3",
        "line_num": 176,
        "line_str": "operator|+ literal|\" in '\" operator|+ operator|new name|String",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(175, 187)"
      },
      {
        "commit_hash": "e040d5cc65263efd31fac0e06ec2694cf147c041",
        "line_num": 143,
        "line_str": "name|byte operator|) literal|' ' condition|) block|{",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(148, 151)"
      },
      {
        "commit_hash": "e040d5cc65263efd31fac0e06ec2694cf147c041",
        "line_num": 77,
        "line_str": "name|offset operator|+ name|length decl_stmt|; for|for",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(85, 88)"
      },
      {
        "commit_hash": "4d9a915f2e87a6678d5c74883551023a2242def3",
        "line_num": 127,
        "line_str": "name|currentByte operator|== literal|'0' condition|) block|{",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(129, 134)"
      },
      {
        "commit_hash": "4d9a915f2e87a6678d5c74883551023a2242def3",
        "line_num": 94,
        "line_str": "operator|++ name|i control|) block|{ specifier|final",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(100, 102)"
      },
      {
        "commit_hash": "4d9a915f2e87a6678d5c74883551023a2242def3",
        "line_num": 177,
        "line_str": "literal|\" in '\" operator|+ operator|new name|String argument_list|(",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(175, 187)"
      },
      {
        "commit_hash": "e040d5cc65263efd31fac0e06ec2694cf147c041",
        "line_num": 78,
        "line_str": "operator|+ name|length decl_stmt|; for|for control|(",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(85, 88)"
      },
      {
        "commit_hash": "e040d5cc65263efd31fac0e06ec2694cf147c041",
        "line_num": 128,
        "line_str": "if|if condition|( name|stillPadding condition|) block|{",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(134, 143)"
      },
      {
        "commit_hash": "4d9a915f2e87a6678d5c74883551023a2242def3",
        "line_num": 95,
        "line_str": "name|i control|) block|{ specifier|final name|byte",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(100, 102)"
      },
      {
        "commit_hash": "4d9a915f2e87a6678d5c74883551023a2242def3",
        "line_num": 178,
        "line_str": "operator|+ operator|new name|String argument_list|( name|buffer",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(175, 187)"
      },
      {
        "commit_hash": "e040d5cc65263efd31fac0e06ec2694cf147c041",
        "line_num": 79,
        "line_str": "name|length decl_stmt|; for|for control|( name|int",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(85, 88)"
      },
      {
        "commit_hash": "e040d5cc65263efd31fac0e06ec2694cf147c041",
        "line_num": 129,
        "line_str": "condition|( name|stillPadding condition|) block|{ continue|continue;",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(134, 143)"
      },
      {
        "commit_hash": "4d9a915f2e87a6678d5c74883551023a2242def3",
        "line_num": 179,
        "line_str": "operator|new name|String argument_list|( name|buffer argument_list|,",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(175, 187)"
      },
      {
        "commit_hash": "f218e38a9ade8e51b98b1f8c9d16512c78b73dbc",
        "line_num": 146,
        "line_str": "operator|) literal|' ' condition|) block|{ comment",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(151, 156)"
      },
      {
        "commit_hash": "e040d5cc65263efd31fac0e06ec2694cf147c041",
        "line_num": 130,
        "line_str": "name|stillPadding condition|) block|{ continue|continue; block|}",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(134, 143)"
      },
      {
        "commit_hash": "4d9a915f2e87a6678d5c74883551023a2242def3",
        "line_num": 180,
        "line_str": "name|String argument_list|( name|buffer argument_list|, name|offset",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(175, 187)"
      },
      {
        "commit_hash": "f218e38a9ade8e51b98b1f8c9d16512c78b73dbc",
        "line_num": 147,
        "line_str": "literal|' ' condition|) block|{ comment break|break;",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(151, 156)"
      },
      {
        "commit_hash": "e040d5cc65263efd31fac0e06ec2694cf147c041",
        "line_num": 114,
        "line_str": "operator|== operator|( name|byte operator|) literal|' '",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(127, 129)"
      },
      {
        "commit_hash": "e040d5cc65263efd31fac0e06ec2694cf147c041",
        "line_num": 131,
        "line_str": "condition|) block|{ continue|continue; block|} if|if",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(134, 143)"
      },
      {
        "commit_hash": "e040d5cc65263efd31fac0e06ec2694cf147c041",
        "line_num": 65,
        "line_str": "name|result init|= literal|0 decl_stmt|; name|boolean",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(73, 81)"
      },
      {
        "commit_hash": "e36fc93f78d2edcddf80c9f1d2914c065f1d9ad0",
        "line_num": 294,
        "line_str": "argument_list|) expr_stmt|; name|buffer operator|= literal|\"abcdef \"",
        "file_path": "src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java",
        "input_file_path": "src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java",
        "input_line_num": "range(294, 296)"
      },
      {
        "commit_hash": "f218e38a9ade8e51b98b1f8c9d16512c78b73dbc",
        "line_num": 148,
        "line_str": "condition|) block|{ comment break|break; block|}",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(151, 156)"
      },
      {
        "commit_hash": "e040d5cc65263efd31fac0e06ec2694cf147c041",
        "line_num": 115,
        "line_str": "operator|( name|byte operator|) literal|' ' operator|||",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(127, 129)"
      },
      {
        "commit_hash": "e040d5cc65263efd31fac0e06ec2694cf147c041",
        "line_num": 82,
        "line_str": "control|( name|int name|i init|= name|offset",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(90, 95)"
      },
      {
        "commit_hash": "e040d5cc65263efd31fac0e06ec2694cf147c041",
        "line_num": 49,
        "line_str": "specifier|static name|long name|parseOctal parameter_list|( name|byte",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(55, 57)"
      },
      {
        "commit_hash": "e040d5cc65263efd31fac0e06ec2694cf147c041",
        "line_num": 132,
        "line_str": "block|{ continue|continue; block|} if|if condition|(",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(134, 143)"
      },
      {
        "commit_hash": "e040d5cc65263efd31fac0e06ec2694cf147c041",
        "line_num": 66,
        "line_str": "init|= literal|0 decl_stmt|; name|boolean name|stillPadding",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(73, 81)"
      },
      {
        "commit_hash": "e36fc93f78d2edcddf80c9f1d2914c065f1d9ad0",
        "line_num": 295,
        "line_str": "expr_stmt|; name|buffer operator|= literal|\"abcdef \" operator|.",
        "file_path": "src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java",
        "input_file_path": "src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java",
        "input_line_num": "range(294, 296)"
      },
      {
        "commit_hash": "f218e38a9ade8e51b98b1f8c9d16512c78b73dbc",
        "line_num": 149,
        "line_str": "block|{ comment break|break; block|} block|}",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(151, 156)"
      },
      {
        "commit_hash": "4d9a915f2e87a6678d5c74883551023a2242def3",
        "line_num": 116,
        "line_str": "block|} comment if|if condition|( name|currentByte",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(122, 127)"
      },
      {
        "commit_hash": "e040d5cc65263efd31fac0e06ec2694cf147c041",
        "line_num": 83,
        "line_str": "name|int name|i init|= name|offset init|;",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(90, 95)"
      },
      {
        "commit_hash": "e040d5cc65263efd31fac0e06ec2694cf147c041",
        "line_num": 50,
        "line_str": "name|long name|parseOctal parameter_list|( name|byte index|[]",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(55, 57)"
      },
      {
        "commit_hash": "4d9a915f2e87a6678d5c74883551023a2242def3",
        "line_num": 100,
        "line_str": "name|currentByte init|= name|buffer index|[ name|i",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(106, 116)"
      },
      {
        "commit_hash": "e040d5cc65263efd31fac0e06ec2694cf147c041",
        "line_num": 67,
        "line_str": "literal|0 decl_stmt|; name|boolean name|stillPadding init|=",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(73, 81)"
      },
      {
        "commit_hash": "4d9a915f2e87a6678d5c74883551023a2242def3",
        "line_num": 183,
        "line_str": "argument_list|, name|offset argument_list|, name|length argument_list|)",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(189, 196)"
      },
      {
        "commit_hash": "f218e38a9ade8e51b98b1f8c9d16512c78b73dbc",
        "line_num": 150,
        "line_str": "comment break|break; block|} block|} name|stillPadding",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(151, 156)"
      },
      {
        "commit_hash": "4d9a915f2e87a6678d5c74883551023a2242def3",
        "line_num": 117,
        "line_str": "comment if|if condition|( name|currentByte operator|==",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(122, 127)"
      },
      {
        "commit_hash": "e040d5cc65263efd31fac0e06ec2694cf147c041",
        "line_num": 84,
        "line_str": "name|i init|= name|offset init|; name|i",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(90, 95)"
      },
      {
        "commit_hash": "f218e38a9ade8e51b98b1f8c9d16512c78b73dbc",
        "line_num": 51,
        "line_str": "name|parseOctal parameter_list|( name|byte index|[] name|buffer",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(57, 59)"
      },
      {
        "commit_hash": "4d9a915f2e87a6678d5c74883551023a2242def3",
        "line_num": 412,
        "line_str": "argument_list|) expr_stmt|; name|fail argument_list|( literal|\"Expected IllegalArgumentException\"",
        "file_path": "src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java",
        "input_file_path": "src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java",
        "input_line_num": "range(357, 362)"
      },
      {
        "commit_hash": "4d9a915f2e87a6678d5c74883551023a2242def3",
        "line_num": 101,
        "line_str": "init|= name|buffer index|[ name|i index|]",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(106, 116)"
      },
      {
        "commit_hash": "e040d5cc65263efd31fac0e06ec2694cf147c041",
        "line_num": 68,
        "line_str": "decl_stmt|; name|boolean name|stillPadding init|= literal|true",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(73, 81)"
      },
      {
        "commit_hash": "4d9a915f2e87a6678d5c74883551023a2242def3",
        "line_num": 184,
        "line_str": "name|offset argument_list|, name|length argument_list|) operator|+",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(189, 196)"
      },
      {
        "commit_hash": "e040d5cc65263efd31fac0e06ec2694cf147c041",
        "line_num": 151,
        "line_str": "name|stillPadding operator|= literal|false expr_stmt|; comment",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(156, 160)"
      },
      {
        "commit_hash": "4d9a915f2e87a6678d5c74883551023a2242def3",
        "line_num": 118,
        "line_str": "if|if condition|( name|currentByte operator|== operator|(",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(122, 127)"
      },
      {
        "commit_hash": "e040d5cc65263efd31fac0e06ec2694cf147c041",
        "line_num": 85,
        "line_str": "init|= name|offset init|; name|i operator|<",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(90, 95)"
      },
      {
        "commit_hash": "f218e38a9ade8e51b98b1f8c9d16512c78b73dbc",
        "line_num": 52,
        "line_str": "parameter_list|( name|byte index|[] name|buffer parameter_list|,",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(57, 59)"
      },
      {
        "commit_hash": "4d9a915f2e87a6678d5c74883551023a2242def3",
        "line_num": 413,
        "line_str": "expr_stmt|; name|fail argument_list|( literal|\"Expected IllegalArgumentException\" argument_list|)",
        "file_path": "src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java",
        "input_file_path": "src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java",
        "input_line_num": "range(357, 362)"
      },
      {
        "commit_hash": "4d9a915f2e87a6678d5c74883551023a2242def3",
        "line_num": 102,
        "line_str": "name|buffer index|[ name|i index|] decl_stmt|;",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(106, 116)"
      },
      {
        "commit_hash": "e040d5cc65263efd31fac0e06ec2694cf147c041",
        "line_num": 69,
        "line_str": "name|boolean name|stillPadding init|= literal|true decl_stmt|;",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(73, 81)"
      },
      {
        "commit_hash": "4d9a915f2e87a6678d5c74883551023a2242def3",
        "line_num": 185,
        "line_str": "argument_list|, name|length argument_list|) operator|+ literal|\"'\"",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(189, 196)"
      },
      {
        "commit_hash": "4d9a915f2e87a6678d5c74883551023a2242def3",
        "line_num": 119,
        "line_str": "condition|( name|currentByte operator|== operator|( name|byte",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(122, 127)"
      },
      {
        "commit_hash": "e040d5cc65263efd31fac0e06ec2694cf147c041",
        "line_num": 86,
        "line_str": "name|offset init|; name|i operator|< name|end",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(90, 95)"
      },
      {
        "commit_hash": "4d9a915f2e87a6678d5c74883551023a2242def3",
        "line_num": 414,
        "line_str": "name|fail argument_list|( literal|\"Expected IllegalArgumentException\" argument_list|) expr_stmt|;",
        "file_path": "src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java",
        "input_file_path": "src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java",
        "input_line_num": "range(357, 362)"
      },
      {
        "commit_hash": "4d9a915f2e87a6678d5c74883551023a2242def3",
        "line_num": 169,
        "line_str": "throw|throw operator|new name|IllegalArgumentException argument_list|( literal|\"Invalid octal digit at position \"",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(175, 187)"
      },
      {
        "commit_hash": "4d9a915f2e87a6678d5c74883551023a2242def3",
        "line_num": 103,
        "line_str": "index|[ name|i index|] decl_stmt|; if|if",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(106, 116)"
      },
      {
        "commit_hash": "e040d5cc65263efd31fac0e06ec2694cf147c041",
        "line_num": 70,
        "line_str": "name|stillPadding init|= literal|true decl_stmt|; name|int",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(73, 81)"
      },
      {
        "commit_hash": "4d9a915f2e87a6678d5c74883551023a2242def3",
        "line_num": 186,
        "line_str": "name|length argument_list|) operator|+ literal|\"'\" argument_list|)",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(189, 196)"
      },
      {
        "commit_hash": "4d9a915f2e87a6678d5c74883551023a2242def3",
        "line_num": 120,
        "line_str": "name|currentByte operator|== operator|( name|byte operator|)",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(122, 127)"
      },
      {
        "commit_hash": "4d9a915f2e87a6678d5c74883551023a2242def3",
        "line_num": 415,
        "line_str": "argument_list|( literal|\"Expected IllegalArgumentException\" argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java",
        "input_file_path": "src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java",
        "input_line_num": "range(357, 362)"
      },
      {
        "commit_hash": "4d9a915f2e87a6678d5c74883551023a2242def3",
        "line_num": 170,
        "line_str": "operator|new name|IllegalArgumentException argument_list|( literal|\"Invalid octal digit at position \" operator|+",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(175, 187)"
      },
      {
        "commit_hash": "4d9a915f2e87a6678d5c74883551023a2242def3",
        "line_num": 137,
        "line_str": "continue|continue; block|} if|if condition|( name|currentByte",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(143, 148)"
      },
      {
        "commit_hash": "4d9a915f2e87a6678d5c74883551023a2242def3",
        "line_num": 104,
        "line_str": "name|i index|] decl_stmt|; if|if condition|(",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(106, 116)"
      },
      {
        "commit_hash": "e040d5cc65263efd31fac0e06ec2694cf147c041",
        "line_num": 71,
        "line_str": "init|= literal|true decl_stmt|; name|int name|end",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(73, 81)"
      },
      {
        "commit_hash": "4d9a915f2e87a6678d5c74883551023a2242def3",
        "line_num": 187,
        "line_str": "argument_list|) operator|+ literal|\"'\" argument_list|) throw|;",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(189, 196)"
      },
      {
        "commit_hash": "4d9a915f2e87a6678d5c74883551023a2242def3",
        "line_num": 154,
        "line_str": "operator|= literal|false expr_stmt|; comment if|if",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(160, 163)"
      },
      {
        "commit_hash": "e040d5cc65263efd31fac0e06ec2694cf147c041",
        "line_num": 88,
        "line_str": "name|i operator|< name|end condition|; operator|++",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(96, 100)"
      },
      {
        "commit_hash": "4d9a915f2e87a6678d5c74883551023a2242def3",
        "line_num": 416,
        "line_str": "literal|\"Expected IllegalArgumentException\" argument_list|) expr_stmt|; block|} catch|catch",
        "file_path": "src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java",
        "input_file_path": "src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java",
        "input_line_num": "range(357, 362)"
      },
      {
        "commit_hash": "4d9a915f2e87a6678d5c74883551023a2242def3",
        "line_num": 171,
        "line_str": "name|IllegalArgumentException argument_list|( literal|\"Invalid octal digit at position \" operator|+ name|i",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(175, 187)"
      },
      {
        "commit_hash": "4d9a915f2e87a6678d5c74883551023a2242def3",
        "line_num": 138,
        "line_str": "block|} if|if condition|( name|currentByte operator|==",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(143, 148)"
      },
      {
        "commit_hash": "4d9a915f2e87a6678d5c74883551023a2242def3",
        "line_num": 105,
        "line_str": "index|] decl_stmt|; if|if condition|( name|currentByte",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(106, 116)"
      },
      {
        "commit_hash": "e040d5cc65263efd31fac0e06ec2694cf147c041",
        "line_num": 72,
        "line_str": "literal|true decl_stmt|; name|int name|end init|=",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(73, 81)"
      },
      {
        "commit_hash": "4d9a915f2e87a6678d5c74883551023a2242def3",
        "line_num": 188,
        "line_str": "operator|+ literal|\"'\" argument_list|) throw|; block|}",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(189, 196)"
      },
      {
        "commit_hash": "4d9a915f2e87a6678d5c74883551023a2242def3",
        "line_num": 155,
        "line_str": "literal|false expr_stmt|; comment if|if condition|(",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(160, 163)"
      },
      {
        "commit_hash": "e040d5cc65263efd31fac0e06ec2694cf147c041",
        "line_num": 89,
        "line_str": "operator|< name|end condition|; operator|++ name|i",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(96, 100)"
      }
    ]
  },
  {
    "id": 10045,
    "repo_name": "google/gson",
    "bug_commit_hash": ["3555ab59ef9da14aa2e450eb639800cf8a351d2f"],
    "fix_commit_hash": "f62db6ebd503809adaff2b6da2584674bf270541",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "3555ab59ef9da14aa2e450eb639800cf8a351d2f",
        "line_num": 600,
        "line_str": "argument_list|( name|value argument_list|) condition|) block|{",
        "file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_line_num": "range(1177, 1181)"
      },
      {
        "commit_hash": "0b766cc5764862baf6c3ade8d5c4e73446fcbf2b",
        "line_num": 58,
        "line_str": "name|BigInteger import|; end_import  begin_import",
        "file_path": "gson/src/test/java/com/google/gson/stream/JsonWriterTest.java",
        "input_file_path": "gson/src/test/java/com/google/gson/stream/JsonWriterTest.java",
        "input_line_num": "range(58, 69)"
      },
      {
        "commit_hash": "3555ab59ef9da14aa2e450eb639800cf8a351d2f",
        "line_num": 588,
        "line_str": "if|if condition|( name|Double operator|. name|isNaN",
        "file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_line_num": "range(1162, 1168)"
      },
      {
        "commit_hash": "65b6f010a22de52a8268e1d082fa1e5a354d0890",
        "line_num": 811,
        "line_str": "block|} name|writeDeferredName argument_list|() expr_stmt|; name|beforeValue",
        "file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_line_num": "range(1189, 1193)"
      },
      {
        "commit_hash": "3555ab59ef9da14aa2e450eb639800cf8a351d2f",
        "line_num": 584,
        "line_str": "parameter_list|) throws|throws name|IOException block|{ if|if",
        "file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_line_num": "range(1162, 1168)"
      },
      {
        "commit_hash": "0b766cc5764862baf6c3ade8d5c4e73446fcbf2b",
        "line_num": 67,
        "line_str": "operator|. name|TestCase import|; end_import",
        "file_path": "gson/src/test/java/com/google/gson/stream/JsonWriterTest.java",
        "input_file_path": "gson/src/test/java/com/google/gson/stream/JsonWriterTest.java",
        "input_line_num": "range(58, 69)"
      },
      {
        "commit_hash": "f98bfef28d37a6872e01639c4bb14b8fea03c488",
        "line_num": 1150,
        "line_str": "argument_list|() expr_stmt|; name|beforeValue argument_list|() expr_stmt|;",
        "file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_line_num": "range(1193, 1196)"
      },
      {
        "commit_hash": "0b766cc5764862baf6c3ade8d5c4e73446fcbf2b",
        "line_num": 63,
        "line_str": "import|import name|junit operator|. name|framework operator|.",
        "file_path": "gson/src/test/java/com/google/gson/stream/JsonWriterTest.java",
        "input_file_path": "gson/src/test/java/com/google/gson/stream/JsonWriterTest.java",
        "input_line_num": "range(58, 69)"
      },
      {
        "commit_hash": "3555ab59ef9da14aa2e450eb639800cf8a351d2f",
        "line_num": 601,
        "line_str": "name|value argument_list|) condition|) block|{ throw|throw",
        "file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_line_num": "range(1177, 1181)"
      },
      {
        "commit_hash": "0b766cc5764862baf6c3ade8d5c4e73446fcbf2b",
        "line_num": 59,
        "line_str": "import|; end_import  begin_import import|import",
        "file_path": "gson/src/test/java/com/google/gson/stream/JsonWriterTest.java",
        "input_file_path": "gson/src/test/java/com/google/gson/stream/JsonWriterTest.java",
        "input_line_num": "range(58, 69)"
      },
      {
        "commit_hash": "3555ab59ef9da14aa2e450eb639800cf8a351d2f",
        "line_num": 589,
        "line_str": "condition|( name|Double operator|. name|isNaN argument_list|(",
        "file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_line_num": "range(1162, 1168)"
      },
      {
        "commit_hash": "3555ab59ef9da14aa2e450eb639800cf8a351d2f",
        "line_num": 585,
        "line_str": "throws|throws name|IOException block|{ if|if condition|(",
        "file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_line_num": "range(1162, 1168)"
      },
      {
        "commit_hash": "65b6f010a22de52a8268e1d082fa1e5a354d0890",
        "line_num": 808,
        "line_str": "name|value argument_list|) throw|; block|} name|writeDeferredName",
        "file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_line_num": "range(1189, 1193)"
      },
      {
        "commit_hash": "0b766cc5764862baf6c3ade8d5c4e73446fcbf2b",
        "line_num": 68,
        "line_str": "name|TestCase import|; end_import  begin_class",
        "file_path": "gson/src/test/java/com/google/gson/stream/JsonWriterTest.java",
        "input_file_path": "gson/src/test/java/com/google/gson/stream/JsonWriterTest.java",
        "input_line_num": "range(58, 69)"
      },
      {
        "commit_hash": "f98bfef28d37a6872e01639c4bb14b8fea03c488",
        "line_num": 1151,
        "line_str": "expr_stmt|; name|beforeValue argument_list|() expr_stmt|; name|out",
        "file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_line_num": "range(1193, 1196)"
      },
      {
        "commit_hash": "0b766cc5764862baf6c3ade8d5c4e73446fcbf2b",
        "line_num": 64,
        "line_str": "name|junit operator|. name|framework operator|. name|TestCase",
        "file_path": "gson/src/test/java/com/google/gson/stream/JsonWriterTest.java",
        "input_file_path": "gson/src/test/java/com/google/gson/stream/JsonWriterTest.java",
        "input_line_num": "range(58, 69)"
      },
      {
        "commit_hash": "3555ab59ef9da14aa2e450eb639800cf8a351d2f",
        "line_num": 602,
        "line_str": "argument_list|) condition|) block|{ throw|throw operator|new",
        "file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_line_num": "range(1177, 1181)"
      },
      {
        "commit_hash": "0b766cc5764862baf6c3ade8d5c4e73446fcbf2b",
        "line_num": 60,
        "line_str": "end_import  begin_import import|import name|junit",
        "file_path": "gson/src/test/java/com/google/gson/stream/JsonWriterTest.java",
        "input_file_path": "gson/src/test/java/com/google/gson/stream/JsonWriterTest.java",
        "input_line_num": "range(58, 69)"
      },
      {
        "commit_hash": "3555ab59ef9da14aa2e450eb639800cf8a351d2f",
        "line_num": 586,
        "line_str": "name|IOException block|{ if|if condition|( name|Double",
        "file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_line_num": "range(1162, 1168)"
      },
      {
        "commit_hash": "65b6f010a22de52a8268e1d082fa1e5a354d0890",
        "line_num": 809,
        "line_str": "argument_list|) throw|; block|} name|writeDeferredName argument_list|()",
        "file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_line_num": "range(1189, 1193)"
      },
      {
        "commit_hash": "0b766cc5764862baf6c3ade8d5c4e73446fcbf2b",
        "line_num": 65,
        "line_str": "operator|. name|framework operator|. name|TestCase import|;",
        "file_path": "gson/src/test/java/com/google/gson/stream/JsonWriterTest.java",
        "input_file_path": "gson/src/test/java/com/google/gson/stream/JsonWriterTest.java",
        "input_line_num": "range(58, 69)"
      },
      {
        "commit_hash": "0b766cc5764862baf6c3ade8d5c4e73446fcbf2b",
        "line_num": 61,
        "line_str": "begin_import import|import name|junit operator|.",
        "file_path": "gson/src/test/java/com/google/gson/stream/JsonWriterTest.java",
        "input_file_path": "gson/src/test/java/com/google/gson/stream/JsonWriterTest.java",
        "input_line_num": "range(58, 69)"
      },
      {
        "commit_hash": "3555ab59ef9da14aa2e450eb639800cf8a351d2f",
        "line_num": 599,
        "line_str": "name|isInfinite argument_list|( name|value argument_list|) condition|)",
        "file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_line_num": "range(1177, 1181)"
      },
      {
        "commit_hash": "0b766cc5764862baf6c3ade8d5c4e73446fcbf2b",
        "line_num": 20,
        "line_str": "end_package  begin_import import|import name|java",
        "file_path": "gson/src/test/java/com/google/gson/stream/JsonWriterTest.java",
        "input_file_path": "gson/src/test/java/com/google/gson/stream/JsonWriterTest.java",
        "input_line_num": "range(20, 21)"
      },
      {
        "commit_hash": "3555ab59ef9da14aa2e450eb639800cf8a351d2f",
        "line_num": 587,
        "line_str": "block|{ if|if condition|( name|Double operator|.",
        "file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_line_num": "range(1162, 1168)"
      },
      {
        "commit_hash": "65b6f010a22de52a8268e1d082fa1e5a354d0890",
        "line_num": 810,
        "line_str": "throw|; block|} name|writeDeferredName argument_list|() expr_stmt|;",
        "file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_line_num": "range(1189, 1193)"
      },
      {
        "commit_hash": "3555ab59ef9da14aa2e450eb639800cf8a351d2f",
        "line_num": 747,
        "line_str": "block|} block|} specifier|public name|void name|testDoubles",
        "file_path": "gson/src/test/java/com/google/gson/stream/JsonWriterTest.java",
        "input_file_path": "gson/src/test/java/com/google/gson/stream/JsonWriterTest.java",
        "input_line_num": "range(1027, 1028)"
      },
      {
        "commit_hash": "0b766cc5764862baf6c3ade8d5c4e73446fcbf2b",
        "line_num": 66,
        "line_str": "name|framework operator|. name|TestCase import|; end_import",
        "file_path": "gson/src/test/java/com/google/gson/stream/JsonWriterTest.java",
        "input_file_path": "gson/src/test/java/com/google/gson/stream/JsonWriterTest.java",
        "input_line_num": "range(58, 69)"
      },
      {
        "commit_hash": "f98bfef28d37a6872e01639c4bb14b8fea03c488",
        "line_num": 1149,
        "line_str": "name|writeDeferredName argument_list|() expr_stmt|; name|beforeValue argument_list|()",
        "file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_line_num": "range(1193, 1196)"
      },
      {
        "commit_hash": "0b766cc5764862baf6c3ade8d5c4e73446fcbf2b",
        "line_num": 62,
        "line_str": "begin_import import|import name|junit operator|. name|framework",
        "file_path": "gson/src/test/java/com/google/gson/stream/JsonWriterTest.java",
        "input_file_path": "gson/src/test/java/com/google/gson/stream/JsonWriterTest.java",
        "input_line_num": "range(58, 69)"
      }
    ]
  },
  {
    "id": 10046,
    "repo_name": "FasterXML/jackson-core",
    "bug_commit_hash": ["2134a8dd38b4ba1b04252607187d4bc49ae1e45b"],
    "fix_commit_hash": "a9695d5b007901d6b75afebaf82c470d28122a88",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "2134a8dd38b4ba1b04252607187d4bc49ae1e45b",
        "line_num": 753,
        "line_str": "operator|<= name|src operator|. name|length operator|)",
        "file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_line_num": "range(788, 793)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 345,
        "line_str": "argument_list|, literal|\"not owned\" argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_line_num": "range(342, 347)"
      },
      {
        "commit_hash": "2134a8dd38b4ba1b04252607187d4bc49ae1e45b",
        "line_num": 749,
        "line_str": "operator|( name|toRelease operator|. name|length operator|<=",
        "file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_line_num": "range(788, 793)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 279,
        "line_str": "argument_list|, literal|\"not owned\" argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_line_num": "range(276, 281)"
      },
      {
        "commit_hash": "2134a8dd38b4ba1b04252607187d4bc49ae1e45b",
        "line_num": 811,
        "line_str": "name|IllegalArgumentException argument_list|( literal|\"Trying to release buffer not owned by the context\" argument_list|) return|;",
        "file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_line_num": "range(851, 854)"
      },
      {
        "commit_hash": "2134a8dd38b4ba1b04252607187d4bc49ae1e45b",
        "line_num": 778,
        "line_str": "block|{ if|if condition|( operator|( name|toRelease",
        "file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_line_num": "range(817, 819)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 213,
        "line_str": "argument_list|, literal|\"not owned\" argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_line_num": "range(210, 215)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 147,
        "line_str": "literal|\"not owned\" argument_list|) expr_stmt|; block|} comment",
        "file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_line_num": "range(143, 148)"
      },
      {
        "commit_hash": "2134a8dd38b4ba1b04252607187d4bc49ae1e45b",
        "line_num": 807,
        "line_str": "parameter_list|() block|{ return|return operator|new name|IllegalArgumentException",
        "file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_line_num": "range(845, 850)"
      },
      {
        "commit_hash": "27af7d9c2d8518a672a67189757688ffe48a358a",
        "line_num": 708,
        "line_str": "operator|new name|IllegalArgumentException argument_list|( literal|\"Trying to release buffer not owned by the context\" argument_list|)",
        "file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_line_num": "range(850, 851)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 143,
        "line_str": "name|verifyException argument_list|( name|e argument_list|, literal|\"not owned\"",
        "file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_line_num": "range(143, 148)"
      },
      {
        "commit_hash": "2134a8dd38b4ba1b04252607187d4bc49ae1e45b",
        "line_num": 737,
        "line_str": "index|[] name|src parameter_list|) block|{ if|if",
        "file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_line_num": "range(776, 780)"
      },
      {
        "commit_hash": "2134a8dd38b4ba1b04252607187d4bc49ae1e45b",
        "line_num": 791,
        "line_str": "operator|<= name|src operator|. name|length operator|)",
        "file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_line_num": "range(827, 832)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 416,
        "line_str": "literal|\"not owned\" argument_list|) expr_stmt|; block|} name|ctxt",
        "file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_line_num": "range(412, 417)"
      },
      {
        "commit_hash": "2134a8dd38b4ba1b04252607187d4bc49ae1e45b",
        "line_num": 787,
        "line_str": "operator|( name|toRelease operator|. name|length operator|<=",
        "file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_line_num": "range(827, 832)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 412,
        "line_str": "name|verifyException argument_list|( name|e argument_list|, literal|\"not owned\"",
        "file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_line_num": "range(412, 417)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 346,
        "line_str": "literal|\"not owned\" argument_list|) expr_stmt|; block|} name|ctxt",
        "file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_line_num": "range(342, 347)"
      },
      {
        "commit_hash": "2134a8dd38b4ba1b04252607187d4bc49ae1e45b",
        "line_num": 750,
        "line_str": "name|toRelease operator|. name|length operator|<= name|src",
        "file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_line_num": "range(788, 793)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 280,
        "line_str": "literal|\"not owned\" argument_list|) expr_stmt|; block|} name|ctxt",
        "file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_line_num": "range(276, 281)"
      },
      {
        "commit_hash": "2134a8dd38b4ba1b04252607187d4bc49ae1e45b",
        "line_num": 812,
        "line_str": "argument_list|( literal|\"Trying to release buffer not owned by the context\" argument_list|) return|; block|}",
        "file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_line_num": "range(851, 854)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 214,
        "line_str": "literal|\"not owned\" argument_list|) expr_stmt|; block|} name|ctxt",
        "file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_line_num": "range(210, 215)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 342,
        "line_str": "name|verifyException argument_list|( name|e argument_list|, literal|\"not owned\"",
        "file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_line_num": "range(342, 347)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 276,
        "line_str": "name|verifyException argument_list|( name|e argument_list|, literal|\"not owned\"",
        "file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_line_num": "range(276, 281)"
      },
      {
        "commit_hash": "2134a8dd38b4ba1b04252607187d4bc49ae1e45b",
        "line_num": 808,
        "line_str": "block|{ return|return operator|new name|IllegalArgumentException argument_list|(",
        "file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_line_num": "range(845, 850)"
      },
      {
        "commit_hash": "2134a8dd38b4ba1b04252607187d4bc49ae1e45b",
        "line_num": 775,
        "line_str": "index|[] name|src parameter_list|) block|{ if|if",
        "file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_line_num": "range(815, 816)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 210,
        "line_str": "name|verifyException argument_list|( name|e argument_list|, literal|\"not owned\"",
        "file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_line_num": "range(210, 215)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 144,
        "line_str": "argument_list|( name|e argument_list|, literal|\"not owned\" argument_list|)",
        "file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_line_num": "range(143, 148)"
      },
      {
        "commit_hash": "2134a8dd38b4ba1b04252607187d4bc49ae1e45b",
        "line_num": 738,
        "line_str": "name|src parameter_list|) block|{ if|if condition|(",
        "file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_line_num": "range(776, 780)"
      },
      {
        "commit_hash": "27af7d9c2d8518a672a67189757688ffe48a358a",
        "line_num": 697,
        "line_str": "name|src parameter_list|) block|{ if|if condition|(",
        "file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_line_num": "range(816, 817)"
      },
      {
        "commit_hash": "2134a8dd38b4ba1b04252607187d4bc49ae1e45b",
        "line_num": 788,
        "line_str": "name|toRelease operator|. name|length operator|<= name|src",
        "file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_line_num": "range(827, 832)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 413,
        "line_str": "argument_list|( name|e argument_list|, literal|\"not owned\" argument_list|)",
        "file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_line_num": "range(412, 417)"
      },
      {
        "commit_hash": "2134a8dd38b4ba1b04252607187d4bc49ae1e45b",
        "line_num": 751,
        "line_str": "operator|. name|length operator|<= name|src operator|.",
        "file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_line_num": "range(788, 793)"
      },
      {
        "commit_hash": "2134a8dd38b4ba1b04252607187d4bc49ae1e45b",
        "line_num": 813,
        "line_str": "literal|\"Trying to release buffer not owned by the context\" argument_list|) return|; block|} block|}",
        "file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_line_num": "range(851, 854)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 343,
        "line_str": "argument_list|( name|e argument_list|, literal|\"not owned\" argument_list|)",
        "file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_line_num": "range(342, 347)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 277,
        "line_str": "argument_list|( name|e argument_list|, literal|\"not owned\" argument_list|)",
        "file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_line_num": "range(276, 281)"
      },
      {
        "commit_hash": "2134a8dd38b4ba1b04252607187d4bc49ae1e45b",
        "line_num": 809,
        "line_str": "return|return operator|new name|IllegalArgumentException argument_list|( literal|\"Trying to release buffer not owned by the context\"",
        "file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_line_num": "range(845, 850)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 211,
        "line_str": "argument_list|( name|e argument_list|, literal|\"not owned\" argument_list|)",
        "file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_line_num": "range(210, 215)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 145,
        "line_str": "name|e argument_list|, literal|\"not owned\" argument_list|) expr_stmt|;",
        "file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_line_num": "range(143, 148)"
      },
      {
        "commit_hash": "2134a8dd38b4ba1b04252607187d4bc49ae1e45b",
        "line_num": 805,
        "line_str": "name|IllegalArgumentException name|wrongBuf parameter_list|() block|{ return|return",
        "file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_line_num": "range(845, 850)"
      },
      {
        "commit_hash": "2134a8dd38b4ba1b04252607187d4bc49ae1e45b",
        "line_num": 739,
        "line_str": "parameter_list|) block|{ if|if condition|( operator|(",
        "file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_line_num": "range(776, 780)"
      },
      {
        "commit_hash": "2134a8dd38b4ba1b04252607187d4bc49ae1e45b",
        "line_num": 789,
        "line_str": "operator|. name|length operator|<= name|src operator|.",
        "file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_line_num": "range(827, 832)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 414,
        "line_str": "name|e argument_list|, literal|\"not owned\" argument_list|) expr_stmt|;",
        "file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_line_num": "range(412, 417)"
      },
      {
        "commit_hash": "2134a8dd38b4ba1b04252607187d4bc49ae1e45b",
        "line_num": 752,
        "line_str": "name|length operator|<= name|src operator|. name|length",
        "file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_line_num": "range(788, 793)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 344,
        "line_str": "name|e argument_list|, literal|\"not owned\" argument_list|) expr_stmt|;",
        "file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_line_num": "range(342, 347)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 278,
        "line_str": "name|e argument_list|, literal|\"not owned\" argument_list|) expr_stmt|;",
        "file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_line_num": "range(276, 281)"
      },
      {
        "commit_hash": "2134a8dd38b4ba1b04252607187d4bc49ae1e45b",
        "line_num": 777,
        "line_str": "parameter_list|) block|{ if|if condition|( operator|(",
        "file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_line_num": "range(817, 819)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 212,
        "line_str": "name|e argument_list|, literal|\"not owned\" argument_list|) expr_stmt|;",
        "file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_line_num": "range(210, 215)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 146,
        "line_str": "argument_list|, literal|\"not owned\" argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_line_num": "range(143, 148)"
      },
      {
        "commit_hash": "2134a8dd38b4ba1b04252607187d4bc49ae1e45b",
        "line_num": 806,
        "line_str": "name|wrongBuf parameter_list|() block|{ return|return operator|new",
        "file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_line_num": "range(845, 850)"
      },
      {
        "commit_hash": "2134a8dd38b4ba1b04252607187d4bc49ae1e45b",
        "line_num": 740,
        "line_str": "block|{ if|if condition|( operator|( name|toRelease",
        "file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_line_num": "range(776, 780)"
      },
      {
        "commit_hash": "2134a8dd38b4ba1b04252607187d4bc49ae1e45b",
        "line_num": 790,
        "line_str": "name|length operator|<= name|src operator|. name|length",
        "file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_line_num": "range(827, 832)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 415,
        "line_str": "argument_list|, literal|\"not owned\" argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_line_num": "range(412, 417)"
      }
    ]
  },
  {
    "id": 10047,
    "repo_name": "FasterXML/jackson-core",
    "bug_commit_hash": ["b1fa078c8f5009522f72e85ce1bcca8afed32640"],
    "fix_commit_hash": "8e1fb5e41b8d61531e87b0d73597ca84af64a3be",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "b1fa078c8f5009522f72e85ce1bcca8afed32640",
        "line_num": 1664,
        "line_str": "operator|( name|MAX_SEGMENT_LEN operator|+ literal|1 operator|)",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1742, 1768)"
      },
      {
        "commit_hash": "b1fa078c8f5009522f72e85ce1bcca8afed32640",
        "line_num": 1660,
        "line_str": "operator|== name|MAX_SEGMENT_LEN operator|) condition|? operator|(",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1742, 1768)"
      },
      {
        "commit_hash": "b1fa078c8f5009522f72e85ce1bcca8afed32640",
        "line_num": 1656,
        "line_str": "name|newLen init|= operator|( name|len operator|==",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1742, 1768)"
      },
      {
        "commit_hash": "ad96ebf3ba6b488f6bfffc1b350911c7a280a5a0",
        "line_num": 1751,
        "line_str": "operator|) argument_list|) decl_stmt|; return|return operator|(",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1773, 1777)"
      },
      {
        "commit_hash": "b1fa078c8f5009522f72e85ce1bcca8afed32640",
        "line_num": 1652,
        "line_str": "name|length decl_stmt|; comment name|int name|newLen",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1742, 1768)"
      },
      {
        "commit_hash": "b1fa078c8f5009522f72e85ce1bcca8afed32640",
        "line_num": 1673,
        "line_str": "argument_list|( name|MAX_SEGMENT_LEN argument_list|, name|len operator|+",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1742, 1768)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 251,
        "line_str": "argument_list|) expr_stmt|; block|} block|} end_class",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(439, 442)"
      },
      {
        "commit_hash": "b1fa078c8f5009522f72e85ce1bcca8afed32640",
        "line_num": 1669,
        "line_str": "else|: name|Math operator|. name|min argument_list|(",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1742, 1768)"
      },
      {
        "commit_hash": "b1fa078c8f5009522f72e85ce1bcca8afed32640",
        "line_num": 1665,
        "line_str": "name|MAX_SEGMENT_LEN operator|+ literal|1 operator|) else|:",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1742, 1768)"
      },
      {
        "commit_hash": "b1fa078c8f5009522f72e85ce1bcca8afed32640",
        "line_num": 1661,
        "line_str": "name|MAX_SEGMENT_LEN operator|) condition|? operator|( name|MAX_SEGMENT_LEN",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1742, 1768)"
      },
      {
        "commit_hash": "b1fa078c8f5009522f72e85ce1bcca8afed32640",
        "line_num": 1657,
        "line_str": "init|= operator|( name|len operator|== name|MAX_SEGMENT_LEN",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1742, 1768)"
      },
      {
        "commit_hash": "ad96ebf3ba6b488f6bfffc1b350911c7a280a5a0",
        "line_num": 1752,
        "line_str": "argument_list|) decl_stmt|; return|return operator|( name|_currentSegment",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1773, 1777)"
      },
      {
        "commit_hash": "b1fa078c8f5009522f72e85ce1bcca8afed32640",
        "line_num": 1653,
        "line_str": "decl_stmt|; comment name|int name|newLen init|=",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1742, 1768)"
      },
      {
        "commit_hash": "b1fa078c8f5009522f72e85ce1bcca8afed32640",
        "line_num": 1674,
        "line_str": "name|MAX_SEGMENT_LEN argument_list|, name|len operator|+ operator|(",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1742, 1768)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 252,
        "line_str": "expr_stmt|; block|} block|} end_class",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(439, 442)"
      },
      {
        "commit_hash": "b1fa078c8f5009522f72e85ce1bcca8afed32640",
        "line_num": 1670,
        "line_str": "name|Math operator|. name|min argument_list|( name|MAX_SEGMENT_LEN",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1742, 1768)"
      },
      {
        "commit_hash": "b1fa078c8f5009522f72e85ce1bcca8afed32640",
        "line_num": 1666,
        "line_str": "operator|+ literal|1 operator|) else|: name|Math",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1742, 1768)"
      },
      {
        "commit_hash": "b1fa078c8f5009522f72e85ce1bcca8afed32640",
        "line_num": 1662,
        "line_str": "operator|) condition|? operator|( name|MAX_SEGMENT_LEN operator|+",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1742, 1768)"
      },
      {
        "commit_hash": "b1fa078c8f5009522f72e85ce1bcca8afed32640",
        "line_num": 1658,
        "line_str": "operator|( name|len operator|== name|MAX_SEGMENT_LEN operator|)",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1742, 1768)"
      },
      {
        "commit_hash": "ad96ebf3ba6b488f6bfffc1b350911c7a280a5a0",
        "line_num": 1753,
        "line_str": "decl_stmt|; return|return operator|( name|_currentSegment operator|=",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1773, 1777)"
      },
      {
        "commit_hash": "b1fa078c8f5009522f72e85ce1bcca8afed32640",
        "line_num": 1654,
        "line_str": "comment name|int name|newLen init|= operator|(",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1742, 1768)"
      },
      {
        "commit_hash": "b1fa078c8f5009522f72e85ce1bcca8afed32640",
        "line_num": 1650,
        "line_str": "name|curr operator|. name|length decl_stmt|; comment",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1742, 1768)"
      },
      {
        "commit_hash": "b1fa078c8f5009522f72e85ce1bcca8afed32640",
        "line_num": 1679,
        "line_str": "name|len operator|>> literal|1 operator|) argument_list|)",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1771, 1773)"
      },
      {
        "commit_hash": "b1fa078c8f5009522f72e85ce1bcca8afed32640",
        "line_num": 1675,
        "line_str": "argument_list|, name|len operator|+ operator|( name|len",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1742, 1768)"
      },
      {
        "commit_hash": "b1fa078c8f5009522f72e85ce1bcca8afed32640",
        "line_num": 1671,
        "line_str": "operator|. name|min argument_list|( name|MAX_SEGMENT_LEN argument_list|,",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1742, 1768)"
      },
      {
        "commit_hash": "b1fa078c8f5009522f72e85ce1bcca8afed32640",
        "line_num": 1667,
        "line_str": "literal|1 operator|) else|: name|Math operator|.",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1742, 1768)"
      },
      {
        "commit_hash": "b1fa078c8f5009522f72e85ce1bcca8afed32640",
        "line_num": 1663,
        "line_str": "condition|? operator|( name|MAX_SEGMENT_LEN operator|+ literal|1",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1742, 1768)"
      },
      {
        "commit_hash": "b1fa078c8f5009522f72e85ce1bcca8afed32640",
        "line_num": 1659,
        "line_str": "name|len operator|== name|MAX_SEGMENT_LEN operator|) condition|?",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1742, 1768)"
      },
      {
        "commit_hash": "b1fa078c8f5009522f72e85ce1bcca8afed32640",
        "line_num": 1655,
        "line_str": "name|int name|newLen init|= operator|( name|len",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1742, 1768)"
      },
      {
        "commit_hash": "ad96ebf3ba6b488f6bfffc1b350911c7a280a5a0",
        "line_num": 1750,
        "line_str": "literal|1 operator|) argument_list|) decl_stmt|; return|return",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1773, 1777)"
      },
      {
        "commit_hash": "b1fa078c8f5009522f72e85ce1bcca8afed32640",
        "line_num": 1651,
        "line_str": "operator|. name|length decl_stmt|; comment name|int",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1742, 1768)"
      },
      {
        "commit_hash": "b1fa078c8f5009522f72e85ce1bcca8afed32640",
        "line_num": 1680,
        "line_str": "operator|>> literal|1 operator|) argument_list|) decl_stmt|;",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1771, 1773)"
      },
      {
        "commit_hash": "b1fa078c8f5009522f72e85ce1bcca8afed32640",
        "line_num": 1672,
        "line_str": "name|min argument_list|( name|MAX_SEGMENT_LEN argument_list|, name|len",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1742, 1768)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 250,
        "line_str": "argument_list|() argument_list|) expr_stmt|; block|} block|}",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(439, 442)"
      },
      {
        "commit_hash": "b1fa078c8f5009522f72e85ce1bcca8afed32640",
        "line_num": 1668,
        "line_str": "operator|) else|: name|Math operator|. name|min",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1742, 1768)"
      }
    ]
  },
  {
    "id": 10048,
    "repo_name": "FasterXML/jackson-core",
    "bug_commit_hash": ["0986f4cdca44d0c0ccef876e0fbc279ef8b4e924"],
    "fix_commit_hash": "a7057edf7925b1546114454afd585004fdaa1d4a",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "0986f4cdca44d0c0ccef876e0fbc279ef8b4e924",
        "line_num": 458,
        "line_str": "operator|++ argument_list|) decl_stmt|; if|if condition|(",
        "file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_line_num": "range(485, 490)"
      },
      {
        "commit_hash": "0986f4cdca44d0c0ccef876e0fbc279ef8b4e924",
        "line_num": 457,
        "line_str": "name|i operator|++ argument_list|) decl_stmt|; if|if",
        "file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_line_num": "range(485, 490)"
      },
      {
        "commit_hash": "0986f4cdca44d0c0ccef876e0fbc279ef8b4e924",
        "line_num": 456,
        "line_str": "argument_list|( name|i operator|++ argument_list|) decl_stmt|;",
        "file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_line_num": "range(485, 490)"
      },
      {
        "commit_hash": "0986f4cdca44d0c0ccef876e0fbc279ef8b4e924",
        "line_num": 455,
        "line_str": "name|charAt argument_list|( name|i operator|++ argument_list|)",
        "file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_line_num": "range(485, 490)"
      },
      {
        "commit_hash": "0986f4cdca44d0c0ccef876e0fbc279ef8b4e924",
        "line_num": 454,
        "line_str": "operator|. name|charAt argument_list|( name|i operator|++",
        "file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_line_num": "range(485, 490)"
      }
    ]
  },
  {
    "id": 10049,
    "repo_name": "FasterXML/jackson-core",
    "bug_commit_hash": ["0986f4cdca44d0c0ccef876e0fbc279ef8b4e924"],
    "fix_commit_hash": "6bed0a670e38fea76ef923ea81b2e953d085571f",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "0986f4cdca44d0c0ccef876e0fbc279ef8b4e924",
        "line_num": 447,
        "line_str": "name|i control|) block|{ name|char name|c",
        "file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_line_num": "range(477, 484)"
      },
      {
        "commit_hash": "0986f4cdca44d0c0ccef876e0fbc279ef8b4e924",
        "line_num": 446,
        "line_str": "operator|++ name|i control|) block|{ name|char",
        "file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_line_num": "range(477, 484)"
      },
      {
        "commit_hash": "0986f4cdca44d0c0ccef876e0fbc279ef8b4e924",
        "line_num": 440,
        "line_str": "literal|0 init|; name|i operator|< name|len",
        "file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_line_num": "range(467, 472)"
      },
      {
        "commit_hash": "0986f4cdca44d0c0ccef876e0fbc279ef8b4e924",
        "line_num": 439,
        "line_str": "init|= literal|0 init|; name|i operator|<",
        "file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_line_num": "range(467, 472)"
      },
      {
        "commit_hash": "0986f4cdca44d0c0ccef876e0fbc279ef8b4e924",
        "line_num": 438,
        "line_str": "name|i init|= literal|0 init|; name|i",
        "file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_line_num": "range(467, 472)"
      },
      {
        "commit_hash": "0986f4cdca44d0c0ccef876e0fbc279ef8b4e924",
        "line_num": 437,
        "line_str": "name|int name|i init|= literal|0 init|;",
        "file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_line_num": "range(467, 472)"
      },
      {
        "commit_hash": "0986f4cdca44d0c0ccef876e0fbc279ef8b4e924",
        "line_num": 436,
        "line_str": "control|( name|int name|i init|= literal|0",
        "file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_line_num": "range(467, 472)"
      },
      {
        "commit_hash": "0986f4cdca44d0c0ccef876e0fbc279ef8b4e924",
        "line_num": 460,
        "line_str": "decl_stmt|; if|if condition|( name|c operator|>",
        "file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_line_num": "range(489, 491)"
      },
      {
        "commit_hash": "0986f4cdca44d0c0ccef876e0fbc279ef8b4e924",
        "line_num": 459,
        "line_str": "argument_list|) decl_stmt|; if|if condition|( name|c",
        "file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_line_num": "range(489, 491)"
      },
      {
        "commit_hash": "a7057edf7925b1546114454afd585004fdaa1d4a",
        "line_num": 488,
        "line_str": "name|i argument_list|) decl_stmt|; if|if condition|(",
        "file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_line_num": "range(486, 489)"
      },
      {
        "commit_hash": "a7057edf7925b1546114454afd585004fdaa1d4a",
        "line_num": 487,
        "line_str": "argument_list|( name|i argument_list|) decl_stmt|; if|if",
        "file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_line_num": "range(486, 489)"
      },
      {
        "commit_hash": "a7057edf7925b1546114454afd585004fdaa1d4a",
        "line_num": 486,
        "line_str": "name|charAt argument_list|( name|i argument_list|) decl_stmt|;",
        "file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_line_num": "range(486, 489)"
      },
      {
        "commit_hash": "0986f4cdca44d0c0ccef876e0fbc279ef8b4e924",
        "line_num": 452,
        "line_str": "init|= name|str operator|. name|charAt argument_list|(",
        "file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_line_num": "range(477, 484)"
      },
      {
        "commit_hash": "0986f4cdca44d0c0ccef876e0fbc279ef8b4e924",
        "line_num": 451,
        "line_str": "name|c init|= name|str operator|. name|charAt",
        "file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_line_num": "range(477, 484)"
      },
      {
        "commit_hash": "0986f4cdca44d0c0ccef876e0fbc279ef8b4e924",
        "line_num": 450,
        "line_str": "name|char name|c init|= name|str operator|.",
        "file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_line_num": "range(477, 484)"
      },
      {
        "commit_hash": "0986f4cdca44d0c0ccef876e0fbc279ef8b4e924",
        "line_num": 449,
        "line_str": "block|{ name|char name|c init|= name|str",
        "file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_line_num": "range(477, 484)"
      },
      {
        "commit_hash": "0986f4cdca44d0c0ccef876e0fbc279ef8b4e924",
        "line_num": 448,
        "line_str": "control|) block|{ name|char name|c init|=",
        "file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_line_num": "range(477, 484)"
      }
    ]
  },
  {
    "id": 10050,
    "repo_name": "FasterXML/jackson-core",
    "bug_commit_hash": ["b1fa078c8f5009522f72e85ce1bcca8afed32640"],
    "fix_commit_hash": "0c302588e3d6ad01840873051acef290996e8e37",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "b1fa078c8f5009522f72e85ce1bcca8afed32640",
        "line_num": 673,
        "line_str": "if|if condition|( operator|! name|_hasSegments condition|)",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(669, 670)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 19,
        "line_str": "begin_import import|import name|com operator|.",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 51)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 48,
        "line_str": "name|TextBuffer import|; end_import  begin_class",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 51)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 44,
        "line_str": "name|core operator|. name|util operator|. name|TextBuffer",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 51)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 40,
        "line_str": "name|fasterxml operator|. name|jackson operator|. name|core",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 51)"
      },
      {
        "commit_hash": "8e1fb5e41b8d61531e87b0d73597ca84af64a3be",
        "line_num": 519,
        "line_str": "block|} block|} block|} block|} end_class",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(518, 521)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 36,
        "line_str": "begin_import import|import name|com operator|. name|fasterxml",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 51)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 32,
        "line_str": "name|BufferRecycler import|; end_import  begin_import",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 51)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 28,
        "line_str": "name|core operator|. name|util operator|. name|BufferRecycler",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 51)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 24,
        "line_str": "name|fasterxml operator|. name|jackson operator|. name|core",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 51)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 20,
        "line_str": "begin_import import|import name|com operator|. name|fasterxml",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 51)"
      },
      {
        "commit_hash": "31857eee08539294c0f612098bcf82ccf88faa47",
        "line_num": 670,
        "line_str": "condition|( operator|! name|_hasSegments condition|) return|return",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(670, 673)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 49,
        "line_str": "import|; end_import  begin_class specifier|public",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 51)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 16,
        "line_str": "name|util package|; end_package  begin_import",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 51)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 45,
        "line_str": "operator|. name|util operator|. name|TextBuffer import|;",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 51)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 41,
        "line_str": "operator|. name|jackson operator|. name|core operator|.",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 51)"
      },
      {
        "commit_hash": "8e1fb5e41b8d61531e87b0d73597ca84af64a3be",
        "line_num": 520,
        "line_str": "block|} block|} block|} end_class",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(518, 521)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 37,
        "line_str": "import|import name|com operator|. name|fasterxml operator|.",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 51)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 33,
        "line_str": "import|; end_import  begin_import import|import",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 51)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 29,
        "line_str": "operator|. name|util operator|. name|BufferRecycler import|;",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 51)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 25,
        "line_str": "operator|. name|jackson operator|. name|core operator|.",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 51)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 21,
        "line_str": "import|import name|com operator|. name|fasterxml operator|.",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 51)"
      },
      {
        "commit_hash": "31857eee08539294c0f612098bcf82ccf88faa47",
        "line_num": 671,
        "line_str": "operator|! name|_hasSegments condition|) return|return name|_currentSegment",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(670, 673)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 50,
        "line_str": "end_import  begin_class specifier|public class|class",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 51)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 17,
        "line_str": "package|; end_package  begin_import import|import",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 51)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 46,
        "line_str": "name|util operator|. name|TextBuffer import|; end_import",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 51)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 42,
        "line_str": "name|jackson operator|. name|core operator|. name|util",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 51)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 38,
        "line_str": "name|com operator|. name|fasterxml operator|. name|jackson",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 51)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 34,
        "line_str": "end_import  begin_import import|import name|com",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 51)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 30,
        "line_str": "name|util operator|. name|BufferRecycler import|; end_import",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 51)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 26,
        "line_str": "name|jackson operator|. name|core operator|. name|util",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 51)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 22,
        "line_str": "name|com operator|. name|fasterxml operator|. name|jackson",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 51)"
      },
      {
        "commit_hash": "31857eee08539294c0f612098bcf82ccf88faa47",
        "line_num": 672,
        "line_str": "name|_hasSegments condition|) return|return name|_currentSegment return|;",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(670, 673)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 18,
        "line_str": "end_package  begin_import import|import name|com",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 51)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 47,
        "line_str": "operator|. name|TextBuffer import|; end_import",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 51)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 43,
        "line_str": "operator|. name|core operator|. name|util operator|.",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 51)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 39,
        "line_str": "operator|. name|fasterxml operator|. name|jackson operator|.",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 51)"
      },
      {
        "commit_hash": "8e1fb5e41b8d61531e87b0d73597ca84af64a3be",
        "line_num": 518,
        "line_str": "expr_stmt|; block|} block|} block|} block|}",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(518, 521)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 35,
        "line_str": "begin_import import|import name|com operator|.",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 51)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 31,
        "line_str": "operator|. name|BufferRecycler import|; end_import",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 51)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 27,
        "line_str": "operator|. name|core operator|. name|util operator|.",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 51)"
      },
      {
        "commit_hash": "5462d66e45cca1b9264ff3a99bdbb684863f029d",
        "line_num": 23,
        "line_str": "operator|. name|fasterxml operator|. name|jackson operator|.",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 51)"
      }
    ]
  },
  {
    "id": 10051,
    "repo_name": "jhy/jsoup",
    "bug_commit_hash": ["3da21251c28c669a4471f607e96ffc2b5277c9be"],
    "fix_commit_hash": "d49fec936e7a7c4e619b5765d5a9037f9c693564",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "2943a56181d93dd67aadd699321161cddf5ef688",
        "line_num": 1178,
        "line_str": "argument_list|) argument_list|) expr_stmt|; block|} block|}",
        "file_path": "src/test/java/org/jsoup/integration/UrlConnectTest.java",
        "input_file_path": "src/test/java/org/jsoup/integration/UrlConnectTest.java",
        "input_line_num": "range(1178, 1179)"
      },
      {
        "commit_hash": "990591ec72ec88c83d1c84c6a35c9a80bf54aaf1",
        "line_num": 707,
        "line_str": "argument_list|) return|; block|} return|return literal|null",
        "file_path": "src/main/java/org/jsoup/helper/DataUtil.java",
        "input_file_path": "src/main/java/org/jsoup/helper/DataUtil.java",
        "input_line_num": "range(704, 708)"
      },
      {
        "commit_hash": "eb66da17c6c486b339b2a5d22de1a5216cb609c1",
        "line_num": 137,
        "line_str": "argument_list|( literal|\"text/html;charset=\\\"utf-8\\\"\" argument_list|) argument_list|) expr_stmt|;",
        "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java",
        "input_file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java",
        "input_line_num": "range(180, 185)"
      },
      {
        "commit_hash": "3da21251c28c669a4471f607e96ffc2b5277c9be",
        "line_num": 48,
        "line_str": "name|assertEquals argument_list|( literal|\"UTF-8\" argument_list|, name|DataUtil",
        "file_path": "src/test/java/org/jsoup/DataUtilTest.java",
        "input_file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java",
        "input_line_num": "range(94, 99)"
      },
      {
        "commit_hash": "990591ec72ec88c83d1c84c6a35c9a80bf54aaf1",
        "line_num": 699,
        "line_str": "name|trim argument_list|() operator|. name|toUpperCase argument_list|(",
        "file_path": "src/main/java/org/jsoup/helper/DataUtil.java",
        "input_file_path": "src/main/java/org/jsoup/helper/DataUtil.java",
        "input_line_num": "range(699, 701)"
      },
      {
        "commit_hash": "3da21251c28c669a4471f607e96ffc2b5277c9be",
        "line_num": 656,
        "line_str": "argument_list|() condition|) block|{ return|return name|m",
        "file_path": "src/main/java/org/jsoup/DataUtil.java",
        "input_file_path": "src/main/java/org/jsoup/helper/DataUtil.java",
        "input_line_num": "range(687, 692)"
      },
      {
        "commit_hash": "eb66da17c6c486b339b2a5d22de1a5216cb609c1",
        "line_num": 150,
        "line_str": "literal|\"text/html; charset=\\\"ISO-8859-1\\\"\" argument_list|) argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java",
        "input_file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java",
        "input_line_num": "range(196, 197)"
      },
      {
        "commit_hash": "eb66da17c6c486b339b2a5d22de1a5216cb609c1",
        "line_num": 117,
        "line_str": "block|{ name|assertEquals argument_list|( literal|\"UTF-8\" argument_list|,",
        "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java",
        "input_file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java",
        "input_line_num": "range(162, 167)"
      },
      {
        "commit_hash": "eb66da17c6c486b339b2a5d22de1a5216cb609c1",
        "line_num": 138,
        "line_str": "literal|\"text/html;charset=\\\"utf-8\\\"\" argument_list|) argument_list|) expr_stmt|; name|assertEquals",
        "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java",
        "input_file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java",
        "input_line_num": "range(180, 185)"
      },
      {
        "commit_hash": "3da21251c28c669a4471f607e96ffc2b5277c9be",
        "line_num": 49,
        "line_str": "argument_list|( literal|\"UTF-8\" argument_list|, name|DataUtil operator|.",
        "file_path": "src/test/java/org/jsoup/DataUtilTest.java",
        "input_file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java",
        "input_line_num": "range(94, 99)"
      },
      {
        "commit_hash": "990591ec72ec88c83d1c84c6a35c9a80bf54aaf1",
        "line_num": 704,
        "line_str": "name|Locale operator|. name|ENGLISH argument_list|) return|;",
        "file_path": "src/main/java/org/jsoup/helper/DataUtil.java",
        "input_file_path": "src/main/java/org/jsoup/helper/DataUtil.java",
        "input_line_num": "range(704, 708)"
      },
      {
        "commit_hash": "3da21251c28c669a4471f607e96ffc2b5277c9be",
        "line_num": 665,
        "line_str": "argument_list|) operator|. name|trim argument_list|() operator|.",
        "file_path": "src/main/java/org/jsoup/DataUtil.java",
        "input_file_path": "src/main/java/org/jsoup/helper/DataUtil.java",
        "input_line_num": "range(697, 699)"
      },
      {
        "commit_hash": "eb66da17c6c486b339b2a5d22de1a5216cb609c1",
        "line_num": 134,
        "line_str": "name|DataUtil operator|. name|getCharsetFromContentType argument_list|( literal|\"text/html;charset=\\\"utf-8\\\"\"",
        "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java",
        "input_file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java",
        "input_line_num": "range(180, 185)"
      },
      {
        "commit_hash": "990591ec72ec88c83d1c84c6a35c9a80bf54aaf1",
        "line_num": 700,
        "line_str": "argument_list|() operator|. name|toUpperCase argument_list|( name|Locale",
        "file_path": "src/main/java/org/jsoup/helper/DataUtil.java",
        "input_file_path": "src/main/java/org/jsoup/helper/DataUtil.java",
        "input_line_num": "range(699, 701)"
      },
      {
        "commit_hash": "3da21251c28c669a4471f607e96ffc2b5277c9be",
        "line_num": 657,
        "line_str": "condition|) block|{ return|return name|m operator|.",
        "file_path": "src/main/java/org/jsoup/DataUtil.java",
        "input_file_path": "src/main/java/org/jsoup/helper/DataUtil.java",
        "input_line_num": "range(687, 692)"
      },
      {
        "commit_hash": "eb66da17c6c486b339b2a5d22de1a5216cb609c1",
        "line_num": 118,
        "line_str": "name|assertEquals argument_list|( literal|\"UTF-8\" argument_list|, name|DataUtil",
        "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java",
        "input_file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java",
        "input_line_num": "range(162, 167)"
      },
      {
        "commit_hash": "ed1bf59916edb43f17001b1d1ca9ded7c4e6c7ec",
        "line_num": 887,
        "line_str": "argument_list|) expr_stmt|; block|} block|} end_class",
        "file_path": "src/test/java/org/jsoup/integration/UrlConnectTest.java",
        "input_file_path": "src/test/java/org/jsoup/integration/UrlConnectTest.java",
        "input_line_num": "range(1179, 1181)"
      },
      {
        "commit_hash": "3da21251c28c669a4471f607e96ffc2b5277c9be",
        "line_num": 50,
        "line_str": "literal|\"UTF-8\" argument_list|, name|DataUtil operator|. name|getCharsetFromContentType",
        "file_path": "src/test/java/org/jsoup/DataUtilTest.java",
        "input_file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java",
        "input_line_num": "range(94, 99)"
      },
      {
        "commit_hash": "990591ec72ec88c83d1c84c6a35c9a80bf54aaf1",
        "line_num": 705,
        "line_str": "operator|. name|ENGLISH argument_list|) return|; block|}",
        "file_path": "src/main/java/org/jsoup/helper/DataUtil.java",
        "input_file_path": "src/main/java/org/jsoup/helper/DataUtil.java",
        "input_line_num": "range(704, 708)"
      },
      {
        "commit_hash": "3da21251c28c669a4471f607e96ffc2b5277c9be",
        "line_num": 666,
        "line_str": "operator|. name|trim argument_list|() operator|. name|toUpperCase",
        "file_path": "src/main/java/org/jsoup/DataUtil.java",
        "input_file_path": "src/main/java/org/jsoup/helper/DataUtil.java",
        "input_line_num": "range(697, 699)"
      },
      {
        "commit_hash": "eb66da17c6c486b339b2a5d22de1a5216cb609c1",
        "line_num": 135,
        "line_str": "operator|. name|getCharsetFromContentType argument_list|( literal|\"text/html;charset=\\\"utf-8\\\"\" argument_list|)",
        "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java",
        "input_file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java",
        "input_line_num": "range(180, 185)"
      },
      {
        "commit_hash": "3da21251c28c669a4471f607e96ffc2b5277c9be",
        "line_num": 46,
        "line_str": "parameter_list|() block|{ name|assertEquals argument_list|( literal|\"UTF-8\"",
        "file_path": "src/test/java/org/jsoup/DataUtilTest.java",
        "input_file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java",
        "input_line_num": "range(94, 99)"
      },
      {
        "commit_hash": "3da21251c28c669a4471f607e96ffc2b5277c9be",
        "line_num": 658,
        "line_str": "block|{ return|return name|m operator|. name|group",
        "file_path": "src/main/java/org/jsoup/DataUtil.java",
        "input_file_path": "src/main/java/org/jsoup/helper/DataUtil.java",
        "input_line_num": "range(687, 692)"
      },
      {
        "commit_hash": "3da21251c28c669a4471f607e96ffc2b5277c9be",
        "line_num": 104,
        "line_str": "literal|null argument_list|) argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/java/org/jsoup/DataUtilTest.java",
        "input_file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java",
        "input_line_num": "range(152, 153)"
      },
      {
        "commit_hash": "eb66da17c6c486b339b2a5d22de1a5216cb609c1",
        "line_num": 119,
        "line_str": "argument_list|( literal|\"UTF-8\" argument_list|, name|DataUtil operator|.",
        "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java",
        "input_file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java",
        "input_line_num": "range(162, 167)"
      },
      {
        "commit_hash": "ed1bf59916edb43f17001b1d1ca9ded7c4e6c7ec",
        "line_num": 888,
        "line_str": "expr_stmt|; block|} block|} end_class",
        "file_path": "src/test/java/org/jsoup/integration/UrlConnectTest.java",
        "input_file_path": "src/test/java/org/jsoup/integration/UrlConnectTest.java",
        "input_line_num": "range(1179, 1181)"
      },
      {
        "commit_hash": "eb66da17c6c486b339b2a5d22de1a5216cb609c1",
        "line_num": 136,
        "line_str": "name|getCharsetFromContentType argument_list|( literal|\"text/html;charset=\\\"utf-8\\\"\" argument_list|) argument_list|)",
        "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java",
        "input_file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java",
        "input_line_num": "range(180, 185)"
      },
      {
        "commit_hash": "990591ec72ec88c83d1c84c6a35c9a80bf54aaf1",
        "line_num": 706,
        "line_str": "name|ENGLISH argument_list|) return|; block|} return|return",
        "file_path": "src/main/java/org/jsoup/helper/DataUtil.java",
        "input_file_path": "src/main/java/org/jsoup/helper/DataUtil.java",
        "input_line_num": "range(704, 708)"
      },
      {
        "commit_hash": "3da21251c28c669a4471f607e96ffc2b5277c9be",
        "line_num": 47,
        "line_str": "block|{ name|assertEquals argument_list|( literal|\"UTF-8\" argument_list|,",
        "file_path": "src/test/java/org/jsoup/DataUtilTest.java",
        "input_file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java",
        "input_line_num": "range(94, 99)"
      },
      {
        "commit_hash": "3da21251c28c669a4471f607e96ffc2b5277c9be",
        "line_num": 659,
        "line_str": "return|return name|m operator|. name|group argument_list|(",
        "file_path": "src/main/java/org/jsoup/DataUtil.java",
        "input_file_path": "src/main/java/org/jsoup/helper/DataUtil.java",
        "input_line_num": "range(687, 692)"
      },
      {
        "commit_hash": "3da21251c28c669a4471f607e96ffc2b5277c9be",
        "line_num": 655,
        "line_str": "name|find argument_list|() condition|) block|{ return|return",
        "file_path": "src/main/java/org/jsoup/DataUtil.java",
        "input_file_path": "src/main/java/org/jsoup/helper/DataUtil.java",
        "input_line_num": "range(687, 692)"
      },
      {
        "commit_hash": "eb66da17c6c486b339b2a5d22de1a5216cb609c1",
        "line_num": 120,
        "line_str": "literal|\"UTF-8\" argument_list|, name|DataUtil operator|. name|getCharsetFromContentType",
        "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java",
        "input_file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java",
        "input_line_num": "range(162, 167)"
      },
      {
        "commit_hash": "eb66da17c6c486b339b2a5d22de1a5216cb609c1",
        "line_num": 116,
        "line_str": "parameter_list|() block|{ name|assertEquals argument_list|( literal|\"UTF-8\"",
        "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java",
        "input_file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java",
        "input_line_num": "range(162, 167)"
      }
    ]
  },
  {
    "id": 10052,
    "repo_name": "jhy/jsoup",
    "bug_commit_hash": ["7cab988e9e3e0b19baf712c513eb3ba1a45c80cb"],
    "fix_commit_hash": "4d69286e3126572511ad1b875eecd1db1123ad58",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "34b9c746f179379c6e2cc6acfb7b9147a9ddf6db",
        "line_num": 13096,
        "line_str": "operator|= operator|new name|HashMap argument_list|< name|String",
        "file_path": "src/main/java/org/jsoup/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13398, 13405)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 97,
        "line_str": "name|base decl_stmt|; specifier|private specifier|static specifier|final",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(94, 101)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 76,
        "line_str": "init|= literal|\"Hello&<> Ã Ï æ° there\" decl_stmt|; name|String name|escapedAscii",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(73, 78)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 159,
        "line_str": "literal|\"Hello&amp;&lt;&gt;&aring;&#960;&#26032; there\" argument_list|, name|escapedAscii argument_list|) expr_stmt|;",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(155, 160)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 13542,
        "line_str": "operator|( name|String operator|) name|entity index|[",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13496, 13510)"
      },
      {
        "commit_hash": "34b9c746f179379c6e2cc6acfb7b9147a9ddf6db",
        "line_num": 13097,
        "line_str": "operator|new name|HashMap argument_list|< name|String argument_list|,",
        "file_path": "src/main/java/org/jsoup/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13398, 13405)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 98,
        "line_str": "decl_stmt|; specifier|private specifier|static specifier|final name|Map",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(94, 101)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 77,
        "line_str": "literal|\"Hello&<> Ã Ï æ° there\" decl_stmt|; name|String name|escapedAscii init|=",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(73, 78)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 13543,
        "line_str": "name|String operator|) name|entity index|[ literal|0",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13496, 13510)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 99,
        "line_str": "specifier|private specifier|static specifier|final name|Map argument_list|<",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(94, 101)"
      },
      {
        "commit_hash": "34b9c746f179379c6e2cc6acfb7b9147a9ddf6db",
        "line_num": 13148,
        "line_str": "name|base operator|. name|put argument_list|( operator|(",
        "file_path": "src/main/java/org/jsoup/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13495, 13496)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 13544,
        "line_str": "operator|) name|entity index|[ literal|0 index|]",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13496, 13510)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 162,
        "line_str": "argument_list|) expr_stmt|; name|assertEquals argument_list|( literal|\"Hello&amp;&lt;&gt;&angst;&pi;&#26032; there\"",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(162, 167)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 13545,
        "line_str": "name|entity index|[ literal|0 index|] argument_list|,",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13496, 13510)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 163,
        "line_str": "expr_stmt|; name|assertEquals argument_list|( literal|\"Hello&amp;&lt;&gt;&angst;&pi;&#26032; there\" argument_list|,",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(162, 167)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 13546,
        "line_str": "index|[ literal|0 index|] argument_list|, name|c",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13496, 13510)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 102,
        "line_str": "name|Map argument_list|< name|String argument_list|, name|Character",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(103, 105)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 164,
        "line_str": "name|assertEquals argument_list|( literal|\"Hello&amp;&lt;&gt;&angst;&pi;&#26032; there\" argument_list|, name|escapedAsciiFull",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(162, 167)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 13547,
        "line_str": "literal|0 index|] argument_list|, name|c argument_list|)",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13496, 13510)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 13448,
        "line_str": "name|HashMap argument_list|< name|String argument_list|, name|Character",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13405, 13410)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 103,
        "line_str": "argument_list|< name|String argument_list|, name|Character argument_list|>",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(103, 105)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 165,
        "line_str": "argument_list|( literal|\"Hello&amp;&lt;&gt;&angst;&pi;&#26032; there\" argument_list|, name|escapedAsciiFull argument_list|)",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(162, 167)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 13548,
        "line_str": "index|] argument_list|, name|c argument_list|) expr_stmt|;",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13496, 13510)"
      },
      {
        "commit_hash": "34b9c746f179379c6e2cc6acfb7b9147a9ddf6db",
        "line_num": 13103,
        "line_str": "argument_list|> argument_list|( name|baseArray operator|. name|length",
        "file_path": "src/main/java/org/jsoup/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13410, 13417)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 13449,
        "line_str": "argument_list|< name|String argument_list|, name|Character argument_list|>",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13405, 13410)"
      },
      {
        "commit_hash": "eea66f9bdf3b4d4cef72834923b2ab68839b256a",
        "line_num": 418,
        "line_str": "name|group argument_list|( literal|1 argument_list|) operator|.",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(452, 459)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 166,
        "line_str": "literal|\"Hello&amp;&lt;&gt;&angst;&pi;&#26032; there\" argument_list|, name|escapedAsciiFull argument_list|) expr_stmt|;",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(162, 167)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 13549,
        "line_str": "argument_list|, name|c argument_list|) expr_stmt|; name|baseByVal",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13496, 13510)"
      },
      {
        "commit_hash": "34b9c746f179379c6e2cc6acfb7b9147a9ddf6db",
        "line_num": 13104,
        "line_str": "argument_list|( name|baseArray operator|. name|length argument_list|)",
        "file_path": "src/main/java/org/jsoup/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13410, 13417)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 13450,
        "line_str": "name|String argument_list|, name|Character argument_list|> argument_list|(",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13405, 13410)"
      },
      {
        "commit_hash": "eea66f9bdf3b4d4cef72834923b2ab68839b256a",
        "line_num": 419,
        "line_str": "argument_list|( literal|1 argument_list|) operator|. name|toLowerCase",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(452, 459)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 13550,
        "line_str": "name|c argument_list|) expr_stmt|; name|baseByVal operator|.",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13496, 13510)"
      },
      {
        "commit_hash": "34b9c746f179379c6e2cc6acfb7b9147a9ddf6db",
        "line_num": 13105,
        "line_str": "name|baseArray operator|. name|length argument_list|) expr_stmt|;",
        "file_path": "src/main/java/org/jsoup/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13410, 13417)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 13451,
        "line_str": "argument_list|, name|Character argument_list|> argument_list|( name|baseArray",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13405, 13410)"
      },
      {
        "commit_hash": "eea66f9bdf3b4d4cef72834923b2ab68839b256a",
        "line_num": 420,
        "line_str": "literal|1 argument_list|) operator|. name|toLowerCase argument_list|()",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(452, 459)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 13633,
        "line_str": "index|[ literal|0 index|] operator|) operator|.",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13590, 13597)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 13567,
        "line_str": "operator|) operator|. name|toLowerCase argument_list|() argument_list|)",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13524, 13528)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 13534,
        "line_str": "name|intValue argument_list|() argument_list|) decl_stmt|; name|base",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13491, 13495)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 13551,
        "line_str": "argument_list|) expr_stmt|; name|baseByVal operator|. name|put",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13496, 13510)"
      },
      {
        "commit_hash": "34b9c746f179379c6e2cc6acfb7b9147a9ddf6db",
        "line_num": 13106,
        "line_str": "operator|. name|length argument_list|) expr_stmt|; name|full",
        "file_path": "src/main/java/org/jsoup/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13410, 13417)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 13452,
        "line_str": "name|Character argument_list|> argument_list|( name|baseArray operator|.",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13405, 13410)"
      },
      {
        "commit_hash": "eea66f9bdf3b4d4cef72834923b2ab68839b256a",
        "line_num": 421,
        "line_str": "argument_list|) operator|. name|toLowerCase argument_list|() decl_stmt|;",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(452, 459)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 13634,
        "line_str": "literal|0 index|] operator|) operator|. name|toLowerCase",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13590, 13597)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 13568,
        "line_str": "operator|. name|toLowerCase argument_list|() argument_list|) expr_stmt|;",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13524, 13528)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 13535,
        "line_str": "argument_list|() argument_list|) decl_stmt|; name|base operator|.",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13491, 13495)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 169,
        "line_str": "argument_list|) expr_stmt|; name|assertEquals argument_list|( literal|\"Hello&amp;&lt;&gt;&aring; Ï æ° there\"",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(169, 174)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 13552,
        "line_str": "expr_stmt|; name|baseByVal operator|. name|put argument_list|(",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13496, 13510)"
      },
      {
        "commit_hash": "34b9c746f179379c6e2cc6acfb7b9147a9ddf6db",
        "line_num": 13107,
        "line_str": "name|length argument_list|) expr_stmt|; name|full operator|=",
        "file_path": "src/main/java/org/jsoup/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13410, 13417)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 186,
        "line_str": "block|{ name|String name|text init|= literal|\"Hello&amp;&LT&gt;&ANGST&#960;&#960&#x65B0; there&!\"",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(186, 191)"
      },
      {
        "commit_hash": "34b9c746f179379c6e2cc6acfb7b9147a9ddf6db",
        "line_num": 76,
        "line_str": "specifier|static specifier|final name|Map argument_list|< name|String",
        "file_path": "src/main/java/org/jsoup/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(101, 103)"
      },
      {
        "commit_hash": "eea66f9bdf3b4d4cef72834923b2ab68839b256a",
        "line_num": 422,
        "line_str": "operator|. name|toLowerCase argument_list|() decl_stmt|; if|if",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(452, 459)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 13635,
        "line_str": "index|] operator|) operator|. name|toLowerCase argument_list|()",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13590, 13597)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 13569,
        "line_str": "name|toLowerCase argument_list|() argument_list|) expr_stmt|; block|}",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13524, 13528)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 13536,
        "line_str": "argument_list|) decl_stmt|; name|base operator|. name|put",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13491, 13495)"
      },
      {
        "commit_hash": "34b9c746f179379c6e2cc6acfb7b9147a9ddf6db",
        "line_num": 13157,
        "line_str": "index|[ literal|0 index|] operator|) operator|.",
        "file_path": "src/main/java/org/jsoup/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13521, 13524)"
      },
      {
        "commit_hash": "34b9c746f179379c6e2cc6acfb7b9147a9ddf6db",
        "line_num": 13091,
        "line_str": "block|} decl_stmt|; static|static block|{ name|base",
        "file_path": "src/main/java/org/jsoup/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13398, 13405)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 170,
        "line_str": "expr_stmt|; name|assertEquals argument_list|( literal|\"Hello&amp;&lt;&gt;&aring; Ï æ° there\" argument_list|,",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(169, 174)"
      },
      {
        "commit_hash": "34b9c746f179379c6e2cc6acfb7b9147a9ddf6db",
        "line_num": 13108,
        "line_str": "argument_list|) expr_stmt|; name|full operator|= operator|new",
        "file_path": "src/main/java/org/jsoup/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13410, 13417)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 187,
        "line_str": "name|String name|text init|= literal|\"Hello&amp;&LT&gt;&ANGST&#960;&#960&#x65B0; there&!\" decl_stmt|;",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(186, 191)"
      },
      {
        "commit_hash": "34b9c746f179379c6e2cc6acfb7b9147a9ddf6db",
        "line_num": 77,
        "line_str": "specifier|final name|Map argument_list|< name|String argument_list|,",
        "file_path": "src/main/java/org/jsoup/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(101, 103)"
      },
      {
        "commit_hash": "eea66f9bdf3b4d4cef72834923b2ab68839b256a",
        "line_num": 423,
        "line_str": "name|toLowerCase argument_list|() decl_stmt|; if|if condition|(",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(452, 459)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 13636,
        "line_str": "operator|) operator|. name|toLowerCase argument_list|() argument_list|)",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13590, 13597)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 13570,
        "line_str": "argument_list|() argument_list|) expr_stmt|; block|} for|for",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13524, 13528)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 13537,
        "line_str": "decl_stmt|; name|base operator|. name|put argument_list|(",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13491, 13495)"
      },
      {
        "commit_hash": "34b9c746f179379c6e2cc6acfb7b9147a9ddf6db",
        "line_num": 13158,
        "line_str": "literal|0 index|] operator|) operator|. name|toLowerCase",
        "file_path": "src/main/java/org/jsoup/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13521, 13524)"
      },
      {
        "commit_hash": "34b9c746f179379c6e2cc6acfb7b9147a9ddf6db",
        "line_num": 13092,
        "line_str": "decl_stmt|; static|static block|{ name|base operator|=",
        "file_path": "src/main/java/org/jsoup/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13398, 13405)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 171,
        "line_str": "name|assertEquals argument_list|( literal|\"Hello&amp;&lt;&gt;&aring; Ï æ° there\" argument_list|, name|escapedUtf",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(169, 174)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 93,
        "line_str": "name|String argument_list|, name|Character argument_list|> name|base",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(94, 101)"
      },
      {
        "commit_hash": "34b9c746f179379c6e2cc6acfb7b9147a9ddf6db",
        "line_num": 13109,
        "line_str": "expr_stmt|; name|full operator|= operator|new name|HashMap",
        "file_path": "src/main/java/org/jsoup/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13410, 13417)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 188,
        "line_str": "name|text init|= literal|\"Hello&amp;&LT&gt;&ANGST&#960;&#960&#x65B0; there&!\" decl_stmt|; name|assertEquals",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(186, 191)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 155,
        "line_str": "argument_list|) decl_stmt|; name|assertEquals argument_list|( literal|\"Hello&amp;&lt;&gt;&aring;&#960;&#26032; there\"",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(155, 160)"
      },
      {
        "commit_hash": "eea66f9bdf3b4d4cef72834923b2ab68839b256a",
        "line_num": 424,
        "line_str": "argument_list|() decl_stmt|; if|if condition|( name|full",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(452, 459)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 13637,
        "line_str": "operator|. name|toLowerCase argument_list|() argument_list|) expr_stmt|;",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13590, 13597)"
      },
      {
        "commit_hash": "34b9c746f179379c6e2cc6acfb7b9147a9ddf6db",
        "line_num": 13159,
        "line_str": "index|] operator|) operator|. name|toLowerCase argument_list|()",
        "file_path": "src/main/java/org/jsoup/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13521, 13524)"
      },
      {
        "commit_hash": "34b9c746f179379c6e2cc6acfb7b9147a9ddf6db",
        "line_num": 13093,
        "line_str": "static|static block|{ name|base operator|= operator|new",
        "file_path": "src/main/java/org/jsoup/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13398, 13405)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 172,
        "line_str": "argument_list|( literal|\"Hello&amp;&lt;&gt;&aring; Ï æ° there\" argument_list|, name|escapedUtf argument_list|)",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(169, 174)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 94,
        "line_str": "argument_list|, name|Character argument_list|> name|base decl_stmt|;",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(94, 101)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 73,
        "line_str": "block|{ name|String name|text init|= literal|\"Hello&<> Ã Ï æ° there\"",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(73, 78)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 189,
        "line_str": "init|= literal|\"Hello&amp;&LT&gt;&ANGST&#960;&#960&#x65B0; there&!\" decl_stmt|; name|assertEquals argument_list|(",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(186, 191)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 156,
        "line_str": "decl_stmt|; name|assertEquals argument_list|( literal|\"Hello&amp;&lt;&gt;&aring;&#960;&#26032; there\" argument_list|,",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(155, 160)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 13638,
        "line_str": "name|toLowerCase argument_list|() argument_list|) expr_stmt|; block|}",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13590, 13597)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 13539,
        "line_str": "operator|. name|put argument_list|( operator|( name|String",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13496, 13510)"
      },
      {
        "commit_hash": "34b9c746f179379c6e2cc6acfb7b9147a9ddf6db",
        "line_num": 13094,
        "line_str": "block|{ name|base operator|= operator|new name|HashMap",
        "file_path": "src/main/java/org/jsoup/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13398, 13405)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 173,
        "line_str": "literal|\"Hello&amp;&lt;&gt;&aring; Ï æ° there\" argument_list|, name|escapedUtf argument_list|) expr_stmt|;",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(169, 174)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 95,
        "line_str": "name|Character argument_list|> name|base decl_stmt|; specifier|private",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(94, 101)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 74,
        "line_str": "name|String name|text init|= literal|\"Hello&<> Ã Ï æ° there\" decl_stmt|;",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(73, 78)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 190,
        "line_str": "literal|\"Hello&amp;&LT&gt;&ANGST&#960;&#960&#x65B0; there&!\" decl_stmt|; name|assertEquals argument_list|( literal|\"Hello&<> Ã Ï Ï æ° there&!\"",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(186, 191)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 157,
        "line_str": "name|assertEquals argument_list|( literal|\"Hello&amp;&lt;&gt;&aring;&#960;&#26032; there\" argument_list|, name|escapedAscii",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(155, 160)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 13639,
        "line_str": "argument_list|() argument_list|) expr_stmt|; block|} block|}",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13590, 13597)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 13540,
        "line_str": "name|put argument_list|( operator|( name|String operator|)",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13496, 13510)"
      },
      {
        "commit_hash": "34b9c746f179379c6e2cc6acfb7b9147a9ddf6db",
        "line_num": 13095,
        "line_str": "name|base operator|= operator|new name|HashMap argument_list|<",
        "file_path": "src/main/java/org/jsoup/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13398, 13405)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 96,
        "line_str": "argument_list|> name|base decl_stmt|; specifier|private specifier|static",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(94, 101)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 75,
        "line_str": "name|text init|= literal|\"Hello&<> Ã Ï æ° there\" decl_stmt|; name|String",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(73, 78)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 158,
        "line_str": "argument_list|( literal|\"Hello&amp;&lt;&gt;&aring;&#960;&#26032; there\" argument_list|, name|escapedAscii argument_list|)",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(155, 160)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 13541,
        "line_str": "argument_list|( operator|( name|String operator|) name|entity",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13496, 13510)"
      }
    ]
  },
  {
    "id": 10053,
    "repo_name": "jhy/jsoup",
    "bug_commit_hash": ["470f11c0402898bf710f8d0ee7f8cf16a6ac6252"],
    "fix_commit_hash": "fc55c024df18bc0676d2dd96162fbab5e27a1d88",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "8ba52ca0096ceea23841a095b26351178e1d1285",
        "line_num": 87,
        "line_str": "operator|. name|key operator|= name|key operator|.",
        "file_path": "src/main/java/org/jsoup/nodes/Attribute.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Attribute.java",
        "input_line_num": "range(224, 225)"
      },
      {
        "commit_hash": "9c2dd0f197b075a266e6669ddbf680690ff98728",
        "line_num": 208,
        "line_str": "name|key argument_list|) expr_stmt|; name|this operator|.",
        "file_path": "src/main/java/org/jsoup/nodes/Attribute.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Attribute.java",
        "input_line_num": "range(219, 221)"
      },
      {
        "commit_hash": "9c2dd0f197b075a266e6669ddbf680690ff98728",
        "line_num": 207,
        "line_str": "argument_list|( name|key argument_list|) expr_stmt|; name|this",
        "file_path": "src/main/java/org/jsoup/nodes/Attribute.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Attribute.java",
        "input_line_num": "range(219, 221)"
      },
      {
        "commit_hash": "3c040c420722f3b36faa177de6abeceb28a47a2f",
        "line_num": 71,
        "line_str": "name|this operator|. name|key operator|= name|key",
        "file_path": "src/main/java/org/jsoup/nodes/Attribute.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Attribute.java",
        "input_line_num": "range(221, 224)"
      },
      {
        "commit_hash": "3c040c420722f3b36faa177de6abeceb28a47a2f",
        "line_num": 70,
        "line_str": "expr_stmt|; name|this operator|. name|key operator|=",
        "file_path": "src/main/java/org/jsoup/nodes/Attribute.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Attribute.java",
        "input_line_num": "range(221, 224)"
      },
      {
        "commit_hash": "3c040c420722f3b36faa177de6abeceb28a47a2f",
        "line_num": 69,
        "line_str": "argument_list|) expr_stmt|; name|this operator|. name|key",
        "file_path": "src/main/java/org/jsoup/nodes/Attribute.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Attribute.java",
        "input_line_num": "range(221, 224)"
      },
      {
        "commit_hash": "9c2dd0f197b075a266e6669ddbf680690ff98728",
        "line_num": 227,
        "line_str": "comment name|this operator|. name|val operator|=",
        "file_path": "src/main/java/org/jsoup/nodes/Attribute.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Attribute.java",
        "input_line_num": "range(238, 240)"
      },
      {
        "commit_hash": "9c2dd0f197b075a266e6669ddbf680690ff98728",
        "line_num": 226,
        "line_str": "expr_stmt|; comment name|this operator|. name|val",
        "file_path": "src/main/java/org/jsoup/nodes/Attribute.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Attribute.java",
        "input_line_num": "range(238, 240)"
      },
      {
        "commit_hash": "5e36c28f448bd5995be536f144abf7ed57edf848",
        "line_num": 81,
        "line_str": "argument_list|() argument_list|) expr_stmt|; block|} block|}",
        "file_path": "src/test/java/org/jsoup/nodes/AttributeTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/AttributeTest.java",
        "input_line_num": "range(147, 148)"
      }
    ]
  },
  {
    "id": 10054,
    "repo_name": "jhy/jsoup",
    "bug_commit_hash": ["eea66f9bdf3b4d4cef72834923b2ab68839b256a"],
    "fix_commit_hash": "958b816526fe93864be52a673e204822e266add8",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "4d69286e3126572511ad1b875eecd1db1123ad58",
        "line_num": 76,
        "line_str": "init|= literal|\"Hello&<> Ã Ã¥ Ï æ° there\" decl_stmt|; name|String name|escapedAscii",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(73, 78)"
      },
      {
        "commit_hash": "4d69286e3126572511ad1b875eecd1db1123ad58",
        "line_num": 171,
        "line_str": "name|assertEquals argument_list|( literal|\"Hello&amp;&lt;&gt;&Aring;&aring; Ï æ° there\" argument_list|, name|escapedUtf",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(202, 207)"
      },
      {
        "commit_hash": "0dc1e62d6dd852637abfaa67c2a3c09b94009059",
        "line_num": 196,
        "line_str": "expr_stmt|; name|assertEquals argument_list|( literal|\"Hello&amp;&lt;&gt;&#197;&#229;&#960;&#26032; there\" argument_list|,",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(195, 200)"
      },
      {
        "commit_hash": "4d69286e3126572511ad1b875eecd1db1123ad58",
        "line_num": 163,
        "line_str": "expr_stmt|; name|assertEquals argument_list|( literal|\"Hello&amp;&lt;&gt;&angst;&aring;&pi;&#26032; there\" argument_list|,",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(188, 193)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 192,
        "line_str": "name|assertEquals argument_list|( literal|\"Hello&<> Ã Ï Ï æ° there&!\" argument_list|, name|Entities",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(224, 228)"
      },
      {
        "commit_hash": "4d69286e3126572511ad1b875eecd1db1123ad58",
        "line_num": 159,
        "line_str": "literal|\"Hello&amp;&lt;&gt;&Aring;&aring;&#960;&#26032; there\" argument_list|, name|escapedAscii argument_list|) expr_stmt|;",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(181, 186)"
      },
      {
        "commit_hash": "4d69286e3126572511ad1b875eecd1db1123ad58",
        "line_num": 188,
        "line_str": "name|text init|= literal|\"Hello&amp;&LT&gt;&angst&#960;&#960&#x65B0; there&!\" decl_stmt|; name|assertEquals",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(219, 224)"
      },
      {
        "commit_hash": "4d69286e3126572511ad1b875eecd1db1123ad58",
        "line_num": 155,
        "line_str": "argument_list|) decl_stmt|; name|assertEquals argument_list|( literal|\"Hello&amp;&lt;&gt;&Aring;&aring;&#960;&#26032; there\"",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(181, 186)"
      },
      {
        "commit_hash": "eea66f9bdf3b4d4cef72834923b2ab68839b256a",
        "line_num": 139,
        "line_str": "operator|. name|compile argument_list|( literal|\"&(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?\" argument_list|)",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(195, 200)"
      },
      {
        "commit_hash": "4d69286e3126572511ad1b875eecd1db1123ad58",
        "line_num": 77,
        "line_str": "literal|\"Hello&<> Ã Ã¥ Ï æ° there\" decl_stmt|; name|String name|escapedAscii init|=",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(73, 78)"
      },
      {
        "commit_hash": "4d69286e3126572511ad1b875eecd1db1123ad58",
        "line_num": 172,
        "line_str": "argument_list|( literal|\"Hello&amp;&lt;&gt;&Aring;&aring; Ï æ° there\" argument_list|, name|escapedUtf argument_list|)",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(202, 207)"
      },
      {
        "commit_hash": "4d69286e3126572511ad1b875eecd1db1123ad58",
        "line_num": 73,
        "line_str": "block|{ name|String name|text init|= literal|\"Hello&<> Ã Ã¥ Ï æ° there\"",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(73, 78)"
      },
      {
        "commit_hash": "0dc1e62d6dd852637abfaa67c2a3c09b94009059",
        "line_num": 197,
        "line_str": "name|assertEquals argument_list|( literal|\"Hello&amp;&lt;&gt;&#197;&#229;&#960;&#26032; there\" argument_list|, name|escapedAsciiXhtml",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(195, 200)"
      },
      {
        "commit_hash": "4d69286e3126572511ad1b875eecd1db1123ad58",
        "line_num": 164,
        "line_str": "name|assertEquals argument_list|( literal|\"Hello&amp;&lt;&gt;&angst;&aring;&pi;&#26032; there\" argument_list|, name|escapedAsciiFull",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(188, 193)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 193,
        "line_str": "argument_list|( literal|\"Hello&<> Ã Ï Ï æ° there&!\" argument_list|, name|Entities operator|.",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(224, 228)"
      },
      {
        "commit_hash": "4d69286e3126572511ad1b875eecd1db1123ad58",
        "line_num": 189,
        "line_str": "init|= literal|\"Hello&amp;&LT&gt;&angst&#960;&#960&#x65B0; there&!\" decl_stmt|; name|assertEquals argument_list|(",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(219, 224)"
      },
      {
        "commit_hash": "4d69286e3126572511ad1b875eecd1db1123ad58",
        "line_num": 156,
        "line_str": "decl_stmt|; name|assertEquals argument_list|( literal|\"Hello&amp;&lt;&gt;&Aring;&aring;&#960;&#26032; there\" argument_list|,",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(181, 186)"
      },
      {
        "commit_hash": "eea66f9bdf3b4d4cef72834923b2ab68839b256a",
        "line_num": 140,
        "line_str": "name|compile argument_list|( literal|\"&(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?\" argument_list|) decl_stmt|;",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(195, 200)"
      },
      {
        "commit_hash": "4d69286e3126572511ad1b875eecd1db1123ad58",
        "line_num": 173,
        "line_str": "literal|\"Hello&amp;&lt;&gt;&Aring;&aring; Ï æ° there\" argument_list|, name|escapedUtf argument_list|) expr_stmt|;",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(202, 207)"
      },
      {
        "commit_hash": "4d69286e3126572511ad1b875eecd1db1123ad58",
        "line_num": 74,
        "line_str": "name|String name|text init|= literal|\"Hello&<> Ã Ã¥ Ï æ° there\" decl_stmt|;",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(73, 78)"
      },
      {
        "commit_hash": "4d69286e3126572511ad1b875eecd1db1123ad58",
        "line_num": 169,
        "line_str": "argument_list|) expr_stmt|; name|assertEquals argument_list|( literal|\"Hello&amp;&lt;&gt;&Aring;&aring; Ï æ° there\"",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(202, 207)"
      },
      {
        "commit_hash": "0dc1e62d6dd852637abfaa67c2a3c09b94009059",
        "line_num": 198,
        "line_str": "argument_list|( literal|\"Hello&amp;&lt;&gt;&#197;&#229;&#960;&#26032; there\" argument_list|, name|escapedAsciiXhtml argument_list|)",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(195, 200)"
      },
      {
        "commit_hash": "4d69286e3126572511ad1b875eecd1db1123ad58",
        "line_num": 165,
        "line_str": "argument_list|( literal|\"Hello&amp;&lt;&gt;&angst;&aring;&pi;&#26032; there\" argument_list|, name|escapedAsciiFull argument_list|)",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(188, 193)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 194,
        "line_str": "literal|\"Hello&<> Ã Ï Ï æ° there&!\" argument_list|, name|Entities operator|. name|unescape",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(224, 228)"
      },
      {
        "commit_hash": "4d69286e3126572511ad1b875eecd1db1123ad58",
        "line_num": 190,
        "line_str": "literal|\"Hello&amp;&LT&gt;&angst&#960;&#960&#x65B0; there&!\" decl_stmt|; name|assertEquals argument_list|( literal|\"Hello&<> Ã Ï Ï æ° there&!\"",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(219, 224)"
      },
      {
        "commit_hash": "4d69286e3126572511ad1b875eecd1db1123ad58",
        "line_num": 157,
        "line_str": "name|assertEquals argument_list|( literal|\"Hello&amp;&lt;&gt;&Aring;&aring;&#960;&#26032; there\" argument_list|, name|escapedAscii",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(181, 186)"
      },
      {
        "commit_hash": "4d69286e3126572511ad1b875eecd1db1123ad58",
        "line_num": 186,
        "line_str": "block|{ name|String name|text init|= literal|\"Hello&amp;&LT&gt;&angst&#960;&#960&#x65B0; there&!\"",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(219, 224)"
      },
      {
        "commit_hash": "eea66f9bdf3b4d4cef72834923b2ab68839b256a",
        "line_num": 141,
        "line_str": "argument_list|( literal|\"&(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?\" argument_list|) decl_stmt|; specifier|static",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(195, 200)"
      },
      {
        "commit_hash": "4d69286e3126572511ad1b875eecd1db1123ad58",
        "line_num": 75,
        "line_str": "name|text init|= literal|\"Hello&<> Ã Ã¥ Ï æ° there\" decl_stmt|; name|String",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(73, 78)"
      },
      {
        "commit_hash": "4d69286e3126572511ad1b875eecd1db1123ad58",
        "line_num": 170,
        "line_str": "expr_stmt|; name|assertEquals argument_list|( literal|\"Hello&amp;&lt;&gt;&Aring;&aring; Ï æ° there\" argument_list|,",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(202, 207)"
      },
      {
        "commit_hash": "0dc1e62d6dd852637abfaa67c2a3c09b94009059",
        "line_num": 199,
        "line_str": "literal|\"Hello&amp;&lt;&gt;&#197;&#229;&#960;&#26032; there\" argument_list|, name|escapedAsciiXhtml argument_list|) expr_stmt|;",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(195, 200)"
      },
      {
        "commit_hash": "4d69286e3126572511ad1b875eecd1db1123ad58",
        "line_num": 166,
        "line_str": "literal|\"Hello&amp;&lt;&gt;&angst;&aring;&pi;&#26032; there\" argument_list|, name|escapedAsciiFull argument_list|) expr_stmt|;",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(188, 193)"
      },
      {
        "commit_hash": "0dc1e62d6dd852637abfaa67c2a3c09b94009059",
        "line_num": 195,
        "line_str": "argument_list|) expr_stmt|; name|assertEquals argument_list|( literal|\"Hello&amp;&lt;&gt;&#197;&#229;&#960;&#26032; there\"",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(195, 200)"
      },
      {
        "commit_hash": "4d69286e3126572511ad1b875eecd1db1123ad58",
        "line_num": 162,
        "line_str": "argument_list|) expr_stmt|; name|assertEquals argument_list|( literal|\"Hello&amp;&lt;&gt;&angst;&aring;&pi;&#26032; there\"",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(188, 193)"
      },
      {
        "commit_hash": "7cab988e9e3e0b19baf712c513eb3ba1a45c80cb",
        "line_num": 191,
        "line_str": "decl_stmt|; name|assertEquals argument_list|( literal|\"Hello&<> Ã Ï Ï æ° there&!\" argument_list|,",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(224, 228)"
      },
      {
        "commit_hash": "4d69286e3126572511ad1b875eecd1db1123ad58",
        "line_num": 158,
        "line_str": "argument_list|( literal|\"Hello&amp;&lt;&gt;&Aring;&aring;&#960;&#26032; there\" argument_list|, name|escapedAscii argument_list|)",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(181, 186)"
      },
      {
        "commit_hash": "4d69286e3126572511ad1b875eecd1db1123ad58",
        "line_num": 187,
        "line_str": "name|String name|text init|= literal|\"Hello&amp;&LT&gt;&angst&#960;&#960&#x65B0; there&!\" decl_stmt|;",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(219, 224)"
      },
      {
        "commit_hash": "eea66f9bdf3b4d4cef72834923b2ab68839b256a",
        "line_num": 142,
        "line_str": "literal|\"&(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?\" argument_list|) decl_stmt|; specifier|static name|String",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(195, 200)"
      },
      {
        "commit_hash": "eea66f9bdf3b4d4cef72834923b2ab68839b256a",
        "line_num": 138,
        "line_str": "name|Pattern operator|. name|compile argument_list|( literal|\"&(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?\"",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(195, 200)"
      }
    ]
  },
  {
    "id": 10055,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": ["60e96ebdd9874725299a4b8aa4526e3ba29995df"],
    "fix_commit_hash": "b32e4bd11596812db82db6d645a9208df3c258f7",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "60e96ebdd9874725299a4b8aa4526e3ba29995df",
        "line_num": 565,
        "line_str": "block|{ specifier|private name|ClassLoader name|classLoader decl_stmt|;",
        "file_path": "src/main/java/org/apache/commons/lang3/SerializationUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/SerializationUtils.java",
        "input_line_num": "range(574, 577)"
      },
      {
        "commit_hash": "60e96ebdd9874725299a4b8aa4526e3ba29995df",
        "line_num": 564,
        "line_str": "name|ObjectInputStream block|{ specifier|private name|ClassLoader name|classLoader",
        "file_path": "src/main/java/org/apache/commons/lang3/SerializationUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/SerializationUtils.java",
        "input_line_num": "range(574, 577)"
      },
      {
        "commit_hash": "60e96ebdd9874725299a4b8aa4526e3ba29995df",
        "line_num": 563,
        "line_str": "extends|extends name|ObjectInputStream block|{ specifier|private name|ClassLoader",
        "file_path": "src/main/java/org/apache/commons/lang3/SerializationUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/SerializationUtils.java",
        "input_line_num": "range(574, 577)"
      },
      {
        "commit_hash": "60e96ebdd9874725299a4b8aa4526e3ba29995df",
        "line_num": 658,
        "line_str": "argument_list|) return|; block|} block|} block|}",
        "file_path": "src/main/java/org/apache/commons/lang3/SerializationUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/SerializationUtils.java",
        "input_line_num": "range(668, 671)"
      },
      {
        "commit_hash": "60e96ebdd9874725299a4b8aa4526e3ba29995df",
        "line_num": 657,
        "line_str": "argument_list|() argument_list|) return|; block|} block|}",
        "file_path": "src/main/java/org/apache/commons/lang3/SerializationUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/SerializationUtils.java",
        "input_line_num": "range(668, 671)"
      },
      {
        "commit_hash": "60e96ebdd9874725299a4b8aa4526e3ba29995df",
        "line_num": 592,
        "line_str": "name|classLoader expr_stmt|; block|} comment annotation|@",
        "file_path": "src/main/java/org/apache/commons/lang3/SerializationUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/SerializationUtils.java",
        "input_line_num": "range(601, 604)"
      },
      {
        "commit_hash": "60e96ebdd9874725299a4b8aa4526e3ba29995df",
        "line_num": 591,
        "line_str": "operator|= name|classLoader expr_stmt|; block|} comment",
        "file_path": "src/main/java/org/apache/commons/lang3/SerializationUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/SerializationUtils.java",
        "input_line_num": "range(601, 604)"
      },
      {
        "commit_hash": "60e96ebdd9874725299a4b8aa4526e3ba29995df",
        "line_num": 590,
        "line_str": "name|classLoader operator|= name|classLoader expr_stmt|; block|}",
        "file_path": "src/main/java/org/apache/commons/lang3/SerializationUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/SerializationUtils.java",
        "input_line_num": "range(601, 604)"
      },
      {
        "commit_hash": "60e96ebdd9874725299a4b8aa4526e3ba29995df",
        "line_num": 659,
        "line_str": "return|; block|} block|} block|} block|}",
        "file_path": "src/main/java/org/apache/commons/lang3/SerializationUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/SerializationUtils.java",
        "input_line_num": "range(668, 671)"
      },
      {
        "commit_hash": "8ca17b6e245b33877eadb496f11b42e493fd1fff",
        "line_num": 1577,
        "line_str": "expr_stmt|; block|} block|} end_class",
        "file_path": "src/test/org/apache/commons/lang/SerializationUtilsTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/SerializationUtilsTest.java",
        "input_line_num": "range(1987, 1990)"
      },
      {
        "commit_hash": "8ca17b6e245b33877eadb496f11b42e493fd1fff",
        "line_num": 1576,
        "line_str": "argument_list|() expr_stmt|; block|} block|} end_class",
        "file_path": "src/test/org/apache/commons/lang/SerializationUtilsTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/SerializationUtilsTest.java",
        "input_line_num": "range(1987, 1990)"
      },
      {
        "commit_hash": "8ca17b6e245b33877eadb496f11b42e493fd1fff",
        "line_num": 1575,
        "line_str": "name|fail argument_list|() expr_stmt|; block|} block|}",
        "file_path": "src/test/org/apache/commons/lang/SerializationUtilsTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/SerializationUtilsTest.java",
        "input_line_num": "range(1987, 1990)"
      },
      {
        "commit_hash": "8ca17b6e245b33877eadb496f11b42e493fd1fff",
        "line_num": 98,
        "line_str": "name|Serializable import|; end_import  begin_comment",
        "file_path": "src/java/org/apache/commons/lang/SerializationUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/SerializationUtils.java",
        "input_line_num": "range(108, 109)"
      },
      {
        "commit_hash": "60e96ebdd9874725299a4b8aa4526e3ba29995df",
        "line_num": 640,
        "line_str": "parameter_list|) block|{ return|return name|Class operator|.",
        "file_path": "src/main/java/org/apache/commons/lang3/SerializationUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/SerializationUtils.java",
        "input_line_num": "range(649, 652)"
      },
      {
        "commit_hash": "60e96ebdd9874725299a4b8aa4526e3ba29995df",
        "line_num": 639,
        "line_str": "name|ex parameter_list|) block|{ return|return name|Class",
        "file_path": "src/main/java/org/apache/commons/lang3/SerializationUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/SerializationUtils.java",
        "input_line_num": "range(649, 652)"
      },
      {
        "commit_hash": "60e96ebdd9874725299a4b8aa4526e3ba29995df",
        "line_num": 638,
        "line_str": "name|ClassNotFoundException name|ex parameter_list|) block|{ return|return",
        "file_path": "src/main/java/org/apache/commons/lang3/SerializationUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/SerializationUtils.java",
        "input_line_num": "range(649, 652)"
      }
    ]
  },
  {
    "id": 10056,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": ["e426844024d89371157427d17f62f2c5f878d784"],
    "fix_commit_hash": "328194a3c2f35c2428eee8eef40810e99c907748",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "406ad55d2659d3ce2b92fbf18826beae257e10b5",
        "line_num": 3638,
        "line_str": "argument_list|) argument_list|) expr_stmt|; name|assertEquals argument_list|(",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3701, 3709)"
      },
      {
        "commit_hash": "406ad55d2659d3ce2b92fbf18826beae257e10b5",
        "line_num": 3667,
        "line_str": "expr_stmt|; name|assertEquals argument_list|( literal|false argument_list|,",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3728, 3736)"
      },
      {
        "commit_hash": "406ad55d2659d3ce2b92fbf18826beae257e10b5",
        "line_num": 3601,
        "line_str": "argument_list|( literal|true argument_list|, name|StringUtils operator|.",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3660, 3668)"
      },
      {
        "commit_hash": "406ad55d2659d3ce2b92fbf18826beae257e10b5",
        "line_num": 3696,
        "line_str": "name|assertEquals argument_list|( literal|false argument_list|, name|StringUtils",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3756, 3764)"
      },
      {
        "commit_hash": "406ad55d2659d3ce2b92fbf18826beae257e10b5",
        "line_num": 3597,
        "line_str": "argument_list|) argument_list|) expr_stmt|; name|assertEquals argument_list|(",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3660, 3668)"
      },
      {
        "commit_hash": "e426844024d89371157427d17f62f2c5f878d784",
        "line_num": 1187,
        "line_str": "else|: name|cs1 operator|. name|equals argument_list|(",
        "file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(1522, 1535)"
      },
      {
        "commit_hash": "406ad55d2659d3ce2b92fbf18826beae257e10b5",
        "line_num": 3692,
        "line_str": "literal|null argument_list|) argument_list|) expr_stmt|; name|assertEquals",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3756, 3764)"
      },
      {
        "commit_hash": "e426844024d89371157427d17f62f2c5f878d784",
        "line_num": 1183,
        "line_str": "condition|? name|cs2 operator|== literal|null else|:",
        "file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(1522, 1535)"
      },
      {
        "commit_hash": "e426844024d89371157427d17f62f2c5f878d784",
        "line_num": 1179,
        "line_str": "return|return name|cs1 operator|== literal|null condition|?",
        "file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(1522, 1535)"
      },
      {
        "commit_hash": "406ad55d2659d3ce2b92fbf18826beae257e10b5",
        "line_num": 3589,
        "line_str": "argument_list|, name|StringUtils operator|. name|equals argument_list|(",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3646, 3654)"
      },
      {
        "commit_hash": "406ad55d2659d3ce2b92fbf18826beae257e10b5",
        "line_num": 3684,
        "line_str": "literal|false argument_list|, name|StringUtils operator|. name|equals",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3742, 3750)"
      },
      {
        "commit_hash": "e426844024d89371157427d17f62f2c5f878d784",
        "line_num": 1175,
        "line_str": "name|CharSequence name|cs2 parameter_list|) block|{ return|return",
        "file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(1522, 1535)"
      },
      {
        "commit_hash": "406ad55d2659d3ce2b92fbf18826beae257e10b5",
        "line_num": 3585,
        "line_str": "block|{ name|assertEquals argument_list|( literal|true argument_list|,",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3646, 3654)"
      },
      {
        "commit_hash": "406ad55d2659d3ce2b92fbf18826beae257e10b5",
        "line_num": 3680,
        "line_str": "argument_list|) expr_stmt|; name|assertEquals argument_list|( literal|false",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3742, 3750)"
      },
      {
        "commit_hash": "406ad55d2659d3ce2b92fbf18826beae257e10b5",
        "line_num": 3614,
        "line_str": "name|assertEquals argument_list|( literal|true argument_list|, name|StringUtils",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3674, 3682)"
      },
      {
        "commit_hash": "406ad55d2659d3ce2b92fbf18826beae257e10b5",
        "line_num": 3643,
        "line_str": "literal|false argument_list|, name|StringUtils operator|. name|equals",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3701, 3709)"
      },
      {
        "commit_hash": "406ad55d2659d3ce2b92fbf18826beae257e10b5",
        "line_num": 3610,
        "line_str": "name|FOO argument_list|) argument_list|) expr_stmt|; name|assertEquals",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3674, 3682)"
      },
      {
        "commit_hash": "406ad55d2659d3ce2b92fbf18826beae257e10b5",
        "line_num": 3639,
        "line_str": "argument_list|) expr_stmt|; name|assertEquals argument_list|( literal|false",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3701, 3709)"
      },
      {
        "commit_hash": "406ad55d2659d3ce2b92fbf18826beae257e10b5",
        "line_num": 3668,
        "line_str": "name|assertEquals argument_list|( literal|false argument_list|, name|StringUtils",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3728, 3736)"
      },
      {
        "commit_hash": "e426844024d89371157427d17f62f2c5f878d784",
        "line_num": 1192,
        "line_str": "name|cs2 argument_list|) return|; block|} comment",
        "file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(1539, 1540)"
      },
      {
        "commit_hash": "406ad55d2659d3ce2b92fbf18826beae257e10b5",
        "line_num": 3602,
        "line_str": "literal|true argument_list|, name|StringUtils operator|. name|equals",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3660, 3668)"
      },
      {
        "commit_hash": "406ad55d2659d3ce2b92fbf18826beae257e10b5",
        "line_num": 3697,
        "line_str": "argument_list|( literal|false argument_list|, name|StringUtils operator|.",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3756, 3764)"
      },
      {
        "commit_hash": "406ad55d2659d3ce2b92fbf18826beae257e10b5",
        "line_num": 3664,
        "line_str": "argument_list|) argument_list|) argument_list|) expr_stmt|; name|assertEquals",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3728, 3736)"
      },
      {
        "commit_hash": "406ad55d2659d3ce2b92fbf18826beae257e10b5",
        "line_num": 3598,
        "line_str": "argument_list|) expr_stmt|; name|assertEquals argument_list|( literal|true",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3660, 3668)"
      },
      {
        "commit_hash": "406ad55d2659d3ce2b92fbf18826beae257e10b5",
        "line_num": 3693,
        "line_str": "argument_list|) argument_list|) expr_stmt|; name|assertEquals argument_list|(",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3756, 3764)"
      },
      {
        "commit_hash": "e426844024d89371157427d17f62f2c5f878d784",
        "line_num": 1184,
        "line_str": "name|cs2 operator|== literal|null else|: name|cs1",
        "file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(1522, 1535)"
      },
      {
        "commit_hash": "e426844024d89371157427d17f62f2c5f878d784",
        "line_num": 1180,
        "line_str": "name|cs1 operator|== literal|null condition|? name|cs2",
        "file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(1522, 1535)"
      },
      {
        "commit_hash": "406ad55d2659d3ce2b92fbf18826beae257e10b5",
        "line_num": 3685,
        "line_str": "argument_list|, name|StringUtils operator|. name|equals argument_list|(",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3742, 3750)"
      },
      {
        "commit_hash": "e426844024d89371157427d17f62f2c5f878d784",
        "line_num": 1176,
        "line_str": "name|cs2 parameter_list|) block|{ return|return name|cs1",
        "file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(1522, 1535)"
      },
      {
        "commit_hash": "406ad55d2659d3ce2b92fbf18826beae257e10b5",
        "line_num": 3586,
        "line_str": "name|assertEquals argument_list|( literal|true argument_list|, name|StringUtils",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3646, 3654)"
      },
      {
        "commit_hash": "406ad55d2659d3ce2b92fbf18826beae257e10b5",
        "line_num": 3681,
        "line_str": "expr_stmt|; name|assertEquals argument_list|( literal|false argument_list|,",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3742, 3750)"
      },
      {
        "commit_hash": "406ad55d2659d3ce2b92fbf18826beae257e10b5",
        "line_num": 3615,
        "line_str": "argument_list|( literal|true argument_list|, name|StringUtils operator|.",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3674, 3682)"
      },
      {
        "commit_hash": "406ad55d2659d3ce2b92fbf18826beae257e10b5",
        "line_num": 3582,
        "line_str": "name|void name|testEquals parameter_list|() block|{ name|assertEquals",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3646, 3654)"
      },
      {
        "commit_hash": "406ad55d2659d3ce2b92fbf18826beae257e10b5",
        "line_num": 3644,
        "line_str": "argument_list|, name|StringUtils operator|. name|equals argument_list|(",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3701, 3709)"
      },
      {
        "commit_hash": "406ad55d2659d3ce2b92fbf18826beae257e10b5",
        "line_num": 3611,
        "line_str": "argument_list|) argument_list|) expr_stmt|; name|assertEquals argument_list|(",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3674, 3682)"
      },
      {
        "commit_hash": "406ad55d2659d3ce2b92fbf18826beae257e10b5",
        "line_num": 3640,
        "line_str": "expr_stmt|; name|assertEquals argument_list|( literal|false argument_list|,",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3701, 3709)"
      },
      {
        "commit_hash": "406ad55d2659d3ce2b92fbf18826beae257e10b5",
        "line_num": 3669,
        "line_str": "argument_list|( literal|false argument_list|, name|StringUtils operator|.",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3728, 3736)"
      },
      {
        "commit_hash": "406ad55d2659d3ce2b92fbf18826beae257e10b5",
        "line_num": 3603,
        "line_str": "argument_list|, name|StringUtils operator|. name|equals argument_list|(",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3660, 3668)"
      },
      {
        "commit_hash": "406ad55d2659d3ce2b92fbf18826beae257e10b5",
        "line_num": 3698,
        "line_str": "literal|false argument_list|, name|StringUtils operator|. name|equals",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3756, 3764)"
      },
      {
        "commit_hash": "406ad55d2659d3ce2b92fbf18826beae257e10b5",
        "line_num": 3665,
        "line_str": "argument_list|) argument_list|) expr_stmt|; name|assertEquals argument_list|(",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3728, 3736)"
      },
      {
        "commit_hash": "406ad55d2659d3ce2b92fbf18826beae257e10b5",
        "line_num": 3599,
        "line_str": "expr_stmt|; name|assertEquals argument_list|( literal|true argument_list|,",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3660, 3668)"
      },
      {
        "commit_hash": "406ad55d2659d3ce2b92fbf18826beae257e10b5",
        "line_num": 3694,
        "line_str": "argument_list|) expr_stmt|; name|assertEquals argument_list|( literal|false",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3756, 3764)"
      },
      {
        "commit_hash": "e426844024d89371157427d17f62f2c5f878d784",
        "line_num": 1185,
        "line_str": "operator|== literal|null else|: name|cs1 operator|.",
        "file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(1522, 1535)"
      },
      {
        "commit_hash": "e426844024d89371157427d17f62f2c5f878d784",
        "line_num": 1181,
        "line_str": "operator|== literal|null condition|? name|cs2 operator|==",
        "file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(1522, 1535)"
      },
      {
        "commit_hash": "e426844024d89371157427d17f62f2c5f878d784",
        "line_num": 1177,
        "line_str": "parameter_list|) block|{ return|return name|cs1 operator|==",
        "file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(1522, 1535)"
      },
      {
        "commit_hash": "406ad55d2659d3ce2b92fbf18826beae257e10b5",
        "line_num": 3587,
        "line_str": "argument_list|( literal|true argument_list|, name|StringUtils operator|.",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3646, 3654)"
      },
      {
        "commit_hash": "406ad55d2659d3ce2b92fbf18826beae257e10b5",
        "line_num": 3682,
        "line_str": "name|assertEquals argument_list|( literal|false argument_list|, name|StringUtils",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3742, 3750)"
      },
      {
        "commit_hash": "406ad55d2659d3ce2b92fbf18826beae257e10b5",
        "line_num": 3616,
        "line_str": "literal|true argument_list|, name|StringUtils operator|. name|equals",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3674, 3682)"
      },
      {
        "commit_hash": "406ad55d2659d3ce2b92fbf18826beae257e10b5",
        "line_num": 3583,
        "line_str": "name|testEquals parameter_list|() block|{ name|assertEquals argument_list|(",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3646, 3654)"
      },
      {
        "commit_hash": "406ad55d2659d3ce2b92fbf18826beae257e10b5",
        "line_num": 3678,
        "line_str": "name|BAR argument_list|) argument_list|) expr_stmt|; name|assertEquals",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3742, 3750)"
      },
      {
        "commit_hash": "406ad55d2659d3ce2b92fbf18826beae257e10b5",
        "line_num": 3612,
        "line_str": "argument_list|) expr_stmt|; name|assertEquals argument_list|( literal|true",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3674, 3682)"
      },
      {
        "commit_hash": "c25d9d52f7566c9f9405534e385ae6d68215f294",
        "line_num": 38,
        "line_str": "name|TestCase import|; end_import  begin_comment",
        "file_path": "src/test/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(38, 39)"
      },
      {
        "commit_hash": "406ad55d2659d3ce2b92fbf18826beae257e10b5",
        "line_num": 3641,
        "line_str": "name|assertEquals argument_list|( literal|false argument_list|, name|StringUtils",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3701, 3709)"
      },
      {
        "commit_hash": "406ad55d2659d3ce2b92fbf18826beae257e10b5",
        "line_num": 3670,
        "line_str": "literal|false argument_list|, name|StringUtils operator|. name|equals",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3728, 3736)"
      },
      {
        "commit_hash": "406ad55d2659d3ce2b92fbf18826beae257e10b5",
        "line_num": 3637,
        "line_str": "argument_list|) argument_list|) argument_list|) expr_stmt|; name|assertEquals",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3701, 3709)"
      },
      {
        "commit_hash": "406ad55d2659d3ce2b92fbf18826beae257e10b5",
        "line_num": 3699,
        "line_str": "argument_list|, name|StringUtils operator|. name|equals argument_list|(",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3756, 3764)"
      },
      {
        "commit_hash": "406ad55d2659d3ce2b92fbf18826beae257e10b5",
        "line_num": 3666,
        "line_str": "argument_list|) expr_stmt|; name|assertEquals argument_list|( literal|false",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3728, 3736)"
      },
      {
        "commit_hash": "406ad55d2659d3ce2b92fbf18826beae257e10b5",
        "line_num": 3600,
        "line_str": "name|assertEquals argument_list|( literal|true argument_list|, name|StringUtils",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3660, 3668)"
      },
      {
        "commit_hash": "406ad55d2659d3ce2b92fbf18826beae257e10b5",
        "line_num": 3695,
        "line_str": "expr_stmt|; name|assertEquals argument_list|( literal|false argument_list|,",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3756, 3764)"
      },
      {
        "commit_hash": "e426844024d89371157427d17f62f2c5f878d784",
        "line_num": 1186,
        "line_str": "literal|null else|: name|cs1 operator|. name|equals",
        "file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(1522, 1535)"
      },
      {
        "commit_hash": "406ad55d2659d3ce2b92fbf18826beae257e10b5",
        "line_num": 3596,
        "line_str": "literal|null argument_list|) argument_list|) expr_stmt|; name|assertEquals",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3660, 3668)"
      },
      {
        "commit_hash": "e426844024d89371157427d17f62f2c5f878d784",
        "line_num": 1182,
        "line_str": "literal|null condition|? name|cs2 operator|== literal|null",
        "file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(1522, 1535)"
      },
      {
        "commit_hash": "e426844024d89371157427d17f62f2c5f878d784",
        "line_num": 1178,
        "line_str": "block|{ return|return name|cs1 operator|== literal|null",
        "file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(1522, 1535)"
      },
      {
        "commit_hash": "406ad55d2659d3ce2b92fbf18826beae257e10b5",
        "line_num": 3588,
        "line_str": "literal|true argument_list|, name|StringUtils operator|. name|equals",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3646, 3654)"
      },
      {
        "commit_hash": "406ad55d2659d3ce2b92fbf18826beae257e10b5",
        "line_num": 3683,
        "line_str": "argument_list|( literal|false argument_list|, name|StringUtils operator|.",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3742, 3750)"
      },
      {
        "commit_hash": "406ad55d2659d3ce2b92fbf18826beae257e10b5",
        "line_num": 3617,
        "line_str": "argument_list|, name|StringUtils operator|. name|equals argument_list|(",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3674, 3682)"
      },
      {
        "commit_hash": "406ad55d2659d3ce2b92fbf18826beae257e10b5",
        "line_num": 3584,
        "line_str": "parameter_list|() block|{ name|assertEquals argument_list|( literal|true",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3646, 3654)"
      },
      {
        "commit_hash": "406ad55d2659d3ce2b92fbf18826beae257e10b5",
        "line_num": 3679,
        "line_str": "argument_list|) argument_list|) expr_stmt|; name|assertEquals argument_list|(",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3742, 3750)"
      },
      {
        "commit_hash": "406ad55d2659d3ce2b92fbf18826beae257e10b5",
        "line_num": 3613,
        "line_str": "expr_stmt|; name|assertEquals argument_list|( literal|true argument_list|,",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3674, 3682)"
      },
      {
        "commit_hash": "406ad55d2659d3ce2b92fbf18826beae257e10b5",
        "line_num": 3642,
        "line_str": "argument_list|( literal|false argument_list|, name|StringUtils operator|.",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3701, 3709)"
      },
      {
        "commit_hash": "406ad55d2659d3ce2b92fbf18826beae257e10b5",
        "line_num": 3671,
        "line_str": "argument_list|, name|StringUtils operator|. name|equals argument_list|(",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3728, 3736)"
      }
    ]
  },
  {
    "id": 10057,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": ["c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4"],
    "fix_commit_hash": "fed02347d00265313cf9a7c381bea5883d14b37a",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 142,
        "line_str": "name|start decl_stmt|; while|while condition|( name|input",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(152, 158)"
      },
      {
        "commit_hash": "2b074c1cf74ca6a2927d587edca69fecb3726623",
        "line_num": 93,
        "line_str": "argument_list|() operator|- literal|1 operator|) operator|&&",
        "file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(85, 97)"
      },
      {
        "commit_hash": "2b074c1cf74ca6a2927d587edca69fecb3726623",
        "line_num": 89,
        "line_str": "operator|( name|input operator|. name|length argument_list|()",
        "file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(85, 97)"
      },
      {
        "commit_hash": "2b074c1cf74ca6a2927d587edca69fecb3726623",
        "line_num": 121,
        "line_str": "name|assertEquals argument_list|( literal|\"Failed to ignore when last character is&\" argument_list|, name|expected",
        "file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_line_num": "range(119, 124)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 134,
        "line_str": "name|isHex operator|= literal|true expr_stmt|; block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(146, 150)"
      },
      {
        "commit_hash": "2b074c1cf74ca6a2927d587edca69fecb3726623",
        "line_num": 85,
        "line_str": "literal|'&' operator|&& name|index operator|< operator|(",
        "file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(85, 97)"
      },
      {
        "commit_hash": "6a504ddcc58da504cea66f8563d7760858c109e0",
        "line_num": 275,
        "line_str": "argument_list|) expr_stmt|; block|} return|return literal|2",
        "file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(284, 288)"
      },
      {
        "commit_hash": "2b074c1cf74ca6a2927d587edca69fecb3726623",
        "line_num": 109,
        "line_str": "name|input decl_stmt|; name|String name|result init|=",
        "file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_line_num": "range(100, 110)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 221,
        "line_str": "parameter_list|) block|{ return|return literal|0 return|;",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(231, 235)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 250,
        "line_str": "operator|) operator|+ literal|1 return|; block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(301, 306)"
      },
      {
        "commit_hash": "2b074c1cf74ca6a2927d587edca69fecb3726623",
        "line_num": 73,
        "line_str": "throws|throws name|IOException block|{ if|if condition|(",
        "file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(72, 76)"
      },
      {
        "commit_hash": "2b074c1cf74ca6a2927d587edca69fecb3726623",
        "line_num": 105,
        "line_str": "decl_stmt|; name|String name|expected init|= name|input",
        "file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_line_num": "range(100, 110)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 151,
        "line_str": "argument_list|) operator|!= literal|';' condition|) block|{",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(160, 166)"
      },
      {
        "commit_hash": "2b074c1cf74ca6a2927d587edca69fecb3726623",
        "line_num": 101,
        "line_str": "name|String name|input init|= literal|\"Test&\" decl_stmt|;",
        "file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_line_num": "range(100, 110)"
      },
      {
        "commit_hash": "2b074c1cf74ca6a2927d587edca69fecb3726623",
        "line_num": 94,
        "line_str": "operator|- literal|1 operator|) operator|&& name|input",
        "file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(85, 97)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 143,
        "line_str": "decl_stmt|; while|while condition|( name|input operator|.",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(152, 158)"
      },
      {
        "commit_hash": "2b074c1cf74ca6a2927d587edca69fecb3726623",
        "line_num": 90,
        "line_str": "name|input operator|. name|length argument_list|() operator|-",
        "file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(85, 97)"
      },
      {
        "commit_hash": "2b074c1cf74ca6a2927d587edca69fecb3726623",
        "line_num": 122,
        "line_str": "argument_list|( literal|\"Failed to ignore when last character is&\" argument_list|, name|expected argument_list|,",
        "file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_line_num": "range(119, 124)"
      },
      {
        "commit_hash": "2b074c1cf74ca6a2927d587edca69fecb3726623",
        "line_num": 86,
        "line_str": "operator|&& name|index operator|< operator|( name|input",
        "file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(85, 97)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 135,
        "line_str": "operator|= literal|true expr_stmt|; block|} name|int",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(146, 150)"
      },
      {
        "commit_hash": "6a504ddcc58da504cea66f8563d7760858c109e0",
        "line_num": 276,
        "line_str": "expr_stmt|; block|} return|return literal|2 operator|+",
        "file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(284, 288)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 222,
        "line_str": "block|{ return|return literal|0 return|; block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(231, 235)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 251,
        "line_str": "operator|+ literal|1 return|; block|} return|return",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(301, 306)"
      },
      {
        "commit_hash": "2b074c1cf74ca6a2927d587edca69fecb3726623",
        "line_num": 74,
        "line_str": "name|IOException block|{ if|if condition|( name|input",
        "file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(72, 76)"
      },
      {
        "commit_hash": "2b074c1cf74ca6a2927d587edca69fecb3726623",
        "line_num": 106,
        "line_str": "name|String name|expected init|= name|input decl_stmt|;",
        "file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_line_num": "range(100, 110)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 152,
        "line_str": "operator|!= literal|';' condition|) block|{ name|end",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(160, 166)"
      },
      {
        "commit_hash": "2b074c1cf74ca6a2927d587edca69fecb3726623",
        "line_num": 102,
        "line_str": "name|input init|= literal|\"Test&\" decl_stmt|; name|String",
        "file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_line_num": "range(100, 110)"
      },
      {
        "commit_hash": "2b074c1cf74ca6a2927d587edca69fecb3726623",
        "line_num": 72,
        "line_str": "parameter_list|) throws|throws name|IOException block|{ if|if",
        "file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(72, 76)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 148,
        "line_str": "name|charAt argument_list|( name|end argument_list|) operator|!=",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(160, 166)"
      },
      {
        "commit_hash": "2b074c1cf74ca6a2927d587edca69fecb3726623",
        "line_num": 95,
        "line_str": "literal|1 operator|) operator|&& name|input operator|.",
        "file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(85, 97)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 144,
        "line_str": "while|while condition|( name|input operator|. name|charAt",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(152, 158)"
      },
      {
        "commit_hash": "2b074c1cf74ca6a2927d587edca69fecb3726623",
        "line_num": 104,
        "line_str": "literal|\"Test&\" decl_stmt|; name|String name|expected init|=",
        "file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_line_num": "range(100, 110)"
      },
      {
        "commit_hash": "2b074c1cf74ca6a2927d587edca69fecb3726623",
        "line_num": 91,
        "line_str": "operator|. name|length argument_list|() operator|- literal|1",
        "file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(85, 97)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 140,
        "line_str": "name|end init|= name|start decl_stmt|; while|while",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(152, 158)"
      },
      {
        "commit_hash": "2b074c1cf74ca6a2927d587edca69fecb3726623",
        "line_num": 123,
        "line_str": "literal|\"Failed to ignore when last character is&\" argument_list|, name|expected argument_list|, name|result",
        "file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_line_num": "range(119, 124)"
      },
      {
        "commit_hash": "2b074c1cf74ca6a2927d587edca69fecb3726623",
        "line_num": 87,
        "line_str": "name|index operator|< operator|( name|input operator|.",
        "file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(85, 97)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 136,
        "line_str": "literal|true expr_stmt|; block|} name|int name|end",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(146, 150)"
      },
      {
        "commit_hash": "6a504ddcc58da504cea66f8563d7760858c109e0",
        "line_num": 277,
        "line_str": "block|} return|return literal|2 operator|+ operator|(",
        "file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(284, 288)"
      },
      {
        "commit_hash": "2b074c1cf74ca6a2927d587edca69fecb3726623",
        "line_num": 119,
        "line_str": "argument_list|) decl_stmt|; name|assertEquals argument_list|( literal|\"Failed to ignore when last character is&\"",
        "file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_line_num": "range(119, 124)"
      },
      {
        "commit_hash": "2b074c1cf74ca6a2927d587edca69fecb3726623",
        "line_num": 75,
        "line_str": "block|{ if|if condition|( name|input operator|.",
        "file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(72, 76)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 219,
        "line_str": "name|NumberFormatException name|nfe parameter_list|) block|{ return|return",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(231, 235)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 252,
        "line_str": "literal|1 return|; block|} return|return literal|0",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(301, 306)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 153,
        "line_str": "literal|';' condition|) block|{ name|end operator|++",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(160, 166)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 248,
        "line_str": "else|: literal|0 operator|) operator|+ literal|1",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(301, 306)"
      },
      {
        "commit_hash": "2b074c1cf74ca6a2927d587edca69fecb3726623",
        "line_num": 107,
        "line_str": "name|expected init|= name|input decl_stmt|; name|String",
        "file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_line_num": "range(100, 110)"
      },
      {
        "commit_hash": "2b074c1cf74ca6a2927d587edca69fecb3726623",
        "line_num": 103,
        "line_str": "init|= literal|\"Test&\" decl_stmt|; name|String name|expected",
        "file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_line_num": "range(100, 110)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 149,
        "line_str": "argument_list|( name|end argument_list|) operator|!= literal|';'",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(160, 166)"
      },
      {
        "commit_hash": "2b074c1cf74ca6a2927d587edca69fecb3726623",
        "line_num": 96,
        "line_str": "operator|) operator|&& name|input operator|. name|charAt",
        "file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(85, 97)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 145,
        "line_str": "condition|( name|input operator|. name|charAt argument_list|(",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(152, 158)"
      },
      {
        "commit_hash": "2b074c1cf74ca6a2927d587edca69fecb3726623",
        "line_num": 92,
        "line_str": "name|length argument_list|() operator|- literal|1 operator|)",
        "file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(85, 97)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 141,
        "line_str": "init|= name|start decl_stmt|; while|while condition|(",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(152, 158)"
      },
      {
        "commit_hash": "2b074c1cf74ca6a2927d587edca69fecb3726623",
        "line_num": 88,
        "line_str": "operator|< operator|( name|input operator|. name|length",
        "file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(85, 97)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 137,
        "line_str": "expr_stmt|; block|} name|int name|end init|=",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(146, 150)"
      },
      {
        "commit_hash": "2b074c1cf74ca6a2927d587edca69fecb3726623",
        "line_num": 120,
        "line_str": "decl_stmt|; name|assertEquals argument_list|( literal|\"Failed to ignore when last character is&\" argument_list|,",
        "file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_line_num": "range(119, 124)"
      },
      {
        "commit_hash": "6a504ddcc58da504cea66f8563d7760858c109e0",
        "line_num": 274,
        "line_str": "name|entityValue argument_list|) expr_stmt|; block|} return|return",
        "file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(284, 288)"
      },
      {
        "commit_hash": "2b074c1cf74ca6a2927d587edca69fecb3726623",
        "line_num": 108,
        "line_str": "init|= name|input decl_stmt|; name|String name|result",
        "file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_line_num": "range(100, 110)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 220,
        "line_str": "name|nfe parameter_list|) block|{ return|return literal|0",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(231, 235)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 249,
        "line_str": "literal|0 operator|) operator|+ literal|1 return|;",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(301, 306)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 150,
        "line_str": "name|end argument_list|) operator|!= literal|';' condition|)",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(160, 166)"
      },
      {
        "commit_hash": "2b074c1cf74ca6a2927d587edca69fecb3726623",
        "line_num": 100,
        "line_str": "decl_stmt|; name|String name|input init|= literal|\"Test&\"",
        "file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_line_num": "range(100, 110)"
      }
    ]
  },
  {
    "id": 10058,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": ["2d2c9685d0754fbd2dd9bf0ba5b9756e6f8ca8db"],
    "fix_commit_hash": "d9a5cf8ffebe09799fe6b7306699c9037e466e3f",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "2d2c9685d0754fbd2dd9bf0ba5b9756e6f8ca8db",
        "line_num": 639,
        "line_str": "name|HOUR argument_list|) operator|== name|cal2 operator|.",
        "file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/time/DateUtils.java",
        "input_line_num": "range(691, 696)"
      },
      {
        "commit_hash": "2d2c9685d0754fbd2dd9bf0ba5b9756e6f8ca8db",
        "line_num": 638,
        "line_str": "operator|. name|HOUR argument_list|) operator|== name|cal2",
        "file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/time/DateUtils.java",
        "input_line_num": "range(691, 696)"
      },
      {
        "commit_hash": "2d2c9685d0754fbd2dd9bf0ba5b9756e6f8ca8db",
        "line_num": 637,
        "line_str": "name|Calendar operator|. name|HOUR argument_list|) operator|==",
        "file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/time/DateUtils.java",
        "input_line_num": "range(691, 696)"
      },
      {
        "commit_hash": "2d2c9685d0754fbd2dd9bf0ba5b9756e6f8ca8db",
        "line_num": 636,
        "line_str": "argument_list|( name|Calendar operator|. name|HOUR argument_list|)",
        "file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/time/DateUtils.java",
        "input_line_num": "range(691, 696)"
      },
      {
        "commit_hash": "2d2c9685d0754fbd2dd9bf0ba5b9756e6f8ca8db",
        "line_num": 635,
        "line_str": "name|get argument_list|( name|Calendar operator|. name|HOUR",
        "file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/time/DateUtils.java",
        "input_line_num": "range(691, 696)"
      },
      {
        "commit_hash": "2d2c9685d0754fbd2dd9bf0ba5b9756e6f8ca8db",
        "line_num": 1686,
        "line_str": "name|cal2 argument_list|) argument_list|) expr_stmt|; name|cal2",
        "file_path": "src/test/org/apache/commons/lang/time/DateUtilsTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java",
        "input_line_num": "range(1690, 1691)"
      },
      {
        "commit_hash": "2d2c9685d0754fbd2dd9bf0ba5b9756e6f8ca8db",
        "line_num": 648,
        "line_str": "name|HOUR argument_list|) operator|&& name|cal1 operator|.",
        "file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/time/DateUtils.java",
        "input_line_num": "range(700, 705)"
      },
      {
        "commit_hash": "2d2c9685d0754fbd2dd9bf0ba5b9756e6f8ca8db",
        "line_num": 647,
        "line_str": "operator|. name|HOUR argument_list|) operator|&& name|cal1",
        "file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/time/DateUtils.java",
        "input_line_num": "range(700, 705)"
      },
      {
        "commit_hash": "2d2c9685d0754fbd2dd9bf0ba5b9756e6f8ca8db",
        "line_num": 646,
        "line_str": "name|Calendar operator|. name|HOUR argument_list|) operator|&&",
        "file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/time/DateUtils.java",
        "input_line_num": "range(700, 705)"
      },
      {
        "commit_hash": "2d2c9685d0754fbd2dd9bf0ba5b9756e6f8ca8db",
        "line_num": 645,
        "line_str": "argument_list|( name|Calendar operator|. name|HOUR argument_list|)",
        "file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/time/DateUtils.java",
        "input_line_num": "range(700, 705)"
      },
      {
        "commit_hash": "2d2c9685d0754fbd2dd9bf0ba5b9756e6f8ca8db",
        "line_num": 644,
        "line_str": "name|get argument_list|( name|Calendar operator|. name|HOUR",
        "file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/time/DateUtils.java",
        "input_line_num": "range(700, 705)"
      }
    ]
  },
  {
    "id": 10059,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": ["13d4c4dc51b824276d04d2dbe095180d0b66f574"],
    "fix_commit_hash": "b4bf79bcc2e870875b7630d470f5f8499c49b488",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "13d4c4dc51b824276d04d2dbe095180d0b66f574",
        "line_num": 1688,
        "line_str": "operator|<= literal|1 condition|) block|{ return|return",
        "file_path": "src/java/org/apache/commons/lang/math/Fraction.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/math/Fraction.java",
        "input_line_num": "range(1713, 1718)"
      },
      {
        "commit_hash": "13d4c4dc51b824276d04d2dbe095180d0b66f574",
        "line_num": 1687,
        "line_str": "argument_list|) operator|<= literal|1 condition|) block|{",
        "file_path": "src/java/org/apache/commons/lang/math/Fraction.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/math/Fraction.java",
        "input_line_num": "range(1713, 1718)"
      },
      {
        "commit_hash": "13d4c4dc51b824276d04d2dbe095180d0b66f574",
        "line_num": 1686,
        "line_str": "name|v argument_list|) operator|<= literal|1 condition|)",
        "file_path": "src/java/org/apache/commons/lang/math/Fraction.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/math/Fraction.java",
        "input_line_num": "range(1713, 1718)"
      },
      {
        "commit_hash": "13d4c4dc51b824276d04d2dbe095180d0b66f574",
        "line_num": 1685,
        "line_str": "argument_list|( name|v argument_list|) operator|<= literal|1",
        "file_path": "src/java/org/apache/commons/lang/math/Fraction.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/math/Fraction.java",
        "input_line_num": "range(1713, 1718)"
      },
      {
        "commit_hash": "13d4c4dc51b824276d04d2dbe095180d0b66f574",
        "line_num": 1684,
        "line_str": "name|abs argument_list|( name|v argument_list|) operator|<=",
        "file_path": "src/java/org/apache/commons/lang/math/Fraction.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/math/Fraction.java",
        "input_line_num": "range(1713, 1718)"
      },
      {
        "commit_hash": "b06c07095bc02b34047ff70970a65d42a9d1b253",
        "line_num": 4012,
        "line_str": "name|ZERO argument_list|) expr_stmt|; block|} specifier|public",
        "file_path": "src/test/org/apache/commons/lang/math/FractionTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/math/FractionTest.java",
        "input_line_num": "range(3957, 3959)"
      },
      {
        "commit_hash": "b06c07095bc02b34047ff70970a65d42a9d1b253",
        "line_num": 4011,
        "line_str": "operator|. name|ZERO argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/org/apache/commons/lang/math/FractionTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/math/FractionTest.java",
        "input_line_num": "range(3957, 3959)"
      },
      {
        "commit_hash": "f9be30268f5ada664cfec64ba9b89f913648ea55",
        "line_num": 2083,
        "line_str": "block|} block|} specifier|public name|void name|testFactory_double",
        "file_path": "src/test/org/apache/commons/lang/math/FractionTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/math/FractionTest.java",
        "input_line_num": "range(1986, 1990)"
      },
      {
        "commit_hash": "f9be30268f5ada664cfec64ba9b89f913648ea55",
        "line_num": 2082,
        "line_str": "block|{ block|} block|} specifier|public name|void",
        "file_path": "src/test/org/apache/commons/lang/math/FractionTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/math/FractionTest.java",
        "input_line_num": "range(1986, 1990)"
      },
      {
        "commit_hash": "13d4c4dc51b824276d04d2dbe095180d0b66f574",
        "line_num": 1679,
        "line_str": "operator|<= literal|1 operator||| name|Math operator|.",
        "file_path": "src/java/org/apache/commons/lang/math/Fraction.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/math/Fraction.java",
        "input_line_num": "range(1704, 1709)"
      },
      {
        "commit_hash": "13d4c4dc51b824276d04d2dbe095180d0b66f574",
        "line_num": 1678,
        "line_str": "argument_list|) operator|<= literal|1 operator||| name|Math",
        "file_path": "src/java/org/apache/commons/lang/math/Fraction.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/math/Fraction.java",
        "input_line_num": "range(1704, 1709)"
      },
      {
        "commit_hash": "13d4c4dc51b824276d04d2dbe095180d0b66f574",
        "line_num": 1677,
        "line_str": "name|u argument_list|) operator|<= literal|1 operator|||",
        "file_path": "src/java/org/apache/commons/lang/math/Fraction.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/math/Fraction.java",
        "input_line_num": "range(1704, 1709)"
      },
      {
        "commit_hash": "13d4c4dc51b824276d04d2dbe095180d0b66f574",
        "line_num": 1676,
        "line_str": "argument_list|( name|u argument_list|) operator|<= literal|1",
        "file_path": "src/java/org/apache/commons/lang/math/Fraction.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/math/Fraction.java",
        "input_line_num": "range(1704, 1709)"
      },
      {
        "commit_hash": "13d4c4dc51b824276d04d2dbe095180d0b66f574",
        "line_num": 1675,
        "line_str": "name|abs argument_list|( name|u argument_list|) operator|<=",
        "file_path": "src/java/org/apache/commons/lang/math/Fraction.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/math/Fraction.java",
        "input_line_num": "range(1704, 1709)"
      },
      {
        "commit_hash": "f9be30268f5ada664cfec64ba9b89f913648ea55",
        "line_num": 2081,
        "line_str": "parameter_list|) block|{ block|} block|} specifier|public",
        "file_path": "src/test/org/apache/commons/lang/math/FractionTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/math/FractionTest.java",
        "input_line_num": "range(1986, 1990)"
      },
      {
        "commit_hash": "f9be30268f5ada664cfec64ba9b89f913648ea55",
        "line_num": 2080,
        "line_str": "name|ex parameter_list|) block|{ block|} block|}",
        "file_path": "src/test/org/apache/commons/lang/math/FractionTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/math/FractionTest.java",
        "input_line_num": "range(1986, 1990)"
      },
      {
        "commit_hash": "13d4c4dc51b824276d04d2dbe095180d0b66f574",
        "line_num": 1669,
        "line_str": "block|{ comment if|if condition|( name|Math",
        "file_path": "src/java/org/apache/commons/lang/math/Fraction.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/math/Fraction.java",
        "input_line_num": "range(1698, 1699)"
      }
    ]
  },
  {
    "id": 10060,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": ["c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4"],
    "fix_commit_hash": "c53b52791f03c6bed9f480a82445f97fa875a70c",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 375,
        "line_str": "block|} block|, comment block|{ literal|\"\\u00D1\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(392, 397)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 342,
        "line_str": "comment block|{ literal|\"\\u00CC\" block|, literal|\"&Euml;\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(357, 362)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 491,
        "line_str": "literal|\"\\u00E1\" block|, literal|\"&agrave;\" block|} block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(504, 509)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 425,
        "line_str": "block|, comment block|{ literal|\"\\u00D8\" block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(441, 446)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 392,
        "line_str": "block|{ literal|\"\\u00D3\" block|, literal|\"&Ograve;\" block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(406, 411)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 508,
        "line_str": "block|} block|, comment block|{ literal|\"\\u00E4\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(525, 530)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 475,
        "line_str": "comment block|{ literal|\"\\u00DF\" block|, literal|\"&THORN;\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(490, 495)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 442,
        "line_str": "literal|\"\\u00DA\" block|, literal|\"&Ugrave;\" block|} block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(455, 460)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 376,
        "line_str": "block|, comment block|{ literal|\"\\u00D1\" block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(392, 397)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 343,
        "line_str": "block|{ literal|\"\\u00CC\" block|, literal|\"&Euml;\" block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(357, 362)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 459,
        "line_str": "block|} block|, comment block|{ literal|\"\\u00DD\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(476, 481)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 426,
        "line_str": "comment block|{ literal|\"\\u00D8\" block|, literal|\"&times;\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(441, 446)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 393,
        "line_str": "literal|\"\\u00D3\" block|, literal|\"&Ograve;\" block|} block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(406, 411)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 509,
        "line_str": "block|, comment block|{ literal|\"\\u00E4\" block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(525, 530)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 476,
        "line_str": "block|{ literal|\"\\u00DF\" block|, literal|\"&THORN;\" block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(490, 495)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 410,
        "line_str": "block|} block|, comment block|{ literal|\"\\u00D6\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(427, 432)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 377,
        "line_str": "comment block|{ literal|\"\\u00D1\" block|, literal|\"&ETH;\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(392, 397)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 344,
        "line_str": "literal|\"\\u00CC\" block|, literal|\"&Euml;\" block|} block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(357, 362)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 460,
        "line_str": "block|, comment block|{ literal|\"\\u00DD\" block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(476, 481)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 427,
        "line_str": "block|{ literal|\"\\u00D8\" block|, literal|\"&times;\" block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(441, 446)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 361,
        "line_str": "block|} block|, comment block|{ literal|\"\\u00CF\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(378, 383)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 510,
        "line_str": "comment block|{ literal|\"\\u00E4\" block|, literal|\"&atilde;\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(525, 530)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 477,
        "line_str": "literal|\"\\u00DF\" block|, literal|\"&THORN;\" block|} block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(490, 495)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 411,
        "line_str": "block|, comment block|{ literal|\"\\u00D6\" block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(427, 432)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 378,
        "line_str": "block|{ literal|\"\\u00D1\" block|, literal|\"&ETH;\" block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(392, 397)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 494,
        "line_str": "block|} block|, comment block|{ literal|\"\\u00E2\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(511, 516)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 461,
        "line_str": "comment block|{ literal|\"\\u00DD\" block|, literal|\"&Uuml;\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(476, 481)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 428,
        "line_str": "literal|\"\\u00D8\" block|, literal|\"&times;\" block|} block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(441, 446)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 362,
        "line_str": "block|, comment block|{ literal|\"\\u00CF\" block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(378, 383)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 511,
        "line_str": "block|{ literal|\"\\u00E4\" block|, literal|\"&atilde;\" block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(525, 530)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 445,
        "line_str": "block|} block|, comment block|{ literal|\"\\u00DB\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(462, 467)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 412,
        "line_str": "comment block|{ literal|\"\\u00D6\" block|, literal|\"&Otilde;\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(427, 432)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 379,
        "line_str": "literal|\"\\u00D1\" block|, literal|\"&ETH;\" block|} block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(392, 397)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 495,
        "line_str": "block|, comment block|{ literal|\"\\u00E2\" block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(511, 516)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 462,
        "line_str": "block|{ literal|\"\\u00DD\" block|, literal|\"&Uuml;\" block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(476, 481)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 396,
        "line_str": "block|} block|, comment block|{ literal|\"\\u00D4\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(413, 418)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 363,
        "line_str": "comment block|{ literal|\"\\u00CF\" block|, literal|\"&Icirc;\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(378, 383)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 512,
        "line_str": "literal|\"\\u00E4\" block|, literal|\"&atilde;\" block|} block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(525, 530)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 446,
        "line_str": "block|, comment block|{ literal|\"\\u00DB\" block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(462, 467)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 413,
        "line_str": "block|{ literal|\"\\u00D6\" block|, literal|\"&Otilde;\" block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(427, 432)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 347,
        "line_str": "block|} block|, comment block|{ literal|\"\\u00CD\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(364, 369)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 496,
        "line_str": "comment block|{ literal|\"\\u00E2\" block|, literal|\"&aacute;\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(511, 516)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 463,
        "line_str": "literal|\"\\u00DD\" block|, literal|\"&Uuml;\" block|} block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(476, 481)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 397,
        "line_str": "block|, comment block|{ literal|\"\\u00D4\" block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(413, 418)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 364,
        "line_str": "block|{ literal|\"\\u00CF\" block|, literal|\"&Icirc;\" block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(378, 383)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 480,
        "line_str": "block|} block|, comment block|{ literal|\"\\u00E0\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(497, 502)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 447,
        "line_str": "comment block|{ literal|\"\\u00DB\" block|, literal|\"&Uacute;\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(462, 467)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 414,
        "line_str": "literal|\"\\u00D6\" block|, literal|\"&Otilde;\" block|} block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(427, 432)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 348,
        "line_str": "block|, comment block|{ literal|\"\\u00CD\" block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(364, 369)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 497,
        "line_str": "block|{ literal|\"\\u00E2\" block|, literal|\"&aacute;\" block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(511, 516)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 431,
        "line_str": "block|} block|, comment block|{ literal|\"\\u00D9\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(448, 453)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 398,
        "line_str": "comment block|{ literal|\"\\u00D4\" block|, literal|\"&Oacute;\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(413, 418)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 365,
        "line_str": "literal|\"\\u00CF\" block|, literal|\"&Icirc;\" block|} block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(378, 383)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 481,
        "line_str": "block|, comment block|{ literal|\"\\u00E0\" block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(497, 502)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 448,
        "line_str": "block|{ literal|\"\\u00DB\" block|, literal|\"&Uacute;\" block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(462, 467)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 382,
        "line_str": "block|} block|, comment block|{ literal|\"\\u00D2\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(399, 404)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 349,
        "line_str": "comment block|{ literal|\"\\u00CD\" block|, literal|\"&Igrave;\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(364, 369)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 498,
        "line_str": "literal|\"\\u00E2\" block|, literal|\"&aacute;\" block|} block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(511, 516)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 432,
        "line_str": "block|, comment block|{ literal|\"\\u00D9\" block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(448, 453)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 399,
        "line_str": "block|{ literal|\"\\u00D4\" block|, literal|\"&Oacute;\" block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(413, 418)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 333,
        "line_str": "block|} block|, comment block|{ literal|\"\\u00CB\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(350, 355)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 515,
        "line_str": "block|} block|, comment block|{ literal|\"\\u00E5\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(532, 537)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 482,
        "line_str": "comment block|{ literal|\"\\u00E0\" block|, literal|\"&szlig;\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(497, 502)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 449,
        "line_str": "literal|\"\\u00DB\" block|, literal|\"&Uacute;\" block|} block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(462, 467)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 383,
        "line_str": "block|, comment block|{ literal|\"\\u00D2\" block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(399, 404)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 350,
        "line_str": "block|{ literal|\"\\u00CD\" block|, literal|\"&Igrave;\" block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(364, 369)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 466,
        "line_str": "block|} block|, comment block|{ literal|\"\\u00DE\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(483, 488)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 433,
        "line_str": "comment block|{ literal|\"\\u00D9\" block|, literal|\"&Oslash;\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(448, 453)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 400,
        "line_str": "literal|\"\\u00D4\" block|, literal|\"&Oacute;\" block|} block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(413, 418)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 334,
        "line_str": "block|, comment block|{ literal|\"\\u00CB\" block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(350, 355)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 516,
        "line_str": "block|, comment block|{ literal|\"\\u00E5\" block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(532, 537)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 483,
        "line_str": "block|{ literal|\"\\u00E0\" block|, literal|\"&szlig;\" block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(497, 502)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 417,
        "line_str": "block|} block|, comment block|{ literal|\"\\u00D7\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(434, 439)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 384,
        "line_str": "comment block|{ literal|\"\\u00D2\" block|, literal|\"&Ntilde;\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(399, 404)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 351,
        "line_str": "literal|\"\\u00CD\" block|, literal|\"&Igrave;\" block|} block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(364, 369)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 467,
        "line_str": "block|, comment block|{ literal|\"\\u00DE\" block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(483, 488)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 434,
        "line_str": "block|{ literal|\"\\u00D9\" block|, literal|\"&Oslash;\" block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(448, 453)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 368,
        "line_str": "block|} block|, comment block|{ literal|\"\\u00D0\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(385, 390)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 335,
        "line_str": "comment block|{ literal|\"\\u00CB\" block|, literal|\"&Ecirc;\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(350, 355)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 517,
        "line_str": "comment block|{ literal|\"\\u00E5\" block|, literal|\"&auml;\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(532, 537)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 484,
        "line_str": "literal|\"\\u00E0\" block|, literal|\"&szlig;\" block|} block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(497, 502)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 418,
        "line_str": "block|, comment block|{ literal|\"\\u00D7\" block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(434, 439)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 385,
        "line_str": "block|{ literal|\"\\u00D2\" block|, literal|\"&Ntilde;\" block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(399, 404)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 501,
        "line_str": "block|} block|, comment block|{ literal|\"\\u00E3\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(518, 523)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 468,
        "line_str": "comment block|{ literal|\"\\u00DE\" block|, literal|\"&Yacute;\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(483, 488)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 435,
        "line_str": "literal|\"\\u00D9\" block|, literal|\"&Oslash;\" block|} block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(448, 453)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 369,
        "line_str": "block|, comment block|{ literal|\"\\u00D0\" block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(385, 390)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 336,
        "line_str": "block|{ literal|\"\\u00CB\" block|, literal|\"&Ecirc;\" block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(350, 355)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 518,
        "line_str": "block|{ literal|\"\\u00E5\" block|, literal|\"&auml;\" block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(532, 537)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 452,
        "line_str": "block|} block|, comment block|{ literal|\"\\u00DC\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(469, 474)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 419,
        "line_str": "comment block|{ literal|\"\\u00D7\" block|, literal|\"&Ouml;\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(434, 439)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 386,
        "line_str": "literal|\"\\u00D2\" block|, literal|\"&Ntilde;\" block|} block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(399, 404)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 502,
        "line_str": "block|, comment block|{ literal|\"\\u00E3\" block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(518, 523)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 469,
        "line_str": "block|{ literal|\"\\u00DE\" block|, literal|\"&Yacute;\" block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(483, 488)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 403,
        "line_str": "block|} block|, comment block|{ literal|\"\\u00D5\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(420, 425)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 370,
        "line_str": "comment block|{ literal|\"\\u00D0\" block|, literal|\"&Iuml;\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(385, 390)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 337,
        "line_str": "literal|\"\\u00CB\" block|, literal|\"&Ecirc;\" block|} block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(350, 355)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 519,
        "line_str": "literal|\"\\u00E5\" block|, literal|\"&auml;\" block|} block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(532, 537)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 453,
        "line_str": "block|, comment block|{ literal|\"\\u00DC\" block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(469, 474)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 420,
        "line_str": "block|{ literal|\"\\u00D7\" block|, literal|\"&Ouml;\" block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(434, 439)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 354,
        "line_str": "block|} block|, comment block|{ literal|\"\\u00CE\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(371, 376)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 503,
        "line_str": "comment block|{ literal|\"\\u00E3\" block|, literal|\"&acirc;\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(518, 523)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 470,
        "line_str": "literal|\"\\u00DE\" block|, literal|\"&Yacute;\" block|} block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(483, 488)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 404,
        "line_str": "block|, comment block|{ literal|\"\\u00D5\" block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(420, 425)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 371,
        "line_str": "block|{ literal|\"\\u00D0\" block|, literal|\"&Iuml;\" block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(385, 390)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 487,
        "line_str": "block|} block|, comment block|{ literal|\"\\u00E1\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(504, 509)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 454,
        "line_str": "comment block|{ literal|\"\\u00DC\" block|, literal|\"&Ucirc;\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(469, 474)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 421,
        "line_str": "literal|\"\\u00D7\" block|, literal|\"&Ouml;\" block|} block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(434, 439)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 355,
        "line_str": "block|, comment block|{ literal|\"\\u00CE\" block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(371, 376)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 504,
        "line_str": "block|{ literal|\"\\u00E3\" block|, literal|\"&acirc;\" block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(518, 523)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 438,
        "line_str": "block|} block|, comment block|{ literal|\"\\u00DA\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(455, 460)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 405,
        "line_str": "comment block|{ literal|\"\\u00D5\" block|, literal|\"&Ocirc;\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(420, 425)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 372,
        "line_str": "literal|\"\\u00D0\" block|, literal|\"&Iuml;\" block|} block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(385, 390)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 488,
        "line_str": "block|, comment block|{ literal|\"\\u00E1\" block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(504, 509)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 455,
        "line_str": "block|{ literal|\"\\u00DC\" block|, literal|\"&Ucirc;\" block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(469, 474)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 389,
        "line_str": "block|} block|, comment block|{ literal|\"\\u00D3\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(406, 411)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 356,
        "line_str": "comment block|{ literal|\"\\u00CE\" block|, literal|\"&Iacute;\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(371, 376)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 505,
        "line_str": "literal|\"\\u00E3\" block|, literal|\"&acirc;\" block|} block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(518, 523)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 439,
        "line_str": "block|, comment block|{ literal|\"\\u00DA\" block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(455, 460)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 406,
        "line_str": "block|{ literal|\"\\u00D5\" block|, literal|\"&Ocirc;\" block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(420, 425)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 340,
        "line_str": "block|} block|, comment block|{ literal|\"\\u00CC\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(357, 362)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 489,
        "line_str": "comment block|{ literal|\"\\u00E1\" block|, literal|\"&agrave;\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(504, 509)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 456,
        "line_str": "literal|\"\\u00DC\" block|, literal|\"&Ucirc;\" block|} block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(469, 474)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 390,
        "line_str": "block|, comment block|{ literal|\"\\u00D3\" block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(406, 411)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 357,
        "line_str": "block|{ literal|\"\\u00CE\" block|, literal|\"&Iacute;\" block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(371, 376)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 473,
        "line_str": "block|} block|, comment block|{ literal|\"\\u00DF\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(490, 495)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 440,
        "line_str": "comment block|{ literal|\"\\u00DA\" block|, literal|\"&Ugrave;\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(455, 460)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 407,
        "line_str": "literal|\"\\u00D5\" block|, literal|\"&Ocirc;\" block|} block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(420, 425)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 341,
        "line_str": "block|, comment block|{ literal|\"\\u00CC\" block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(357, 362)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 490,
        "line_str": "block|{ literal|\"\\u00E1\" block|, literal|\"&agrave;\" block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(504, 509)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 424,
        "line_str": "block|} block|, comment block|{ literal|\"\\u00D8\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(441, 446)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 391,
        "line_str": "comment block|{ literal|\"\\u00D3\" block|, literal|\"&Ograve;\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(406, 411)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 358,
        "line_str": "literal|\"\\u00CE\" block|, literal|\"&Iacute;\" block|} block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(371, 376)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 474,
        "line_str": "block|, comment block|{ literal|\"\\u00DF\" block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(490, 495)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 441,
        "line_str": "block|{ literal|\"\\u00DA\" block|, literal|\"&Ugrave;\" block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(455, 460)"
      }
    ]
  },
  {
    "id": 10061,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": ["15d109eeced2af395be09cf6f1c6fc9a132973f4"],
    "fix_commit_hash": "fb2a1c345e3dec00f0d7e711ee36411278d7b99f",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "f787d9dba542816fd4bfc51ddd36367526fd9e50",
        "line_num": 2378,
        "line_str": "name|mTimeZone argument_list|) decl_stmt|; name|c operator|.",
        "file_path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java",
        "input_line_num": "range(2717, 2721)"
      },
      {
        "commit_hash": "f787d9dba542816fd4bfc51ddd36367526fd9e50",
        "line_num": 2377,
        "line_str": "argument_list|( name|mTimeZone argument_list|) decl_stmt|; name|c",
        "file_path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java",
        "input_line_num": "range(2717, 2721)"
      },
      {
        "commit_hash": "f787d9dba542816fd4bfc51ddd36367526fd9e50",
        "line_num": 2376,
        "line_str": "name|GregorianCalendar argument_list|( name|mTimeZone argument_list|) decl_stmt|;",
        "file_path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java",
        "input_line_num": "range(2717, 2721)"
      },
      {
        "commit_hash": "f787d9dba542816fd4bfc51ddd36367526fd9e50",
        "line_num": 2375,
        "line_str": "operator|new name|GregorianCalendar argument_list|( name|mTimeZone argument_list|)",
        "file_path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java",
        "input_line_num": "range(2717, 2721)"
      }
    ]
  },
  {
    "id": 10062,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": ["c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4"],
    "fix_commit_hash": "6a504ddcc58da504cea66f8563d7760858c109e0",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 234,
        "line_str": "expr_stmt|; return|return literal|2 operator|+ operator|(",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(233, 237)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 233,
        "line_str": "argument_list|) expr_stmt|; return|return literal|2 operator|+",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(233, 237)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 232,
        "line_str": "name|entityValue argument_list|) expr_stmt|; return|return literal|2",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(233, 237)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 231,
        "line_str": "argument_list|( name|entityValue argument_list|) expr_stmt|; return|return",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(233, 237)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 227,
        "line_str": "comment name|out operator|. name|write argument_list|(",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(225, 230)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 226,
        "line_str": "block|} comment name|out operator|. name|write",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(225, 230)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 225,
        "line_str": "return|; block|} comment name|out operator|.",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(225, 230)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 224,
        "line_str": "literal|0 return|; block|} comment name|out",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(225, 230)"
      },
      {
        "commit_hash": "c155c8b3f580baab4d495e4c1cb803e0b3bc2fe4",
        "line_num": 223,
        "line_str": "return|return literal|0 return|; block|} comment",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(225, 230)"
      }
    ]
  },
  {
    "id": 10063,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": ["b059c59d931e1fea45e6eb50dcc86c0d19d89bd6"],
    "fix_commit_hash": "8771bce5f00c26c63389bdea6db2932e32f35d5e",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "b059c59d931e1fea45e6eb50dcc86c0d19d89bd6",
        "line_num": 1694,
        "line_str": "argument_list|() condition|; name|i operator|++ control|)",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2418, 2421)"
      },
      {
        "commit_hash": "b059c59d931e1fea45e6eb50dcc86c0d19d89bd6",
        "line_num": 1661,
        "line_str": "operator|. name|length argument_list|() operator|== literal|0",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2387, 2402)"
      },
      {
        "commit_hash": "b059c59d931e1fea45e6eb50dcc86c0d19d89bd6",
        "line_num": 1719,
        "line_str": "name|searchChars operator|. name|length condition|; name|j",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2441, 2448)"
      },
      {
        "commit_hash": "e426844024d89371157427d17f62f2c5f878d784",
        "line_num": 2405,
        "line_str": "operator||| name|cs operator|. name|length argument_list|()",
        "file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2378, 2387)"
      },
      {
        "commit_hash": "e426844024d89371157427d17f62f2c5f878d784",
        "line_num": 2434,
        "line_str": "init|; name|i operator|< name|cs operator|.",
        "file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2413, 2418)"
      },
      {
        "commit_hash": "e426844024d89371157427d17f62f2c5f878d784",
        "line_num": 2401,
        "line_str": "condition|( name|cs operator|== literal|null operator|||",
        "file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2378, 2387)"
      },
      {
        "commit_hash": "b059c59d931e1fea45e6eb50dcc86c0d19d89bd6",
        "line_num": 1715,
        "line_str": "literal|0 init|; name|j operator|< name|searchChars",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2441, 2448)"
      },
      {
        "commit_hash": "8ca17b6e245b33877eadb496f11b42e493fd1fff",
        "line_num": 110,
        "line_str": "literal|\"ba\" block|} decl_stmt|; specifier|public name|StringUtilsEqualsIndexOfTest",
        "file_path": "src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(89, 92)"
      },
      {
        "commit_hash": "b059c59d931e1fea45e6eb50dcc86c0d19d89bd6",
        "line_num": 1678,
        "line_str": "return|return literal|false return|; block|} for|for",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2404, 2408)"
      },
      {
        "commit_hash": "b059c59d931e1fea45e6eb50dcc86c0d19d89bd6",
        "line_num": 1674,
        "line_str": "operator|== literal|0 condition|) block|{ return|return",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2387, 2402)"
      },
      {
        "commit_hash": "b059c59d931e1fea45e6eb50dcc86c0d19d89bd6",
        "line_num": 1670,
        "line_str": "operator||| name|searchChars operator|. name|length operator|==",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2387, 2402)"
      },
      {
        "commit_hash": "b059c59d931e1fea45e6eb50dcc86c0d19d89bd6",
        "line_num": 1666,
        "line_str": "operator||| name|searchChars operator|== literal|null operator|||",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2387, 2402)"
      },
      {
        "commit_hash": "b059c59d931e1fea45e6eb50dcc86c0d19d89bd6",
        "line_num": 1662,
        "line_str": "name|length argument_list|() operator|== literal|0 operator|||",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2387, 2402)"
      },
      {
        "commit_hash": "e426844024d89371157427d17f62f2c5f878d784",
        "line_num": 2406,
        "line_str": "name|cs operator|. name|length argument_list|() operator|==",
        "file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2378, 2387)"
      },
      {
        "commit_hash": "b059c59d931e1fea45e6eb50dcc86c0d19d89bd6",
        "line_num": 1720,
        "line_str": "operator|. name|length condition|; name|j operator|++",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2441, 2448)"
      },
      {
        "commit_hash": "e426844024d89371157427d17f62f2c5f878d784",
        "line_num": 2435,
        "line_str": "name|i operator|< name|cs operator|. name|length",
        "file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2413, 2418)"
      },
      {
        "commit_hash": "e426844024d89371157427d17f62f2c5f878d784",
        "line_num": 2402,
        "line_str": "name|cs operator|== literal|null operator||| name|cs",
        "file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2378, 2387)"
      },
      {
        "commit_hash": "b059c59d931e1fea45e6eb50dcc86c0d19d89bd6",
        "line_num": 1716,
        "line_str": "init|; name|j operator|< name|searchChars operator|.",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2441, 2448)"
      },
      {
        "commit_hash": "8ca17b6e245b33877eadb496f11b42e493fd1fff",
        "line_num": 111,
        "line_str": "block|} decl_stmt|; specifier|public name|StringUtilsEqualsIndexOfTest parameter_list|(",
        "file_path": "src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(89, 92)"
      },
      {
        "commit_hash": "e426844024d89371157427d17f62f2c5f878d784",
        "line_num": 2398,
        "line_str": "parameter_list|) block|{ if|if condition|( name|cs",
        "file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2378, 2387)"
      },
      {
        "commit_hash": "b059c59d931e1fea45e6eb50dcc86c0d19d89bd6",
        "line_num": 1679,
        "line_str": "literal|false return|; block|} for|for control|(",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2404, 2408)"
      },
      {
        "commit_hash": "b059c59d931e1fea45e6eb50dcc86c0d19d89bd6",
        "line_num": 1675,
        "line_str": "literal|0 condition|) block|{ return|return literal|false",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2387, 2402)"
      },
      {
        "commit_hash": "b059c59d931e1fea45e6eb50dcc86c0d19d89bd6",
        "line_num": 1671,
        "line_str": "name|searchChars operator|. name|length operator|== literal|0",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2387, 2402)"
      },
      {
        "commit_hash": "b059c59d931e1fea45e6eb50dcc86c0d19d89bd6",
        "line_num": 1733,
        "line_str": "operator|== name|ch condition|) block|{ return|return",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2459, 2461)"
      },
      {
        "commit_hash": "b059c59d931e1fea45e6eb50dcc86c0d19d89bd6",
        "line_num": 1667,
        "line_str": "name|searchChars operator|== literal|null operator||| name|searchChars",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2387, 2402)"
      },
      {
        "commit_hash": "b059c59d931e1fea45e6eb50dcc86c0d19d89bd6",
        "line_num": 1663,
        "line_str": "argument_list|() operator|== literal|0 operator||| name|searchChars",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2387, 2402)"
      },
      {
        "commit_hash": "b059c59d931e1fea45e6eb50dcc86c0d19d89bd6",
        "line_num": 1692,
        "line_str": "operator|. name|length argument_list|() condition|; name|i",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2418, 2421)"
      },
      {
        "commit_hash": "b059c59d931e1fea45e6eb50dcc86c0d19d89bd6",
        "line_num": 1721,
        "line_str": "name|length condition|; name|j operator|++ control|)",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2441, 2448)"
      },
      {
        "commit_hash": "e426844024d89371157427d17f62f2c5f878d784",
        "line_num": 2436,
        "line_str": "operator|< name|cs operator|. name|length argument_list|()",
        "file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2413, 2418)"
      },
      {
        "commit_hash": "e426844024d89371157427d17f62f2c5f878d784",
        "line_num": 2403,
        "line_str": "operator|== literal|null operator||| name|cs operator|.",
        "file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2378, 2387)"
      },
      {
        "commit_hash": "b059c59d931e1fea45e6eb50dcc86c0d19d89bd6",
        "line_num": 1717,
        "line_str": "name|j operator|< name|searchChars operator|. name|length",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2441, 2448)"
      },
      {
        "commit_hash": "e426844024d89371157427d17f62f2c5f878d784",
        "line_num": 2399,
        "line_str": "block|{ if|if condition|( name|cs operator|==",
        "file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2378, 2387)"
      },
      {
        "commit_hash": "b059c59d931e1fea45e6eb50dcc86c0d19d89bd6",
        "line_num": 1680,
        "line_str": "return|; block|} for|for control|( name|int",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2404, 2408)"
      },
      {
        "commit_hash": "b059c59d931e1fea45e6eb50dcc86c0d19d89bd6",
        "line_num": 1672,
        "line_str": "operator|. name|length operator|== literal|0 condition|)",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2387, 2402)"
      },
      {
        "commit_hash": "b059c59d931e1fea45e6eb50dcc86c0d19d89bd6",
        "line_num": 1734,
        "line_str": "name|ch condition|) block|{ return|return literal|true",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2459, 2461)"
      },
      {
        "commit_hash": "b059c59d931e1fea45e6eb50dcc86c0d19d89bd6",
        "line_num": 1668,
        "line_str": "operator|== literal|null operator||| name|searchChars operator|.",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2387, 2402)"
      },
      {
        "commit_hash": "b059c59d931e1fea45e6eb50dcc86c0d19d89bd6",
        "line_num": 1664,
        "line_str": "operator|== literal|0 operator||| name|searchChars operator|==",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2387, 2402)"
      },
      {
        "commit_hash": "b059c59d931e1fea45e6eb50dcc86c0d19d89bd6",
        "line_num": 1693,
        "line_str": "name|length argument_list|() condition|; name|i operator|++",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2418, 2421)"
      },
      {
        "commit_hash": "e426844024d89371157427d17f62f2c5f878d784",
        "line_num": 2437,
        "line_str": "name|cs operator|. name|length argument_list|() condition|;",
        "file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2413, 2418)"
      },
      {
        "commit_hash": "e426844024d89371157427d17f62f2c5f878d784",
        "line_num": 2404,
        "line_str": "literal|null operator||| name|cs operator|. name|length",
        "file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2378, 2387)"
      },
      {
        "commit_hash": "b059c59d931e1fea45e6eb50dcc86c0d19d89bd6",
        "line_num": 1718,
        "line_str": "operator|< name|searchChars operator|. name|length condition|;",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2441, 2448)"
      },
      {
        "commit_hash": "e426844024d89371157427d17f62f2c5f878d784",
        "line_num": 2433,
        "line_str": "literal|0 init|; name|i operator|< name|cs",
        "file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2413, 2418)"
      },
      {
        "commit_hash": "e426844024d89371157427d17f62f2c5f878d784",
        "line_num": 2400,
        "line_str": "if|if condition|( name|cs operator|== literal|null",
        "file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2378, 2387)"
      },
      {
        "commit_hash": "b059c59d931e1fea45e6eb50dcc86c0d19d89bd6",
        "line_num": 1681,
        "line_str": "block|} for|for control|( name|int name|i",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2404, 2408)"
      },
      {
        "commit_hash": "8ca17b6e245b33877eadb496f11b42e493fd1fff",
        "line_num": 109,
        "line_str": "block|, literal|\"ba\" block|} decl_stmt|; specifier|public",
        "file_path": "src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(89, 92)"
      },
      {
        "commit_hash": "b059c59d931e1fea45e6eb50dcc86c0d19d89bd6",
        "line_num": 1739,
        "line_str": "return|; block|} block|} block|} return|return",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2465, 2466)"
      },
      {
        "commit_hash": "b059c59d931e1fea45e6eb50dcc86c0d19d89bd6",
        "line_num": 1673,
        "line_str": "name|length operator|== literal|0 condition|) block|{",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2387, 2402)"
      },
      {
        "commit_hash": "b059c59d931e1fea45e6eb50dcc86c0d19d89bd6",
        "line_num": 1669,
        "line_str": "literal|null operator||| name|searchChars operator|. name|length",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2387, 2402)"
      },
      {
        "commit_hash": "b059c59d931e1fea45e6eb50dcc86c0d19d89bd6",
        "line_num": 1665,
        "line_str": "literal|0 operator||| name|searchChars operator|== literal|null",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2387, 2402)"
      }
    ]
  },
  {
    "id": 10064,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": ["eb35e75bde944a4b94793eb4a81c2b8639680463"],
    "fix_commit_hash": "d61afddec84c42a09923f18307225b5fc12425d1",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "f4ccae6870d7cbedb20fa6ecbab4f68ff3f97a8d",
        "line_num": 7102,
        "line_str": "name|i operator|++ control|) block|{ name|int",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(7309, 7312)"
      },
      {
        "commit_hash": "f4ccae6870d7cbedb20fa6ecbab4f68ff3f97a8d",
        "line_num": 9166,
        "line_str": "argument_list|) argument_list|) expr_stmt|; block|} comment",
        "file_path": "src/test/org/apache/commons/lang/StringUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/lang3/StringUtilsTest.java",
        "input_line_num": "range(8973, 8975)"
      },
      {
        "commit_hash": "f4ccae6870d7cbedb20fa6ecbab4f68ff3f97a8d",
        "line_num": 9165,
        "line_str": "block|} argument_list|) argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/org/apache/commons/lang/StringUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/lang3/StringUtilsTest.java",
        "input_line_num": "range(8973, 8975)"
      },
      {
        "commit_hash": "eb35e75bde944a4b94793eb4a81c2b8639680463",
        "line_num": 7076,
        "line_str": "block|{ name|int name|greater init|= name|replacementList",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(7312, 7313)"
      },
      {
        "commit_hash": "f4ccae6870d7cbedb20fa6ecbab4f68ff3f97a8d",
        "line_num": 7104,
        "line_str": "control|) block|{ name|int name|greater init|=",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(7309, 7312)"
      },
      {
        "commit_hash": "f4ccae6870d7cbedb20fa6ecbab4f68ff3f97a8d",
        "line_num": 7103,
        "line_str": "operator|++ control|) block|{ name|int name|greater",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(7309, 7312)"
      }
    ]
  },
  {
    "id": 10065,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": ["734db041a3bf46b0551301c223e8c6ea9826552a"],
    "fix_commit_hash": "1938e3e4f6da8d7d050b0b6bf96b17204bf363ba",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "734db041a3bf46b0551301c223e8c6ea9826552a",
        "line_num": 256,
        "line_str": "operator|. name|get argument_list|( name|subSeq argument_list|)",
        "file_path": "src/java/org/apache/commons/lang/text/translate/LookupTranslator.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java",
        "input_line_num": "range(287, 291)"
      },
      {
        "commit_hash": "734db041a3bf46b0551301c223e8c6ea9826552a",
        "line_num": 109,
        "line_str": "name|CharSequence argument_list|, name|CharSequence argument_list|> argument_list|()",
        "file_path": "src/java/org/apache/commons/lang/text/translate/LookupTranslator.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java",
        "input_line_num": "range(99, 104)"
      },
      {
        "commit_hash": "734db041a3bf46b0551301c223e8c6ea9826552a",
        "line_num": 108,
        "line_str": "argument_list|< name|CharSequence argument_list|, name|CharSequence argument_list|>",
        "file_path": "src/java/org/apache/commons/lang/text/translate/LookupTranslator.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java",
        "input_line_num": "range(99, 104)"
      },
      {
        "commit_hash": "734db041a3bf46b0551301c223e8c6ea9826552a",
        "line_num": 107,
        "line_str": "name|HashMap argument_list|< name|CharSequence argument_list|, name|CharSequence",
        "file_path": "src/java/org/apache/commons/lang/text/translate/LookupTranslator.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java",
        "input_line_num": "range(99, 104)"
      },
      {
        "commit_hash": "734db041a3bf46b0551301c223e8c6ea9826552a",
        "line_num": 74,
        "line_str": "name|CharSequence argument_list|, name|CharSequence argument_list|> name|lookupMap",
        "file_path": "src/java/org/apache/commons/lang/text/translate/LookupTranslator.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java",
        "input_line_num": "range(69, 72)"
      },
      {
        "commit_hash": "734db041a3bf46b0551301c223e8c6ea9826552a",
        "line_num": 105,
        "line_str": "operator|= operator|new name|HashMap argument_list|< name|CharSequence",
        "file_path": "src/java/org/apache/commons/lang/text/translate/LookupTranslator.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java",
        "input_line_num": "range(99, 104)"
      },
      {
        "commit_hash": "32b0939853709b642d2684855ac4646b97983260",
        "line_num": 72,
        "line_str": "specifier|final name|HashMap argument_list|< name|CharSequence argument_list|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/LookupTranslator.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java",
        "input_line_num": "range(67, 69)"
      },
      {
        "commit_hash": "32b0939853709b642d2684855ac4646b97983260",
        "line_num": 71,
        "line_str": "specifier|private specifier|final name|HashMap argument_list|< name|CharSequence",
        "file_path": "src/java/org/apache/commons/lang/text/translate/LookupTranslator.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java",
        "input_line_num": "range(67, 69)"
      },
      {
        "commit_hash": "734db041a3bf46b0551301c223e8c6ea9826552a",
        "line_num": 73,
        "line_str": "argument_list|< name|CharSequence argument_list|, name|CharSequence argument_list|>",
        "file_path": "src/java/org/apache/commons/lang/text/translate/LookupTranslator.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java",
        "input_line_num": "range(69, 72)"
      },
      {
        "commit_hash": "734db041a3bf46b0551301c223e8c6ea9826552a",
        "line_num": 106,
        "line_str": "operator|new name|HashMap argument_list|< name|CharSequence argument_list|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/LookupTranslator.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java",
        "input_line_num": "range(99, 104)"
      },
      {
        "commit_hash": "734db041a3bf46b0551301c223e8c6ea9826552a",
        "line_num": 132,
        "line_str": "literal|0 index|] argument_list|, name|seq index|[",
        "file_path": "src/java/org/apache/commons/lang/text/translate/LookupTranslator.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java",
        "input_line_num": "range(144, 148)"
      },
      {
        "commit_hash": "734db041a3bf46b0551301c223e8c6ea9826552a",
        "line_num": 131,
        "line_str": "index|[ literal|0 index|] argument_list|, name|seq",
        "file_path": "src/java/org/apache/commons/lang/text/translate/LookupTranslator.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java",
        "input_line_num": "range(144, 148)"
      },
      {
        "commit_hash": "734db041a3bf46b0551301c223e8c6ea9826552a",
        "line_num": 130,
        "line_str": "name|seq index|[ literal|0 index|] argument_list|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/LookupTranslator.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java",
        "input_line_num": "range(144, 148)"
      },
      {
        "commit_hash": "734db041a3bf46b0551301c223e8c6ea9826552a",
        "line_num": 257,
        "line_str": "name|get argument_list|( name|subSeq argument_list|) decl_stmt|;",
        "file_path": "src/java/org/apache/commons/lang/text/translate/LookupTranslator.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java",
        "input_line_num": "range(287, 291)"
      },
      {
        "commit_hash": "734db041a3bf46b0551301c223e8c6ea9826552a",
        "line_num": 133,
        "line_str": "index|] argument_list|, name|seq index|[ literal|1",
        "file_path": "src/java/org/apache/commons/lang/text/translate/LookupTranslator.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java",
        "input_line_num": "range(144, 148)"
      },
      {
        "commit_hash": "734db041a3bf46b0551301c223e8c6ea9826552a",
        "line_num": 258,
        "line_str": "argument_list|( name|subSeq argument_list|) decl_stmt|; if|if",
        "file_path": "src/java/org/apache/commons/lang/text/translate/LookupTranslator.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java",
        "input_line_num": "range(287, 291)"
      },
      {
        "commit_hash": "734db041a3bf46b0551301c223e8c6ea9826552a",
        "line_num": 259,
        "line_str": "name|subSeq argument_list|) decl_stmt|; if|if condition|(",
        "file_path": "src/java/org/apache/commons/lang/text/translate/LookupTranslator.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java",
        "input_line_num": "range(287, 291)"
      }
    ]
  },
  {
    "id": 10066,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": ["f4b9ad673aa05c7a6bc40db4cc327e1cd8ba33ba"],
    "fix_commit_hash": "4b39d16f5d755331425328300b925c2a50b75fe2",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "f4b9ad673aa05c7a6bc40db4cc327e1cd8ba33ba",
        "line_num": 1467,
        "line_str": "block|} return|return name|contains argument_list|( name|str",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_line_num": "range(1465, 1482)"
      },
      {
        "commit_hash": "f4b9ad673aa05c7a6bc40db4cc327e1cd8ba33ba",
        "line_num": 1480,
        "line_str": "argument_list|) return|; block|} comment comment",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_line_num": "range(1465, 1482)"
      },
      {
        "commit_hash": "f4b9ad673aa05c7a6bc40db4cc327e1cd8ba33ba",
        "line_num": 1476,
        "line_str": "name|searchStr operator|. name|toUpperCase argument_list|() argument_list|)",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_line_num": "range(1465, 1482)"
      },
      {
        "commit_hash": "f4b9ad673aa05c7a6bc40db4cc327e1cd8ba33ba",
        "line_num": 1472,
        "line_str": "operator|. name|toUpperCase argument_list|() argument_list|, name|searchStr",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_line_num": "range(1465, 1482)"
      },
      {
        "commit_hash": "f4b9ad673aa05c7a6bc40db4cc327e1cd8ba33ba",
        "line_num": 1468,
        "line_str": "return|return name|contains argument_list|( name|str operator|.",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_line_num": "range(1465, 1482)"
      },
      {
        "commit_hash": "f4b9ad673aa05c7a6bc40db4cc327e1cd8ba33ba",
        "line_num": 1464,
        "line_str": "return|return literal|false return|; block|} return|return",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_line_num": "range(1465, 1482)"
      },
      {
        "commit_hash": "8ca17b6e245b33877eadb496f11b42e493fd1fff",
        "line_num": 20,
        "line_str": "end_package  begin_import import|import name|junit",
        "file_path": "src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(20, 21)"
      },
      {
        "commit_hash": "f4b9ad673aa05c7a6bc40db4cc327e1cd8ba33ba",
        "line_num": 1477,
        "line_str": "operator|. name|toUpperCase argument_list|() argument_list|) return|;",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_line_num": "range(1465, 1482)"
      },
      {
        "commit_hash": "01499df962acdff5e5e69e59e3c11d9301795a29",
        "line_num": 1953,
        "line_str": "argument_list|) argument_list|) expr_stmt|; block|} comment",
        "file_path": "src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3304, 3307)"
      },
      {
        "commit_hash": "f4b9ad673aa05c7a6bc40db4cc327e1cd8ba33ba",
        "line_num": 1473,
        "line_str": "name|toUpperCase argument_list|() argument_list|, name|searchStr operator|.",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_line_num": "range(1465, 1482)"
      },
      {
        "commit_hash": "f4b9ad673aa05c7a6bc40db4cc327e1cd8ba33ba",
        "line_num": 1469,
        "line_str": "name|contains argument_list|( name|str operator|. name|toUpperCase",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_line_num": "range(1465, 1482)"
      },
      {
        "commit_hash": "f4b9ad673aa05c7a6bc40db4cc327e1cd8ba33ba",
        "line_num": 1465,
        "line_str": "literal|false return|; block|} return|return name|contains",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_line_num": "range(1465, 1482)"
      },
      {
        "commit_hash": "f4b9ad673aa05c7a6bc40db4cc327e1cd8ba33ba",
        "line_num": 1478,
        "line_str": "name|toUpperCase argument_list|() argument_list|) return|; block|}",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_line_num": "range(1465, 1482)"
      },
      {
        "commit_hash": "01499df962acdff5e5e69e59e3c11d9301795a29",
        "line_num": 1954,
        "line_str": "argument_list|) expr_stmt|; block|} comment specifier|public",
        "file_path": "src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3304, 3307)"
      },
      {
        "commit_hash": "f4b9ad673aa05c7a6bc40db4cc327e1cd8ba33ba",
        "line_num": 1474,
        "line_str": "argument_list|() argument_list|, name|searchStr operator|. name|toUpperCase",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_line_num": "range(1465, 1482)"
      },
      {
        "commit_hash": "f4b9ad673aa05c7a6bc40db4cc327e1cd8ba33ba",
        "line_num": 1470,
        "line_str": "argument_list|( name|str operator|. name|toUpperCase argument_list|()",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_line_num": "range(1465, 1482)"
      },
      {
        "commit_hash": "f4b9ad673aa05c7a6bc40db4cc327e1cd8ba33ba",
        "line_num": 1466,
        "line_str": "return|; block|} return|return name|contains argument_list|(",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_line_num": "range(1465, 1482)"
      },
      {
        "commit_hash": "f4b9ad673aa05c7a6bc40db4cc327e1cd8ba33ba",
        "line_num": 1479,
        "line_str": "argument_list|() argument_list|) return|; block|} comment",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_line_num": "range(1465, 1482)"
      },
      {
        "commit_hash": "01499df962acdff5e5e69e59e3c11d9301795a29",
        "line_num": 1955,
        "line_str": "expr_stmt|; block|} comment specifier|public name|void",
        "file_path": "src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3304, 3307)"
      },
      {
        "commit_hash": "f4b9ad673aa05c7a6bc40db4cc327e1cd8ba33ba",
        "line_num": 1475,
        "line_str": "argument_list|, name|searchStr operator|. name|toUpperCase argument_list|()",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_line_num": "range(1465, 1482)"
      },
      {
        "commit_hash": "f4b9ad673aa05c7a6bc40db4cc327e1cd8ba33ba",
        "line_num": 1471,
        "line_str": "name|str operator|. name|toUpperCase argument_list|() argument_list|,",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_line_num": "range(1465, 1482)"
      }
    ]
  },
  {
    "id": 10067,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": ["e7be32b75cdea47f497c111fa86afed880350b5e"],
    "fix_commit_hash": "352774b4ed83aee747e3cf02825ba56236447213",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "0721f119f98885cd2d7d4a89ca5001a4e423338b",
        "line_num": 1008,
        "line_str": "block|{ return|return name|appendTo operator|== literal|null",
        "file_path": "src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java",
        "input_line_num": "range(1611, 1615)"
      },
      {
        "commit_hash": "0721f119f98885cd2d7d4a89ca5001a4e423338b",
        "line_num": 1007,
        "line_str": "condition|) block|{ return|return name|appendTo operator|==",
        "file_path": "src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java",
        "input_line_num": "range(1611, 1615)"
      },
      {
        "commit_hash": "0721f119f98885cd2d7d4a89ca5001a4e423338b",
        "line_num": 1006,
        "line_str": "name|QUOTE condition|) block|{ return|return name|appendTo",
        "file_path": "src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java",
        "input_line_num": "range(1611, 1615)"
      },
      {
        "commit_hash": "0721f119f98885cd2d7d4a89ca5001a4e423338b",
        "line_num": 1005,
        "line_str": "operator|== name|QUOTE condition|) block|{ return|return",
        "file_path": "src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java",
        "input_line_num": "range(1611, 1615)"
      }
    ]
  },
  {
    "id": 10068,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": ["8ca17b6e245b33877eadb496f11b42e493fd1fff"],
    "fix_commit_hash": "cb6ce973be5e7cc7eb82868a51dadd16f09cb34f",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "da1594270ddfa5fa8ca60fa21700829433603891",
        "line_num": 5482,
        "line_str": "argument_list|) expr_stmt|; block|} block|} block|}",
        "file_path": "src/test/org/apache/commons/lang/NumberUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/lang/NumberUtilsTest.java",
        "input_line_num": "range(5482, 5484)"
      },
      {
        "commit_hash": "da1594270ddfa5fa8ca60fa21700829433603891",
        "line_num": 5483,
        "line_str": "expr_stmt|; block|} block|} block|} end_class",
        "file_path": "src/test/org/apache/commons/lang/NumberUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/lang/NumberUtilsTest.java",
        "input_line_num": "range(5482, 5484)"
      }
    ]
  },
  {
    "id": 10069,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": ["27e1971c64f85ed4e406068d48b24759a8b2f91d"],
    "fix_commit_hash": "b7af31ac1884c0b1ed68fd37d1869db15d70973d",
    "language": ["java"],
    "inducing_commit_hash": []
  },
  {
    "id": 10070,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": ["13613f3194fd8e9dfb1f2ad9e63d51cd18211a7d"],
    "fix_commit_hash": "2e7797041a233516b9208e752df47cf165349a82",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "849e81675958f6c7dccc5b84e4d72a98a854e567",
        "line_num": 262,
        "line_str": "literal|\"\\uABCD\\u1234\\u012C\" argument_list|) expr_stmt|; block|} specifier|private",
        "file_path": "src/test/org/apache/commons/lang/StringEscapeUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/lang/StringEscapeUtilsTest.java",
        "input_line_num": "range(464, 465)"
      },
      {
        "commit_hash": "849e81675958f6c7dccc5b84e4d72a98a854e567",
        "line_num": 284,
        "line_str": "parameter_list|, name|boolean name|escapeSingleQuote parameter_list|) throws|throws",
        "file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_line_num": "range(312, 316)"
      },
      {
        "commit_hash": "13613f3194fd8e9dfb1f2ad9e63d51cd18211a7d",
        "line_num": 602,
        "line_str": "literal|'\\\\' argument_list|) expr_stmt|; name|out operator|.",
        "file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_line_num": "range(654, 658)"
      },
      {
        "commit_hash": "849e81675958f6c7dccc5b84e4d72a98a854e567",
        "line_num": 247,
        "line_str": "name|escapeSingleQuotes argument_list|) expr_stmt|; return|return name|writer",
        "file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_line_num": "range(272, 276)"
      },
      {
        "commit_hash": "cc89b49f68a7a92cfc9a272225ae185484cc46f9",
        "line_num": 181,
        "line_str": "name|boolean name|escapeSingleQuotes parameter_list|) block|{ if|if",
        "file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_line_num": "range(238, 240)"
      },
      {
        "commit_hash": "13613f3194fd8e9dfb1f2ad9e63d51cd18211a7d",
        "line_num": 594,
        "line_str": "break|break; case|case literal|'/' case|: name|out",
        "file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_line_num": "range(647, 651)"
      },
      {
        "commit_hash": "849e81675958f6c7dccc5b84e4d72a98a854e567",
        "line_num": 206,
        "line_str": "argument_list|, name|str argument_list|, literal|true argument_list|)",
        "file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_line_num": "range(222, 224)"
      },
      {
        "commit_hash": "849e81675958f6c7dccc5b84e4d72a98a854e567",
        "line_num": 285,
        "line_str": "name|boolean name|escapeSingleQuote parameter_list|) throws|throws name|IOException",
        "file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_line_num": "range(312, 316)"
      },
      {
        "commit_hash": "13613f3194fd8e9dfb1f2ad9e63d51cd18211a7d",
        "line_num": 603,
        "line_str": "argument_list|) expr_stmt|; name|out operator|. name|write",
        "file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_line_num": "range(654, 658)"
      },
      {
        "commit_hash": "849e81675958f6c7dccc5b84e4d72a98a854e567",
        "line_num": 219,
        "line_str": "name|str parameter_list|, name|boolean name|escapeSingleQuotes parameter_list|)",
        "file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_line_num": "range(236, 238)"
      },
      {
        "commit_hash": "cc89b49f68a7a92cfc9a272225ae185484cc46f9",
        "line_num": 182,
        "line_str": "name|escapeSingleQuotes parameter_list|) block|{ if|if condition|(",
        "file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_line_num": "range(238, 240)"
      },
      {
        "commit_hash": "849e81675958f6c7dccc5b84e4d72a98a854e567",
        "line_num": 244,
        "line_str": "argument_list|, name|str argument_list|, name|escapeSingleQuotes argument_list|)",
        "file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_line_num": "range(272, 276)"
      },
      {
        "commit_hash": "13613f3194fd8e9dfb1f2ad9e63d51cd18211a7d",
        "line_num": 595,
        "line_str": "case|case literal|'/' case|: name|out operator|.",
        "file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_line_num": "range(647, 651)"
      },
      {
        "commit_hash": "849e81675958f6c7dccc5b84e4d72a98a854e567",
        "line_num": 207,
        "line_str": "name|str argument_list|, literal|true argument_list|) expr_stmt|;",
        "file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_line_num": "range(222, 224)"
      },
      {
        "commit_hash": "849e81675958f6c7dccc5b84e4d72a98a854e567",
        "line_num": 137,
        "line_str": "argument_list|( name|str argument_list|, literal|false argument_list|)",
        "file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_line_num": "range(153, 155)"
      },
      {
        "commit_hash": "849e81675958f6c7dccc5b84e4d72a98a854e567",
        "line_num": 162,
        "line_str": "argument_list|, name|str argument_list|, literal|false argument_list|)",
        "file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_line_num": "range(178, 180)"
      },
      {
        "commit_hash": "849e81675958f6c7dccc5b84e4d72a98a854e567",
        "line_num": 286,
        "line_str": "name|escapeSingleQuote parameter_list|) throws|throws name|IOException block|{",
        "file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_line_num": "range(312, 316)"
      },
      {
        "commit_hash": "13613f3194fd8e9dfb1f2ad9e63d51cd18211a7d",
        "line_num": 604,
        "line_str": "expr_stmt|; name|out operator|. name|write argument_list|(",
        "file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_line_num": "range(654, 658)"
      },
      {
        "commit_hash": "849e81675958f6c7dccc5b84e4d72a98a854e567",
        "line_num": 220,
        "line_str": "parameter_list|, name|boolean name|escapeSingleQuotes parameter_list|) block|{",
        "file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_line_num": "range(236, 238)"
      },
      {
        "commit_hash": "849e81675958f6c7dccc5b84e4d72a98a854e567",
        "line_num": 245,
        "line_str": "name|str argument_list|, name|escapeSingleQuotes argument_list|) expr_stmt|;",
        "file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_line_num": "range(272, 276)"
      },
      {
        "commit_hash": "13613f3194fd8e9dfb1f2ad9e63d51cd18211a7d",
        "line_num": 596,
        "line_str": "literal|'/' case|: name|out operator|. name|write",
        "file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_line_num": "range(647, 651)"
      },
      {
        "commit_hash": "849e81675958f6c7dccc5b84e4d72a98a854e567",
        "line_num": 138,
        "line_str": "name|str argument_list|, literal|false argument_list|) return|;",
        "file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_line_num": "range(153, 155)"
      },
      {
        "commit_hash": "849e81675958f6c7dccc5b84e4d72a98a854e567",
        "line_num": 163,
        "line_str": "name|str argument_list|, literal|false argument_list|) expr_stmt|;",
        "file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_line_num": "range(178, 180)"
      },
      {
        "commit_hash": "849e81675958f6c7dccc5b84e4d72a98a854e567",
        "line_num": 283,
        "line_str": "name|str parameter_list|, name|boolean name|escapeSingleQuote parameter_list|)",
        "file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_line_num": "range(312, 316)"
      },
      {
        "commit_hash": "13613f3194fd8e9dfb1f2ad9e63d51cd18211a7d",
        "line_num": 601,
        "line_str": "argument_list|( literal|'\\\\' argument_list|) expr_stmt|; name|out",
        "file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_line_num": "range(654, 658)"
      },
      {
        "commit_hash": "849e81675958f6c7dccc5b84e4d72a98a854e567",
        "line_num": 246,
        "line_str": "argument_list|, name|escapeSingleQuotes argument_list|) expr_stmt|; return|return",
        "file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_line_num": "range(272, 276)"
      },
      {
        "commit_hash": "13613f3194fd8e9dfb1f2ad9e63d51cd18211a7d",
        "line_num": 597,
        "line_str": "case|: name|out operator|. name|write argument_list|(",
        "file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_line_num": "range(647, 651)"
      }
    ]
  },
  {
    "id": 10071,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": ["5929a77b06bfa5bd43532836848dbdf8f6dec96c"],
    "fix_commit_hash": "241d7522f6503d5d3c271cc3a6bace7174455de8",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "782bc6dd8293c35fa028728214e095ce39faec69",
        "line_num": 13062,
        "line_str": "argument_list|) argument_list|) expr_stmt|; block|} block|}",
        "file_path": "src/test/org/apache/commons/lang/text/StrBuilderTest.java",
        "input_file_path": "src/test/org/apache/commons/lang/text/StrBuilderTest.java",
        "input_line_num": "range(13112, 13113)"
      },
      {
        "commit_hash": "5929a77b06bfa5bd43532836848dbdf8f6dec96c",
        "line_num": 1838,
        "line_str": "decl_stmt|; name|int name|strLen init|= name|str",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(3141, 3145)"
      },
      {
        "commit_hash": "5929a77b06bfa5bd43532836848dbdf8f6dec96c",
        "line_num": 1837,
        "line_str": "operator|) decl_stmt|; name|int name|strLen init|=",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(3141, 3145)"
      },
      {
        "commit_hash": "5929a77b06bfa5bd43532836848dbdf8f6dec96c",
        "line_num": 1836,
        "line_str": "argument_list|() operator|) decl_stmt|; name|int name|strLen",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(3141, 3145)"
      },
      {
        "commit_hash": "5929a77b06bfa5bd43532836848dbdf8f6dec96c",
        "line_num": 1835,
        "line_str": "name|toString argument_list|() operator|) decl_stmt|; name|int",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(3141, 3145)"
      },
      {
        "commit_hash": "5929a77b06bfa5bd43532836848dbdf8f6dec96c",
        "line_num": 1702,
        "line_str": "decl_stmt|; name|int name|strLen init|= name|str",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(2974, 2978)"
      },
      {
        "commit_hash": "5929a77b06bfa5bd43532836848dbdf8f6dec96c",
        "line_num": 1701,
        "line_str": "operator|) decl_stmt|; name|int name|strLen init|=",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(2974, 2978)"
      },
      {
        "commit_hash": "5929a77b06bfa5bd43532836848dbdf8f6dec96c",
        "line_num": 1700,
        "line_str": "argument_list|() operator|) decl_stmt|; name|int name|strLen",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(2974, 2978)"
      },
      {
        "commit_hash": "5929a77b06bfa5bd43532836848dbdf8f6dec96c",
        "line_num": 1699,
        "line_str": "name|toString argument_list|() operator|) decl_stmt|; name|int",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(2974, 2978)"
      }
    ]
  },
  {
    "id": 10072,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": ["67c8f3be335e6f4800972ac4a553c19375c44490"],
    "fix_commit_hash": "2f5dd419c2d3918d2817d97adb0a8f1165af1e70",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "67c8f3be335e6f4800972ac4a553c19375c44490",
        "line_num": 351,
        "line_str": "condition|) block|{ comment name|isEquals operator|=",
        "file_path": "src/java/org/apache/commons/lang/builder/EqualsBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/builder/EqualsBuilder.java",
        "input_line_num": "range(797, 800)"
      },
      {
        "commit_hash": "67c8f3be335e6f4800972ac4a553c19375c44490",
        "line_num": 350,
        "line_str": "argument_list|() condition|) block|{ comment name|isEquals",
        "file_path": "src/java/org/apache/commons/lang/builder/EqualsBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/builder/EqualsBuilder.java",
        "input_line_num": "range(797, 800)"
      },
      {
        "commit_hash": "67c8f3be335e6f4800972ac4a553c19375c44490",
        "line_num": 349,
        "line_str": "name|isArray argument_list|() condition|) block|{ comment",
        "file_path": "src/java/org/apache/commons/lang/builder/EqualsBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/builder/EqualsBuilder.java",
        "input_line_num": "range(797, 800)"
      },
      {
        "commit_hash": "2e03624b1452f882979711157fcc4a45e9218976",
        "line_num": 627,
        "line_str": "expr_stmt|; block|} if|else if condition|( name|lhs",
        "file_path": "src/java/org/apache/commons/lang/builder/EqualsBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/builder/EqualsBuilder.java",
        "input_line_num": "range(808, 811)"
      },
      {
        "commit_hash": "2e03624b1452f882979711157fcc4a45e9218976",
        "line_num": 626,
        "line_str": "argument_list|) expr_stmt|; block|} if|else if condition|(",
        "file_path": "src/java/org/apache/commons/lang/builder/EqualsBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/builder/EqualsBuilder.java",
        "input_line_num": "range(808, 811)"
      },
      {
        "commit_hash": "2e03624b1452f882979711157fcc4a45e9218976",
        "line_num": 625,
        "line_str": "name|rhs argument_list|) expr_stmt|; block|} if|else if",
        "file_path": "src/java/org/apache/commons/lang/builder/EqualsBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/builder/EqualsBuilder.java",
        "input_line_num": "range(808, 811)"
      }
    ]
  },
  {
    "id": 10073,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": ["97bff709418b344bed80dc9d78ee1660f2de2f64"],
    "fix_commit_hash": "62524ef72f4fcafa089b8e5e3d9c95214cd0940a",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "97bff709418b344bed80dc9d78ee1660f2de2f64",
        "line_num": 1224,
        "line_str": "name|Fraction name|reduce parameter_list|() block|{ name|int",
        "file_path": "src/java/org/apache/commons/lang/math/Fraction.java",
        "input_file_path": "src/java/org/apache/commons/lang/math/Fraction.java",
        "input_line_num": "range(1346, 1349)"
      },
      {
        "commit_hash": "97bff709418b344bed80dc9d78ee1660f2de2f64",
        "line_num": 1226,
        "line_str": "parameter_list|() block|{ name|int name|gcd init|=",
        "file_path": "src/java/org/apache/commons/lang/math/Fraction.java",
        "input_file_path": "src/java/org/apache/commons/lang/math/Fraction.java",
        "input_line_num": "range(1346, 1349)"
      },
      {
        "commit_hash": "97bff709418b344bed80dc9d78ee1660f2de2f64",
        "line_num": 1225,
        "line_str": "name|reduce parameter_list|() block|{ name|int name|gcd",
        "file_path": "src/java/org/apache/commons/lang/math/Fraction.java",
        "input_file_path": "src/java/org/apache/commons/lang/math/Fraction.java",
        "input_line_num": "range(1346, 1349)"
      },
      {
        "commit_hash": "6f8a23899f260f785f25e801a2ae1e7dde6236a9",
        "line_num": 1242,
        "line_str": "block|{ name|int name|gcd init|= name|greatestCommonDivisor",
        "file_path": "src/java/org/apache/commons/lang/math/Fraction.java",
        "input_file_path": "src/java/org/apache/commons/lang/math/Fraction.java",
        "input_line_num": "range(1349, 1350)"
      }
    ]
  },
  {
    "id": 10074,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": ["f389fc8be86093f30cc0063c8f56ef9632ab03b7"],
    "fix_commit_hash": "b7f4a76bbd6cb3676843058564fc0355af7c7fad",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "f389fc8be86093f30cc0063c8f56ef9632ab03b7",
        "line_num": 2515,
        "line_str": "literal|\"YES\" argument_list|) argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/org/apache/commons/lang/BooleanUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/lang/BooleanUtilsTest.java",
        "input_line_num": "range(2713, 2714)"
      },
      {
        "commit_hash": "f389fc8be86093f30cc0063c8f56ef9632ab03b7",
        "line_num": 1253,
        "line_str": "block|} block|} case|case literal|4 case|:",
        "file_path": "src/java/org/apache/commons/lang/BooleanUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/BooleanUtils.java",
        "input_line_num": "range(1328, 1332)"
      },
      {
        "commit_hash": "f389fc8be86093f30cc0063c8f56ef9632ab03b7",
        "line_num": 1252,
        "line_str": "return|; block|} block|} case|case literal|4",
        "file_path": "src/java/org/apache/commons/lang/BooleanUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/BooleanUtils.java",
        "input_line_num": "range(1328, 1332)"
      },
      {
        "commit_hash": "f389fc8be86093f30cc0063c8f56ef9632ab03b7",
        "line_num": 1251,
        "line_str": "operator|) return|; block|} block|} case|case",
        "file_path": "src/java/org/apache/commons/lang/BooleanUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/BooleanUtils.java",
        "input_line_num": "range(1328, 1332)"
      },
      {
        "commit_hash": "f389fc8be86093f30cc0063c8f56ef9632ab03b7",
        "line_num": 1250,
        "line_str": "literal|'s' operator|) return|; block|} block|}",
        "file_path": "src/java/org/apache/commons/lang/BooleanUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/BooleanUtils.java",
        "input_line_num": "range(1328, 1332)"
      }
    ]
  },
  {
    "id": 10075,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": ["849e81675958f6c7dccc5b84e4d72a98a854e567"],
    "fix_commit_hash": "13613f3194fd8e9dfb1f2ad9e63d51cd18211a7d",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "849e81675958f6c7dccc5b84e4d72a98a854e567",
        "line_num": 472,
        "line_str": "literal|\"He didn't say, \\\"stop!\\\"\" argument_list|) argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/org/apache/commons/lang/StringEscapeUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/lang/StringEscapeUtilsTest.java",
        "input_line_num": "range(959, 960)"
      },
      {
        "commit_hash": "849e81675958f6c7dccc5b84e4d72a98a854e567",
        "line_num": 599,
        "line_str": "literal|'\\\\' argument_list|) expr_stmt|; break|break; default|default :",
        "file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_line_num": "range(591, 592)"
      }
    ]
  },
  {
    "id": 10076,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": ["dd134d322110da4a5558b2b63ac3c4b3eea6faa9"],
    "fix_commit_hash": "b2ca2726d38857aaeb26b7c8cfd3cb5dab8588f4",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "dd134d322110da4a5558b2b63ac3c4b3eea6faa9",
        "line_num": 1723,
        "line_str": "expr_stmt|; if|if condition|( name|field operator|==",
        "file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_line_num": "range(1720, 1724)"
      },
      {
        "commit_hash": "dd134d322110da4a5558b2b63ac3c4b3eea6faa9",
        "line_num": 1722,
        "line_str": "operator|) expr_stmt|; if|if condition|( name|field",
        "file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_line_num": "range(1720, 1724)"
      },
      {
        "commit_hash": "dd134d322110da4a5558b2b63ac3c4b3eea6faa9",
        "line_num": 1721,
        "line_str": "literal|1000L operator|) expr_stmt|; if|if condition|(",
        "file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_line_num": "range(1720, 1724)"
      },
      {
        "commit_hash": "dd134d322110da4a5558b2b63ac3c4b3eea6faa9",
        "line_num": 1720,
        "line_str": "operator|* literal|1000L operator|) expr_stmt|; if|if",
        "file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_line_num": "range(1720, 1724)"
      },
      {
        "commit_hash": "dd134d322110da4a5558b2b63ac3c4b3eea6faa9",
        "line_num": 1684,
        "line_str": "block|} block|} comment name|int name|seconds",
        "file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_line_num": "range(1681, 1685)"
      },
      {
        "commit_hash": "dd134d322110da4a5558b2b63ac3c4b3eea6faa9",
        "line_num": 1683,
        "line_str": "expr_stmt|; block|} block|} comment name|int",
        "file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_line_num": "range(1681, 1685)"
      },
      {
        "commit_hash": "dd134d322110da4a5558b2b63ac3c4b3eea6faa9",
        "line_num": 1682,
        "line_str": "literal|true expr_stmt|; block|} block|} comment",
        "file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_line_num": "range(1681, 1685)"
      },
      {
        "commit_hash": "dd134d322110da4a5558b2b63ac3c4b3eea6faa9",
        "line_num": 1681,
        "line_str": "operator|= literal|true expr_stmt|; block|} block|}",
        "file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_line_num": "range(1681, 1685)"
      },
      {
        "commit_hash": "dd134d322110da4a5558b2b63ac3c4b3eea6faa9",
        "line_num": 1670,
        "line_str": "expr_stmt|; if|if condition|( name|field operator|==",
        "file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_line_num": "range(1667, 1671)"
      },
      {
        "commit_hash": "dd134d322110da4a5558b2b63ac3c4b3eea6faa9",
        "line_num": 1737,
        "line_str": "block|} block|} comment name|int name|minutes",
        "file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_line_num": "range(1734, 1738)"
      },
      {
        "commit_hash": "dd134d322110da4a5558b2b63ac3c4b3eea6faa9",
        "line_num": 1736,
        "line_str": "expr_stmt|; block|} block|} comment name|int",
        "file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_line_num": "range(1734, 1738)"
      },
      {
        "commit_hash": "dd134d322110da4a5558b2b63ac3c4b3eea6faa9",
        "line_num": 1735,
        "line_str": "literal|true expr_stmt|; block|} block|} comment",
        "file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_line_num": "range(1734, 1738)"
      },
      {
        "commit_hash": "dd134d322110da4a5558b2b63ac3c4b3eea6faa9",
        "line_num": 1734,
        "line_str": "operator|= literal|true expr_stmt|; block|} block|}",
        "file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_line_num": "range(1734, 1738)"
      },
      {
        "commit_hash": "dd134d322110da4a5558b2b63ac3c4b3eea6faa9",
        "line_num": 1669,
        "line_str": "name|millisecs expr_stmt|; if|if condition|( name|field",
        "file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_line_num": "range(1667, 1671)"
      },
      {
        "commit_hash": "dd134d322110da4a5558b2b63ac3c4b3eea6faa9",
        "line_num": 1668,
        "line_str": "operator|- name|millisecs expr_stmt|; if|if condition|(",
        "file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_line_num": "range(1667, 1671)"
      },
      {
        "commit_hash": "dd134d322110da4a5558b2b63ac3c4b3eea6faa9",
        "line_num": 1667,
        "line_str": "name|time operator|- name|millisecs expr_stmt|; if|if",
        "file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_line_num": "range(1667, 1671)"
      }
    ]
  },
  {
    "id": 10077,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": ["42da9af9dc1fe0f07162da0efdde006830f955ef"],
    "fix_commit_hash": "45bf47444c64b43b716c55e2e24aad9d13981cf4",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "46f9fe2730396d205a61c73983406bf98fe6ca4d",
        "line_num": 2273,
        "line_str": "block|} block|} block|} end_class",
        "file_path": "src/test/org/apache/commons/lang/LocaleUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/lang/LocaleUtilsTest.java",
        "input_line_num": "range(2271, 2274)"
      },
      {
        "commit_hash": "46f9fe2730396d205a61c73983406bf98fe6ca4d",
        "line_num": 2272,
        "line_str": "block|{ block|} block|} block|} end_class",
        "file_path": "src/test/org/apache/commons/lang/LocaleUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/lang/LocaleUtilsTest.java",
        "input_line_num": "range(2271, 2274)"
      },
      {
        "commit_hash": "42da9af9dc1fe0f07162da0efdde006830f955ef",
        "line_num": 354,
        "line_str": "decl_stmt|; name|char name|ch4 init|= name|str",
        "file_path": "src/java/org/apache/commons/lang/LocaleUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/LocaleUtils.java",
        "input_line_num": "range(351, 355)"
      },
      {
        "commit_hash": "42da9af9dc1fe0f07162da0efdde006830f955ef",
        "line_num": 353,
        "line_str": "argument_list|) decl_stmt|; name|char name|ch4 init|=",
        "file_path": "src/java/org/apache/commons/lang/LocaleUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/LocaleUtils.java",
        "input_line_num": "range(351, 355)"
      },
      {
        "commit_hash": "42da9af9dc1fe0f07162da0efdde006830f955ef",
        "line_num": 352,
        "line_str": "literal|3 argument_list|) decl_stmt|; name|char name|ch4",
        "file_path": "src/java/org/apache/commons/lang/LocaleUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/LocaleUtils.java",
        "input_line_num": "range(351, 355)"
      },
      {
        "commit_hash": "42da9af9dc1fe0f07162da0efdde006830f955ef",
        "line_num": 351,
        "line_str": "argument_list|( literal|3 argument_list|) decl_stmt|; name|char",
        "file_path": "src/java/org/apache/commons/lang/LocaleUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/LocaleUtils.java",
        "input_line_num": "range(351, 355)"
      },
      {
        "commit_hash": "46f9fe2730396d205a61c73983406bf98fe6ca4d",
        "line_num": 2271,
        "line_str": "parameter_list|) block|{ block|} block|} block|}",
        "file_path": "src/test/org/apache/commons/lang/LocaleUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/lang/LocaleUtilsTest.java",
        "input_line_num": "range(2271, 2274)"
      }
    ]
  },
  {
    "id": 10078,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": ["0f879260f6da9679c0a5a3ae6794510ceb2e4123"],
    "fix_commit_hash": "743d2a3a9a3d9549ce73db45bbe0c4cec5d6068d",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "12a215273ccd30ba747a4be92001795b3c140f26",
        "line_num": 210,
        "line_str": "operator|. name|currentTimeMillis argument_list|() expr_stmt|; name|this",
        "file_path": "src/java/org/apache/commons/lang/time/StopWatch.java",
        "input_file_path": "src/java/org/apache/commons/lang/time/StopWatch.java",
        "input_line_num": "range(213, 217)"
      },
      {
        "commit_hash": "12a215273ccd30ba747a4be92001795b3c140f26",
        "line_num": 206,
        "line_str": "block|} name|stopTime operator|= name|System operator|.",
        "file_path": "src/java/org/apache/commons/lang/time/StopWatch.java",
        "input_file_path": "src/java/org/apache/commons/lang/time/StopWatch.java",
        "input_line_num": "range(206, 210)"
      },
      {
        "commit_hash": "12a215273ccd30ba747a4be92001795b3c140f26",
        "line_num": 205,
        "line_str": "throw|; block|} name|stopTime operator|= name|System",
        "file_path": "src/java/org/apache/commons/lang/time/StopWatch.java",
        "input_file_path": "src/java/org/apache/commons/lang/time/StopWatch.java",
        "input_line_num": "range(206, 210)"
      },
      {
        "commit_hash": "12a215273ccd30ba747a4be92001795b3c140f26",
        "line_num": 204,
        "line_str": "argument_list|) throw|; block|} name|stopTime operator|=",
        "file_path": "src/java/org/apache/commons/lang/time/StopWatch.java",
        "input_file_path": "src/java/org/apache/commons/lang/time/StopWatch.java",
        "input_line_num": "range(206, 210)"
      },
      {
        "commit_hash": "12a215273ccd30ba747a4be92001795b3c140f26",
        "line_num": 203,
        "line_str": "literal|\"Stopwatch is not running. \" argument_list|) throw|; block|} name|stopTime",
        "file_path": "src/java/org/apache/commons/lang/time/StopWatch.java",
        "input_file_path": "src/java/org/apache/commons/lang/time/StopWatch.java",
        "input_line_num": "range(206, 210)"
      },
      {
        "commit_hash": "dab6a7cf62df8d2d3971fd31625ceb09b3a5684c",
        "line_num": 540,
        "line_str": "literal|1300 argument_list|) expr_stmt|; block|} comment",
        "file_path": "src/test/org/apache/commons/lang/time/StopWatchTest.java",
        "input_file_path": "src/test/org/apache/commons/lang/time/StopWatchTest.java",
        "input_line_num": "range(560, 561)"
      },
      {
        "commit_hash": "12a215273ccd30ba747a4be92001795b3c140f26",
        "line_num": 213,
        "line_str": "expr_stmt|; name|this operator|. name|runningState operator|=",
        "file_path": "src/java/org/apache/commons/lang/time/StopWatch.java",
        "input_file_path": "src/java/org/apache/commons/lang/time/StopWatch.java",
        "input_line_num": "range(213, 217)"
      },
      {
        "commit_hash": "12a215273ccd30ba747a4be92001795b3c140f26",
        "line_num": 212,
        "line_str": "argument_list|() expr_stmt|; name|this operator|. name|runningState",
        "file_path": "src/java/org/apache/commons/lang/time/StopWatch.java",
        "input_file_path": "src/java/org/apache/commons/lang/time/StopWatch.java",
        "input_line_num": "range(213, 217)"
      },
      {
        "commit_hash": "12a215273ccd30ba747a4be92001795b3c140f26",
        "line_num": 211,
        "line_str": "name|currentTimeMillis argument_list|() expr_stmt|; name|this operator|.",
        "file_path": "src/java/org/apache/commons/lang/time/StopWatch.java",
        "input_file_path": "src/java/org/apache/commons/lang/time/StopWatch.java",
        "input_line_num": "range(213, 217)"
      }
    ]
  },
  {
    "id": 10079,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": ["42da9af9dc1fe0f07162da0efdde006830f955ef"],
    "fix_commit_hash": "f4f08e4f6d6fa4c2f9af0e8aba8c80be20f70c36",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "42da9af9dc1fe0f07162da0efdde006830f955ef",
        "line_num": 318,
        "line_str": "return|; block|} comment comment specifier|public",
        "file_path": "src/test/org/apache/commons/lang/LocaleUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/lang/LocaleUtilsTest.java",
        "input_line_num": "range(326, 329)"
      },
      {
        "commit_hash": "42da9af9dc1fe0f07162da0efdde006830f955ef",
        "line_num": 317,
        "line_str": "name|suite return|; block|} comment comment",
        "file_path": "src/test/org/apache/commons/lang/LocaleUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/lang/LocaleUtilsTest.java",
        "input_line_num": "range(326, 329)"
      },
      {
        "commit_hash": "42da9af9dc1fe0f07162da0efdde006830f955ef",
        "line_num": 703,
        "line_str": "name|cAvailableLocaleSet operator|. name|contains argument_list|( name|locale",
        "file_path": "src/java/org/apache/commons/lang/LocaleUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/LocaleUtils.java",
        "input_line_num": "range(699, 704)"
      },
      {
        "commit_hash": "42da9af9dc1fe0f07162da0efdde006830f955ef",
        "line_num": 702,
        "line_str": "return|return name|cAvailableLocaleSet operator|. name|contains argument_list|(",
        "file_path": "src/java/org/apache/commons/lang/LocaleUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/LocaleUtils.java",
        "input_line_num": "range(699, 704)"
      },
      {
        "commit_hash": "42da9af9dc1fe0f07162da0efdde006830f955ef",
        "line_num": 701,
        "line_str": "block|{ return|return name|cAvailableLocaleSet operator|. name|contains",
        "file_path": "src/java/org/apache/commons/lang/LocaleUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/LocaleUtils.java",
        "input_line_num": "range(699, 704)"
      },
      {
        "commit_hash": "42da9af9dc1fe0f07162da0efdde006830f955ef",
        "line_num": 700,
        "line_str": "parameter_list|) block|{ return|return name|cAvailableLocaleSet operator|.",
        "file_path": "src/java/org/apache/commons/lang/LocaleUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/LocaleUtils.java",
        "input_line_num": "range(699, 704)"
      },
      {
        "commit_hash": "42da9af9dc1fe0f07162da0efdde006830f955ef",
        "line_num": 699,
        "line_str": "name|locale parameter_list|) block|{ return|return name|cAvailableLocaleSet",
        "file_path": "src/java/org/apache/commons/lang/LocaleUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/LocaleUtils.java",
        "input_line_num": "range(699, 704)"
      },
      {
        "commit_hash": "42da9af9dc1fe0f07162da0efdde006830f955ef",
        "line_num": 316,
        "line_str": "return|return name|suite return|; block|} comment",
        "file_path": "src/test/org/apache/commons/lang/LocaleUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/lang/LocaleUtilsTest.java",
        "input_line_num": "range(326, 329)"
      }
    ]
  },
  {
    "id": 10080,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": ["1efc48373b47e5db264163fba26296283d15dbd2"],
    "fix_commit_hash": "b9e841f22df367b40f0eb7d09602bfeb4a5b0bdd",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "1efc48373b47e5db264163fba26296283d15dbd2",
        "line_num": 301,
        "line_str": "name|pos argument_list|) argument_list|) expr_stmt|; block|}",
        "file_path": "src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java",
        "input_line_num": "range(297, 302)"
      },
      {
        "commit_hash": "1efc48373b47e5db264163fba26296283d15dbd2",
        "line_num": 300,
        "line_str": "argument_list|, name|pos argument_list|) argument_list|) expr_stmt|;",
        "file_path": "src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java",
        "input_line_num": "range(297, 302)"
      },
      {
        "commit_hash": "1efc48373b47e5db264163fba26296283d15dbd2",
        "line_num": 299,
        "line_str": "name|input argument_list|, name|pos argument_list|) argument_list|)",
        "file_path": "src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java",
        "input_line_num": "range(297, 302)"
      },
      {
        "commit_hash": "1efc48373b47e5db264163fba26296283d15dbd2",
        "line_num": 298,
        "line_str": "argument_list|( name|input argument_list|, name|pos argument_list|)",
        "file_path": "src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java",
        "input_line_num": "range(297, 302)"
      },
      {
        "commit_hash": "1efc48373b47e5db264163fba26296283d15dbd2",
        "line_num": 297,
        "line_str": "name|codePointAt argument_list|( name|input argument_list|, name|pos",
        "file_path": "src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java",
        "input_line_num": "range(297, 302)"
      }
    ]
  },
  {
    "id": 10081,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": ["5929a77b06bfa5bd43532836848dbdf8f6dec96c"],
    "fix_commit_hash": "581ffe78e4e7eac33980ce46cb7e313f17501bd0",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "5929a77b06bfa5bd43532836848dbdf8f6dec96c",
        "line_num": 3729,
        "line_str": "name|length condition|; name|i operator|++ control|)",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(5145, 5152)"
      },
      {
        "commit_hash": "5929a77b06bfa5bd43532836848dbdf8f6dec96c",
        "line_num": 3728,
        "line_str": "operator|. name|length condition|; name|i operator|++",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(5145, 5152)"
      },
      {
        "commit_hash": "5929a77b06bfa5bd43532836848dbdf8f6dec96c",
        "line_num": 3727,
        "line_str": "name|thisBuf operator|. name|length condition|; name|i",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(5145, 5152)"
      },
      {
        "commit_hash": "5929a77b06bfa5bd43532836848dbdf8f6dec96c",
        "line_num": 3726,
        "line_str": "operator|< name|thisBuf operator|. name|length condition|;",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(5145, 5152)"
      },
      {
        "commit_hash": "5929a77b06bfa5bd43532836848dbdf8f6dec96c",
        "line_num": 3725,
        "line_str": "name|i operator|< name|thisBuf operator|. name|length",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(5145, 5152)"
      },
      {
        "commit_hash": "5929a77b06bfa5bd43532836848dbdf8f6dec96c",
        "line_num": 3724,
        "line_str": "init|; name|i operator|< name|thisBuf operator|.",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(5145, 5152)"
      },
      {
        "commit_hash": "5929a77b06bfa5bd43532836848dbdf8f6dec96c",
        "line_num": 3723,
        "line_str": "literal|0 init|; name|i operator|< name|thisBuf",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(5145, 5152)"
      },
      {
        "commit_hash": "5929a77b06bfa5bd43532836848dbdf8f6dec96c",
        "line_num": 3848,
        "line_str": "name|length condition|; name|i operator|++ control|)",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(5282, 5289)"
      },
      {
        "commit_hash": "5929a77b06bfa5bd43532836848dbdf8f6dec96c",
        "line_num": 3847,
        "line_str": "operator|. name|length condition|; name|i operator|++",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(5282, 5289)"
      },
      {
        "commit_hash": "5929a77b06bfa5bd43532836848dbdf8f6dec96c",
        "line_num": 3846,
        "line_str": "name|thisBuf operator|. name|length condition|; name|i",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(5282, 5289)"
      },
      {
        "commit_hash": "5929a77b06bfa5bd43532836848dbdf8f6dec96c",
        "line_num": 3845,
        "line_str": "operator|< name|thisBuf operator|. name|length condition|;",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(5282, 5289)"
      },
      {
        "commit_hash": "5929a77b06bfa5bd43532836848dbdf8f6dec96c",
        "line_num": 3844,
        "line_str": "name|i operator|< name|thisBuf operator|. name|length",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(5282, 5289)"
      },
      {
        "commit_hash": "5929a77b06bfa5bd43532836848dbdf8f6dec96c",
        "line_num": 3843,
        "line_str": "init|; name|i operator|< name|thisBuf operator|.",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(5282, 5289)"
      },
      {
        "commit_hash": "5929a77b06bfa5bd43532836848dbdf8f6dec96c",
        "line_num": 3842,
        "line_str": "name|startIndex init|; name|i operator|< name|thisBuf",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(5282, 5289)"
      }
    ]
  },
  {
    "id": 10082,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": ["5929a77b06bfa5bd43532836848dbdf8f6dec96c"],
    "fix_commit_hash": "782bc6dd8293c35fa028728214e095ce39faec69",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "5929a77b06bfa5bd43532836848dbdf8f6dec96c",
        "line_num": 3997,
        "line_str": "name|strLen condition|; name|i operator|++ control|)",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(5437, 5446)"
      },
      {
        "commit_hash": "5929a77b06bfa5bd43532836848dbdf8f6dec96c",
        "line_num": 3996,
        "line_str": "operator|- name|strLen condition|; name|i operator|++",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(5437, 5446)"
      },
      {
        "commit_hash": "5929a77b06bfa5bd43532836848dbdf8f6dec96c",
        "line_num": 3995,
        "line_str": "name|length operator|- name|strLen condition|; name|i",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(5437, 5446)"
      },
      {
        "commit_hash": "5929a77b06bfa5bd43532836848dbdf8f6dec96c",
        "line_num": 3994,
        "line_str": "operator|. name|length operator|- name|strLen condition|;",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(5437, 5446)"
      },
      {
        "commit_hash": "5929a77b06bfa5bd43532836848dbdf8f6dec96c",
        "line_num": 3993,
        "line_str": "name|thisBuf operator|. name|length operator|- name|strLen",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(5437, 5446)"
      },
      {
        "commit_hash": "5929a77b06bfa5bd43532836848dbdf8f6dec96c",
        "line_num": 3992,
        "line_str": "operator|< name|thisBuf operator|. name|length operator|-",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(5437, 5446)"
      },
      {
        "commit_hash": "fd458de7fe28c133472d8161d81099e89f98273c",
        "line_num": 4183,
        "line_str": "name|buffer decl_stmt|; name|outer label|: for|for",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(5426, 5429)"
      },
      {
        "commit_hash": "fd458de7fe28c133472d8161d81099e89f98273c",
        "line_num": 4182,
        "line_str": "init|= name|buffer decl_stmt|; name|outer label|:",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(5426, 5429)"
      },
      {
        "commit_hash": "fd458de7fe28c133472d8161d81099e89f98273c",
        "line_num": 4181,
        "line_str": "name|thisBuf init|= name|buffer decl_stmt|; name|outer",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(5426, 5429)"
      },
      {
        "commit_hash": "5929a77b06bfa5bd43532836848dbdf8f6dec96c",
        "line_num": 3990,
        "line_str": "init|; name|i operator|< name|thisBuf operator|.",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(5437, 5446)"
      },
      {
        "commit_hash": "5929a77b06bfa5bd43532836848dbdf8f6dec96c",
        "line_num": 3989,
        "line_str": "name|startIndex init|; name|i operator|< name|thisBuf",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(5437, 5446)"
      },
      {
        "commit_hash": "5929a77b06bfa5bd43532836848dbdf8f6dec96c",
        "line_num": 3991,
        "line_str": "name|i operator|< name|thisBuf operator|. name|length",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(5437, 5446)"
      },
      {
        "commit_hash": "c325a6405f92ef80a24090789fb98e50379d2376",
        "line_num": 11302,
        "line_str": "argument_list|() argument_list|) expr_stmt|; block|} block|}",
        "file_path": "src/test/org/apache/commons/lang/text/StrBuilderTest.java",
        "input_file_path": "src/test/org/apache/commons/lang/text/StrBuilderTest.java",
        "input_line_num": "range(12994, 12995)"
      }
    ]
  },
  {
    "id": 10083,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": ["28c0eff75e6f9e65e86d01fd9a17c6b16fb3d511"],
    "fix_commit_hash": "8d99592e14d674d57ad546f34e4a08868c290ce4",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "28c0eff75e6f9e65e86d01fd9a17c6b16fb3d511",
        "line_num": 781,
        "line_str": "expr_stmt|; block|} block|} end_class",
        "file_path": "src/test/org/apache/commons/lang/enums/ValuedEnumTest.java",
        "input_file_path": "src/test/org/apache/commons/lang/enums/ValuedEnumTest.java",
        "input_line_num": "range(779, 782)"
      },
      {
        "commit_hash": "28c0eff75e6f9e65e86d01fd9a17c6b16fb3d511",
        "line_num": 780,
        "line_str": "argument_list|) expr_stmt|; block|} block|} end_class",
        "file_path": "src/test/org/apache/commons/lang/enums/ValuedEnumTest.java",
        "input_file_path": "src/test/org/apache/commons/lang/enums/ValuedEnumTest.java",
        "input_line_num": "range(779, 782)"
      },
      {
        "commit_hash": "28c0eff75e6f9e65e86d01fd9a17c6b16fb3d511",
        "line_num": 779,
        "line_str": "argument_list|) argument_list|) expr_stmt|; block|} block|}",
        "file_path": "src/test/org/apache/commons/lang/enums/ValuedEnumTest.java",
        "input_file_path": "src/test/org/apache/commons/lang/enums/ValuedEnumTest.java",
        "input_line_num": "range(779, 782)"
      },
      {
        "commit_hash": "9b2e9db9c6b006a4ea790f4d2a3619ad21de8c92",
        "line_num": 395,
        "line_str": "expr_stmt|; block|} comment specifier|public name|void",
        "file_path": "src/test/org/apache/commons/lang/enums/EnumEqualsTest.java",
        "input_file_path": "src/test/org/apache/commons/lang/enums/EnumEqualsTest.java",
        "input_line_num": "range(393, 396)"
      },
      {
        "commit_hash": "9b2e9db9c6b006a4ea790f4d2a3619ad21de8c92",
        "line_num": 394,
        "line_str": "argument_list|) expr_stmt|; block|} comment specifier|public",
        "file_path": "src/test/org/apache/commons/lang/enums/EnumEqualsTest.java",
        "input_file_path": "src/test/org/apache/commons/lang/enums/EnumEqualsTest.java",
        "input_line_num": "range(393, 396)"
      },
      {
        "commit_hash": "9b2e9db9c6b006a4ea790f4d2a3619ad21de8c92",
        "line_num": 393,
        "line_str": "argument_list|) argument_list|) expr_stmt|; block|} comment",
        "file_path": "src/test/org/apache/commons/lang/enums/EnumEqualsTest.java",
        "input_file_path": "src/test/org/apache/commons/lang/enums/EnumEqualsTest.java",
        "input_line_num": "range(393, 396)"
      },
      {
        "commit_hash": "28c0eff75e6f9e65e86d01fd9a17c6b16fb3d511",
        "line_num": 293,
        "line_str": "expr_stmt|; block|} specifier|public name|void name|testEquals",
        "file_path": "src/test/org/apache/commons/lang/enums/ValuedEnumTest.java",
        "input_file_path": "src/test/org/apache/commons/lang/enums/ValuedEnumTest.java",
        "input_line_num": "range(293, 294)"
      },
      {
        "commit_hash": "10372e509f373e1fbaeffba541cc6f11af2ede89",
        "line_num": 223,
        "line_str": "return|; block|} comment specifier|public name|String",
        "file_path": "src/java/org/apache/commons/lang/enums/ValuedEnum.java",
        "input_file_path": "src/java/org/apache/commons/lang/enums/ValuedEnum.java",
        "input_line_num": "range(222, 224)"
      },
      {
        "commit_hash": "10372e509f373e1fbaeffba541cc6f11af2ede89",
        "line_num": 222,
        "line_str": "name|iValue return|; block|} comment specifier|public",
        "file_path": "src/java/org/apache/commons/lang/enums/ValuedEnum.java",
        "input_file_path": "src/java/org/apache/commons/lang/enums/ValuedEnum.java",
        "input_line_num": "range(222, 224)"
      },
      {
        "commit_hash": "28c0eff75e6f9e65e86d01fd9a17c6b16fb3d511",
        "line_num": 324,
        "line_str": "expr_stmt|; block|} specifier|public name|void name|testToString",
        "file_path": "src/test/org/apache/commons/lang/enums/ValuedEnumTest.java",
        "input_file_path": "src/test/org/apache/commons/lang/enums/ValuedEnumTest.java",
        "input_line_num": "range(324, 325)"
      },
      {
        "commit_hash": "28c0eff75e6f9e65e86d01fd9a17c6b16fb3d511",
        "line_num": 216,
        "line_str": "block|{ return|return name|iValue operator|- operator|(",
        "file_path": "src/java/org/apache/commons/lang/enums/ValuedEnum.java",
        "input_file_path": "src/java/org/apache/commons/lang/enums/ValuedEnum.java",
        "input_line_num": "range(208, 212)"
      },
      {
        "commit_hash": "28c0eff75e6f9e65e86d01fd9a17c6b16fb3d511",
        "line_num": 215,
        "line_str": "parameter_list|) block|{ return|return name|iValue operator|-",
        "file_path": "src/java/org/apache/commons/lang/enums/ValuedEnum.java",
        "input_file_path": "src/java/org/apache/commons/lang/enums/ValuedEnum.java",
        "input_line_num": "range(208, 212)"
      },
      {
        "commit_hash": "28c0eff75e6f9e65e86d01fd9a17c6b16fb3d511",
        "line_num": 214,
        "line_str": "name|other parameter_list|) block|{ return|return name|iValue",
        "file_path": "src/java/org/apache/commons/lang/enums/ValuedEnum.java",
        "input_file_path": "src/java/org/apache/commons/lang/enums/ValuedEnum.java",
        "input_line_num": "range(208, 212)"
      },
      {
        "commit_hash": "28c0eff75e6f9e65e86d01fd9a17c6b16fb3d511",
        "line_num": 213,
        "line_str": "name|Object name|other parameter_list|) block|{ return|return",
        "file_path": "src/java/org/apache/commons/lang/enums/ValuedEnum.java",
        "input_file_path": "src/java/org/apache/commons/lang/enums/ValuedEnum.java",
        "input_line_num": "range(208, 212)"
      },
      {
        "commit_hash": "0948c45860752e1a5e8ab8c0b21de78682111183",
        "line_num": 22,
        "line_str": "end_package  begin_import import|import name|junit",
        "file_path": "src/test/org/apache/commons/lang/enums/EnumEqualsTest.java",
        "input_file_path": "src/test/org/apache/commons/lang/enums/EnumEqualsTest.java",
        "input_line_num": "range(22, 23)"
      }
    ]
  },
  {
    "id": 10084,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["4f1dd15e71f740acd5d355906a31a813e27ce52a"],
    "fix_commit_hash": "4e54781d995494bcbdc388d3bae0e2420ae75301",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "4f1dd15e71f740acd5d355906a31a813e27ce52a",
        "line_num": 6076,
        "line_str": "expr_stmt|; comment block|} block|} block|}",
        "file_path": "src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java",
        "input_line_num": "range(6394, 6396)"
      },
      {
        "commit_hash": "700e2c1338c36b86c6ec075e57847d063ec2cd0b",
        "line_num": 5211,
        "line_str": "block|} block|} comment specifier|public name|void",
        "file_path": "src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java",
        "input_line_num": "range(6396, 6398)"
      },
      {
        "commit_hash": "700e2c1338c36b86c6ec075e57847d063ec2cd0b",
        "line_num": 5210,
        "line_str": "block|} block|} block|} comment specifier|public",
        "file_path": "src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java",
        "input_line_num": "range(6396, 6398)"
      },
      {
        "commit_hash": "4f1dd15e71f740acd5d355906a31a813e27ce52a",
        "line_num": 6077,
        "line_str": "comment block|} block|} block|} comment",
        "file_path": "src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java",
        "input_line_num": "range(6394, 6396)"
      }
    ]
  },
  {
    "id": 10085,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["ddb50ce8cd2993b7e8cd43bb60ef368bb74b4793"],
    "fix_commit_hash": "71436bfb3030de280844a4997ab7ae617f5d8357",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "ddb50ce8cd2993b7e8cd43bb60ef368bb74b4793",
        "line_num": 905,
        "line_str": "if|if condition|( name|source operator|. name|substring",
        "file_path": "src/java/org/apache/commons/math/complex/ComplexFormat.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/ComplexFormat.java",
        "input_line_num": "range(1004, 1008)"
      },
      {
        "commit_hash": "ddb50ce8cd2993b7e8cd43bb60ef368bb74b4793",
        "line_num": 904,
        "line_str": "decl_stmt|; if|if condition|( name|source operator|.",
        "file_path": "src/java/org/apache/commons/math/complex/ComplexFormat.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/ComplexFormat.java",
        "input_line_num": "range(1004, 1008)"
      },
      {
        "commit_hash": "ddb50ce8cd2993b7e8cd43bb60ef368bb74b4793",
        "line_num": 903,
        "line_str": "name|n decl_stmt|; if|if condition|( name|source",
        "file_path": "src/java/org/apache/commons/math/complex/ComplexFormat.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/ComplexFormat.java",
        "input_line_num": "range(1004, 1008)"
      },
      {
        "commit_hash": "cea7b55d9054ee26a4fc59c4167f6d81b506f688",
        "line_num": 1921,
        "line_str": "block|} block|} block|} end_class",
        "file_path": "src/test/org/apache/commons/math/complex/AbstractComplexFormatTest.java",
        "input_file_path": "src/test/org/apache/commons/math/complex/ComplexFormatAbstractTest.java",
        "input_line_num": "range(1919, 1922)"
      },
      {
        "commit_hash": "cea7b55d9054ee26a4fc59c4167f6d81b506f688",
        "line_num": 1920,
        "line_str": "comment block|} block|} block|} end_class",
        "file_path": "src/test/org/apache/commons/math/complex/AbstractComplexFormatTest.java",
        "input_file_path": "src/test/org/apache/commons/math/complex/ComplexFormatAbstractTest.java",
        "input_line_num": "range(1919, 1922)"
      },
      {
        "commit_hash": "cea7b55d9054ee26a4fc59c4167f6d81b506f688",
        "line_num": 1919,
        "line_str": "block|{ comment block|} block|} block|}",
        "file_path": "src/test/org/apache/commons/math/complex/AbstractComplexFormatTest.java",
        "input_file_path": "src/test/org/apache/commons/math/complex/ComplexFormatAbstractTest.java",
        "input_line_num": "range(1919, 1922)"
      },
      {
        "commit_hash": "ddb50ce8cd2993b7e8cd43bb60ef368bb74b4793",
        "line_num": 906,
        "line_str": "condition|( name|source operator|. name|substring argument_list|(",
        "file_path": "src/java/org/apache/commons/math/complex/ComplexFormat.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/ComplexFormat.java",
        "input_line_num": "range(1004, 1008)"
      }
    ]
  },
  {
    "id": 10086,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["c00d664aaba4c016af7f21aed9f2d53bf51bad76"],
    "fix_commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "c00d664aaba4c016af7f21aed9f2d53bf51bad76",
        "line_num": 233,
        "line_str": "argument_list|) operator|) return|; block|} comment",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(242, 243)"
      },
      {
        "commit_hash": "22755d9810cb2308fc70346963132b0dd6e187ed",
        "line_num": 503,
        "line_str": "comment block|} block|} block|} end_class",
        "file_path": "src/test/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_file_path": "src/test/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_line_num": "range(505, 507)"
      },
      {
        "commit_hash": "22755d9810cb2308fc70346963132b0dd6e187ed",
        "line_num": 502,
        "line_str": "block|{ comment block|} block|} block|}",
        "file_path": "src/test/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_file_path": "src/test/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_line_num": "range(505, 507)"
      },
      {
        "commit_hash": "19c9429920dca67ea571feeb156c00868421a2c4",
        "line_num": 243,
        "line_str": "return|; block|} comment specifier|public name|double",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(243, 245)"
      },
      {
        "commit_hash": "19c9429920dca67ea571feeb156c00868421a2c4",
        "line_num": 242,
        "line_str": "operator|) return|; block|} comment specifier|public",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(243, 245)"
      },
      {
        "commit_hash": "c00d664aaba4c016af7f21aed9f2d53bf51bad76",
        "line_num": 205,
        "line_str": "name|MathException block|{ return|return literal|0.5 operator|*",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(212, 215)"
      },
      {
        "commit_hash": "c00d664aaba4c016af7f21aed9f2d53bf51bad76",
        "line_num": 204,
        "line_str": "throws|throws name|MathException block|{ return|return literal|0.5",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(212, 215)"
      },
      {
        "commit_hash": "c00d664aaba4c016af7f21aed9f2d53bf51bad76",
        "line_num": 203,
        "line_str": "parameter_list|) throws|throws name|MathException block|{ return|return",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(212, 215)"
      }
    ]
  },
  {
    "id": 10087,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["44de7625f81e5a4f976b19af3fb9efcc94c17007"],
    "fix_commit_hash": "11dc43bd4b97f0e4da42fe988aed903877a24ad4",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 495,
        "line_str": "argument_list|( operator|- literal|0.693147 argument_list|, literal|1.0",
        "file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_line_num": "range(493, 498)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 69,
        "line_str": "init|= literal|10e-9 decl_stmt|; comment specifier|private",
        "file_path": "src/java/org/apache/commons/math/special/Beta.java",
        "input_file_path": "src/java/org/apache/commons/math/special/Beta.java",
        "input_line_num": "range(88, 93)"
      },
      {
        "commit_hash": "f67e5b4f243903a48ec9a56a6b884350e31dcde2",
        "line_num": 145,
        "line_str": "operator|- name|actualQ argument_list|, literal|10e-5 argument_list|)",
        "file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_line_num": "range(144, 147)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 65,
        "line_str": "name|double name|DEFAULT_EPSILON init|= literal|10e-9 decl_stmt|;",
        "file_path": "src/java/org/apache/commons/math/special/Gamma.java",
        "input_file_path": "src/java/org/apache/commons/math/special/Gamma.java",
        "input_line_num": "range(102, 107)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 170,
        "line_str": "name|actual argument_list|, literal|10e-5 argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_line_num": "range(193, 198)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 128,
        "line_str": "literal|10e-5 argument_list|) expr_stmt|; block|} catch|catch",
        "file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_line_num": "range(124, 129)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 124,
        "line_str": "name|expected argument_list|, name|actual argument_list|, literal|10e-5",
        "file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_line_num": "range(124, 129)"
      },
      {
        "commit_hash": "f67e5b4f243903a48ec9a56a6b884350e31dcde2",
        "line_num": 133,
        "line_str": "name|actualP argument_list|, literal|10e-5 argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_line_num": "range(131, 136)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 352,
        "line_str": "literal|0.693147 argument_list|, literal|3.0 argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_line_num": "range(373, 378)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 182,
        "line_str": "literal|10e-5 argument_list|) expr_stmt|; block|} specifier|public",
        "file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_line_num": "range(178, 183)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 286,
        "line_str": "block|{ name|testRegularizedGamma argument_list|( literal|0.632121 argument_list|,",
        "file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_line_num": "range(310, 315)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 348,
        "line_str": "parameter_list|() block|{ name|testLogGamma argument_list|( literal|0.693147",
        "file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_line_num": "range(373, 378)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 178,
        "line_str": "name|expected argument_list|, name|actual argument_list|, literal|10e-5",
        "file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_line_num": "range(178, 183)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 496,
        "line_str": "operator|- literal|0.693147 argument_list|, literal|1.0 argument_list|,",
        "file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_line_num": "range(493, 498)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 70,
        "line_str": "literal|10e-9 decl_stmt|; comment specifier|private name|Beta",
        "file_path": "src/java/org/apache/commons/math/special/Beta.java",
        "input_file_path": "src/java/org/apache/commons/math/special/Beta.java",
        "input_line_num": "range(88, 93)"
      },
      {
        "commit_hash": "f67e5b4f243903a48ec9a56a6b884350e31dcde2",
        "line_num": 146,
        "line_str": "name|actualQ argument_list|, literal|10e-5 argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_line_num": "range(144, 147)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 66,
        "line_str": "specifier|final name|double name|DEFAULT_EPSILON init|= literal|10e-9",
        "file_path": "src/java/org/apache/commons/math/special/Beta.java",
        "input_file_path": "src/java/org/apache/commons/math/special/Beta.java",
        "input_line_num": "range(88, 93)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 66,
        "line_str": "name|DEFAULT_EPSILON init|= literal|10e-9 decl_stmt|; comment",
        "file_path": "src/java/org/apache/commons/math/special/Gamma.java",
        "input_file_path": "src/java/org/apache/commons/math/special/Gamma.java",
        "input_line_num": "range(102, 107)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 171,
        "line_str": "argument_list|, literal|10e-5 argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_line_num": "range(193, 198)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 125,
        "line_str": "argument_list|, name|actual argument_list|, literal|10e-5 argument_list|)",
        "file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_line_num": "range(124, 129)"
      },
      {
        "commit_hash": "f67e5b4f243903a48ec9a56a6b884350e31dcde2",
        "line_num": 134,
        "line_str": "argument_list|, literal|10e-5 argument_list|) expr_stmt|; name|TestUtils",
        "file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_line_num": "range(131, 136)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 287,
        "line_str": "name|testRegularizedGamma argument_list|( literal|0.632121 argument_list|, literal|1.0",
        "file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_line_num": "range(310, 315)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 349,
        "line_str": "block|{ name|testLogGamma argument_list|( literal|0.693147 argument_list|,",
        "file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_line_num": "range(373, 378)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 179,
        "line_str": "argument_list|, name|actual argument_list|, literal|10e-5 argument_list|)",
        "file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_line_num": "range(178, 183)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 497,
        "line_str": "literal|0.693147 argument_list|, literal|1.0 argument_list|, literal|2.0",
        "file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_line_num": "range(493, 498)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 122,
        "line_str": "argument_list|, literal|10e-5 argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_line_num": "range(147, 149)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 493,
        "line_str": "block|{ name|testLogBeta argument_list|( operator|- literal|0.693147",
        "file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_line_num": "range(493, 498)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 67,
        "line_str": "name|double name|DEFAULT_EPSILON init|= literal|10e-9 decl_stmt|;",
        "file_path": "src/java/org/apache/commons/math/special/Beta.java",
        "input_file_path": "src/java/org/apache/commons/math/special/Beta.java",
        "input_line_num": "range(88, 93)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 67,
        "line_str": "init|= literal|10e-9 decl_stmt|; comment specifier|private",
        "file_path": "src/java/org/apache/commons/math/special/Gamma.java",
        "input_file_path": "src/java/org/apache/commons/math/special/Gamma.java",
        "input_line_num": "range(102, 107)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 172,
        "line_str": "literal|10e-5 argument_list|) expr_stmt|; block|} specifier|public",
        "file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_line_num": "range(193, 198)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 168,
        "line_str": "name|expected argument_list|, name|actual argument_list|, literal|10e-5",
        "file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_line_num": "range(193, 198)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 126,
        "line_str": "name|actual argument_list|, literal|10e-5 argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_line_num": "range(124, 129)"
      },
      {
        "commit_hash": "f67e5b4f243903a48ec9a56a6b884350e31dcde2",
        "line_num": 135,
        "line_str": "literal|10e-5 argument_list|) expr_stmt|; name|TestUtils operator|.",
        "file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_line_num": "range(131, 136)"
      },
      {
        "commit_hash": "f67e5b4f243903a48ec9a56a6b884350e31dcde2",
        "line_num": 131,
        "line_str": "name|expected argument_list|, name|actualP argument_list|, literal|10e-5",
        "file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_line_num": "range(131, 136)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 288,
        "line_str": "argument_list|( literal|0.632121 argument_list|, literal|1.0 argument_list|,",
        "file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_line_num": "range(310, 315)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 350,
        "line_str": "name|testLogGamma argument_list|( literal|0.693147 argument_list|, literal|3.0",
        "file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_line_num": "range(373, 378)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 180,
        "line_str": "name|actual argument_list|, literal|10e-5 argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_line_num": "range(178, 183)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 123,
        "line_str": "literal|10e-5 argument_list|) expr_stmt|; block|} catch|catch",
        "file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_line_num": "range(147, 149)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 494,
        "line_str": "name|testLogBeta argument_list|( operator|- literal|0.693147 argument_list|,",
        "file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_line_num": "range(493, 498)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 68,
        "line_str": "name|DEFAULT_EPSILON init|= literal|10e-9 decl_stmt|; comment",
        "file_path": "src/java/org/apache/commons/math/special/Beta.java",
        "input_file_path": "src/java/org/apache/commons/math/special/Beta.java",
        "input_line_num": "range(88, 93)"
      },
      {
        "commit_hash": "f67e5b4f243903a48ec9a56a6b884350e31dcde2",
        "line_num": 144,
        "line_str": "literal|1.0 operator|- name|actualQ argument_list|, literal|10e-5",
        "file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_line_num": "range(144, 147)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 68,
        "line_str": "literal|10e-9 decl_stmt|; comment specifier|private specifier|static",
        "file_path": "src/java/org/apache/commons/math/special/Gamma.java",
        "input_file_path": "src/java/org/apache/commons/math/special/Gamma.java",
        "input_line_num": "range(102, 107)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 64,
        "line_str": "specifier|final name|double name|DEFAULT_EPSILON init|= literal|10e-9",
        "file_path": "src/java/org/apache/commons/math/special/Gamma.java",
        "input_file_path": "src/java/org/apache/commons/math/special/Gamma.java",
        "input_line_num": "range(102, 107)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 169,
        "line_str": "argument_list|, name|actual argument_list|, literal|10e-5 argument_list|)",
        "file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_line_num": "range(193, 198)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 127,
        "line_str": "argument_list|, literal|10e-5 argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_line_num": "range(124, 129)"
      },
      {
        "commit_hash": "f67e5b4f243903a48ec9a56a6b884350e31dcde2",
        "line_num": 132,
        "line_str": "argument_list|, name|actualP argument_list|, literal|10e-5 argument_list|)",
        "file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_line_num": "range(131, 136)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 289,
        "line_str": "literal|0.632121 argument_list|, literal|1.0 argument_list|, literal|1.0",
        "file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_line_num": "range(310, 315)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 351,
        "line_str": "argument_list|( literal|0.693147 argument_list|, literal|3.0 argument_list|)",
        "file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_line_num": "range(373, 378)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 181,
        "line_str": "argument_list|, literal|10e-5 argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_line_num": "range(178, 183)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 285,
        "line_str": "parameter_list|() block|{ name|testRegularizedGamma argument_list|( literal|0.632121",
        "file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_line_num": "range(310, 315)"
      }
    ]
  },
  {
    "id": 10088,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["2ead9499ffcd27f60b95fd43bbd96a1aa03536c1"],
    "fix_commit_hash": "1e38f4438384d0d7dc01d14ab26e1d10316ae2ea",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "2ead9499ffcd27f60b95fd43bbd96a1aa03536c1",
        "line_num": 502,
        "line_str": "name|sumXY operator|/ name|sumXX return|; block|}",
        "file_path": "src/java/org/apache/commons/math/stat/regression/SimpleRegression.java",
        "input_file_path": "src/java/org/apache/commons/math/stat/regression/SimpleRegression.java",
        "input_line_num": "range(501, 505)"
      },
      {
        "commit_hash": "2ead9499ffcd27f60b95fd43bbd96a1aa03536c1",
        "line_num": 501,
        "line_str": "operator|* name|sumXY operator|/ name|sumXX return|;",
        "file_path": "src/java/org/apache/commons/math/stat/regression/SimpleRegression.java",
        "input_file_path": "src/java/org/apache/commons/math/stat/regression/SimpleRegression.java",
        "input_line_num": "range(501, 505)"
      },
      {
        "commit_hash": "2ead9499ffcd27f60b95fd43bbd96a1aa03536c1",
        "line_num": 497,
        "line_str": "return|return name|sumYY operator|- name|sumXY operator|*",
        "file_path": "src/java/org/apache/commons/math/stat/regression/SimpleRegression.java",
        "input_file_path": "src/java/org/apache/commons/math/stat/regression/SimpleRegression.java",
        "input_line_num": "range(494, 498)"
      },
      {
        "commit_hash": "2ead9499ffcd27f60b95fd43bbd96a1aa03536c1",
        "line_num": 496,
        "line_str": "block|{ return|return name|sumYY operator|- name|sumXY",
        "file_path": "src/java/org/apache/commons/math/stat/regression/SimpleRegression.java",
        "input_file_path": "src/java/org/apache/commons/math/stat/regression/SimpleRegression.java",
        "input_line_num": "range(494, 498)"
      },
      {
        "commit_hash": "2ead9499ffcd27f60b95fd43bbd96a1aa03536c1",
        "line_num": 495,
        "line_str": "parameter_list|() block|{ return|return name|sumYY operator|-",
        "file_path": "src/java/org/apache/commons/math/stat/regression/SimpleRegression.java",
        "input_file_path": "src/java/org/apache/commons/math/stat/regression/SimpleRegression.java",
        "input_line_num": "range(494, 498)"
      },
      {
        "commit_hash": "2ead9499ffcd27f60b95fd43bbd96a1aa03536c1",
        "line_num": 494,
        "line_str": "name|getSumSquaredErrors parameter_list|() block|{ return|return name|sumYY",
        "file_path": "src/java/org/apache/commons/math/stat/regression/SimpleRegression.java",
        "input_file_path": "src/java/org/apache/commons/math/stat/regression/SimpleRegression.java",
        "input_line_num": "range(494, 498)"
      },
      {
        "commit_hash": "c831b59799558f994898aa500d4b5c04f5cfebb1",
        "line_num": 1767,
        "line_str": "operator|> literal|0.0 argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/org/apache/commons/math/stat/BivariateRegressionTest.java",
        "input_file_path": "src/test/org/apache/commons/math/stat/regression/SimpleRegressionTest.java",
        "input_line_num": "range(1873, 1874)"
      },
      {
        "commit_hash": "a41643b68ed494134f97781db690a9bbb308a6f2",
        "line_num": 1938,
        "line_str": "literal|1.0 argument_list|) expr_stmt|; block|} block|}",
        "file_path": "src/test/org/apache/commons/math/stat/multivariate/BivariateRegressionTest.java",
        "input_file_path": "src/test/org/apache/commons/math/stat/regression/SimpleRegressionTest.java",
        "input_line_num": "range(2038, 2039)"
      },
      {
        "commit_hash": "2ead9499ffcd27f60b95fd43bbd96a1aa03536c1",
        "line_num": 504,
        "line_str": "name|sumXX return|; block|} comment specifier|public",
        "file_path": "src/java/org/apache/commons/math/stat/regression/SimpleRegression.java",
        "input_file_path": "src/java/org/apache/commons/math/stat/regression/SimpleRegression.java",
        "input_line_num": "range(501, 505)"
      },
      {
        "commit_hash": "2ead9499ffcd27f60b95fd43bbd96a1aa03536c1",
        "line_num": 503,
        "line_str": "operator|/ name|sumXX return|; block|} comment",
        "file_path": "src/java/org/apache/commons/math/stat/regression/SimpleRegression.java",
        "input_file_path": "src/java/org/apache/commons/math/stat/regression/SimpleRegression.java",
        "input_line_num": "range(501, 505)"
      }
    ]
  },
  {
    "id": 10089,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["85ba0dda70818df7eb46675507318902faa685e9"],
    "fix_commit_hash": "30ba0eb27e795d63ec389a4aea9de3c729e054f9",
    "language": ["java"],
    "inducing_commit_hash": []
  },
  {
    "id": 10090,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["835f2293857c4c19129d7364c9640850596fb9b3"],
    "fix_commit_hash": "7a7bdf605bdc5a829c7c9f88ba456c67ec044f08",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "835f2293857c4c19129d7364c9640850596fb9b3",
        "line_num": 156,
        "line_str": "name|i argument_list|, name|i argument_list|, name|weight",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 167)"
      },
      {
        "commit_hash": "835f2293857c4c19129d7364c9640850596fb9b3",
        "line_num": 152,
        "line_str": "name|weightMatrix operator|. name|setEntry argument_list|( name|i",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 167)"
      },
      {
        "commit_hash": "835f2293857c4c19129d7364c9640850596fb9b3",
        "line_num": 148,
        "line_str": "name|i operator|++ control|) block|{ name|weightMatrix",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 167)"
      },
      {
        "commit_hash": "835f2293857c4c19129d7364c9640850596fb9b3",
        "line_num": 144,
        "line_str": "name|i operator|< name|dim condition|; name|i",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 167)"
      },
      {
        "commit_hash": "835f2293857c4c19129d7364c9640850596fb9b3",
        "line_num": 140,
        "line_str": "name|i init|= literal|0 init|; name|i",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 167)"
      },
      {
        "commit_hash": "835f2293857c4c19129d7364c9640850596fb9b3",
        "line_num": 136,
        "line_str": "expr_stmt|; for|for control|( name|int name|i",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 167)"
      },
      {
        "commit_hash": "e11328141036b850e77073ac91e3935f375a061e",
        "line_num": 70,
        "line_str": "name|linear operator|. name|MatrixUtils import|; end_import",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(68, 73)"
      },
      {
        "commit_hash": "835f2293857c4c19129d7364c9640850596fb9b3",
        "line_num": 165,
        "line_str": "expr_stmt|; block|} block|} comment specifier|public",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 167)"
      },
      {
        "commit_hash": "835f2293857c4c19129d7364c9640850596fb9b3",
        "line_num": 132,
        "line_str": "name|dim argument_list|, name|dim argument_list|) expr_stmt|;",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 167)"
      },
      {
        "commit_hash": "835f2293857c4c19129d7364c9640850596fb9b3",
        "line_num": 755,
        "line_str": "name|RealMatrix name|m parameter_list|) block|{ specifier|final",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(755, 758)"
      },
      {
        "commit_hash": "835f2293857c4c19129d7364c9640850596fb9b3",
        "line_num": 161,
        "line_str": "index|[ name|i index|] argument_list|) expr_stmt|;",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 167)"
      },
      {
        "commit_hash": "835f2293857c4c19129d7364c9640850596fb9b3",
        "line_num": 128,
        "line_str": "name|MatrixUtils operator|. name|createRealMatrix argument_list|( name|dim",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 167)"
      },
      {
        "commit_hash": "835f2293857c4c19129d7364c9640850596fb9b3",
        "line_num": 157,
        "line_str": "argument_list|, name|i argument_list|, name|weight index|[",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 167)"
      },
      {
        "commit_hash": "835f2293857c4c19129d7364c9640850596fb9b3",
        "line_num": 124,
        "line_str": "name|length decl_stmt|; name|weightMatrix operator|= name|MatrixUtils",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(124, 126)"
      },
      {
        "commit_hash": "835f2293857c4c19129d7364c9640850596fb9b3",
        "line_num": 153,
        "line_str": "operator|. name|setEntry argument_list|( name|i argument_list|,",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 167)"
      },
      {
        "commit_hash": "835f2293857c4c19129d7364c9640850596fb9b3",
        "line_num": 149,
        "line_str": "operator|++ control|) block|{ name|weightMatrix operator|.",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 167)"
      },
      {
        "commit_hash": "835f2293857c4c19129d7364c9640850596fb9b3",
        "line_num": 145,
        "line_str": "operator|< name|dim condition|; name|i operator|++",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 167)"
      },
      {
        "commit_hash": "835f2293857c4c19129d7364c9640850596fb9b3",
        "line_num": 141,
        "line_str": "init|= literal|0 init|; name|i operator|<",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 167)"
      },
      {
        "commit_hash": "835f2293857c4c19129d7364c9640850596fb9b3",
        "line_num": 137,
        "line_str": "for|for control|( name|int name|i init|=",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 167)"
      },
      {
        "commit_hash": "e11328141036b850e77073ac91e3935f375a061e",
        "line_num": 71,
        "line_str": "operator|. name|MatrixUtils import|; end_import",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(68, 73)"
      },
      {
        "commit_hash": "835f2293857c4c19129d7364c9640850596fb9b3",
        "line_num": 166,
        "line_str": "block|} block|} comment specifier|public name|Weight",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 167)"
      },
      {
        "commit_hash": "835f2293857c4c19129d7364c9640850596fb9b3",
        "line_num": 133,
        "line_str": "argument_list|, name|dim argument_list|) expr_stmt|; for|for",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 167)"
      },
      {
        "commit_hash": "835f2293857c4c19129d7364c9640850596fb9b3",
        "line_num": 756,
        "line_str": "name|m parameter_list|) block|{ specifier|final name|EigenDecomposition",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(755, 758)"
      },
      {
        "commit_hash": "835f2293857c4c19129d7364c9640850596fb9b3",
        "line_num": 162,
        "line_str": "name|i index|] argument_list|) expr_stmt|; block|}",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 167)"
      },
      {
        "commit_hash": "835f2293857c4c19129d7364c9640850596fb9b3",
        "line_num": 129,
        "line_str": "operator|. name|createRealMatrix argument_list|( name|dim argument_list|,",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 167)"
      },
      {
        "commit_hash": "835f2293857c4c19129d7364c9640850596fb9b3",
        "line_num": 158,
        "line_str": "name|i argument_list|, name|weight index|[ name|i",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 167)"
      },
      {
        "commit_hash": "835f2293857c4c19129d7364c9640850596fb9b3",
        "line_num": 125,
        "line_str": "decl_stmt|; name|weightMatrix operator|= name|MatrixUtils operator|.",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(124, 126)"
      },
      {
        "commit_hash": "835f2293857c4c19129d7364c9640850596fb9b3",
        "line_num": 154,
        "line_str": "name|setEntry argument_list|( name|i argument_list|, name|i",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 167)"
      },
      {
        "commit_hash": "835f2293857c4c19129d7364c9640850596fb9b3",
        "line_num": 773,
        "line_str": "argument_list|() return|; block|} block|} end_class",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(773, 775)"
      },
      {
        "commit_hash": "835f2293857c4c19129d7364c9640850596fb9b3",
        "line_num": 150,
        "line_str": "control|) block|{ name|weightMatrix operator|. name|setEntry",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 167)"
      },
      {
        "commit_hash": "835f2293857c4c19129d7364c9640850596fb9b3",
        "line_num": 146,
        "line_str": "name|dim condition|; name|i operator|++ control|)",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 167)"
      },
      {
        "commit_hash": "835f2293857c4c19129d7364c9640850596fb9b3",
        "line_num": 142,
        "line_str": "literal|0 init|; name|i operator|< name|dim",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 167)"
      },
      {
        "commit_hash": "835f2293857c4c19129d7364c9640850596fb9b3",
        "line_num": 138,
        "line_str": "control|( name|int name|i init|= literal|0",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 167)"
      },
      {
        "commit_hash": "835f2293857c4c19129d7364c9640850596fb9b3",
        "line_num": 1591,
        "line_str": "literal|false argument_list|) expr_stmt|; block|} specifier|private",
        "file_path": "src/test/java/org/apache/commons/math3/fitting/PolynomialFitterTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/fitting/PolynomialFitterTest.java",
        "input_line_num": "range(1591, 1592)"
      },
      {
        "commit_hash": "e11328141036b850e77073ac91e3935f375a061e",
        "line_num": 72,
        "line_str": "name|MatrixUtils import|; end_import  begin_import",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(68, 73)"
      },
      {
        "commit_hash": "835f2293857c4c19129d7364c9640850596fb9b3",
        "line_num": 757,
        "line_str": "parameter_list|) block|{ specifier|final name|EigenDecomposition name|dec",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(755, 758)"
      },
      {
        "commit_hash": "835f2293857c4c19129d7364c9640850596fb9b3",
        "line_num": 134,
        "line_str": "name|dim argument_list|) expr_stmt|; for|for control|(",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 167)"
      },
      {
        "commit_hash": "e11328141036b850e77073ac91e3935f375a061e",
        "line_num": 68,
        "line_str": "name|math3 operator|. name|linear operator|. name|MatrixUtils",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(68, 73)"
      },
      {
        "commit_hash": "835f2293857c4c19129d7364c9640850596fb9b3",
        "line_num": 163,
        "line_str": "index|] argument_list|) expr_stmt|; block|} block|}",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 167)"
      },
      {
        "commit_hash": "835f2293857c4c19129d7364c9640850596fb9b3",
        "line_num": 130,
        "line_str": "name|createRealMatrix argument_list|( name|dim argument_list|, name|dim",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 167)"
      },
      {
        "commit_hash": "835f2293857c4c19129d7364c9640850596fb9b3",
        "line_num": 159,
        "line_str": "argument_list|, name|weight index|[ name|i index|]",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 167)"
      },
      {
        "commit_hash": "e11328141036b850e77073ac91e3935f375a061e",
        "line_num": 126,
        "line_str": "name|weightMatrix operator|= name|MatrixUtils operator|. name|createRealMatrix",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(126, 128)"
      },
      {
        "commit_hash": "835f2293857c4c19129d7364c9640850596fb9b3",
        "line_num": 155,
        "line_str": "argument_list|( name|i argument_list|, name|i argument_list|,",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 167)"
      },
      {
        "commit_hash": "835f2293857c4c19129d7364c9640850596fb9b3",
        "line_num": 774,
        "line_str": "return|; block|} block|} end_class",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(773, 775)"
      },
      {
        "commit_hash": "835f2293857c4c19129d7364c9640850596fb9b3",
        "line_num": 151,
        "line_str": "block|{ name|weightMatrix operator|. name|setEntry argument_list|(",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 167)"
      },
      {
        "commit_hash": "835f2293857c4c19129d7364c9640850596fb9b3",
        "line_num": 147,
        "line_str": "condition|; name|i operator|++ control|) block|{",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 167)"
      },
      {
        "commit_hash": "835f2293857c4c19129d7364c9640850596fb9b3",
        "line_num": 143,
        "line_str": "init|; name|i operator|< name|dim condition|;",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 167)"
      },
      {
        "commit_hash": "835f2293857c4c19129d7364c9640850596fb9b3",
        "line_num": 139,
        "line_str": "name|int name|i init|= literal|0 init|;",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 167)"
      },
      {
        "commit_hash": "835f2293857c4c19129d7364c9640850596fb9b3",
        "line_num": 135,
        "line_str": "argument_list|) expr_stmt|; for|for control|( name|int",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 167)"
      },
      {
        "commit_hash": "e11328141036b850e77073ac91e3935f375a061e",
        "line_num": 69,
        "line_str": "operator|. name|linear operator|. name|MatrixUtils import|;",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(68, 73)"
      },
      {
        "commit_hash": "835f2293857c4c19129d7364c9640850596fb9b3",
        "line_num": 164,
        "line_str": "argument_list|) expr_stmt|; block|} block|} comment",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 167)"
      },
      {
        "commit_hash": "835f2293857c4c19129d7364c9640850596fb9b3",
        "line_num": 131,
        "line_str": "argument_list|( name|dim argument_list|, name|dim argument_list|)",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 167)"
      },
      {
        "commit_hash": "835f2293857c4c19129d7364c9640850596fb9b3",
        "line_num": 160,
        "line_str": "name|weight index|[ name|i index|] argument_list|)",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 167)"
      },
      {
        "commit_hash": "e11328141036b850e77073ac91e3935f375a061e",
        "line_num": 127,
        "line_str": "operator|= name|MatrixUtils operator|. name|createRealMatrix argument_list|(",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(126, 128)"
      }
    ]
  },
  {
    "id": 10091,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["e85efd7597bf4d1fc6ca522c2706ce172e8fc633"],
    "fix_commit_hash": "cb9aa31a72d83cd6a23ca1f0c61b7102fcc630db",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "3b6c3f54f98caefe53a0093a30575dbd6e103389",
        "line_num": 7736,
        "line_str": "operator||| name|y operator|<= operator|- name|TWO_POWER_52",
        "file_path": "src/main/java/org/apache/commons/math/util/FastMath.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "input_line_num": "range(6484, 6494)"
      },
      {
        "commit_hash": "3b6c3f54f98caefe53a0093a30575dbd6e103389",
        "line_num": 7735,
        "line_str": "name|TWO_POWER_52 operator||| name|y operator|<= operator|-",
        "file_path": "src/main/java/org/apache/commons/math/util/FastMath.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "input_line_num": "range(6484, 6494)"
      },
      {
        "commit_hash": "3b6c3f54f98caefe53a0093a30575dbd6e103389",
        "line_num": 7734,
        "line_str": "operator|>= name|TWO_POWER_52 operator||| name|y operator|<=",
        "file_path": "src/main/java/org/apache/commons/math/util/FastMath.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "input_line_num": "range(6484, 6494)"
      },
      {
        "commit_hash": "3b6c3f54f98caefe53a0093a30575dbd6e103389",
        "line_num": 7733,
        "line_str": "name|y operator|>= name|TWO_POWER_52 operator||| name|y",
        "file_path": "src/main/java/org/apache/commons/math/util/FastMath.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "input_line_num": "range(6484, 6494)"
      },
      {
        "commit_hash": "3b6c3f54f98caefe53a0093a30575dbd6e103389",
        "line_num": 7732,
        "line_str": "condition|( name|y operator|>= name|TWO_POWER_52 operator|||",
        "file_path": "src/main/java/org/apache/commons/math/util/FastMath.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "input_line_num": "range(6484, 6494)"
      },
      {
        "commit_hash": "3b6c3f54f98caefe53a0093a30575dbd6e103389",
        "line_num": 7731,
        "line_str": "if|if condition|( name|y operator|>= name|TWO_POWER_52",
        "file_path": "src/main/java/org/apache/commons/math/util/FastMath.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "input_line_num": "range(6484, 6494)"
      },
      {
        "commit_hash": "3b6c3f54f98caefe53a0093a30575dbd6e103389",
        "line_num": 7740,
        "line_str": "name|TWO_POWER_52 condition|) block|{ return|return name|pow",
        "file_path": "src/main/java/org/apache/commons/math/util/FastMath.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "input_line_num": "range(6484, 6494)"
      },
      {
        "commit_hash": "3b6c3f54f98caefe53a0093a30575dbd6e103389",
        "line_num": 7739,
        "line_str": "operator|- name|TWO_POWER_52 condition|) block|{ return|return",
        "file_path": "src/main/java/org/apache/commons/math/util/FastMath.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "input_line_num": "range(6484, 6494)"
      },
      {
        "commit_hash": "3b6c3f54f98caefe53a0093a30575dbd6e103389",
        "line_num": 7738,
        "line_str": "operator|<= operator|- name|TWO_POWER_52 condition|) block|{",
        "file_path": "src/main/java/org/apache/commons/math/util/FastMath.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "input_line_num": "range(6484, 6494)"
      },
      {
        "commit_hash": "3b6c3f54f98caefe53a0093a30575dbd6e103389",
        "line_num": 7737,
        "line_str": "name|y operator|<= operator|- name|TWO_POWER_52 condition|)",
        "file_path": "src/main/java/org/apache/commons/math/util/FastMath.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "input_line_num": "range(6484, 6494)"
      }
    ]
  },
  {
    "id": 10092,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["8c3b132c1241e650d395e36d7051476b3f7ceb60"],
    "fix_commit_hash": "def7f2fc819be0d7d650cc0ff2dfc375d56ef2a7",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "8c3b132c1241e650d395e36d7051476b3f7ceb60",
        "line_num": 8123,
        "line_str": "name|DfpField operator|. name|FLAG_INVALID argument_list|, literal|\"Multiply #37\"",
        "file_path": "src/test/java/org/apache/commons/math/dfp/DfpTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/dfp/DfpTest.java",
        "input_line_num": "range(8148, 8158)"
      },
      {
        "commit_hash": "8c3b132c1241e650d395e36d7051476b3f7ceb60",
        "line_num": 8152,
        "line_str": "literal|\"Multiply #38\" argument_list|) expr_stmt|; block|} annotation|@",
        "file_path": "src/test/java/org/apache/commons/math/dfp/DfpTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/dfp/DfpTest.java",
        "input_line_num": "range(8173, 8185)"
      },
      {
        "commit_hash": "8c3b132c1241e650d395e36d7051476b3f7ceb60",
        "line_num": 8119,
        "line_str": "argument_list|, comment name|nan argument_list|, name|DfpField",
        "file_path": "src/test/java/org/apache/commons/math/dfp/DfpTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/dfp/DfpTest.java",
        "input_line_num": "range(8148, 8158)"
      },
      {
        "commit_hash": "8c3b132c1241e650d395e36d7051476b3f7ceb60",
        "line_num": 8148,
        "line_str": "name|DfpField operator|. name|FLAG_INVALID argument_list|, literal|\"Multiply #38\"",
        "file_path": "src/test/java/org/apache/commons/math/dfp/DfpTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/dfp/DfpTest.java",
        "input_line_num": "range(8173, 8185)"
      },
      {
        "commit_hash": "8c3b132c1241e650d395e36d7051476b3f7ceb60",
        "line_num": 8144,
        "line_str": "argument_list|, comment name|nan argument_list|, name|DfpField",
        "file_path": "src/test/java/org/apache/commons/math/dfp/DfpTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/dfp/DfpTest.java",
        "input_line_num": "range(8173, 8185)"
      },
      {
        "commit_hash": "8c3b132c1241e650d395e36d7051476b3f7ceb60",
        "line_num": 8124,
        "line_str": "operator|. name|FLAG_INVALID argument_list|, literal|\"Multiply #37\" argument_list|)",
        "file_path": "src/test/java/org/apache/commons/math/dfp/DfpTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/dfp/DfpTest.java",
        "input_line_num": "range(8148, 8158)"
      },
      {
        "commit_hash": "8c3b132c1241e650d395e36d7051476b3f7ceb60",
        "line_num": 8120,
        "line_str": "comment name|nan argument_list|, name|DfpField operator|.",
        "file_path": "src/test/java/org/apache/commons/math/dfp/DfpTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/dfp/DfpTest.java",
        "input_line_num": "range(8148, 8158)"
      },
      {
        "commit_hash": "8c3b132c1241e650d395e36d7051476b3f7ceb60",
        "line_num": 8149,
        "line_str": "operator|. name|FLAG_INVALID argument_list|, literal|\"Multiply #38\" argument_list|)",
        "file_path": "src/test/java/org/apache/commons/math/dfp/DfpTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/dfp/DfpTest.java",
        "input_line_num": "range(8173, 8185)"
      },
      {
        "commit_hash": "8c3b132c1241e650d395e36d7051476b3f7ceb60",
        "line_num": 8116,
        "line_str": "argument_list|( literal|10000 argument_list|) argument_list|, comment",
        "file_path": "src/test/java/org/apache/commons/math/dfp/DfpTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/dfp/DfpTest.java",
        "input_line_num": "range(8148, 8158)"
      },
      {
        "commit_hash": "8c3b132c1241e650d395e36d7051476b3f7ceb60",
        "line_num": 8145,
        "line_str": "comment name|nan argument_list|, name|DfpField operator|.",
        "file_path": "src/test/java/org/apache/commons/math/dfp/DfpTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/dfp/DfpTest.java",
        "input_line_num": "range(8173, 8185)"
      },
      {
        "commit_hash": "8c3b132c1241e650d395e36d7051476b3f7ceb60",
        "line_num": 8141,
        "line_str": "operator|- literal|1 argument_list|) argument_list|, comment",
        "file_path": "src/test/java/org/apache/commons/math/dfp/DfpTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/dfp/DfpTest.java",
        "input_line_num": "range(8173, 8185)"
      },
      {
        "commit_hash": "8c3b132c1241e650d395e36d7051476b3f7ceb60",
        "line_num": 8125,
        "line_str": "name|FLAG_INVALID argument_list|, literal|\"Multiply #37\" argument_list|) expr_stmt|;",
        "file_path": "src/test/java/org/apache/commons/math/dfp/DfpTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/dfp/DfpTest.java",
        "input_line_num": "range(8148, 8158)"
      },
      {
        "commit_hash": "8c3b132c1241e650d395e36d7051476b3f7ceb60",
        "line_num": 8121,
        "line_str": "name|nan argument_list|, name|DfpField operator|. name|FLAG_INVALID",
        "file_path": "src/test/java/org/apache/commons/math/dfp/DfpTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/dfp/DfpTest.java",
        "input_line_num": "range(8148, 8158)"
      },
      {
        "commit_hash": "8c3b132c1241e650d395e36d7051476b3f7ceb60",
        "line_num": 8150,
        "line_str": "name|FLAG_INVALID argument_list|, literal|\"Multiply #38\" argument_list|) expr_stmt|;",
        "file_path": "src/test/java/org/apache/commons/math/dfp/DfpTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/dfp/DfpTest.java",
        "input_line_num": "range(8173, 8185)"
      },
      {
        "commit_hash": "8c3b132c1241e650d395e36d7051476b3f7ceb60",
        "line_num": 8117,
        "line_str": "literal|10000 argument_list|) argument_list|, comment name|nan",
        "file_path": "src/test/java/org/apache/commons/math/dfp/DfpTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/dfp/DfpTest.java",
        "input_line_num": "range(8148, 8158)"
      },
      {
        "commit_hash": "8c3b132c1241e650d395e36d7051476b3f7ceb60",
        "line_num": 8146,
        "line_str": "name|nan argument_list|, name|DfpField operator|. name|FLAG_INVALID",
        "file_path": "src/test/java/org/apache/commons/math/dfp/DfpTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/dfp/DfpTest.java",
        "input_line_num": "range(8173, 8185)"
      },
      {
        "commit_hash": "8c3b132c1241e650d395e36d7051476b3f7ceb60",
        "line_num": 8142,
        "line_str": "literal|1 argument_list|) argument_list|, comment name|nan",
        "file_path": "src/test/java/org/apache/commons/math/dfp/DfpTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/dfp/DfpTest.java",
        "input_line_num": "range(8173, 8185)"
      },
      {
        "commit_hash": "8c3b132c1241e650d395e36d7051476b3f7ceb60",
        "line_num": 8122,
        "line_str": "argument_list|, name|DfpField operator|. name|FLAG_INVALID argument_list|,",
        "file_path": "src/test/java/org/apache/commons/math/dfp/DfpTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/dfp/DfpTest.java",
        "input_line_num": "range(8148, 8158)"
      },
      {
        "commit_hash": "8c3b132c1241e650d395e36d7051476b3f7ceb60",
        "line_num": 8151,
        "line_str": "argument_list|, literal|\"Multiply #38\" argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/java/org/apache/commons/math/dfp/DfpTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/dfp/DfpTest.java",
        "input_line_num": "range(8173, 8185)"
      },
      {
        "commit_hash": "8c3b132c1241e650d395e36d7051476b3f7ceb60",
        "line_num": 8118,
        "line_str": "argument_list|) argument_list|, comment name|nan argument_list|,",
        "file_path": "src/test/java/org/apache/commons/math/dfp/DfpTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/dfp/DfpTest.java",
        "input_line_num": "range(8148, 8158)"
      },
      {
        "commit_hash": "8c3b132c1241e650d395e36d7051476b3f7ceb60",
        "line_num": 8147,
        "line_str": "argument_list|, name|DfpField operator|. name|FLAG_INVALID argument_list|,",
        "file_path": "src/test/java/org/apache/commons/math/dfp/DfpTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/dfp/DfpTest.java",
        "input_line_num": "range(8173, 8185)"
      },
      {
        "commit_hash": "8c3b132c1241e650d395e36d7051476b3f7ceb60",
        "line_num": 8143,
        "line_str": "argument_list|) argument_list|, comment name|nan argument_list|,",
        "file_path": "src/test/java/org/apache/commons/math/dfp/DfpTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/dfp/DfpTest.java",
        "input_line_num": "range(8173, 8185)"
      }
    ]
  },
  {
    "id": 10093,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["55656d67ff32a9bc70aad530a7f4bcdbc78c62d9"],
    "fix_commit_hash": "2bf8f16715d8e6252fc0bd8a73c538430615c186",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "fd65676427de70319bb31d51c45f84da819843e0",
        "line_num": 991,
        "line_str": "name|getPopulationSize argument_list|() return|; block|} comment",
        "file_path": "src/main/java/org/apache/commons/math/distribution/HypergeometricDistribution.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java",
        "input_line_num": "range(869, 872)"
      },
      {
        "commit_hash": "fd65676427de70319bb31d51c45f84da819843e0",
        "line_num": 983,
        "line_str": "operator|* name|getNumberOfSuccesses argument_list|() operator|) operator|/",
        "file_path": "src/main/java/org/apache/commons/math/distribution/HypergeometricDistribution.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java",
        "input_line_num": "range(854, 867)"
      },
      {
        "commit_hash": "fd65676427de70319bb31d51c45f84da819843e0",
        "line_num": 979,
        "line_str": "operator|) operator|( name|getSampleSize argument_list|() operator|*",
        "file_path": "src/main/java/org/apache/commons/math/distribution/HypergeometricDistribution.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java",
        "input_line_num": "range(854, 867)"
      },
      {
        "commit_hash": "fd65676427de70319bb31d51c45f84da819843e0",
        "line_num": 975,
        "line_str": "block|{ return|return operator|( name|double operator|)",
        "file_path": "src/main/java/org/apache/commons/math/distribution/HypergeometricDistribution.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java",
        "input_line_num": "range(854, 867)"
      },
      {
        "commit_hash": "98ace9f869b579704274e4a27a0e8524b7ca7c18",
        "line_num": 926,
        "line_str": "name|getNumericalMean parameter_list|() block|{ return|return operator|(",
        "file_path": "src/main/java/org/apache/commons/math/distribution/HypergeometricDistribution.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java",
        "input_line_num": "range(853, 854)"
      },
      {
        "commit_hash": "fd65676427de70319bb31d51c45f84da819843e0",
        "line_num": 984,
        "line_str": "name|getNumberOfSuccesses argument_list|() operator|) operator|/ operator|(",
        "file_path": "src/main/java/org/apache/commons/math/distribution/HypergeometricDistribution.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java",
        "input_line_num": "range(854, 867)"
      },
      {
        "commit_hash": "fd65676427de70319bb31d51c45f84da819843e0",
        "line_num": 980,
        "line_str": "operator|( name|getSampleSize argument_list|() operator|* name|getNumberOfSuccesses",
        "file_path": "src/main/java/org/apache/commons/math/distribution/HypergeometricDistribution.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java",
        "input_line_num": "range(854, 867)"
      },
      {
        "commit_hash": "5713b650a052b98a9451bbb494dea1721a1ad14f",
        "line_num": 1936,
        "line_str": "literal|0 argument_list|) expr_stmt|; block|} block|}",
        "file_path": "src/test/java/org/apache/commons/math3/distribution/HypergeometricDistributionTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/distribution/HypergeometricDistributionTest.java",
        "input_line_num": "range(1930, 1931)"
      },
      {
        "commit_hash": "fd65676427de70319bb31d51c45f84da819843e0",
        "line_num": 976,
        "line_str": "return|return operator|( name|double operator|) operator|(",
        "file_path": "src/main/java/org/apache/commons/math/distribution/HypergeometricDistribution.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java",
        "input_line_num": "range(854, 867)"
      },
      {
        "commit_hash": "fd65676427de70319bb31d51c45f84da819843e0",
        "line_num": 989,
        "line_str": "name|double operator|) name|getPopulationSize argument_list|() return|;",
        "file_path": "src/main/java/org/apache/commons/math/distribution/HypergeometricDistribution.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java",
        "input_line_num": "range(869, 872)"
      },
      {
        "commit_hash": "fd65676427de70319bb31d51c45f84da819843e0",
        "line_num": 985,
        "line_str": "argument_list|() operator|) operator|/ operator|( name|double",
        "file_path": "src/main/java/org/apache/commons/math/distribution/HypergeometricDistribution.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java",
        "input_line_num": "range(854, 867)"
      },
      {
        "commit_hash": "fd65676427de70319bb31d51c45f84da819843e0",
        "line_num": 981,
        "line_str": "name|getSampleSize argument_list|() operator|* name|getNumberOfSuccesses argument_list|()",
        "file_path": "src/main/java/org/apache/commons/math/distribution/HypergeometricDistribution.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java",
        "input_line_num": "range(854, 867)"
      },
      {
        "commit_hash": "dbd75432ab860dfb4fcae1ffe101d845860c763b",
        "line_num": 644,
        "line_str": "expr_stmt|; block|} block|} end_class",
        "file_path": "src/test/org/apache/commons/math/distribution/HypergeometricDistributionTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/distribution/HypergeometricDistributionTest.java",
        "input_line_num": "range(1932, 1933)"
      },
      {
        "commit_hash": "fd65676427de70319bb31d51c45f84da819843e0",
        "line_num": 977,
        "line_str": "operator|( name|double operator|) operator|( name|getSampleSize",
        "file_path": "src/main/java/org/apache/commons/math/distribution/HypergeometricDistribution.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java",
        "input_line_num": "range(854, 867)"
      },
      {
        "commit_hash": "fd65676427de70319bb31d51c45f84da819843e0",
        "line_num": 990,
        "line_str": "operator|) name|getPopulationSize argument_list|() return|; block|}",
        "file_path": "src/main/java/org/apache/commons/math/distribution/HypergeometricDistribution.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java",
        "input_line_num": "range(869, 872)"
      },
      {
        "commit_hash": "fd65676427de70319bb31d51c45f84da819843e0",
        "line_num": 986,
        "line_str": "operator|) operator|/ operator|( name|double operator|)",
        "file_path": "src/main/java/org/apache/commons/math/distribution/HypergeometricDistribution.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java",
        "input_line_num": "range(854, 867)"
      },
      {
        "commit_hash": "b411cc57e5db8d5c34e3f3f97d0763a8fc95b4d6",
        "line_num": 715,
        "line_str": "argument_list|) expr_stmt|; block|} block|} end_class",
        "file_path": "src/test/org/apache/commons/math/distribution/HypergeometricDistributionTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/distribution/HypergeometricDistributionTest.java",
        "input_line_num": "range(1931, 1932)"
      },
      {
        "commit_hash": "fd65676427de70319bb31d51c45f84da819843e0",
        "line_num": 982,
        "line_str": "argument_list|() operator|* name|getNumberOfSuccesses argument_list|() operator|)",
        "file_path": "src/main/java/org/apache/commons/math/distribution/HypergeometricDistribution.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java",
        "input_line_num": "range(854, 867)"
      },
      {
        "commit_hash": "fd65676427de70319bb31d51c45f84da819843e0",
        "line_num": 978,
        "line_str": "name|double operator|) operator|( name|getSampleSize argument_list|()",
        "file_path": "src/main/java/org/apache/commons/math/distribution/HypergeometricDistribution.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java",
        "input_line_num": "range(854, 867)"
      },
      {
        "commit_hash": "98ace9f869b579704274e4a27a0e8524b7ca7c18",
        "line_num": 945,
        "line_str": "argument_list|() return|; block|} comment specifier|public",
        "file_path": "src/main/java/org/apache/commons/math/distribution/HypergeometricDistribution.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java",
        "input_line_num": "range(872, 873)"
      },
      {
        "commit_hash": "fd65676427de70319bb31d51c45f84da819843e0",
        "line_num": 974,
        "line_str": "parameter_list|() block|{ return|return operator|( name|double",
        "file_path": "src/main/java/org/apache/commons/math/distribution/HypergeometricDistribution.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java",
        "input_line_num": "range(854, 867)"
      }
    ]
  },
  {
    "id": 10094,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["54fdf102db3425df6309d961a043b7a8d941fe5e"],
    "fix_commit_hash": "be062fc431acb75e7ec7d651c08542b91a82696f",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "6786e6e5ec1ed2c780328c38c1e8b68d639f1370",
        "line_num": 1103,
        "line_str": "operator|. name|getValue argument_list|() operator|< name|b",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(1102, 1107)"
      },
      {
        "commit_hash": "6786e6e5ec1ed2c780328c38c1e8b68d639f1370",
        "line_num": 1124,
        "line_str": "operator|> name|b operator|. name|getValue argument_list|()",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(1120, 1125)"
      },
      {
        "commit_hash": "6786e6e5ec1ed2c780328c38c1e8b68d639f1370",
        "line_num": 1120,
        "line_str": "name|a operator|. name|getValue argument_list|() operator|>",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(1120, 1125)"
      },
      {
        "commit_hash": "6786e6e5ec1ed2c780328c38c1e8b68d639f1370",
        "line_num": 893,
        "line_str": "name|isMinim argument_list|) return|; block|} block|}",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(884, 895)"
      },
      {
        "commit_hash": "6786e6e5ec1ed2c780328c38c1e8b68d639f1370",
        "line_num": 889,
        "line_str": "name|current argument_list|, name|previous argument_list|, name|isMinim",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(884, 895)"
      },
      {
        "commit_hash": "6786e6e5ec1ed2c780328c38c1e8b68d639f1370",
        "line_num": 885,
        "line_str": "block|{ return|return name|best argument_list|( name|current",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(884, 895)"
      },
      {
        "commit_hash": "6786e6e5ec1ed2c780328c38c1e8b68d639f1370",
        "line_num": 1042,
        "line_str": "comment return|return name|best argument_list|( name|current",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(1042, 1044)"
      },
      {
        "commit_hash": "6786e6e5ec1ed2c780328c38c1e8b68d639f1370",
        "line_num": 1104,
        "line_str": "name|getValue argument_list|() operator|< name|b operator|.",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(1102, 1107)"
      },
      {
        "commit_hash": "6786e6e5ec1ed2c780328c38c1e8b68d639f1370",
        "line_num": 1121,
        "line_str": "operator|. name|getValue argument_list|() operator|> name|b",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(1120, 1125)"
      },
      {
        "commit_hash": "6786e6e5ec1ed2c780328c38c1e8b68d639f1370",
        "line_num": 894,
        "line_str": "argument_list|) return|; block|} block|} comment",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(884, 895)"
      },
      {
        "commit_hash": "54fdf102db3425df6309d961a043b7a8d941fe5e",
        "line_num": 861,
        "line_str": "operator|- name|fu argument_list|) expr_stmt|; if|if",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(861, 863)"
      },
      {
        "commit_hash": "6786e6e5ec1ed2c780328c38c1e8b68d639f1370",
        "line_num": 890,
        "line_str": "argument_list|, name|previous argument_list|, name|isMinim argument_list|)",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(884, 895)"
      },
      {
        "commit_hash": "6786e6e5ec1ed2c780328c38c1e8b68d639f1370",
        "line_num": 886,
        "line_str": "return|return name|best argument_list|( name|current argument_list|,",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(884, 895)"
      },
      {
        "commit_hash": "6786e6e5ec1ed2c780328c38c1e8b68d639f1370",
        "line_num": 1043,
        "line_str": "return|return name|best argument_list|( name|current argument_list|,",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(1042, 1044)"
      },
      {
        "commit_hash": "6786e6e5ec1ed2c780328c38c1e8b68d639f1370",
        "line_num": 1105,
        "line_str": "argument_list|() operator|< name|b operator|. name|getValue",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(1102, 1107)"
      },
      {
        "commit_hash": "94f755299531f001db979c70310c7f220e835c03",
        "line_num": 389,
        "line_str": "operator|- name|fx argument_list|) decl_stmt|; name|int",
        "file_path": "src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(423, 425)"
      },
      {
        "commit_hash": "6786e6e5ec1ed2c780328c38c1e8b68d639f1370",
        "line_num": 1122,
        "line_str": "name|getValue argument_list|() operator|> name|b operator|.",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(1120, 1125)"
      },
      {
        "commit_hash": "54fdf102db3425df6309d961a043b7a8d941fe5e",
        "line_num": 862,
        "line_str": "name|fu argument_list|) expr_stmt|; if|if condition|(",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(861, 863)"
      },
      {
        "commit_hash": "70bb0e7ba563525ea104a767f67b36ecc4f7c17a",
        "line_num": 443,
        "line_str": "argument_list|) decl_stmt|; name|int name|iter init|=",
        "file_path": "src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(425, 426)"
      },
      {
        "commit_hash": "6786e6e5ec1ed2c780328c38c1e8b68d639f1370",
        "line_num": 891,
        "line_str": "name|previous argument_list|, name|isMinim argument_list|) return|;",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(884, 895)"
      },
      {
        "commit_hash": "6786e6e5ec1ed2c780328c38c1e8b68d639f1370",
        "line_num": 1048,
        "line_str": "name|previous argument_list|, name|isMinim argument_list|) return|;",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(1048, 1049)"
      },
      {
        "commit_hash": "6786e6e5ec1ed2c780328c38c1e8b68d639f1370",
        "line_num": 887,
        "line_str": "name|best argument_list|( name|current argument_list|, name|previous",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(884, 895)"
      },
      {
        "commit_hash": "6786e6e5ec1ed2c780328c38c1e8b68d639f1370",
        "line_num": 1106,
        "line_str": "operator|< name|b operator|. name|getValue argument_list|()",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(1102, 1107)"
      },
      {
        "commit_hash": "6786e6e5ec1ed2c780328c38c1e8b68d639f1370",
        "line_num": 1102,
        "line_str": "name|a operator|. name|getValue argument_list|() operator|<",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(1102, 1107)"
      },
      {
        "commit_hash": "94f755299531f001db979c70310c7f220e835c03",
        "line_num": 390,
        "line_str": "name|fx argument_list|) decl_stmt|; name|int name|iter",
        "file_path": "src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(423, 425)"
      },
      {
        "commit_hash": "6786e6e5ec1ed2c780328c38c1e8b68d639f1370",
        "line_num": 1123,
        "line_str": "argument_list|() operator|> name|b operator|. name|getValue",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(1120, 1125)"
      },
      {
        "commit_hash": "6786e6e5ec1ed2c780328c38c1e8b68d639f1370",
        "line_num": 892,
        "line_str": "argument_list|, name|isMinim argument_list|) return|; block|}",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(884, 895)"
      },
      {
        "commit_hash": "6786e6e5ec1ed2c780328c38c1e8b68d639f1370",
        "line_num": 888,
        "line_str": "argument_list|( name|current argument_list|, name|previous argument_list|,",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(884, 895)"
      },
      {
        "commit_hash": "6786e6e5ec1ed2c780328c38c1e8b68d639f1370",
        "line_num": 884,
        "line_str": "condition|) block|{ return|return name|best argument_list|(",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(884, 895)"
      }
    ]
  },
  {
    "id": 10095,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["54fdf102db3425df6309d961a043b7a8d941fe5e"],
    "fix_commit_hash": "6786e6e5ec1ed2c780328c38c1e8b68d639f1370",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "54fdf102db3425df6309d961a043b7a8d941fe5e",
        "line_num": 887,
        "line_str": "name|current return|; block|} block|} comment",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(883, 888)"
      },
      {
        "commit_hash": "70bb0e7ba563525ea104a767f67b36ecc4f7c17a",
        "line_num": 983,
        "line_str": "literal|1e-6 argument_list|) expr_stmt|; block|} block|}",
        "file_path": "src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java",
        "input_line_num": "range(1333, 1334)"
      },
      {
        "commit_hash": "54fdf102db3425df6309d961a043b7a8d941fe5e",
        "line_num": 883,
        "line_str": "argument_list|) condition|) block|{ return|return name|current",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(883, 888)"
      },
      {
        "commit_hash": "ec3776598ef634ad719fad76b757356a816ccd9a",
        "line_num": 892,
        "line_str": "expr_stmt|; block|} block|} block|} end_class",
        "file_path": "src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(1042, 1043)"
      },
      {
        "commit_hash": "54fdf102db3425df6309d961a043b7a8d941fe5e",
        "line_num": 885,
        "line_str": "block|{ return|return name|current return|; block|}",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(883, 888)"
      },
      {
        "commit_hash": "54fdf102db3425df6309d961a043b7a8d941fe5e",
        "line_num": 884,
        "line_str": "condition|) block|{ return|return name|current return|;",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(883, 888)"
      },
      {
        "commit_hash": "87f27a5172206466facfcb19f4c9fa4fc2e57e4e",
        "line_num": 1204,
        "line_str": "name|iter expr_stmt|; block|} block|} block|}",
        "file_path": "src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(1041, 1042)"
      },
      {
        "commit_hash": "54fdf102db3425df6309d961a043b7a8d941fe5e",
        "line_num": 886,
        "line_str": "return|return name|current return|; block|} block|}",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(883, 888)"
      },
      {
        "commit_hash": "70bb0e7ba563525ea104a767f67b36ecc4f7c17a",
        "line_num": 1042,
        "line_str": "name|current return|; block|} operator|++ name|iter",
        "file_path": "src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(1033, 1038)"
      },
      {
        "commit_hash": "70bb0e7ba563525ea104a767f67b36ecc4f7c17a",
        "line_num": 1041,
        "line_str": "return|return name|current return|; block|} operator|++",
        "file_path": "src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(1033, 1038)"
      },
      {
        "commit_hash": "70bb0e7ba563525ea104a767f67b36ecc4f7c17a",
        "line_num": 1040,
        "line_str": "comment return|return name|current return|; block|}",
        "file_path": "src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(1033, 1038)"
      },
      {
        "commit_hash": "70bb0e7ba563525ea104a767f67b36ecc4f7c17a",
        "line_num": 1039,
        "line_str": "block|{ comment return|return name|current return|;",
        "file_path": "src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(1033, 1038)"
      },
      {
        "commit_hash": "70bb0e7ba563525ea104a767f67b36ecc4f7c17a",
        "line_num": 1038,
        "line_str": "else|else block|{ comment return|return name|current",
        "file_path": "src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(1033, 1038)"
      }
    ]
  },
  {
    "id": 10096,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["fba2671d898c80c7fe54e95f1b2f612cf2661f5e"],
    "fix_commit_hash": "63dfc134e2b54305c86d7c89bb862d148f3b87b4",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "f90ee5fb0ba860a1858927dfde0eb7b8efca79d4",
        "line_num": 957,
        "line_str": "argument_list|) expr_stmt|; block|} block|} end_class",
        "file_path": "src/test/org/apache/commons/math/optimization/fitting/HarmonicFitterTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/optimization/fitting/HarmonicFitterTest.java",
        "input_line_num": "range(1159, 1161)"
      },
      {
        "commit_hash": "f90ee5fb0ba860a1858927dfde0eb7b8efca79d4",
        "line_num": 956,
        "line_str": "literal|1.5e-2 argument_list|) expr_stmt|; block|} block|}",
        "file_path": "src/test/org/apache/commons/math/optimization/fitting/HarmonicFitterTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/optimization/fitting/HarmonicFitterTest.java",
        "input_line_num": "range(1159, 1161)"
      },
      {
        "commit_hash": "24557375f5343fdd3ccb16e7807591f546c8f023",
        "line_num": 1190,
        "line_str": "block|, name|ZERO_DENOMINATOR_IN_FRACTION argument_list|( literal|\"zero denominator in fraction {0}/{1}\" argument_list|)",
        "file_path": "src/main/java/org/apache/commons/math/util/LocalizedFormats.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java",
        "input_line_num": "range(1657, 1661)"
      },
      {
        "commit_hash": "24557375f5343fdd3ccb16e7807591f546c8f023",
        "line_num": 1189,
        "line_str": "argument_list|) block|, name|ZERO_DENOMINATOR_IN_FRACTION argument_list|( literal|\"zero denominator in fraction {0}/{1}\"",
        "file_path": "src/main/java/org/apache/commons/math/util/LocalizedFormats.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java",
        "input_line_num": "range(1657, 1661)"
      },
      {
        "commit_hash": "24557375f5343fdd3ccb16e7807591f546c8f023",
        "line_num": 1188,
        "line_str": "literal|\"denominator must be different from 0\" argument_list|) block|, name|ZERO_DENOMINATOR_IN_FRACTION argument_list|(",
        "file_path": "src/main/java/org/apache/commons/math/util/LocalizedFormats.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java",
        "input_line_num": "range(1657, 1661)"
      },
      {
        "commit_hash": "24557375f5343fdd3ccb16e7807591f546c8f023",
        "line_num": 1187,
        "line_str": "argument_list|( literal|\"denominator must be different from 0\" argument_list|) block|, name|ZERO_DENOMINATOR_IN_FRACTION",
        "file_path": "src/main/java/org/apache/commons/math/util/LocalizedFormats.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java",
        "input_line_num": "range(1657, 1661)"
      },
      {
        "commit_hash": "fba2671d898c80c7fe54e95f1b2f612cf2661f5e",
        "line_num": 769,
        "line_str": "block|{ name|a operator|= name|FastMath operator|.",
        "file_path": "src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFitter.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java",
        "input_line_num": "range(851, 855)"
      },
      {
        "commit_hash": "fba2671d898c80c7fe54e95f1b2f612cf2661f5e",
        "line_num": 768,
        "line_str": "else|else block|{ name|a operator|= name|FastMath",
        "file_path": "src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFitter.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java",
        "input_line_num": "range(851, 855)"
      },
      {
        "commit_hash": "fba2671d898c80c7fe54e95f1b2f612cf2661f5e",
        "line_num": 767,
        "line_str": "block|} else|else block|{ name|a operator|=",
        "file_path": "src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFitter.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java",
        "input_line_num": "range(851, 855)"
      },
      {
        "commit_hash": "fba2671d898c80c7fe54e95f1b2f612cf2661f5e",
        "line_num": 766,
        "line_str": "expr_stmt|; block|} else|else block|{ name|a",
        "file_path": "src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFitter.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java",
        "input_line_num": "range(851, 855)"
      }
    ]
  },
  {
    "id": 10097,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["423efeb715df2e89bbe055d6f45de3373276955a"],
    "fix_commit_hash": "eabda8248ad4909f79c361803125fb90b079badd",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "423efeb715df2e89bbe055d6f45de3373276955a",
        "line_num": 376,
        "line_str": "name|p2 operator|> name|overflow operator|) operator|||",
        "file_path": "src/java/org/apache/commons/math/fraction/Fraction.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/fraction/Fraction.java",
        "input_line_num": "range(654, 659)"
      },
      {
        "commit_hash": "423efeb715df2e89bbe055d6f45de3373276955a",
        "line_num": 375,
        "line_str": "operator|( name|p2 operator|> name|overflow operator|)",
        "file_path": "src/java/org/apache/commons/math/fraction/Fraction.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/fraction/Fraction.java",
        "input_line_num": "range(654, 659)"
      },
      {
        "commit_hash": "423efeb715df2e89bbe055d6f45de3373276955a",
        "line_num": 374,
        "line_str": "condition|( operator|( name|p2 operator|> name|overflow",
        "file_path": "src/java/org/apache/commons/math/fraction/Fraction.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/fraction/Fraction.java",
        "input_line_num": "range(654, 659)"
      },
      {
        "commit_hash": "423efeb715df2e89bbe055d6f45de3373276955a",
        "line_num": 373,
        "line_str": "if|if condition|( operator|( name|p2 operator|>",
        "file_path": "src/java/org/apache/commons/math/fraction/Fraction.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/fraction/Fraction.java",
        "input_line_num": "range(654, 659)"
      },
      {
        "commit_hash": "423efeb715df2e89bbe055d6f45de3373276955a",
        "line_num": 372,
        "line_str": "expr_stmt|; if|if condition|( operator|( name|p2",
        "file_path": "src/java/org/apache/commons/math/fraction/Fraction.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/fraction/Fraction.java",
        "input_line_num": "range(654, 659)"
      },
      {
        "commit_hash": "423efeb715df2e89bbe055d6f45de3373276955a",
        "line_num": 234,
        "line_str": "name|a0 operator|> name|overflow condition|) block|{",
        "file_path": "src/java/org/apache/commons/math/fraction/Fraction.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/fraction/Fraction.java",
        "input_line_num": "range(512, 517)"
      },
      {
        "commit_hash": "423efeb715df2e89bbe055d6f45de3373276955a",
        "line_num": 233,
        "line_str": "condition|( name|a0 operator|> name|overflow condition|)",
        "file_path": "src/java/org/apache/commons/math/fraction/Fraction.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/fraction/Fraction.java",
        "input_line_num": "range(512, 517)"
      },
      {
        "commit_hash": "423efeb715df2e89bbe055d6f45de3373276955a",
        "line_num": 232,
        "line_str": "if|if condition|( name|a0 operator|> name|overflow",
        "file_path": "src/java/org/apache/commons/math/fraction/Fraction.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/fraction/Fraction.java",
        "input_line_num": "range(512, 517)"
      },
      {
        "commit_hash": "423efeb715df2e89bbe055d6f45de3373276955a",
        "line_num": 231,
        "line_str": "decl_stmt|; if|if condition|( name|a0 operator|>",
        "file_path": "src/java/org/apache/commons/math/fraction/Fraction.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/fraction/Fraction.java",
        "input_line_num": "range(512, 517)"
      },
      {
        "commit_hash": "423efeb715df2e89bbe055d6f45de3373276955a",
        "line_num": 230,
        "line_str": "argument_list|) decl_stmt|; if|if condition|( name|a0",
        "file_path": "src/java/org/apache/commons/math/fraction/Fraction.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/fraction/Fraction.java",
        "input_line_num": "range(512, 517)"
      },
      {
        "commit_hash": "423efeb715df2e89bbe055d6f45de3373276955a",
        "line_num": 1402,
        "line_str": "argument_list|( literal|1.0e10 argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/org/apache/commons/math/fraction/FractionTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/fraction/FractionTest.java",
        "input_line_num": "range(1453, 1455)"
      },
      {
        "commit_hash": "423efeb715df2e89bbe055d6f45de3373276955a",
        "line_num": 1403,
        "line_str": "literal|1.0e10 argument_list|) expr_stmt|; block|} specifier|private",
        "file_path": "src/test/org/apache/commons/math/fraction/FractionTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/fraction/FractionTest.java",
        "input_line_num": "range(1453, 1455)"
      },
      {
        "commit_hash": "423efeb715df2e89bbe055d6f45de3373276955a",
        "line_num": 382,
        "line_str": "name|q2 operator|> name|overflow operator|) condition|)",
        "file_path": "src/java/org/apache/commons/math/fraction/Fraction.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/fraction/Fraction.java",
        "input_line_num": "range(660, 665)"
      },
      {
        "commit_hash": "423efeb715df2e89bbe055d6f45de3373276955a",
        "line_num": 381,
        "line_str": "operator|( name|q2 operator|> name|overflow operator|)",
        "file_path": "src/java/org/apache/commons/math/fraction/Fraction.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/fraction/Fraction.java",
        "input_line_num": "range(660, 665)"
      },
      {
        "commit_hash": "423efeb715df2e89bbe055d6f45de3373276955a",
        "line_num": 380,
        "line_str": "operator||| operator|( name|q2 operator|> name|overflow",
        "file_path": "src/java/org/apache/commons/math/fraction/Fraction.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/fraction/Fraction.java",
        "input_line_num": "range(660, 665)"
      },
      {
        "commit_hash": "423efeb715df2e89bbe055d6f45de3373276955a",
        "line_num": 379,
        "line_str": "operator|) operator||| operator|( name|q2 operator|>",
        "file_path": "src/java/org/apache/commons/math/fraction/Fraction.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/fraction/Fraction.java",
        "input_line_num": "range(660, 665)"
      },
      {
        "commit_hash": "423efeb715df2e89bbe055d6f45de3373276955a",
        "line_num": 378,
        "line_str": "name|overflow operator|) operator||| operator|( name|q2",
        "file_path": "src/java/org/apache/commons/math/fraction/Fraction.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/fraction/Fraction.java",
        "input_line_num": "range(660, 665)"
      }
    ]
  },
  {
    "id": 10098,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["227b59e336ab78f9cf311c075cfe87a6f296ab20"],
    "fix_commit_hash": "3041da4abf570363134a4e34314ab69a17cb0b03",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "227b59e336ab78f9cf311c075cfe87a6f296ab20",
        "line_num": 553,
        "line_str": "control|) block|{ for|for control|( name|int",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_line_num": "range(551, 557)"
      },
      {
        "commit_hash": "227b59e336ab78f9cf311c075cfe87a6f296ab20",
        "line_num": 615,
        "line_str": "return|; block|} return|return name|minRatioPositions operator|.",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_line_num": "range(613, 616)"
      },
      {
        "commit_hash": "48954dec80f23b48ba6943321c512eba2e6ba287",
        "line_num": 418,
        "line_str": "block|{ comment comment for|for control|(",
        "file_path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_line_num": "range(444, 448)"
      },
      {
        "commit_hash": "227b59e336ab78f9cf311c075cfe87a6f296ab20",
        "line_num": 533,
        "line_str": "comment name|Integer name|minRow init|= literal|null",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_line_num": "range(530, 534)"
      },
      {
        "commit_hash": "227b59e336ab78f9cf311c075cfe87a6f296ab20",
        "line_num": 562,
        "line_str": "name|getNumObjectiveFunctions argument_list|() init|; name|i operator|<",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_line_num": "range(560, 564)"
      },
      {
        "commit_hash": "227b59e336ab78f9cf311c075cfe87a6f296ab20",
        "line_num": 525,
        "line_str": "return|; block|} block|} block|} comment",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_line_num": "range(525, 526)"
      },
      {
        "commit_hash": "227b59e336ab78f9cf311c075cfe87a6f296ab20",
        "line_num": 554,
        "line_str": "block|{ for|for control|( name|int name|i",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_line_num": "range(551, 557)"
      },
      {
        "commit_hash": "48954dec80f23b48ba6943321c512eba2e6ba287",
        "line_num": 419,
        "line_str": "comment comment for|for control|( name|Integer",
        "file_path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_line_num": "range(444, 448)"
      },
      {
        "commit_hash": "227b59e336ab78f9cf311c075cfe87a6f296ab20",
        "line_num": 563,
        "line_str": "argument_list|() init|; name|i operator|< name|tableau",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_line_num": "range(560, 564)"
      },
      {
        "commit_hash": "227b59e336ab78f9cf311c075cfe87a6f296ab20",
        "line_num": 530,
        "line_str": "comment comment comment comment name|Integer",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_line_num": "range(530, 534)"
      },
      {
        "commit_hash": "227b59e336ab78f9cf311c075cfe87a6f296ab20",
        "line_num": 555,
        "line_str": "for|for control|( name|int name|i init|=",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_line_num": "range(551, 557)"
      },
      {
        "commit_hash": "227b59e336ab78f9cf311c075cfe87a6f296ab20",
        "line_num": 551,
        "line_str": "range|: name|minRatioPositions control|) block|{ for|for",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_line_num": "range(551, 557)"
      },
      {
        "commit_hash": "48954dec80f23b48ba6943321c512eba2e6ba287",
        "line_num": 420,
        "line_str": "comment for|for control|( name|Integer name|row",
        "file_path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_line_num": "range(444, 448)"
      },
      {
        "commit_hash": "227b59e336ab78f9cf311c075cfe87a6f296ab20",
        "line_num": 613,
        "line_str": "return|return name|minRow return|; block|} return|return",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_line_num": "range(613, 616)"
      },
      {
        "commit_hash": "227b59e336ab78f9cf311c075cfe87a6f296ab20",
        "line_num": 531,
        "line_str": "comment comment comment name|Integer name|minRow",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_line_num": "range(530, 534)"
      },
      {
        "commit_hash": "227b59e336ab78f9cf311c075cfe87a6f296ab20",
        "line_num": 560,
        "line_str": "name|tableau operator|. name|getNumObjectiveFunctions argument_list|() init|;",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_line_num": "range(560, 564)"
      },
      {
        "commit_hash": "227b59e336ab78f9cf311c075cfe87a6f296ab20",
        "line_num": 556,
        "line_str": "control|( name|int name|i init|= name|tableau",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_line_num": "range(551, 557)"
      },
      {
        "commit_hash": "227b59e336ab78f9cf311c075cfe87a6f296ab20",
        "line_num": 552,
        "line_str": "name|minRatioPositions control|) block|{ for|for control|(",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_line_num": "range(551, 557)"
      },
      {
        "commit_hash": "227b59e336ab78f9cf311c075cfe87a6f296ab20",
        "line_num": 614,
        "line_str": "name|minRow return|; block|} return|return name|minRatioPositions",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_line_num": "range(613, 616)"
      },
      {
        "commit_hash": "48954dec80f23b48ba6943321c512eba2e6ba287",
        "line_num": 417,
        "line_str": "condition|) block|{ comment comment for|for",
        "file_path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_line_num": "range(444, 448)"
      },
      {
        "commit_hash": "227b59e336ab78f9cf311c075cfe87a6f296ab20",
        "line_num": 532,
        "line_str": "comment comment name|Integer name|minRow init|=",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_line_num": "range(530, 534)"
      },
      {
        "commit_hash": "227b59e336ab78f9cf311c075cfe87a6f296ab20",
        "line_num": 561,
        "line_str": "operator|. name|getNumObjectiveFunctions argument_list|() init|; name|i",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_line_num": "range(560, 564)"
      }
    ]
  },
  {
    "id": 10099,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["7eacb6af2ba5364717dfebfc183b314cf451b613"],
    "fix_commit_hash": "9512008749aa55b7fe712d03a88b4cadd992b2bd",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "7eacb6af2ba5364717dfebfc183b314cf451b613",
        "line_num": 1967,
        "line_str": "throw|; block|} specifier|final name|double index|[]",
        "file_path": "src/main/java/org/apache/commons/math/util/MathArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/util/MathArrays.java",
        "input_line_num": "range(2913, 2916)"
      },
      {
        "commit_hash": "7eacb6af2ba5364717dfebfc183b314cf451b613",
        "line_num": 1966,
        "line_str": "argument_list|) throw|; block|} specifier|final name|double",
        "file_path": "src/main/java/org/apache/commons/math/util/MathArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/util/MathArrays.java",
        "input_line_num": "range(2913, 2916)"
      },
      {
        "commit_hash": "7eacb6af2ba5364717dfebfc183b314cf451b613",
        "line_num": 1965,
        "line_str": "name|length argument_list|) throw|; block|} specifier|final",
        "file_path": "src/main/java/org/apache/commons/math/util/MathArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/util/MathArrays.java",
        "input_line_num": "range(2913, 2916)"
      },
      {
        "commit_hash": "5aa7d2ea7814cf953b4fa21cdab412230d389f58",
        "line_num": 3030,
        "line_str": "block|} block|} annotation|@ name|Test specifier|public",
        "file_path": "src/test/java/org/apache/commons/math/util/MathArraysTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/util/MathArraysTest.java",
        "input_line_num": "range(4682, 4685)"
      },
      {
        "commit_hash": "5aa7d2ea7814cf953b4fa21cdab412230d389f58",
        "line_num": 3029,
        "line_str": "expr_stmt|; block|} block|} annotation|@ name|Test",
        "file_path": "src/test/java/org/apache/commons/math/util/MathArraysTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/util/MathArraysTest.java",
        "input_line_num": "range(4682, 4685)"
      },
      {
        "commit_hash": "5aa7d2ea7814cf953b4fa21cdab412230d389f58",
        "line_num": 3028,
        "line_str": "argument_list|) expr_stmt|; block|} block|} annotation|@",
        "file_path": "src/test/java/org/apache/commons/math/util/MathArraysTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/util/MathArraysTest.java",
        "input_line_num": "range(4682, 4685)"
      }
    ]
  },
  {
    "id": 10100,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["c30d1b4a658d7745d6f7cc4da448ad01c9a1f4ab"],
    "fix_commit_hash": "23530a224310c55b9ac97414e923acc88469375d",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "c30d1b4a658d7745d6f7cc4da448ad01c9a1f4ab",
        "line_num": 90,
        "line_str": "name|elitismRate expr_stmt|; block|} comment specifier|public",
        "file_path": "src/java/org/apache/commons/math/genetics/ElitisticListPopulation.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java",
        "input_line_num": "range(135, 144)"
      },
      {
        "commit_hash": "c30d1b4a658d7745d6f7cc4da448ad01c9a1f4ab",
        "line_num": 86,
        "line_str": "name|this operator|. name|elitismRate operator|= name|elitismRate",
        "file_path": "src/java/org/apache/commons/math/genetics/ElitisticListPopulation.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java",
        "input_line_num": "range(135, 144)"
      },
      {
        "commit_hash": "c30d1b4a658d7745d6f7cc4da448ad01c9a1f4ab",
        "line_num": 82,
        "line_str": "argument_list|, name|populationLimit argument_list|) expr_stmt|; name|this",
        "file_path": "src/java/org/apache/commons/math/genetics/ElitisticListPopulation.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java",
        "input_line_num": "range(135, 144)"
      },
      {
        "commit_hash": "c30d1b4a658d7745d6f7cc4da448ad01c9a1f4ab",
        "line_num": 111,
        "line_str": "name|elitismRate operator|= name|elitismRate expr_stmt|; block|}",
        "file_path": "src/java/org/apache/commons/math/genetics/ElitisticListPopulation.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java",
        "input_line_num": "range(160, 169)"
      },
      {
        "commit_hash": "0a8c6f781a897cb8bdad5e7fb52fa04ab5acf1b9",
        "line_num": 22,
        "line_str": "end_package  begin_import import|import name|org",
        "file_path": "src/test/java/org/apache/commons/math/genetics/ElitisticListPopulationTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/genetics/ElitisticListPopulationTest.java",
        "input_line_num": "range(22, 23)"
      },
      {
        "commit_hash": "c30d1b4a658d7745d6f7cc4da448ad01c9a1f4ab",
        "line_num": 107,
        "line_str": "argument_list|) expr_stmt|; name|this operator|. name|elitismRate",
        "file_path": "src/java/org/apache/commons/math/genetics/ElitisticListPopulation.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java",
        "input_line_num": "range(160, 169)"
      },
      {
        "commit_hash": "c30d1b4a658d7745d6f7cc4da448ad01c9a1f4ab",
        "line_num": 119,
        "line_str": "argument_list|() argument_list|) expr_stmt|; block|} specifier|private",
        "file_path": "src/test/org/apache/commons/math/genetics/ElitisticListPopulationTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/genetics/ElitisticListPopulationTest.java",
        "input_line_num": "range(119, 120)"
      },
      {
        "commit_hash": "c30d1b4a658d7745d6f7cc4da448ad01c9a1f4ab",
        "line_num": 87,
        "line_str": "operator|. name|elitismRate operator|= name|elitismRate expr_stmt|;",
        "file_path": "src/java/org/apache/commons/math/genetics/ElitisticListPopulation.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java",
        "input_line_num": "range(135, 144)"
      },
      {
        "commit_hash": "c30d1b4a658d7745d6f7cc4da448ad01c9a1f4ab",
        "line_num": 83,
        "line_str": "name|populationLimit argument_list|) expr_stmt|; name|this operator|.",
        "file_path": "src/java/org/apache/commons/math/genetics/ElitisticListPopulation.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java",
        "input_line_num": "range(135, 144)"
      },
      {
        "commit_hash": "c30d1b4a658d7745d6f7cc4da448ad01c9a1f4ab",
        "line_num": 112,
        "line_str": "operator|= name|elitismRate expr_stmt|; block|} comment",
        "file_path": "src/java/org/apache/commons/math/genetics/ElitisticListPopulation.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java",
        "input_line_num": "range(160, 169)"
      },
      {
        "commit_hash": "c30d1b4a658d7745d6f7cc4da448ad01c9a1f4ab",
        "line_num": 108,
        "line_str": "expr_stmt|; name|this operator|. name|elitismRate operator|=",
        "file_path": "src/java/org/apache/commons/math/genetics/ElitisticListPopulation.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java",
        "input_line_num": "range(160, 169)"
      },
      {
        "commit_hash": "c30d1b4a658d7745d6f7cc4da448ad01c9a1f4ab",
        "line_num": 88,
        "line_str": "name|elitismRate operator|= name|elitismRate expr_stmt|; block|}",
        "file_path": "src/java/org/apache/commons/math/genetics/ElitisticListPopulation.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java",
        "input_line_num": "range(135, 144)"
      },
      {
        "commit_hash": "c30d1b4a658d7745d6f7cc4da448ad01c9a1f4ab",
        "line_num": 84,
        "line_str": "argument_list|) expr_stmt|; name|this operator|. name|elitismRate",
        "file_path": "src/java/org/apache/commons/math/genetics/ElitisticListPopulation.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java",
        "input_line_num": "range(135, 144)"
      },
      {
        "commit_hash": "c30d1b4a658d7745d6f7cc4da448ad01c9a1f4ab",
        "line_num": 113,
        "line_str": "name|elitismRate expr_stmt|; block|} comment specifier|public",
        "file_path": "src/java/org/apache/commons/math/genetics/ElitisticListPopulation.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java",
        "input_line_num": "range(160, 169)"
      },
      {
        "commit_hash": "c30d1b4a658d7745d6f7cc4da448ad01c9a1f4ab",
        "line_num": 109,
        "line_str": "name|this operator|. name|elitismRate operator|= name|elitismRate",
        "file_path": "src/java/org/apache/commons/math/genetics/ElitisticListPopulation.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java",
        "input_line_num": "range(160, 169)"
      },
      {
        "commit_hash": "c30d1b4a658d7745d6f7cc4da448ad01c9a1f4ab",
        "line_num": 105,
        "line_str": "argument_list|( name|populationLimit argument_list|) expr_stmt|; name|this",
        "file_path": "src/java/org/apache/commons/math/genetics/ElitisticListPopulation.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java",
        "input_line_num": "range(160, 169)"
      },
      {
        "commit_hash": "c30d1b4a658d7745d6f7cc4da448ad01c9a1f4ab",
        "line_num": 89,
        "line_str": "operator|= name|elitismRate expr_stmt|; block|} comment",
        "file_path": "src/java/org/apache/commons/math/genetics/ElitisticListPopulation.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java",
        "input_line_num": "range(135, 144)"
      },
      {
        "commit_hash": "c30d1b4a658d7745d6f7cc4da448ad01c9a1f4ab",
        "line_num": 85,
        "line_str": "expr_stmt|; name|this operator|. name|elitismRate operator|=",
        "file_path": "src/java/org/apache/commons/math/genetics/ElitisticListPopulation.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java",
        "input_line_num": "range(135, 144)"
      },
      {
        "commit_hash": "c30d1b4a658d7745d6f7cc4da448ad01c9a1f4ab",
        "line_num": 110,
        "line_str": "operator|. name|elitismRate operator|= name|elitismRate expr_stmt|;",
        "file_path": "src/java/org/apache/commons/math/genetics/ElitisticListPopulation.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java",
        "input_line_num": "range(160, 169)"
      },
      {
        "commit_hash": "c30d1b4a658d7745d6f7cc4da448ad01c9a1f4ab",
        "line_num": 106,
        "line_str": "name|populationLimit argument_list|) expr_stmt|; name|this operator|.",
        "file_path": "src/java/org/apache/commons/math/genetics/ElitisticListPopulation.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java",
        "input_line_num": "range(160, 169)"
      }
    ]
  },
  {
    "id": 10101,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["9b4295083fe32ec3296b7d9474a94e8ff8d019c4"],
    "fix_commit_hash": "12221cdb94a0ab38b443d6432ad59d6609e40e85",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "9b4295083fe32ec3296b7d9474a94e8ff8d019c4",
        "line_num": 1520,
        "line_str": "decl_stmt|; if|if condition|( name|basicRows operator|.",
        "file_path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1907, 1909)"
      },
      {
        "commit_hash": "9b4295083fe32ec3296b7d9474a94e8ff8d019c4",
        "line_num": 1519,
        "line_str": "argument_list|) decl_stmt|; if|if condition|( name|basicRows",
        "file_path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1907, 1909)"
      },
      {
        "commit_hash": "afa0446e73e540160191f23be4dff3afdab898a4",
        "line_num": 1458,
        "line_str": "if|if condition|( name|basicRows operator|. name|contains",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1909, 1910)"
      }
    ]
  },
  {
    "id": 10102,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["e3ae158545c878aa44c15c40e50da9d919009a8b"],
    "fix_commit_hash": "e8564567c4e17a0f4cbd44b0aaf1e7ec89fb42b5",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "c51edb2739456d93fbbfe3ac97653e43360f78ad",
        "line_num": 110,
        "line_str": "expr_stmt|; name|this operator|. name|rows operator|=",
        "file_path": "src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java",
        "input_file_path": "src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java",
        "input_line_num": "range(109, 111)"
      },
      {
        "commit_hash": "35078f50b6068b0cf5b96dbeef07f4275f011bee",
        "line_num": 93,
        "line_str": "name|columnDimension argument_list|) expr_stmt|; name|this operator|.",
        "file_path": "src/java/org/apache/commons/math/linear/SparseRealMatrix.java",
        "input_file_path": "src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java",
        "input_line_num": "range(107, 109)"
      },
      {
        "commit_hash": "c51edb2739456d93fbbfe3ac97653e43360f78ad",
        "line_num": 109,
        "line_str": "argument_list|) expr_stmt|; name|this operator|. name|rows",
        "file_path": "src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java",
        "input_file_path": "src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java",
        "input_line_num": "range(109, 111)"
      },
      {
        "commit_hash": "35078f50b6068b0cf5b96dbeef07f4275f011bee",
        "line_num": 92,
        "line_str": "argument_list|, name|columnDimension argument_list|) expr_stmt|; name|this",
        "file_path": "src/java/org/apache/commons/math/linear/SparseRealMatrix.java",
        "input_file_path": "src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java",
        "input_line_num": "range(107, 109)"
      }
    ]
  },
  {
    "id": 10103,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["8c92b57429883d59c7b2ac7a29aa81381e9c2048"],
    "fix_commit_hash": "34af2db1836024b7674d42ff557d36af6eaeddb5",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 4217,
        "line_str": "name|atan argument_list|() argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4222)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 1624,
        "line_str": "argument_list|, name|Complex operator|. name|INF argument_list|)",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(1623, 1628)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 4184,
        "line_str": "control|( name|int name|i init|= operator|-",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4222)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 839,
        "line_str": "condition|) block|{ return|return name|isZero condition|?",
        "file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(838, 847)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 4201,
        "line_str": "name|out operator|. name|println argument_list|( operator|new",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4222)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 4218,
        "line_str": "argument_list|() argument_list|) expr_stmt|; block|} name|Assert",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4222)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 1625,
        "line_str": "name|Complex operator|. name|INF argument_list|) expr_stmt|;",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(1623, 1628)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 4185,
        "line_str": "name|int name|i init|= operator|- literal|10",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4222)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 840,
        "line_str": "block|{ return|return name|isZero condition|? name|NaN",
        "file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(838, 847)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 4202,
        "line_str": "operator|. name|println argument_list|( operator|new name|Complex",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4222)"
      },
      {
        "commit_hash": "0a8c6f781a897cb8bdad5e7fb52fa04ab5acf1b9",
        "line_num": 1411,
        "line_str": "operator|. name|ZERO argument_list|) decl_stmt|; name|Assert",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(1615, 1619)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 4219,
        "line_str": "argument_list|) expr_stmt|; block|} name|Assert operator|.",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4222)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 1626,
        "line_str": "operator|. name|INF argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(1623, 1628)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 4186,
        "line_str": "name|i init|= operator|- literal|10 init|;",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4222)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 841,
        "line_str": "return|return name|isZero condition|? name|NaN else|:",
        "file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(838, 847)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 4203,
        "line_str": "name|println argument_list|( operator|new name|Complex argument_list|(",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4222)"
      },
      {
        "commit_hash": "0a8c6f781a897cb8bdad5e7fb52fa04ab5acf1b9",
        "line_num": 1412,
        "line_str": "name|ZERO argument_list|) decl_stmt|; name|Assert operator|.",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(1615, 1619)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 4220,
        "line_str": "expr_stmt|; block|} name|Assert operator|. name|assertTrue",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4222)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 1627,
        "line_str": "name|INF argument_list|) expr_stmt|; block|} annotation|@",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(1623, 1628)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 4187,
        "line_str": "init|= operator|- literal|10 init|; name|i",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4222)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 842,
        "line_str": "name|isZero condition|? name|NaN else|: name|INF",
        "file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(838, 847)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 4204,
        "line_str": "argument_list|( operator|new name|Complex argument_list|( literal|0",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4222)"
      },
      {
        "commit_hash": "0a8c6f781a897cb8bdad5e7fb52fa04ab5acf1b9",
        "line_num": 1413,
        "line_str": "argument_list|) decl_stmt|; name|Assert operator|. name|assertEquals",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(1615, 1619)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 661,
        "line_str": "operator|. name|isZero condition|) block|{ return|return",
        "file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(661, 671)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 4221,
        "line_str": "block|} name|Assert operator|. name|assertTrue argument_list|(",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4222)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 4188,
        "line_str": "operator|- literal|10 init|; name|i operator|<",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4222)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 843,
        "line_str": "condition|? name|NaN else|: name|INF return|;",
        "file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(838, 847)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 4205,
        "line_str": "operator|new name|Complex argument_list|( literal|0 argument_list|,",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4222)"
      },
      {
        "commit_hash": "0a8c6f781a897cb8bdad5e7fb52fa04ab5acf1b9",
        "line_num": 1414,
        "line_str": "decl_stmt|; name|Assert operator|. name|assertEquals argument_list|(",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(1615, 1619)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 662,
        "line_str": "name|isZero condition|) block|{ return|return name|isZero",
        "file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(661, 671)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 4189,
        "line_str": "literal|10 init|; name|i operator|< literal|10",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4222)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 844,
        "line_str": "name|NaN else|: name|INF return|; block|}",
        "file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(838, 847)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 4206,
        "line_str": "name|Complex argument_list|( literal|0 argument_list|, literal|1",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4222)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 663,
        "line_str": "condition|) block|{ return|return name|isZero condition|?",
        "file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(661, 671)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 4190,
        "line_str": "init|; name|i operator|< literal|10 condition|;",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4222)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 845,
        "line_str": "else|: name|INF return|; block|} if|if",
        "file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(838, 847)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 4207,
        "line_str": "argument_list|( literal|0 argument_list|, literal|1 operator|-",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4222)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 664,
        "line_str": "block|{ return|return name|isZero condition|? name|NaN",
        "file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(661, 671)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 4191,
        "line_str": "name|i operator|< literal|10 condition|; name|i",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4222)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 846,
        "line_str": "name|INF return|; block|} if|if condition|(",
        "file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(838, 847)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 4208,
        "line_str": "literal|0 argument_list|, literal|1 operator|- literal|0.1",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4222)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 665,
        "line_str": "return|return name|isZero condition|? name|NaN else|:",
        "file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(661, 671)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 4192,
        "line_str": "operator|< literal|10 condition|; name|i operator|++",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4222)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 4209,
        "line_str": "argument_list|, literal|1 operator|- literal|0.1 operator|*",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4222)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 666,
        "line_str": "name|isZero condition|? name|NaN else|: name|INF",
        "file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(661, 671)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 4193,
        "line_str": "literal|10 condition|; name|i operator|++ control|)",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4222)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 4210,
        "line_str": "literal|1 operator|- literal|0.1 operator|* name|i",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4222)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 667,
        "line_str": "condition|? name|NaN else|: name|INF return|;",
        "file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(661, 671)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 4194,
        "line_str": "condition|; name|i operator|++ control|) block|{",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4222)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 4211,
        "line_str": "operator|- literal|0.1 operator|* name|i argument_list|)",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4222)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 668,
        "line_str": "name|NaN else|: name|INF return|; block|}",
        "file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(661, 671)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 4195,
        "line_str": "name|i operator|++ control|) block|{ name|System",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4222)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 4212,
        "line_str": "literal|0.1 operator|* name|i argument_list|) operator|.",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4222)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 4179,
        "line_str": "name|void name|testAtanI parameter_list|() block|{ for|for",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4222)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 669,
        "line_str": "else|: name|INF return|; block|} if|if",
        "file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(661, 671)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 4229,
        "line_str": "operator|. name|atan argument_list|() operator|. name|isInfinite",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4229, 4234)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 4196,
        "line_str": "operator|++ control|) block|{ name|System operator|.",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4222)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 4213,
        "line_str": "operator|* name|i argument_list|) operator|. name|atan",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4222)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 4180,
        "line_str": "name|testAtanI parameter_list|() block|{ for|for control|(",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4222)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 670,
        "line_str": "name|INF return|; block|} if|if condition|(",
        "file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(661, 671)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 4230,
        "line_str": "name|atan argument_list|() operator|. name|isInfinite argument_list|()",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4229, 4234)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 4197,
        "line_str": "control|) block|{ name|System operator|. name|out",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4222)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 4214,
        "line_str": "name|i argument_list|) operator|. name|atan argument_list|()",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4222)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 4181,
        "line_str": "parameter_list|() block|{ for|for control|( name|int",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4222)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 4231,
        "line_str": "argument_list|() operator|. name|isInfinite argument_list|() argument_list|)",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4229, 4234)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 4198,
        "line_str": "block|{ name|System operator|. name|out operator|.",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4222)"
      },
      {
        "commit_hash": "646f8fc173836c9776a99f23622100b6b0c2c06e",
        "line_num": 820,
        "line_str": "operator|== literal|0d condition|) block|{ return|return",
        "file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(837, 838)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 4215,
        "line_str": "argument_list|) operator|. name|atan argument_list|() argument_list|)",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4222)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 4182,
        "line_str": "block|{ for|for control|( name|int name|i",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4222)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 4232,
        "line_str": "operator|. name|isInfinite argument_list|() argument_list|) expr_stmt|;",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4229, 4234)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 4199,
        "line_str": "name|System operator|. name|out operator|. name|println",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4222)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 4216,
        "line_str": "operator|. name|atan argument_list|() argument_list|) expr_stmt|;",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4222)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 1623,
        "line_str": "name|z argument_list|, name|Complex operator|. name|INF",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(1623, 1628)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 4183,
        "line_str": "for|for control|( name|int name|i init|=",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4222)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 838,
        "line_str": "literal|0d condition|) block|{ return|return name|isZero",
        "file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(838, 847)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 4233,
        "line_str": "name|isInfinite argument_list|() argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4229, 4234)"
      },
      {
        "commit_hash": "8c92b57429883d59c7b2ac7a29aa81381e9c2048",
        "line_num": 4200,
        "line_str": "operator|. name|out operator|. name|println argument_list|(",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4222)"
      }
    ]
  },
  {
    "id": 10104,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["bd1358a5d77b0d42e28bafa04c3ccc66d866a977"],
    "fix_commit_hash": "957cfeb697cf36660863f0595db270f22e569b97",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "bd1358a5d77b0d42e28bafa04c3ccc66d866a977",
        "line_num": 589,
        "line_str": "comment break|break; default|default: comment throw|throw",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(586, 590)"
      },
      {
        "commit_hash": "bd1358a5d77b0d42e28bafa04c3ccc66d866a977",
        "line_num": 588,
        "line_str": "case|: comment break|break; default|default: comment",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(586, 590)"
      },
      {
        "commit_hash": "bd1358a5d77b0d42e28bafa04c3ccc66d866a977",
        "line_num": 587,
        "line_str": "name|REGULA_FALSI case|: comment break|break; default|default:",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(586, 590)"
      },
      {
        "commit_hash": "bd1358a5d77b0d42e28bafa04c3ccc66d866a977",
        "line_num": 586,
        "line_str": "case|case name|REGULA_FALSI case|: comment break|break;",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(586, 590)"
      },
      {
        "commit_hash": "bd1358a5d77b0d42e28bafa04c3ccc66d866a977",
        "line_num": 50,
        "line_str": "name|math operator|. name|exception operator|. name|TooManyEvaluationsException",
        "file_path": "src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java",
        "input_line_num": "range(50, 55)"
      },
      {
        "commit_hash": "bd1358a5d77b0d42e28bafa04c3ccc66d866a977",
        "line_num": 54,
        "line_str": "name|TooManyEvaluationsException import|; end_import  begin_import",
        "file_path": "src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java",
        "input_line_num": "range(50, 55)"
      },
      {
        "commit_hash": "bd1358a5d77b0d42e28bafa04c3ccc66d866a977",
        "line_num": 53,
        "line_str": "operator|. name|TooManyEvaluationsException import|; end_import",
        "file_path": "src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java",
        "input_line_num": "range(50, 55)"
      },
      {
        "commit_hash": "bd1358a5d77b0d42e28bafa04c3ccc66d866a977",
        "line_num": 52,
        "line_str": "name|exception operator|. name|TooManyEvaluationsException import|; end_import",
        "file_path": "src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java",
        "input_line_num": "range(50, 55)"
      },
      {
        "commit_hash": "bd1358a5d77b0d42e28bafa04c3ccc66d866a977",
        "line_num": 51,
        "line_str": "operator|. name|exception operator|. name|TooManyEvaluationsException import|;",
        "file_path": "src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java",
        "input_line_num": "range(50, 55)"
      },
      {
        "commit_hash": "bd1358a5d77b0d42e28bafa04c3ccc66d866a977",
        "line_num": 146,
        "line_str": "operator|= name|TooManyEvaluationsException operator|. name|class argument_list|)",
        "file_path": "src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java",
        "input_line_num": "range(143, 148)"
      },
      {
        "commit_hash": "bd1358a5d77b0d42e28bafa04c3ccc66d866a977",
        "line_num": 145,
        "line_str": "name|expected operator|= name|TooManyEvaluationsException operator|. name|class",
        "file_path": "src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java",
        "input_line_num": "range(143, 148)"
      },
      {
        "commit_hash": "bd1358a5d77b0d42e28bafa04c3ccc66d866a977",
        "line_num": 144,
        "line_str": "argument_list|( name|expected operator|= name|TooManyEvaluationsException operator|.",
        "file_path": "src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java",
        "input_line_num": "range(143, 148)"
      },
      {
        "commit_hash": "bd1358a5d77b0d42e28bafa04c3ccc66d866a977",
        "line_num": 143,
        "line_str": "name|Test argument_list|( name|expected operator|= name|TooManyEvaluationsException",
        "file_path": "src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java",
        "input_line_num": "range(143, 148)"
      },
      {
        "commit_hash": "bd1358a5d77b0d42e28bafa04c3ccc66d866a977",
        "line_num": 147,
        "line_str": "name|TooManyEvaluationsException operator|. name|class argument_list|) specifier|public",
        "file_path": "src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java",
        "input_line_num": "range(143, 148)"
      }
    ]
  },
  {
    "id": 10105,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["9737ed4ac1c7aeb64a21e8f2cd7e9ac51e82b86b"],
    "fix_commit_hash": "bd1358a5d77b0d42e28bafa04c3ccc66d866a977",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "9737ed4ac1c7aeb64a21e8f2cd7e9ac51e82b86b",
        "line_num": 627,
        "line_str": "name|delta operator|) expr_stmt|; name|f0 operator|=",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 638)"
      },
      {
        "commit_hash": "9737ed4ac1c7aeb64a21e8f2cd7e9ac51e82b86b",
        "line_num": 594,
        "line_str": "condition|) block|{ specifier|final name|double name|delta",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 638)"
      },
      {
        "commit_hash": "9737ed4ac1c7aeb64a21e8f2cd7e9ac51e82b86b",
        "line_num": 623,
        "line_str": "name|x0 operator|+ name|x1 operator|- name|delta",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 638)"
      },
      {
        "commit_hash": "9737ed4ac1c7aeb64a21e8f2cd7e9ac51e82b86b",
        "line_num": 590,
        "line_str": "condition|( name|x operator|== name|x1 condition|)",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 638)"
      },
      {
        "commit_hash": "9737ed4ac1c7aeb64a21e8f2cd7e9ac51e82b86b",
        "line_num": 619,
        "line_str": "operator|= literal|0.5 operator|* operator|( name|x0",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 638)"
      },
      {
        "commit_hash": "9737ed4ac1c7aeb64a21e8f2cd7e9ac51e82b86b",
        "line_num": 586,
        "line_str": "case|case name|REGULA_FALSI case|: if|if condition|(",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 638)"
      },
      {
        "commit_hash": "9737ed4ac1c7aeb64a21e8f2cd7e9ac51e82b86b",
        "line_num": 615,
        "line_str": "decl_stmt|; comment comment name|x0 operator|=",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 638)"
      },
      {
        "commit_hash": "9737ed4ac1c7aeb64a21e8f2cd7e9ac51e82b86b",
        "line_num": 125,
        "line_str": "block|} annotation|@ name|Test specifier|public name|void",
        "file_path": "src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java",
        "input_line_num": "range(124, 128)"
      },
      {
        "commit_hash": "9737ed4ac1c7aeb64a21e8f2cd7e9ac51e82b86b",
        "line_num": 611,
        "line_str": "argument_list|) argument_list|, name|atol argument_list|) decl_stmt|;",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 638)"
      },
      {
        "commit_hash": "9737ed4ac1c7aeb64a21e8f2cd7e9ac51e82b86b",
        "line_num": 607,
        "line_str": "operator|. name|abs argument_list|( name|x1 argument_list|)",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 638)"
      },
      {
        "commit_hash": "9737ed4ac1c7aeb64a21e8f2cd7e9ac51e82b86b",
        "line_num": 636,
        "line_str": "expr_stmt|; block|} break|break; default|default: comment",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 638)"
      },
      {
        "commit_hash": "9737ed4ac1c7aeb64a21e8f2cd7e9ac51e82b86b",
        "line_num": 603,
        "line_str": "argument_list|( name|rtol operator|* name|FastMath operator|.",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 638)"
      },
      {
        "commit_hash": "9737ed4ac1c7aeb64a21e8f2cd7e9ac51e82b86b",
        "line_num": 632,
        "line_str": "name|computeObjectiveValue argument_list|( name|x0 argument_list|) expr_stmt|;",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 638)"
      },
      {
        "commit_hash": "9737ed4ac1c7aeb64a21e8f2cd7e9ac51e82b86b",
        "line_num": 599,
        "line_str": "init|= name|FastMath operator|. name|max argument_list|(",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 638)"
      },
      {
        "commit_hash": "9737ed4ac1c7aeb64a21e8f2cd7e9ac51e82b86b",
        "line_num": 628,
        "line_str": "operator|) expr_stmt|; name|f0 operator|= name|computeObjectiveValue",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 638)"
      },
      {
        "commit_hash": "9737ed4ac1c7aeb64a21e8f2cd7e9ac51e82b86b",
        "line_num": 595,
        "line_str": "block|{ specifier|final name|double name|delta init|=",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 638)"
      },
      {
        "commit_hash": "9737ed4ac1c7aeb64a21e8f2cd7e9ac51e82b86b",
        "line_num": 624,
        "line_str": "operator|+ name|x1 operator|- name|delta operator|)",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 638)"
      },
      {
        "commit_hash": "9737ed4ac1c7aeb64a21e8f2cd7e9ac51e82b86b",
        "line_num": 591,
        "line_str": "name|x operator|== name|x1 condition|) block|{",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 638)"
      },
      {
        "commit_hash": "9737ed4ac1c7aeb64a21e8f2cd7e9ac51e82b86b",
        "line_num": 620,
        "line_str": "literal|0.5 operator|* operator|( name|x0 operator|+",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 638)"
      },
      {
        "commit_hash": "9737ed4ac1c7aeb64a21e8f2cd7e9ac51e82b86b",
        "line_num": 587,
        "line_str": "name|REGULA_FALSI case|: if|if condition|( name|x",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 638)"
      },
      {
        "commit_hash": "9737ed4ac1c7aeb64a21e8f2cd7e9ac51e82b86b",
        "line_num": 616,
        "line_str": "comment comment name|x0 operator|= literal|0.5",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 638)"
      },
      {
        "commit_hash": "9737ed4ac1c7aeb64a21e8f2cd7e9ac51e82b86b",
        "line_num": 126,
        "line_str": "annotation|@ name|Test specifier|public name|void name|testIssue631",
        "file_path": "src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java",
        "input_line_num": "range(124, 128)"
      },
      {
        "commit_hash": "9737ed4ac1c7aeb64a21e8f2cd7e9ac51e82b86b",
        "line_num": 612,
        "line_str": "argument_list|, name|atol argument_list|) decl_stmt|; comment",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 638)"
      },
      {
        "commit_hash": "9737ed4ac1c7aeb64a21e8f2cd7e9ac51e82b86b",
        "line_num": 608,
        "line_str": "name|abs argument_list|( name|x1 argument_list|) argument_list|,",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 638)"
      },
      {
        "commit_hash": "9737ed4ac1c7aeb64a21e8f2cd7e9ac51e82b86b",
        "line_num": 637,
        "line_str": "block|} break|break; default|default: comment throw|throw",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 638)"
      },
      {
        "commit_hash": "9737ed4ac1c7aeb64a21e8f2cd7e9ac51e82b86b",
        "line_num": 604,
        "line_str": "name|rtol operator|* name|FastMath operator|. name|abs",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 638)"
      },
      {
        "commit_hash": "9737ed4ac1c7aeb64a21e8f2cd7e9ac51e82b86b",
        "line_num": 633,
        "line_str": "argument_list|( name|x0 argument_list|) expr_stmt|; block|}",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 638)"
      },
      {
        "commit_hash": "9737ed4ac1c7aeb64a21e8f2cd7e9ac51e82b86b",
        "line_num": 600,
        "line_str": "name|FastMath operator|. name|max argument_list|( name|rtol",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 638)"
      },
      {
        "commit_hash": "9737ed4ac1c7aeb64a21e8f2cd7e9ac51e82b86b",
        "line_num": 629,
        "line_str": "expr_stmt|; name|f0 operator|= name|computeObjectiveValue argument_list|(",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 638)"
      },
      {
        "commit_hash": "9737ed4ac1c7aeb64a21e8f2cd7e9ac51e82b86b",
        "line_num": 596,
        "line_str": "specifier|final name|double name|delta init|= name|FastMath",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 638)"
      },
      {
        "commit_hash": "9737ed4ac1c7aeb64a21e8f2cd7e9ac51e82b86b",
        "line_num": 625,
        "line_str": "name|x1 operator|- name|delta operator|) expr_stmt|;",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 638)"
      },
      {
        "commit_hash": "9737ed4ac1c7aeb64a21e8f2cd7e9ac51e82b86b",
        "line_num": 592,
        "line_str": "operator|== name|x1 condition|) block|{ specifier|final",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 638)"
      },
      {
        "commit_hash": "9737ed4ac1c7aeb64a21e8f2cd7e9ac51e82b86b",
        "line_num": 621,
        "line_str": "operator|* operator|( name|x0 operator|+ name|x1",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 638)"
      },
      {
        "commit_hash": "9737ed4ac1c7aeb64a21e8f2cd7e9ac51e82b86b",
        "line_num": 588,
        "line_str": "case|: if|if condition|( name|x operator|==",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 638)"
      },
      {
        "commit_hash": "9737ed4ac1c7aeb64a21e8f2cd7e9ac51e82b86b",
        "line_num": 617,
        "line_str": "comment name|x0 operator|= literal|0.5 operator|*",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 638)"
      },
      {
        "commit_hash": "9737ed4ac1c7aeb64a21e8f2cd7e9ac51e82b86b",
        "line_num": 127,
        "line_str": "name|Test specifier|public name|void name|testIssue631 parameter_list|()",
        "file_path": "src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java",
        "input_line_num": "range(124, 128)"
      },
      {
        "commit_hash": "9737ed4ac1c7aeb64a21e8f2cd7e9ac51e82b86b",
        "line_num": 613,
        "line_str": "name|atol argument_list|) decl_stmt|; comment comment",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 638)"
      },
      {
        "commit_hash": "9737ed4ac1c7aeb64a21e8f2cd7e9ac51e82b86b",
        "line_num": 609,
        "line_str": "argument_list|( name|x1 argument_list|) argument_list|, name|atol",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 638)"
      },
      {
        "commit_hash": "9737ed4ac1c7aeb64a21e8f2cd7e9ac51e82b86b",
        "line_num": 605,
        "line_str": "operator|* name|FastMath operator|. name|abs argument_list|(",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 638)"
      },
      {
        "commit_hash": "9737ed4ac1c7aeb64a21e8f2cd7e9ac51e82b86b",
        "line_num": 634,
        "line_str": "name|x0 argument_list|) expr_stmt|; block|} break|break;",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 638)"
      },
      {
        "commit_hash": "9737ed4ac1c7aeb64a21e8f2cd7e9ac51e82b86b",
        "line_num": 601,
        "line_str": "operator|. name|max argument_list|( name|rtol operator|*",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 638)"
      },
      {
        "commit_hash": "9737ed4ac1c7aeb64a21e8f2cd7e9ac51e82b86b",
        "line_num": 630,
        "line_str": "name|f0 operator|= name|computeObjectiveValue argument_list|( name|x0",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 638)"
      },
      {
        "commit_hash": "9737ed4ac1c7aeb64a21e8f2cd7e9ac51e82b86b",
        "line_num": 597,
        "line_str": "name|double name|delta init|= name|FastMath operator|.",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 638)"
      },
      {
        "commit_hash": "9737ed4ac1c7aeb64a21e8f2cd7e9ac51e82b86b",
        "line_num": 626,
        "line_str": "operator|- name|delta operator|) expr_stmt|; name|f0",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 638)"
      },
      {
        "commit_hash": "9737ed4ac1c7aeb64a21e8f2cd7e9ac51e82b86b",
        "line_num": 593,
        "line_str": "name|x1 condition|) block|{ specifier|final name|double",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 638)"
      },
      {
        "commit_hash": "9737ed4ac1c7aeb64a21e8f2cd7e9ac51e82b86b",
        "line_num": 622,
        "line_str": "operator|( name|x0 operator|+ name|x1 operator|-",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 638)"
      },
      {
        "commit_hash": "9737ed4ac1c7aeb64a21e8f2cd7e9ac51e82b86b",
        "line_num": 589,
        "line_str": "if|if condition|( name|x operator|== name|x1",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 638)"
      },
      {
        "commit_hash": "9737ed4ac1c7aeb64a21e8f2cd7e9ac51e82b86b",
        "line_num": 618,
        "line_str": "name|x0 operator|= literal|0.5 operator|* operator|(",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 638)"
      },
      {
        "commit_hash": "9737ed4ac1c7aeb64a21e8f2cd7e9ac51e82b86b",
        "line_num": 585,
        "line_str": "break|break; case|case name|REGULA_FALSI case|: if|if",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 638)"
      },
      {
        "commit_hash": "9737ed4ac1c7aeb64a21e8f2cd7e9ac51e82b86b",
        "line_num": 614,
        "line_str": "argument_list|) decl_stmt|; comment comment name|x0",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 638)"
      },
      {
        "commit_hash": "9737ed4ac1c7aeb64a21e8f2cd7e9ac51e82b86b",
        "line_num": 124,
        "line_str": "return|; block|} annotation|@ name|Test specifier|public",
        "file_path": "src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java",
        "input_line_num": "range(124, 128)"
      },
      {
        "commit_hash": "9737ed4ac1c7aeb64a21e8f2cd7e9ac51e82b86b",
        "line_num": 610,
        "line_str": "name|x1 argument_list|) argument_list|, name|atol argument_list|)",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 638)"
      },
      {
        "commit_hash": "9737ed4ac1c7aeb64a21e8f2cd7e9ac51e82b86b",
        "line_num": 606,
        "line_str": "name|FastMath operator|. name|abs argument_list|( name|x1",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 638)"
      },
      {
        "commit_hash": "9737ed4ac1c7aeb64a21e8f2cd7e9ac51e82b86b",
        "line_num": 635,
        "line_str": "argument_list|) expr_stmt|; block|} break|break; default|default:",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 638)"
      },
      {
        "commit_hash": "9737ed4ac1c7aeb64a21e8f2cd7e9ac51e82b86b",
        "line_num": 602,
        "line_str": "name|max argument_list|( name|rtol operator|* name|FastMath",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 638)"
      },
      {
        "commit_hash": "9737ed4ac1c7aeb64a21e8f2cd7e9ac51e82b86b",
        "line_num": 631,
        "line_str": "operator|= name|computeObjectiveValue argument_list|( name|x0 argument_list|)",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 638)"
      },
      {
        "commit_hash": "9737ed4ac1c7aeb64a21e8f2cd7e9ac51e82b86b",
        "line_num": 598,
        "line_str": "name|delta init|= name|FastMath operator|. name|max",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 638)"
      }
    ]
  },
  {
    "id": 10106,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["5aa3ffaf255ca9789c5a81dafa90a61f86feb6dc"],
    "fix_commit_hash": "4e745e031674bb102ff1121337fb5c66a88476b5",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "f8387fa704786e258a4164426c53080efafea082",
        "line_num": 501,
        "line_str": "argument_list|) expr_stmt|; return|return name|createComplex argument_list|(",
        "file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(498, 502)"
      },
      {
        "commit_hash": "f8387fa704786e258a4164426c53080efafea082",
        "line_num": 500,
        "line_str": "name|rhs argument_list|) expr_stmt|; return|return name|createComplex",
        "file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(498, 502)"
      },
      {
        "commit_hash": "f8387fa704786e258a4164426c53080efafea082",
        "line_num": 499,
        "line_str": "argument_list|( name|rhs argument_list|) expr_stmt|; return|return",
        "file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(498, 502)"
      },
      {
        "commit_hash": "0a8c6f781a897cb8bdad5e7fb52fa04ab5acf1b9",
        "line_num": 763,
        "line_str": "literal|0 argument_list|) expr_stmt|; name|Assert operator|.",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(778, 780)"
      },
      {
        "commit_hash": "0a8c6f781a897cb8bdad5e7fb52fa04ab5acf1b9",
        "line_num": 762,
        "line_str": "argument_list|, literal|0 argument_list|) expr_stmt|; name|Assert",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(778, 780)"
      },
      {
        "commit_hash": "b13ce4c9047170c3a4353e86d5b4f2c059d60ad0",
        "line_num": 676,
        "line_str": "name|assertEquals argument_list|( name|w operator|. name|getReal",
        "file_path": "src/test/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(770, 771)"
      },
      {
        "commit_hash": "0a8c6f781a897cb8bdad5e7fb52fa04ab5acf1b9",
        "line_num": 753,
        "line_str": "operator|. name|assertEquals argument_list|( name|w operator|.",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(766, 770)"
      },
      {
        "commit_hash": "0a8c6f781a897cb8bdad5e7fb52fa04ab5acf1b9",
        "line_num": 752,
        "line_str": "name|Assert operator|. name|assertEquals argument_list|( name|w",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(766, 770)"
      },
      {
        "commit_hash": "0a8c6f781a897cb8bdad5e7fb52fa04ab5acf1b9",
        "line_num": 751,
        "line_str": "decl_stmt|; name|Assert operator|. name|assertEquals argument_list|(",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(766, 770)"
      },
      {
        "commit_hash": "0a8c6f781a897cb8bdad5e7fb52fa04ab5acf1b9",
        "line_num": 750,
        "line_str": "argument_list|) decl_stmt|; name|Assert operator|. name|assertEquals",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(766, 770)"
      },
      {
        "commit_hash": "b13ce4c9047170c3a4353e86d5b4f2c059d60ad0",
        "line_num": 681,
        "line_str": "argument_list|() argument_list|, literal|4.0 argument_list|, literal|0",
        "file_path": "src/test/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(772, 776)"
      },
      {
        "commit_hash": "b13ce4c9047170c3a4353e86d5b4f2c059d60ad0",
        "line_num": 680,
        "line_str": "name|getReal argument_list|() argument_list|, literal|4.0 argument_list|,",
        "file_path": "src/test/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(772, 776)"
      },
      {
        "commit_hash": "b13ce4c9047170c3a4353e86d5b4f2c059d60ad0",
        "line_num": 679,
        "line_str": "operator|. name|getReal argument_list|() argument_list|, literal|4.0",
        "file_path": "src/test/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(772, 776)"
      },
      {
        "commit_hash": "b13ce4c9047170c3a4353e86d5b4f2c059d60ad0",
        "line_num": 678,
        "line_str": "name|w operator|. name|getReal argument_list|() argument_list|,",
        "file_path": "src/test/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(772, 776)"
      },
      {
        "commit_hash": "5aa3ffaf255ca9789c5a81dafa90a61f86feb6dc",
        "line_num": 516,
        "line_str": "literal|4.0 argument_list|, literal|0 argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(776, 778)"
      },
      {
        "commit_hash": "5aa3ffaf255ca9789c5a81dafa90a61f86feb6dc",
        "line_num": 515,
        "line_str": "argument_list|, literal|4.0 argument_list|, literal|0 argument_list|)",
        "file_path": "src/test/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(776, 778)"
      },
      {
        "commit_hash": "f8387fa704786e258a4164426c53080efafea082",
        "line_num": 502,
        "line_str": "expr_stmt|; return|return name|createComplex argument_list|( name|real",
        "file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(498, 502)"
      }
    ]
  },
  {
    "id": 10107,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["8c3b132c1241e650d395e36d7051476b3f7ceb60"],
    "fix_commit_hash": "54e181900da0318efdd481861b746bcc8d058a02",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "8c3b132c1241e650d395e36d7051476b3f7ceb60",
        "line_num": 9950,
        "line_str": "name|negate init|= literal|false decl_stmt|; if|if",
        "file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_line_num": "range(9945, 9956)"
      },
      {
        "commit_hash": "8c3b132c1241e650d395e36d7051476b3f7ceb60",
        "line_num": 12695,
        "line_str": "literal|\"Sqrt #9\" argument_list|) expr_stmt|; block|} block|}",
        "file_path": "src/test/java/org/apache/commons/math/dfp/DfpTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/dfp/DfpTest.java",
        "input_line_num": "range(12683, 12684)"
      },
      {
        "commit_hash": "8c3b132c1241e650d395e36d7051476b3f7ceb60",
        "line_num": 647,
        "line_str": "literal|0 condition|) block|{ return|return; block|}",
        "file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_line_num": "range(646, 650)"
      },
      {
        "commit_hash": "8c3b132c1241e650d395e36d7051476b3f7ceb60",
        "line_num": 646,
        "line_str": "operator|== literal|0 condition|) block|{ return|return;",
        "file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_line_num": "range(646, 650)"
      },
      {
        "commit_hash": "8c3b132c1241e650d395e36d7051476b3f7ceb60",
        "line_num": 9957,
        "line_str": "argument_list|( name|getZero argument_list|() argument_list|) condition|)",
        "file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_line_num": "range(9945, 9956)"
      },
      {
        "commit_hash": "8c3b132c1241e650d395e36d7051476b3f7ceb60",
        "line_num": 649,
        "line_str": "block|{ return|return; block|} name|exponent operator|++",
        "file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_line_num": "range(646, 650)"
      },
      {
        "commit_hash": "8c3b132c1241e650d395e36d7051476b3f7ceb60",
        "line_num": 9960,
        "line_str": "argument_list|) condition|) block|{ name|y operator|=",
        "file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_line_num": "range(9945, 9956)"
      },
      {
        "commit_hash": "8c3b132c1241e650d395e36d7051476b3f7ceb60",
        "line_num": 9959,
        "line_str": "argument_list|() argument_list|) condition|) block|{ name|y",
        "file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_line_num": "range(9945, 9956)"
      },
      {
        "commit_hash": "8c3b132c1241e650d395e36d7051476b3f7ceb60",
        "line_num": 9958,
        "line_str": "name|getZero argument_list|() argument_list|) condition|) block|{",
        "file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_line_num": "range(9945, 9956)"
      },
      {
        "commit_hash": "8c3b132c1241e650d395e36d7051476b3f7ceb60",
        "line_num": 648,
        "line_str": "condition|) block|{ return|return; block|} name|exponent",
        "file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_line_num": "range(646, 650)"
      },
      {
        "commit_hash": "8c3b132c1241e650d395e36d7051476b3f7ceb60",
        "line_num": 9956,
        "line_str": "name|lessThan argument_list|( name|getZero argument_list|() argument_list|)",
        "file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_line_num": "range(9945, 9956)"
      },
      {
        "commit_hash": "8c3b132c1241e650d395e36d7051476b3f7ceb60",
        "line_num": 9955,
        "line_str": "condition|( name|lessThan argument_list|( name|getZero argument_list|()",
        "file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_line_num": "range(9945, 9956)"
      },
      {
        "commit_hash": "8c3b132c1241e650d395e36d7051476b3f7ceb60",
        "line_num": 9954,
        "line_str": "if|if condition|( name|lessThan argument_list|( name|getZero",
        "file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_line_num": "range(9945, 9956)"
      },
      {
        "commit_hash": "8c3b132c1241e650d395e36d7051476b3f7ceb60",
        "line_num": 9953,
        "line_str": "decl_stmt|; if|if condition|( name|lessThan argument_list|(",
        "file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_line_num": "range(9945, 9956)"
      },
      {
        "commit_hash": "8c3b132c1241e650d395e36d7051476b3f7ceb60",
        "line_num": 9952,
        "line_str": "literal|false decl_stmt|; if|if condition|( name|lessThan",
        "file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_line_num": "range(9945, 9956)"
      },
      {
        "commit_hash": "8c3b132c1241e650d395e36d7051476b3f7ceb60",
        "line_num": 9951,
        "line_str": "init|= literal|false decl_stmt|; if|if condition|(",
        "file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_line_num": "range(9945, 9956)"
      }
    ]
  },
  {
    "id": 10108,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["0fae0bdf347286b3b75048731be6604a807bf12e"],
    "fix_commit_hash": "f8ebe955695586ca35198df7f2896c0bbc277a61",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1546,
        "line_str": "operator|* name|v2 operator|. name|y argument_list|,",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1575,
        "line_str": "name|v1 operator|. name|y operator|* name|v2",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1542,
        "line_str": "operator|- name|v1 operator|. name|z operator|*",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1571,
        "line_str": "name|v2 operator|. name|y operator|- name|v1",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1538,
        "line_str": "operator|* name|v2 operator|. name|z operator|-",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1567,
        "line_str": "name|v1 operator|. name|x operator|* name|v2",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1534,
        "line_str": "argument_list|( name|v1 operator|. name|y operator|*",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1563,
        "line_str": "name|v2 operator|. name|z argument_list|, name|v1",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1530,
        "line_str": "block|{ return|return operator|new name|Vector3D argument_list|(",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1559,
        "line_str": "name|v1 operator|. name|x operator|* name|v2",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1526,
        "line_str": "parameter_list|, name|Vector3D name|v2 parameter_list|) block|{",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1555,
        "line_str": "name|v2 operator|. name|x operator|- name|v1",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1522,
        "line_str": "name|crossProduct parameter_list|( name|Vector3D name|v1 parameter_list|,",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1551,
        "line_str": "name|v1 operator|. name|z operator|* name|v2",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1580,
        "line_str": "operator|. name|x argument_list|) return|; block|}",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1547,
        "line_str": "name|v2 operator|. name|y argument_list|, name|v1",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1576,
        "line_str": "operator|. name|y operator|* name|v2 operator|.",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1543,
        "line_str": "name|v1 operator|. name|z operator|* name|v2",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1572,
        "line_str": "operator|. name|y operator|- name|v1 operator|.",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1539,
        "line_str": "name|v2 operator|. name|z operator|- name|v1",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "9ec5df91ff5ce7e8c87806c08bfd14697fa62fc6",
        "line_num": 1345,
        "line_str": "name|x argument_list|) return|; block|} comment",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1765, 1766)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1568,
        "line_str": "operator|. name|x operator|* name|v2 operator|.",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1535,
        "line_str": "name|v1 operator|. name|y operator|* name|v2",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1564,
        "line_str": "operator|. name|z argument_list|, name|v1 operator|.",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1531,
        "line_str": "return|return operator|new name|Vector3D argument_list|( name|v1",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1560,
        "line_str": "operator|. name|x operator|* name|v2 operator|.",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1527,
        "line_str": "name|Vector3D name|v2 parameter_list|) block|{ return|return",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1556,
        "line_str": "operator|. name|x operator|- name|v1 operator|.",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1523,
        "line_str": "parameter_list|( name|Vector3D name|v1 parameter_list|, name|Vector3D",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1552,
        "line_str": "operator|. name|z operator|* name|v2 operator|.",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1548,
        "line_str": "operator|. name|y argument_list|, name|v1 operator|.",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1577,
        "line_str": "name|y operator|* name|v2 operator|. name|x",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1544,
        "line_str": "operator|. name|z operator|* name|v2 operator|.",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1573,
        "line_str": "name|y operator|- name|v1 operator|. name|y",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1540,
        "line_str": "operator|. name|z operator|- name|v1 operator|.",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1569,
        "line_str": "name|x operator|* name|v2 operator|. name|y",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1536,
        "line_str": "operator|. name|y operator|* name|v2 operator|.",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1565,
        "line_str": "name|z argument_list|, name|v1 operator|. name|x",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1532,
        "line_str": "operator|new name|Vector3D argument_list|( name|v1 operator|.",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1561,
        "line_str": "name|x operator|* name|v2 operator|. name|z",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1528,
        "line_str": "name|v2 parameter_list|) block|{ return|return operator|new",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1557,
        "line_str": "name|x operator|- name|v1 operator|. name|x",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1524,
        "line_str": "name|Vector3D name|v1 parameter_list|, name|Vector3D name|v2",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1553,
        "line_str": "name|z operator|* name|v2 operator|. name|x",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1520,
        "line_str": "specifier|static name|Vector3D name|crossProduct parameter_list|( name|Vector3D",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1549,
        "line_str": "name|y argument_list|, name|v1 operator|. name|z",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1578,
        "line_str": "operator|* name|v2 operator|. name|x argument_list|)",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1545,
        "line_str": "name|z operator|* name|v2 operator|. name|y",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1574,
        "line_str": "operator|- name|v1 operator|. name|y operator|*",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1541,
        "line_str": "name|z operator|- name|v1 operator|. name|z",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1570,
        "line_str": "operator|* name|v2 operator|. name|y operator|-",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1537,
        "line_str": "name|y operator|* name|v2 operator|. name|z",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1566,
        "line_str": "argument_list|, name|v1 operator|. name|x operator|*",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1533,
        "line_str": "name|Vector3D argument_list|( name|v1 operator|. name|y",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1562,
        "line_str": "operator|* name|v2 operator|. name|z argument_list|,",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1529,
        "line_str": "parameter_list|) block|{ return|return operator|new name|Vector3D",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1558,
        "line_str": "operator|- name|v1 operator|. name|x operator|*",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1525,
        "line_str": "name|v1 parameter_list|, name|Vector3D name|v2 parameter_list|)",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1554,
        "line_str": "operator|* name|v2 operator|. name|x operator|-",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1521,
        "line_str": "name|Vector3D name|crossProduct parameter_list|( name|Vector3D name|v1",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1550,
        "line_str": "argument_list|, name|v1 operator|. name|z operator|*",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1579,
        "line_str": "name|v2 operator|. name|x argument_list|) return|;",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1765)"
      }
    ]
  },
  {
    "id": 10109,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["5aa3ffaf255ca9789c5a81dafa90a61f86feb6dc"],
    "fix_commit_hash": "bbb277a714897f65f8571cbaecb31043b0ec9f0d",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "c00d664aaba4c016af7f21aed9f2d53bf51bad76",
        "line_num": 217,
        "line_str": "operator|( name|x operator|- name|mean operator|)",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(366, 373)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 549,
        "line_str": "literal|100 condition|; name|i operator|+= literal|5",
        "file_path": "src/test/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_line_num": "range(766, 772)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 267,
        "line_str": "block|{ if|if condition|( name|x operator|<",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(385, 406)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 284,
        "line_str": "return|; block|} if|else if condition|( name|x",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(411, 423)"
      },
      {
        "commit_hash": "c00d664aaba4c016af7f21aed9f2d53bf51bad76",
        "line_num": 218,
        "line_str": "name|x operator|- name|mean operator|) operator|/",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(366, 373)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 550,
        "line_str": "condition|; name|i operator|+= literal|5 control|)",
        "file_path": "src/test/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_line_num": "range(766, 772)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 301,
        "line_str": "return|; block|} else|else block|{ throw|throw",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(428, 435)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 268,
        "line_str": "if|if condition|( name|x operator|< operator|(",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(385, 406)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 285,
        "line_str": "block|} if|else if condition|( name|x operator|>",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(411, 423)"
      },
      {
        "commit_hash": "c00d664aaba4c016af7f21aed9f2d53bf51bad76",
        "line_num": 219,
        "line_str": "operator|- name|mean operator|) operator|/ operator|(",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(366, 373)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 584,
        "line_str": "if|if condition|( name|i operator|< literal|10",
        "file_path": "src/test/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_line_num": "range(796, 803)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 551,
        "line_str": "name|i operator|+= literal|5 control|) block|{",
        "file_path": "src/test/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_line_num": "range(766, 772)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 302,
        "line_str": "block|} else|else block|{ throw|throw name|ex",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(428, 435)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 269,
        "line_str": "condition|( name|x operator|< operator|( name|mean",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(385, 406)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 286,
        "line_str": "if|else if condition|( name|x operator|> operator|(",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(411, 423)"
      },
      {
        "commit_hash": "c00d664aaba4c016af7f21aed9f2d53bf51bad76",
        "line_num": 220,
        "line_str": "name|mean operator|) operator|/ operator|( name|standardDeviation",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(366, 373)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 585,
        "line_str": "condition|( name|i operator|< literal|10 condition|)",
        "file_path": "src/test/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_line_num": "range(796, 803)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 552,
        "line_str": "operator|+= literal|5 control|) block|{ comment",
        "file_path": "src/test/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_line_num": "range(766, 772)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 303,
        "line_str": "else|else block|{ throw|throw name|ex throw|;",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(428, 435)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 270,
        "line_str": "name|x operator|< operator|( name|mean operator|-",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(385, 406)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 287,
        "line_str": "condition|( name|x operator|> operator|( name|mean",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(411, 423)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 586,
        "line_str": "name|i operator|< literal|10 condition|) block|{",
        "file_path": "src/test/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_line_num": "range(796, 803)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 553,
        "line_str": "literal|5 control|) block|{ comment name|double",
        "file_path": "src/test/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_line_num": "range(766, 772)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 304,
        "line_str": "block|{ throw|throw name|ex throw|; block|}",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(428, 435)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 271,
        "line_str": "operator|< operator|( name|mean operator|- literal|20",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(385, 406)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 288,
        "line_str": "name|x operator|> operator|( name|mean operator|+",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(411, 423)"
      },
      {
        "commit_hash": "283ec7138efc03d19f42650d04135f72fa7195b6",
        "line_num": 785,
        "line_str": "expr_stmt|; block|} block|} block|} specifier|public",
        "file_path": "src/test/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_line_num": "range(835, 838)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 587,
        "line_str": "operator|< literal|10 condition|) block|{ comment",
        "file_path": "src/test/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_line_num": "range(796, 803)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 305,
        "line_str": "throw|throw name|ex throw|; block|} block|}",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(428, 435)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 272,
        "line_str": "operator|( name|mean operator|- literal|20 operator|*",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(385, 406)"
      },
      {
        "commit_hash": "c00d664aaba4c016af7f21aed9f2d53bf51bad76",
        "line_num": 206,
        "line_str": "block|{ return|return literal|0.5 operator|* operator|(",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(358, 359)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 289,
        "line_str": "operator|> operator|( name|mean operator|+ literal|20",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(411, 423)"
      },
      {
        "commit_hash": "283ec7138efc03d19f42650d04135f72fa7195b6",
        "line_num": 786,
        "line_str": "block|} block|} block|} specifier|public name|void",
        "file_path": "src/test/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_line_num": "range(835, 838)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 588,
        "line_str": "literal|10 condition|) block|{ comment name|assertTrue",
        "file_path": "src/test/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_line_num": "range(796, 803)"
      },
      {
        "commit_hash": "a5658379e00fa3bc1f99981b2371dbfa56b99edd",
        "line_num": 372,
        "line_str": "block|} block|} block|} comment annotation|@",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(435, 437)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 306,
        "line_str": "name|ex throw|; block|} block|} block|}",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(428, 435)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 273,
        "line_str": "name|mean operator|- literal|20 operator|* name|standardDeviation",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(385, 406)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 290,
        "line_str": "operator|( name|mean operator|+ literal|20 operator|*",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(411, 423)"
      },
      {
        "commit_hash": "283ec7138efc03d19f42650d04135f72fa7195b6",
        "line_num": 787,
        "line_str": "block|} block|} specifier|public name|void name|testMath280",
        "file_path": "src/test/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_line_num": "range(835, 838)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 622,
        "line_str": "argument_list|) expr_stmt|; block|} block|} block|}",
        "file_path": "src/test/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_line_num": "range(834, 835)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 589,
        "line_str": "condition|) block|{ comment name|assertTrue argument_list|(",
        "file_path": "src/test/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_line_num": "range(796, 803)"
      },
      {
        "commit_hash": "a5658379e00fa3bc1f99981b2371dbfa56b99edd",
        "line_num": 373,
        "line_str": "block|} block|} comment annotation|@ name|Override",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(435, 437)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 307,
        "line_str": "throw|; block|} block|} block|} comment",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(428, 435)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 274,
        "line_str": "operator|- literal|20 operator|* name|standardDeviation operator|)",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(385, 406)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 291,
        "line_str": "name|mean operator|+ literal|20 operator|* name|standardDeviation",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(411, 423)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 258,
        "line_str": "argument_list|) operator|) return|; block|} catch|catch",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(385, 406)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 590,
        "line_str": "block|{ comment name|assertTrue argument_list|( name|lowerTail",
        "file_path": "src/test/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_line_num": "range(796, 803)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 275,
        "line_str": "literal|20 operator|* name|standardDeviation operator|) condition|)",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(385, 406)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 292,
        "line_str": "operator|+ literal|20 operator|* name|standardDeviation operator|)",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(411, 423)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 259,
        "line_str": "operator|) return|; block|} catch|catch parameter_list|(",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(385, 406)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 226,
        "line_str": "parameter_list|) throws|throws name|MathException block|{ try|try",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(353, 358)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 276,
        "line_str": "operator|* name|standardDeviation operator|) condition|) block|{",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(385, 406)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 293,
        "line_str": "literal|20 operator|* name|standardDeviation operator|) condition|)",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(411, 423)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 260,
        "line_str": "return|; block|} catch|catch parameter_list|( name|MaxIterationsExceededException",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(385, 406)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 227,
        "line_str": "throws|throws name|MathException block|{ try|try block|{",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(353, 358)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 277,
        "line_str": "name|standardDeviation operator|) condition|) block|{ comment",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(385, 406)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 294,
        "line_str": "operator|* name|standardDeviation operator|) condition|) block|{",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(411, 423)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 261,
        "line_str": "block|} catch|catch parameter_list|( name|MaxIterationsExceededException name|ex",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(385, 406)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 228,
        "line_str": "name|MathException block|{ try|try block|{ return|return",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(353, 358)"
      },
      {
        "commit_hash": "16202ede42f608a14ac476e56c7b06c2a16fd0e5",
        "line_num": 406,
        "line_str": "condition|) block|{ comment return|return literal|0",
        "file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(406, 411)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 278,
        "line_str": "operator|) condition|) block|{ comment return|return",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(385, 406)"
      },
      {
        "commit_hash": "16202ede42f608a14ac476e56c7b06c2a16fd0e5",
        "line_num": 423,
        "line_str": "operator|) condition|) block|{ return|return literal|1",
        "file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(423, 428)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 295,
        "line_str": "name|standardDeviation operator|) condition|) block|{ return|return",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(411, 423)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 262,
        "line_str": "catch|catch parameter_list|( name|MaxIterationsExceededException name|ex parameter_list|)",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(385, 406)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 229,
        "line_str": "block|{ try|try block|{ return|return literal|0.5",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(353, 358)"
      },
      {
        "commit_hash": "16202ede42f608a14ac476e56c7b06c2a16fd0e5",
        "line_num": 407,
        "line_str": "block|{ comment return|return literal|0 return|;",
        "file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(406, 411)"
      },
      {
        "commit_hash": "16202ede42f608a14ac476e56c7b06c2a16fd0e5",
        "line_num": 424,
        "line_str": "condition|) block|{ return|return literal|1 return|;",
        "file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(423, 428)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 263,
        "line_str": "parameter_list|( name|MaxIterationsExceededException name|ex parameter_list|) block|{",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(385, 406)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 230,
        "line_str": "try|try block|{ return|return literal|0.5 operator|*",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(353, 358)"
      },
      {
        "commit_hash": "16202ede42f608a14ac476e56c7b06c2a16fd0e5",
        "line_num": 408,
        "line_str": "comment return|return literal|0 return|; block|}",
        "file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(406, 411)"
      },
      {
        "commit_hash": "16202ede42f608a14ac476e56c7b06c2a16fd0e5",
        "line_num": 425,
        "line_str": "block|{ return|return literal|1 return|; block|}",
        "file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(423, 428)"
      },
      {
        "commit_hash": "c00d664aaba4c016af7f21aed9f2d53bf51bad76",
        "line_num": 214,
        "line_str": "operator|. name|erf argument_list|( operator|( name|x",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(366, 373)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 264,
        "line_str": "name|MaxIterationsExceededException name|ex parameter_list|) block|{ if|if",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(385, 406)"
      },
      {
        "commit_hash": "16202ede42f608a14ac476e56c7b06c2a16fd0e5",
        "line_num": 409,
        "line_str": "return|return literal|0 return|; block|} if|else if",
        "file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(406, 411)"
      },
      {
        "commit_hash": "16202ede42f608a14ac476e56c7b06c2a16fd0e5",
        "line_num": 426,
        "line_str": "return|return literal|1 return|; block|} else|else",
        "file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(423, 428)"
      },
      {
        "commit_hash": "c00d664aaba4c016af7f21aed9f2d53bf51bad76",
        "line_num": 215,
        "line_str": "name|erf argument_list|( operator|( name|x operator|-",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(366, 373)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 265,
        "line_str": "name|ex parameter_list|) block|{ if|if condition|(",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(385, 406)"
      },
      {
        "commit_hash": "16202ede42f608a14ac476e56c7b06c2a16fd0e5",
        "line_num": 410,
        "line_str": "literal|0 return|; block|} if|else if condition|(",
        "file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(406, 411)"
      },
      {
        "commit_hash": "16202ede42f608a14ac476e56c7b06c2a16fd0e5",
        "line_num": 427,
        "line_str": "literal|1 return|; block|} else|else block|{",
        "file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(423, 428)"
      },
      {
        "commit_hash": "c00d664aaba4c016af7f21aed9f2d53bf51bad76",
        "line_num": 216,
        "line_str": "argument_list|( operator|( name|x operator|- name|mean",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(366, 373)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 548,
        "line_str": "operator|< literal|100 condition|; name|i operator|+=",
        "file_path": "src/test/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_line_num": "range(766, 772)"
      },
      {
        "commit_hash": "2b359d7a1c276a4a503d9951acee30821b55fb68",
        "line_num": 266,
        "line_str": "parameter_list|) block|{ if|if condition|( name|x",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(385, 406)"
      }
    ]
  },
  {
    "id": 10110,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["dd83f95ac098a77eee4c52de13f9f7661edda53e"],
    "fix_commit_hash": "8d3846bc14e7c04d25bec968fd9103c661feae36",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "7fc5a42bdab49eb232d25855b15d52ace7949508",
        "line_num": 6082,
        "line_str": "else|else block|{ name|checkOrder argument_list|( name|val",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5956, 5965)"
      },
      {
        "commit_hash": "7fc5a42bdab49eb232d25855b15d52ace7949508",
        "line_num": 6049,
        "line_str": "parameter_list|( name|double index|[] name|val parameter_list|,",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5926, 5951)"
      },
      {
        "commit_hash": "035063ecc8223d6c954a30c78b3962e4fc017662",
        "line_num": 1104,
        "line_str": "name|Double operator|. name|isNaN argument_list|( name|y",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1335, 1350)"
      },
      {
        "commit_hash": "f2fcf91e4eb476ef1ad282a0efea9ac425059465",
        "line_num": 1963,
        "line_str": "operator|= name|nextAfter argument_list|( name|unscaled argument_list|,",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(4158, 4162)"
      },
      {
        "commit_hash": "7fc5a42bdab49eb232d25855b15d52ace7949508",
        "line_num": 6066,
        "line_str": "condition|) block|{ name|checkOrder argument_list|( name|val",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5926, 5951)"
      },
      {
        "commit_hash": "fca43c65b3ca28dde5b13efbacb0c387525fd9c1",
        "line_num": 1328,
        "line_str": "literal|1d argument_list|, literal|2d argument_list|) block|}",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(3444, 3445)"
      },
      {
        "commit_hash": "fca43c65b3ca28dde5b13efbacb0c387525fd9c1",
        "line_num": 1262,
        "line_str": "name|Double operator|. name|NaN block|, name|Double",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(3376, 3382)"
      },
      {
        "commit_hash": "11adc838f5ca27489f08a83484f5d80663d03349",
        "line_num": 3275,
        "line_str": "name|double name|direction parameter_list|) block|{ return|return",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3275, 3288)"
      },
      {
        "commit_hash": "f2fcf91e4eb476ef1ad282a0efea9ac425059465",
        "line_num": 1270,
        "line_str": "name|d parameter_list|, name|double name|direction parameter_list|)",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3267, 3275)"
      },
      {
        "commit_hash": "7fc5a42bdab49eb232d25855b15d52ace7949508",
        "line_num": 6083,
        "line_str": "block|{ name|checkOrder argument_list|( name|val argument_list|,",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5956, 5965)"
      },
      {
        "commit_hash": "7fc5a42bdab49eb232d25855b15d52ace7949508",
        "line_num": 6050,
        "line_str": "name|double index|[] name|val parameter_list|, name|int",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5926, 5951)"
      },
      {
        "commit_hash": "f2fcf91e4eb476ef1ad282a0efea9ac425059465",
        "line_num": 1683,
        "line_str": "operator|. name|floor argument_list|( name|nextAfter argument_list|(",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3880, 3883)"
      },
      {
        "commit_hash": "035063ecc8223d6c954a30c78b3962e4fc017662",
        "line_num": 1105,
        "line_str": "operator|. name|isNaN argument_list|( name|y argument_list|)",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1335, 1350)"
      },
      {
        "commit_hash": "7e5df3451eec68a6fcb43c7c3202a4482a2917d5",
        "line_num": 6100,
        "line_str": "name|checkOrder argument_list|( name|val argument_list|, name|OrderDirection",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5965, 5970)"
      },
      {
        "commit_hash": "7fc5a42bdab49eb232d25855b15d52ace7949508",
        "line_num": 6067,
        "line_str": "block|{ name|checkOrder argument_list|( name|val argument_list|,",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5926, 5951)"
      },
      {
        "commit_hash": "fca43c65b3ca28dde5b13efbacb0c387525fd9c1",
        "line_num": 1263,
        "line_str": "operator|. name|NaN block|, name|Double operator|.",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(3376, 3382)"
      },
      {
        "commit_hash": "11adc838f5ca27489f08a83484f5d80663d03349",
        "line_num": 3276,
        "line_str": "name|direction parameter_list|) block|{ return|return name|FastMath",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3275, 3288)"
      },
      {
        "commit_hash": "f2fcf91e4eb476ef1ad282a0efea9ac425059465",
        "line_num": 1271,
        "line_str": "parameter_list|, name|double name|direction parameter_list|) block|{",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3267, 3275)"
      },
      {
        "commit_hash": "f2fcf91e4eb476ef1ad282a0efea9ac425059465",
        "line_num": 1684,
        "line_str": "name|floor argument_list|( name|nextAfter argument_list|( name|unscaled",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3880, 3883)"
      },
      {
        "commit_hash": "11adc838f5ca27489f08a83484f5d80663d03349",
        "line_num": 3970,
        "line_str": "name|FastMath operator|. name|floor argument_list|( name|nextAfter",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3970, 3971)"
      },
      {
        "commit_hash": "035063ecc8223d6c954a30c78b3962e4fc017662",
        "line_num": 1106,
        "line_str": "name|isNaN argument_list|( name|y argument_list|) operator|)",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1335, 1350)"
      },
      {
        "commit_hash": "7fc5a42bdab49eb232d25855b15d52ace7949508",
        "line_num": 6051,
        "line_str": "index|[] name|val parameter_list|, name|int name|dir",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5926, 5951)"
      },
      {
        "commit_hash": "7e5df3451eec68a6fcb43c7c3202a4482a2917d5",
        "line_num": 6101,
        "line_str": "argument_list|( name|val argument_list|, name|OrderDirection operator|.",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5965, 5970)"
      },
      {
        "commit_hash": "11adc838f5ca27489f08a83484f5d80663d03349",
        "line_num": 3921,
        "line_str": "name|FastMath operator|. name|floor argument_list|( name|nextAfter",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3921, 3922)"
      },
      {
        "commit_hash": "fca43c65b3ca28dde5b13efbacb0c387525fd9c1",
        "line_num": 1264,
        "line_str": "name|NaN block|, name|Double operator|. name|POSITIVE_INFINITY",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(3376, 3382)"
      },
      {
        "commit_hash": "11adc838f5ca27489f08a83484f5d80663d03349",
        "line_num": 3277,
        "line_str": "parameter_list|) block|{ return|return name|FastMath operator|.",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3275, 3288)"
      },
      {
        "commit_hash": "7fc5a42bdab49eb232d25855b15d52ace7949508",
        "line_num": 6052,
        "line_str": "name|val parameter_list|, name|int name|dir parameter_list|,",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5926, 5951)"
      },
      {
        "commit_hash": "f2fcf91e4eb476ef1ad282a0efea9ac425059465",
        "line_num": 1685,
        "line_str": "argument_list|( name|nextAfter argument_list|( name|unscaled argument_list|,",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3880, 3883)"
      },
      {
        "commit_hash": "035063ecc8223d6c954a30c78b3962e4fc017662",
        "line_num": 1107,
        "line_str": "argument_list|( name|y argument_list|) operator|) operator|||",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1335, 1350)"
      },
      {
        "commit_hash": "11adc838f5ca27489f08a83484f5d80663d03349",
        "line_num": 3261,
        "line_str": "name|ret return|; block|} comment annotation|@",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3261, 3267)"
      },
      {
        "commit_hash": "7e5df3451eec68a6fcb43c7c3202a4482a2917d5",
        "line_num": 6102,
        "line_str": "name|val argument_list|, name|OrderDirection operator|. name|DECREASING",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5965, 5970)"
      },
      {
        "commit_hash": "f2fcf91e4eb476ef1ad282a0efea9ac425059465",
        "line_num": 1702,
        "line_str": "operator|. name|ceil argument_list|( name|nextAfter argument_list|(",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3899, 3902)"
      },
      {
        "commit_hash": "035063ecc8223d6c954a30c78b3962e4fc017662",
        "line_num": 1091,
        "line_str": "name|y parameter_list|) block|{ return|return operator|(",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1331, 1332)"
      },
      {
        "commit_hash": "fca43c65b3ca28dde5b13efbacb0c387525fd9c1",
        "line_num": 1265,
        "line_str": "block|, name|Double operator|. name|POSITIVE_INFINITY block|,",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(3376, 3382)"
      },
      {
        "commit_hash": "11adc838f5ca27489f08a83484f5d80663d03349",
        "line_num": 3278,
        "line_str": "block|{ return|return name|FastMath operator|. name|nextAfter",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3275, 3288)"
      },
      {
        "commit_hash": "7e5df3451eec68a6fcb43c7c3202a4482a2917d5",
        "line_num": 6086,
        "line_str": "name|checkOrder argument_list|( name|val argument_list|, name|OrderDirection",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5951, 5956)"
      },
      {
        "commit_hash": "7fc5a42bdab49eb232d25855b15d52ace7949508",
        "line_num": 6053,
        "line_str": "parameter_list|, name|int name|dir parameter_list|, name|boolean",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5926, 5951)"
      },
      {
        "commit_hash": "035063ecc8223d6c954a30c78b3962e4fc017662",
        "line_num": 1108,
        "line_str": "name|y argument_list|) operator|) operator||| name|x",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1335, 1350)"
      },
      {
        "commit_hash": "11adc838f5ca27489f08a83484f5d80663d03349",
        "line_num": 3262,
        "line_str": "return|; block|} comment annotation|@ name|Deprecated",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3261, 3267)"
      },
      {
        "commit_hash": "7e5df3451eec68a6fcb43c7c3202a4482a2917d5",
        "line_num": 6103,
        "line_str": "argument_list|, name|OrderDirection operator|. name|DECREASING argument_list|,",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5965, 5970)"
      },
      {
        "commit_hash": "f2fcf91e4eb476ef1ad282a0efea9ac425059465",
        "line_num": 1703,
        "line_str": "name|ceil argument_list|( name|nextAfter argument_list|( name|unscaled",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3899, 3902)"
      },
      {
        "commit_hash": "f2fcf91e4eb476ef1ad282a0efea9ac425059465",
        "line_num": 2050,
        "line_str": "operator|. name|ceil argument_list|( name|nextAfter argument_list|(",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(4248, 4251)"
      },
      {
        "commit_hash": "11adc838f5ca27489f08a83484f5d80663d03349",
        "line_num": 3279,
        "line_str": "return|return name|FastMath operator|. name|nextAfter argument_list|(",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3275, 3288)"
      },
      {
        "commit_hash": "7e5df3451eec68a6fcb43c7c3202a4482a2917d5",
        "line_num": 6087,
        "line_str": "argument_list|( name|val argument_list|, name|OrderDirection operator|.",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5951, 5956)"
      },
      {
        "commit_hash": "7fc5a42bdab49eb232d25855b15d52ace7949508",
        "line_num": 6054,
        "line_str": "name|int name|dir parameter_list|, name|boolean name|strict",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5926, 5951)"
      },
      {
        "commit_hash": "035063ecc8223d6c954a30c78b3962e4fc017662",
        "line_num": 1109,
        "line_str": "argument_list|) operator|) operator||| name|x operator|==",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1335, 1350)"
      },
      {
        "commit_hash": "11adc838f5ca27489f08a83484f5d80663d03349",
        "line_num": 3263,
        "line_str": "block|} comment annotation|@ name|Deprecated specifier|public",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3261, 3267)"
      },
      {
        "commit_hash": "7e5df3451eec68a6fcb43c7c3202a4482a2917d5",
        "line_num": 6104,
        "line_str": "name|OrderDirection operator|. name|DECREASING argument_list|, name|strict",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5965, 5970)"
      },
      {
        "commit_hash": "f2fcf91e4eb476ef1ad282a0efea9ac425059465",
        "line_num": 1704,
        "line_str": "argument_list|( name|nextAfter argument_list|( name|unscaled argument_list|,",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3899, 3902)"
      },
      {
        "commit_hash": "f2fcf91e4eb476ef1ad282a0efea9ac425059465",
        "line_num": 2051,
        "line_str": "name|ceil argument_list|( name|nextAfter argument_list|( name|unscaled",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(4248, 4251)"
      },
      {
        "commit_hash": "11adc838f5ca27489f08a83484f5d80663d03349",
        "line_num": 3280,
        "line_str": "name|FastMath operator|. name|nextAfter argument_list|( name|d",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3275, 3288)"
      },
      {
        "commit_hash": "7e5df3451eec68a6fcb43c7c3202a4482a2917d5",
        "line_num": 6088,
        "line_str": "name|val argument_list|, name|OrderDirection operator|. name|INCREASING",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5951, 5956)"
      },
      {
        "commit_hash": "7fc5a42bdab49eb232d25855b15d52ace7949508",
        "line_num": 6055,
        "line_str": "name|dir parameter_list|, name|boolean name|strict parameter_list|)",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5926, 5951)"
      },
      {
        "commit_hash": "035063ecc8223d6c954a30c78b3962e4fc017662",
        "line_num": 1110,
        "line_str": "operator|) operator||| name|x operator|== name|y",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1335, 1350)"
      },
      {
        "commit_hash": "11adc838f5ca27489f08a83484f5d80663d03349",
        "line_num": 3264,
        "line_str": "comment annotation|@ name|Deprecated specifier|public specifier|static",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3261, 3267)"
      },
      {
        "commit_hash": "f2fcf91e4eb476ef1ad282a0efea9ac425059465",
        "line_num": 2052,
        "line_str": "argument_list|( name|nextAfter argument_list|( name|unscaled argument_list|,",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(4248, 4251)"
      },
      {
        "commit_hash": "11adc838f5ca27489f08a83484f5d80663d03349",
        "line_num": 3281,
        "line_str": "operator|. name|nextAfter argument_list|( name|d argument_list|,",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3275, 3288)"
      },
      {
        "commit_hash": "f2fcf91e4eb476ef1ad282a0efea9ac425059465",
        "line_num": 1755,
        "line_str": "operator|. name|ceil argument_list|( name|nextAfter argument_list|(",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3952, 3955)"
      },
      {
        "commit_hash": "7e5df3451eec68a6fcb43c7c3202a4482a2917d5",
        "line_num": 6089,
        "line_str": "argument_list|, name|OrderDirection operator|. name|INCREASING argument_list|,",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5951, 5956)"
      },
      {
        "commit_hash": "7fc5a42bdab49eb232d25855b15d52ace7949508",
        "line_num": 6056,
        "line_str": "parameter_list|, name|boolean name|strict parameter_list|) block|{",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5926, 5951)"
      },
      {
        "commit_hash": "11adc838f5ca27489f08a83484f5d80663d03349",
        "line_num": 3265,
        "line_str": "annotation|@ name|Deprecated specifier|public specifier|static name|double",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3261, 3267)"
      },
      {
        "commit_hash": "11adc838f5ca27489f08a83484f5d80663d03349",
        "line_num": 3282,
        "line_str": "name|nextAfter argument_list|( name|d argument_list|, name|direction",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3275, 3288)"
      },
      {
        "commit_hash": "f2fcf91e4eb476ef1ad282a0efea9ac425059465",
        "line_num": 1756,
        "line_str": "name|ceil argument_list|( name|nextAfter argument_list|( name|unscaled",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3952, 3955)"
      },
      {
        "commit_hash": "7e5df3451eec68a6fcb43c7c3202a4482a2917d5",
        "line_num": 6090,
        "line_str": "name|OrderDirection operator|. name|INCREASING argument_list|, name|strict",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5951, 5956)"
      },
      {
        "commit_hash": "7fc5a42bdab49eb232d25855b15d52ace7949508",
        "line_num": 6057,
        "line_str": "name|boolean name|strict parameter_list|) block|{ if|if",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5926, 5951)"
      },
      {
        "commit_hash": "11adc838f5ca27489f08a83484f5d80663d03349",
        "line_num": 3266,
        "line_str": "name|Deprecated specifier|public specifier|static name|double name|nextAfter",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3261, 3267)"
      },
      {
        "commit_hash": "035063ecc8223d6c954a30c78b3962e4fc017662",
        "line_num": 1096,
        "line_str": "operator|( name|Double operator|. name|isNaN argument_list|(",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1335, 1350)"
      },
      {
        "commit_hash": "11adc838f5ca27489f08a83484f5d80663d03349",
        "line_num": 3283,
        "line_str": "argument_list|( name|d argument_list|, name|direction argument_list|)",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3275, 3288)"
      },
      {
        "commit_hash": "f2fcf91e4eb476ef1ad282a0efea9ac425059465",
        "line_num": 1757,
        "line_str": "argument_list|( name|nextAfter argument_list|( name|unscaled argument_list|,",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3952, 3955)"
      },
      {
        "commit_hash": "7fc5a42bdab49eb232d25855b15d52ace7949508",
        "line_num": 6091,
        "line_str": "operator|. name|DECREASING argument_list|, name|strict argument_list|)",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5970, 5974)"
      },
      {
        "commit_hash": "7fc5a42bdab49eb232d25855b15d52ace7949508",
        "line_num": 6058,
        "line_str": "name|strict parameter_list|) block|{ if|if condition|(",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5926, 5951)"
      },
      {
        "commit_hash": "41aea07a95cee599073f8ad0212ece7a0ceec2ed",
        "line_num": 1252,
        "line_str": "parameter_list|) block|{ return|return operator|( name|Double",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1332, 1335)"
      },
      {
        "commit_hash": "f2fcf91e4eb476ef1ad282a0efea9ac425059465",
        "line_num": 1774,
        "line_str": "operator|. name|floor argument_list|( name|nextAfter argument_list|(",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3971, 3974)"
      },
      {
        "commit_hash": "7fc5a42bdab49eb232d25855b15d52ace7949508",
        "line_num": 6075,
        "line_str": "operator|. name|INCREASING argument_list|, name|strict argument_list|)",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5956, 5965)"
      },
      {
        "commit_hash": "035063ecc8223d6c954a30c78b3962e4fc017662",
        "line_num": 1097,
        "line_str": "name|Double operator|. name|isNaN argument_list|( name|x",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1335, 1350)"
      },
      {
        "commit_hash": "11adc838f5ca27489f08a83484f5d80663d03349",
        "line_num": 3284,
        "line_str": "name|d argument_list|, name|direction argument_list|) return|;",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3275, 3288)"
      },
      {
        "commit_hash": "7fc5a42bdab49eb232d25855b15d52ace7949508",
        "line_num": 6092,
        "line_str": "name|DECREASING argument_list|, name|strict argument_list|) expr_stmt|;",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5970, 5974)"
      },
      {
        "commit_hash": "7fc5a42bdab49eb232d25855b15d52ace7949508",
        "line_num": 6059,
        "line_str": "parameter_list|) block|{ if|if condition|( name|dir",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5926, 5951)"
      },
      {
        "commit_hash": "f2fcf91e4eb476ef1ad282a0efea9ac425059465",
        "line_num": 1725,
        "line_str": "operator|. name|floor argument_list|( name|nextAfter argument_list|(",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3922, 3925)"
      },
      {
        "commit_hash": "11adc838f5ca27489f08a83484f5d80663d03349",
        "line_num": 3879,
        "line_str": "name|FastMath operator|. name|floor argument_list|( name|nextAfter",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3879, 3880)"
      },
      {
        "commit_hash": "41aea07a95cee599073f8ad0212ece7a0ceec2ed",
        "line_num": 1253,
        "line_str": "block|{ return|return operator|( name|Double operator|.",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1332, 1335)"
      },
      {
        "commit_hash": "f2fcf91e4eb476ef1ad282a0efea9ac425059465",
        "line_num": 1775,
        "line_str": "name|floor argument_list|( name|nextAfter argument_list|( name|unscaled",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3971, 3974)"
      },
      {
        "commit_hash": "7fc5a42bdab49eb232d25855b15d52ace7949508",
        "line_num": 6076,
        "line_str": "name|INCREASING argument_list|, name|strict argument_list|) expr_stmt|;",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5956, 5965)"
      },
      {
        "commit_hash": "7fc5a42bdab49eb232d25855b15d52ace7949508",
        "line_num": 6043,
        "line_str": "block|} comment specifier|public specifier|static name|void",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5926, 5951)"
      },
      {
        "commit_hash": "035063ecc8223d6c954a30c78b3962e4fc017662",
        "line_num": 1098,
        "line_str": "operator|. name|isNaN argument_list|( name|x argument_list|)",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1335, 1350)"
      },
      {
        "commit_hash": "fca43c65b3ca28dde5b13efbacb0c387525fd9c1",
        "line_num": 1239,
        "line_str": "index|[] block|{ name|Double operator|. name|NaN",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(3355, 3361)"
      },
      {
        "commit_hash": "41aea07a95cee599073f8ad0212ece7a0ceec2ed",
        "line_num": 1270,
        "line_str": "operator||| name|x operator|== name|y return|;",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1350, 1354)"
      },
      {
        "commit_hash": "11adc838f5ca27489f08a83484f5d80663d03349",
        "line_num": 3285,
        "line_str": "argument_list|, name|direction argument_list|) return|; block|}",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3275, 3288)"
      },
      {
        "commit_hash": "7fc5a42bdab49eb232d25855b15d52ace7949508",
        "line_num": 6093,
        "line_str": "argument_list|, name|strict argument_list|) expr_stmt|; block|}",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5970, 5974)"
      },
      {
        "commit_hash": "7fc5a42bdab49eb232d25855b15d52ace7949508",
        "line_num": 6060,
        "line_str": "block|{ if|if condition|( name|dir operator|>",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5926, 5951)"
      },
      {
        "commit_hash": "f2fcf91e4eb476ef1ad282a0efea9ac425059465",
        "line_num": 1726,
        "line_str": "name|floor argument_list|( name|nextAfter argument_list|( name|unscaled",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3922, 3925)"
      },
      {
        "commit_hash": "41aea07a95cee599073f8ad0212ece7a0ceec2ed",
        "line_num": 1254,
        "line_str": "return|return operator|( name|Double operator|. name|isNaN",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1332, 1335)"
      },
      {
        "commit_hash": "f2fcf91e4eb476ef1ad282a0efea9ac425059465",
        "line_num": 1264,
        "line_str": "specifier|public specifier|static name|double name|nextAfter parameter_list|(",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3267, 3275)"
      },
      {
        "commit_hash": "f2fcf91e4eb476ef1ad282a0efea9ac425059465",
        "line_num": 1776,
        "line_str": "argument_list|( name|nextAfter argument_list|( name|unscaled argument_list|,",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3971, 3974)"
      },
      {
        "commit_hash": "7fc5a42bdab49eb232d25855b15d52ace7949508",
        "line_num": 6077,
        "line_str": "argument_list|, name|strict argument_list|) expr_stmt|; block|}",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5956, 5965)"
      },
      {
        "commit_hash": "7fc5a42bdab49eb232d25855b15d52ace7949508",
        "line_num": 6044,
        "line_str": "comment specifier|public specifier|static name|void name|checkOrder",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5926, 5951)"
      },
      {
        "commit_hash": "035063ecc8223d6c954a30c78b3962e4fc017662",
        "line_num": 1099,
        "line_str": "name|isNaN argument_list|( name|x argument_list|) operator|&&",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1335, 1350)"
      },
      {
        "commit_hash": "fca43c65b3ca28dde5b13efbacb0c387525fd9c1",
        "line_num": 1240,
        "line_str": "block|{ name|Double operator|. name|NaN block|,",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(3355, 3361)"
      },
      {
        "commit_hash": "41aea07a95cee599073f8ad0212ece7a0ceec2ed",
        "line_num": 1271,
        "line_str": "name|x operator|== name|y return|; block|}",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1350, 1354)"
      },
      {
        "commit_hash": "11adc838f5ca27489f08a83484f5d80663d03349",
        "line_num": 3286,
        "line_str": "name|direction argument_list|) return|; block|} comment",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3275, 3288)"
      },
      {
        "commit_hash": "f2fcf91e4eb476ef1ad282a0efea9ac425059465",
        "line_num": 1793,
        "line_str": "case|: block|{ name|unscaled operator|= name|nextAfter",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3990, 3994)"
      },
      {
        "commit_hash": "7fc5a42bdab49eb232d25855b15d52ace7949508",
        "line_num": 6094,
        "line_str": "name|strict argument_list|) expr_stmt|; block|} block|}",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5970, 5974)"
      },
      {
        "commit_hash": "7fc5a42bdab49eb232d25855b15d52ace7949508",
        "line_num": 6061,
        "line_str": "if|if condition|( name|dir operator|> literal|0",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5926, 5951)"
      },
      {
        "commit_hash": "f2fcf91e4eb476ef1ad282a0efea9ac425059465",
        "line_num": 1727,
        "line_str": "argument_list|( name|nextAfter argument_list|( name|unscaled argument_list|,",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3922, 3925)"
      },
      {
        "commit_hash": "f2fcf91e4eb476ef1ad282a0efea9ac425059465",
        "line_num": 1265,
        "line_str": "specifier|static name|double name|nextAfter parameter_list|( name|double",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3267, 3275)"
      },
      {
        "commit_hash": "7fc5a42bdab49eb232d25855b15d52ace7949508",
        "line_num": 6078,
        "line_str": "name|strict argument_list|) expr_stmt|; block|} else|else",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5956, 5965)"
      },
      {
        "commit_hash": "7fc5a42bdab49eb232d25855b15d52ace7949508",
        "line_num": 6045,
        "line_str": "specifier|public specifier|static name|void name|checkOrder parameter_list|(",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5926, 5951)"
      },
      {
        "commit_hash": "035063ecc8223d6c954a30c78b3962e4fc017662",
        "line_num": 1100,
        "line_str": "argument_list|( name|x argument_list|) operator|&& name|Double",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1335, 1350)"
      },
      {
        "commit_hash": "11adc838f5ca27489f08a83484f5d80663d03349",
        "line_num": 3898,
        "line_str": "name|FastMath operator|. name|ceil argument_list|( name|nextAfter",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3898, 3899)"
      },
      {
        "commit_hash": "fca43c65b3ca28dde5b13efbacb0c387525fd9c1",
        "line_num": 1241,
        "line_str": "name|Double operator|. name|NaN block|, name|Double",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(3355, 3361)"
      },
      {
        "commit_hash": "41aea07a95cee599073f8ad0212ece7a0ceec2ed",
        "line_num": 1272,
        "line_str": "operator|== name|y return|; block|} comment",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1350, 1354)"
      },
      {
        "commit_hash": "11adc838f5ca27489f08a83484f5d80663d03349",
        "line_num": 3287,
        "line_str": "argument_list|) return|; block|} comment specifier|public",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3275, 3288)"
      },
      {
        "commit_hash": "f2fcf91e4eb476ef1ad282a0efea9ac425059465",
        "line_num": 1794,
        "line_str": "block|{ name|unscaled operator|= name|nextAfter argument_list|(",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3990, 3994)"
      },
      {
        "commit_hash": "7fc5a42bdab49eb232d25855b15d52ace7949508",
        "line_num": 6062,
        "line_str": "condition|( name|dir operator|> literal|0 condition|)",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5926, 5951)"
      },
      {
        "commit_hash": "36fb2c2e93b8ac8da80902a83b1e6821a388b1cb",
        "line_num": 6145,
        "line_str": "argument_list|) expr_stmt|; block|} block|} comment",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5974, 5977)"
      },
      {
        "commit_hash": "f2fcf91e4eb476ef1ad282a0efea9ac425059465",
        "line_num": 1266,
        "line_str": "name|double name|nextAfter parameter_list|( name|double name|d",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3267, 3275)"
      },
      {
        "commit_hash": "7fc5a42bdab49eb232d25855b15d52ace7949508",
        "line_num": 6079,
        "line_str": "argument_list|) expr_stmt|; block|} else|else block|{",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5956, 5965)"
      },
      {
        "commit_hash": "7fc5a42bdab49eb232d25855b15d52ace7949508",
        "line_num": 6046,
        "line_str": "specifier|static name|void name|checkOrder parameter_list|( name|double",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5926, 5951)"
      },
      {
        "commit_hash": "035063ecc8223d6c954a30c78b3962e4fc017662",
        "line_num": 1101,
        "line_str": "name|x argument_list|) operator|&& name|Double operator|.",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1335, 1350)"
      },
      {
        "commit_hash": "fca43c65b3ca28dde5b13efbacb0c387525fd9c1",
        "line_num": 1242,
        "line_str": "operator|. name|NaN block|, name|Double operator|.",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(3355, 3361)"
      },
      {
        "commit_hash": "41aea07a95cee599073f8ad0212ece7a0ceec2ed",
        "line_num": 1273,
        "line_str": "name|y return|; block|} comment specifier|public",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1350, 1354)"
      },
      {
        "commit_hash": "f2fcf91e4eb476ef1ad282a0efea9ac425059465",
        "line_num": 1960,
        "line_str": "case|: block|{ name|unscaled operator|= name|nextAfter",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(4158, 4162)"
      },
      {
        "commit_hash": "f2fcf91e4eb476ef1ad282a0efea9ac425059465",
        "line_num": 1795,
        "line_str": "name|unscaled operator|= name|nextAfter argument_list|( name|unscaled",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3990, 3994)"
      },
      {
        "commit_hash": "7fc5a42bdab49eb232d25855b15d52ace7949508",
        "line_num": 6063,
        "line_str": "name|dir operator|> literal|0 condition|) block|{",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5926, 5951)"
      },
      {
        "commit_hash": "36fb2c2e93b8ac8da80902a83b1e6821a388b1cb",
        "line_num": 6146,
        "line_str": "expr_stmt|; block|} block|} comment specifier|public",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5974, 5977)"
      },
      {
        "commit_hash": "f2fcf91e4eb476ef1ad282a0efea9ac425059465",
        "line_num": 1267,
        "line_str": "name|nextAfter parameter_list|( name|double name|d parameter_list|,",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3267, 3275)"
      },
      {
        "commit_hash": "7fc5a42bdab49eb232d25855b15d52ace7949508",
        "line_num": 6080,
        "line_str": "expr_stmt|; block|} else|else block|{ name|checkOrder",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5956, 5965)"
      },
      {
        "commit_hash": "7fc5a42bdab49eb232d25855b15d52ace7949508",
        "line_num": 6047,
        "line_str": "name|void name|checkOrder parameter_list|( name|double index|[]",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5926, 5951)"
      },
      {
        "commit_hash": "035063ecc8223d6c954a30c78b3962e4fc017662",
        "line_num": 1102,
        "line_str": "argument_list|) operator|&& name|Double operator|. name|isNaN",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1335, 1350)"
      },
      {
        "commit_hash": "fca43c65b3ca28dde5b13efbacb0c387525fd9c1",
        "line_num": 1243,
        "line_str": "name|NaN block|, name|Double operator|. name|POSITIVE_INFINITY",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(3355, 3361)"
      },
      {
        "commit_hash": "f2fcf91e4eb476ef1ad282a0efea9ac425059465",
        "line_num": 1961,
        "line_str": "block|{ name|unscaled operator|= name|nextAfter argument_list|(",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(4158, 4162)"
      },
      {
        "commit_hash": "11adc838f5ca27489f08a83484f5d80663d03349",
        "line_num": 4247,
        "line_str": "name|FastMath operator|. name|ceil argument_list|( name|nextAfter",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(4247, 4248)"
      },
      {
        "commit_hash": "f2fcf91e4eb476ef1ad282a0efea9ac425059465",
        "line_num": 1796,
        "line_str": "operator|= name|nextAfter argument_list|( name|unscaled argument_list|,",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3990, 3994)"
      },
      {
        "commit_hash": "7fc5a42bdab49eb232d25855b15d52ace7949508",
        "line_num": 6064,
        "line_str": "operator|> literal|0 condition|) block|{ name|checkOrder",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5926, 5951)"
      },
      {
        "commit_hash": "fca43c65b3ca28dde5b13efbacb0c387525fd9c1",
        "line_num": 1260,
        "line_str": "index|[] block|{ name|Double operator|. name|NaN",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(3376, 3382)"
      },
      {
        "commit_hash": "36fb2c2e93b8ac8da80902a83b1e6821a388b1cb",
        "line_num": 6147,
        "line_str": "block|} block|} comment specifier|public specifier|static",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5974, 5977)"
      },
      {
        "commit_hash": "f2fcf91e4eb476ef1ad282a0efea9ac425059465",
        "line_num": 1268,
        "line_str": "parameter_list|( name|double name|d parameter_list|, name|double",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3267, 3275)"
      },
      {
        "commit_hash": "7fc5a42bdab49eb232d25855b15d52ace7949508",
        "line_num": 6081,
        "line_str": "block|} else|else block|{ name|checkOrder argument_list|(",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5956, 5965)"
      },
      {
        "commit_hash": "7fc5a42bdab49eb232d25855b15d52ace7949508",
        "line_num": 6048,
        "line_str": "name|checkOrder parameter_list|( name|double index|[] name|val",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5926, 5951)"
      },
      {
        "commit_hash": "035063ecc8223d6c954a30c78b3962e4fc017662",
        "line_num": 1103,
        "line_str": "operator|&& name|Double operator|. name|isNaN argument_list|(",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1335, 1350)"
      },
      {
        "commit_hash": "fca43c65b3ca28dde5b13efbacb0c387525fd9c1",
        "line_num": 1244,
        "line_str": "block|, name|Double operator|. name|POSITIVE_INFINITY block|,",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(3355, 3361)"
      },
      {
        "commit_hash": "f2fcf91e4eb476ef1ad282a0efea9ac425059465",
        "line_num": 1962,
        "line_str": "name|unscaled operator|= name|nextAfter argument_list|( name|unscaled",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(4158, 4162)"
      },
      {
        "commit_hash": "7fc5a42bdab49eb232d25855b15d52ace7949508",
        "line_num": 6065,
        "line_str": "literal|0 condition|) block|{ name|checkOrder argument_list|(",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5926, 5951)"
      },
      {
        "commit_hash": "11adc838f5ca27489f08a83484f5d80663d03349",
        "line_num": 3951,
        "line_str": "name|FastMath operator|. name|ceil argument_list|( name|nextAfter",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3951, 3952)"
      },
      {
        "commit_hash": "fca43c65b3ca28dde5b13efbacb0c387525fd9c1",
        "line_num": 1261,
        "line_str": "block|{ name|Double operator|. name|NaN block|,",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(3376, 3382)"
      },
      {
        "commit_hash": "f2fcf91e4eb476ef1ad282a0efea9ac425059465",
        "line_num": 1269,
        "line_str": "name|double name|d parameter_list|, name|double name|direction",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3267, 3275)"
      }
    ]
  },
  {
    "id": 10111,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["66254d66b1b2bd77ad3c0bf467f67910cc898032"],
    "fix_commit_hash": "da4b7f88f12102b8a933894b070b81316058ba86",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "c51edb2739456d93fbbfe3ac97653e43360f78ad",
        "line_num": 862,
        "line_str": "name|residualsWeights index|[ name|i index|] expr_stmt|;",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(845, 846)"
      },
      {
        "commit_hash": "b43966bcd9e879c4b8b3506d083c9c9c7d03e177",
        "line_num": 1311,
        "line_str": "block|, literal|0.257829976764542 block|} argument_list|) argument_list|,",
        "file_path": "src/mantissa/tests-src/org/spaceroots/mantissa/estimation/MinpackTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_line_num": "range(1381, 1383)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 1374,
        "line_str": "name|getIterations argument_list|() argument_list|, name|previous argument_list|,",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1453)"
      },
      {
        "commit_hash": "8f3ac0a30b9fc24d69250b34b00caf8c523c65b2",
        "line_num": 695,
        "line_str": "name|double name|getChiSquare parameter_list|() block|{ name|double",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(806, 830)"
      },
      {
        "commit_hash": "a24b1ec35bad99a2aa0f8400308bf3cc2fb452b0",
        "line_num": 416,
        "line_str": "literal|true condition|) block|{ name|incrementIterationsCounter argument_list|()",
        "file_path": "src/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(486, 490)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 1358,
        "line_str": "block|} comment if|if condition|( name|checker",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1453)"
      },
      {
        "commit_hash": "8f3ac0a30b9fc24d69250b34b00caf8c523c65b2",
        "line_num": 745,
        "line_str": "return|return name|chiSquare return|; block|} comment",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(846, 853)"
      },
      {
        "commit_hash": "8f3ac0a30b9fc24d69250b34b00caf8c523c65b2",
        "line_num": 712,
        "line_str": "operator|< name|rows condition|; operator|++ name|i",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(806, 830)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1594,
        "line_str": "argument_list|( name|xNorm argument_list|) expr_stmt|; block|}",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/estimation/LevenbergMarquardtEstimator.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1363, 1367)"
      },
      {
        "commit_hash": "b43966bcd9e879c4b8b3506d083c9c9c7d03e177",
        "line_num": 1312,
        "line_str": "literal|0.257829976764542 block|} argument_list|) argument_list|, literal|false",
        "file_path": "src/mantissa/tests-src/org/spaceroots/mantissa/estimation/MinpackTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_line_num": "range(1381, 1383)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 1375,
        "line_str": "argument_list|() argument_list|, name|previous argument_list|, name|current",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1453)"
      },
      {
        "commit_hash": "8f3ac0a30b9fc24d69250b34b00caf8c523c65b2",
        "line_num": 729,
        "line_str": "index|[ name|i index|] decl_stmt|; name|chiSquare",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(835, 840)"
      },
      {
        "commit_hash": "8f3ac0a30b9fc24d69250b34b00caf8c523c65b2",
        "line_num": 696,
        "line_str": "name|getChiSquare parameter_list|() block|{ name|double name|chiSquare",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(806, 830)"
      },
      {
        "commit_hash": "a24b1ec35bad99a2aa0f8400308bf3cc2fb452b0",
        "line_num": 417,
        "line_str": "condition|) block|{ name|incrementIterationsCounter argument_list|() expr_stmt|;",
        "file_path": "src/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(486, 490)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 1359,
        "line_str": "comment if|if condition|( name|checker operator|!=",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1453)"
      },
      {
        "commit_hash": "8f3ac0a30b9fc24d69250b34b00caf8c523c65b2",
        "line_num": 746,
        "line_str": "name|chiSquare return|; block|} comment specifier|public",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(846, 853)"
      },
      {
        "commit_hash": "8f3ac0a30b9fc24d69250b34b00caf8c523c65b2",
        "line_num": 713,
        "line_str": "name|rows condition|; operator|++ name|i control|)",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(806, 830)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1595,
        "line_str": "name|xNorm argument_list|) expr_stmt|; block|} else|else",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/estimation/LevenbergMarquardtEstimator.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1363, 1367)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 1376,
        "line_str": "argument_list|, name|previous argument_list|, name|current argument_list|)",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1453)"
      },
      {
        "commit_hash": "8f3ac0a30b9fc24d69250b34b00caf8c523c65b2",
        "line_num": 730,
        "line_str": "name|i index|] decl_stmt|; name|chiSquare operator|+=",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(835, 840)"
      },
      {
        "commit_hash": "8f3ac0a30b9fc24d69250b34b00caf8c523c65b2",
        "line_num": 697,
        "line_str": "parameter_list|() block|{ name|double name|chiSquare init|=",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(806, 830)"
      },
      {
        "commit_hash": "a24b1ec35bad99a2aa0f8400308bf3cc2fb452b0",
        "line_num": 418,
        "line_str": "block|{ name|incrementIterationsCounter argument_list|() expr_stmt|; comment",
        "file_path": "src/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(486, 490)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 1360,
        "line_str": "if|if condition|( name|checker operator|!= literal|null",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1453)"
      },
      {
        "commit_hash": "8f3ac0a30b9fc24d69250b34b00caf8c523c65b2",
        "line_num": 714,
        "line_str": "condition|; operator|++ name|i control|) block|{",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(806, 830)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1596,
        "line_str": "argument_list|) expr_stmt|; block|} else|else block|{",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/estimation/LevenbergMarquardtEstimator.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1363, 1367)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 931,
        "line_str": "comment name|updateResidualsAndCost argument_list|() expr_stmt|; name|current",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(994, 1007)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 1377,
        "line_str": "name|previous argument_list|, name|current argument_list|) condition|)",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1453)"
      },
      {
        "commit_hash": "8f3ac0a30b9fc24d69250b34b00caf8c523c65b2",
        "line_num": 731,
        "line_str": "index|] decl_stmt|; name|chiSquare operator|+= name|residual",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(835, 840)"
      },
      {
        "commit_hash": "8f3ac0a30b9fc24d69250b34b00caf8c523c65b2",
        "line_num": 698,
        "line_str": "block|{ name|double name|chiSquare init|= literal|0",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(806, 830)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 1361,
        "line_str": "condition|( name|checker operator|!= literal|null condition|)",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1453)"
      },
      {
        "commit_hash": "8f3ac0a30b9fc24d69250b34b00caf8c523c65b2",
        "line_num": 715,
        "line_str": "operator|++ name|i control|) block|{ specifier|final",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(806, 830)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1597,
        "line_str": "expr_stmt|; block|} else|else block|{ comment",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/estimation/LevenbergMarquardtEstimator.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1363, 1367)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 932,
        "line_str": "name|updateResidualsAndCost argument_list|() expr_stmt|; name|current operator|=",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(994, 1007)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 1378,
        "line_str": "argument_list|, name|current argument_list|) condition|) block|{",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1453)"
      },
      {
        "commit_hash": "05ffef3f7d106b68890136b920db5fe4d2d5e9b8",
        "line_num": 684,
        "line_str": "name|orthoTolerance condition|) block|{ comment return|return",
        "file_path": "src/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(763, 764)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 701,
        "line_str": "condition|) block|{ comment return|return name|current",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(764, 767)"
      },
      {
        "commit_hash": "8f3ac0a30b9fc24d69250b34b00caf8c523c65b2",
        "line_num": 732,
        "line_str": "decl_stmt|; name|chiSquare operator|+= name|residual operator|*",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(835, 840)"
      },
      {
        "commit_hash": "8f3ac0a30b9fc24d69250b34b00caf8c523c65b2",
        "line_num": 699,
        "line_str": "name|double name|chiSquare init|= literal|0 decl_stmt|;",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(806, 830)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1102,
        "line_str": "name|oldRes operator|= name|tmpVec expr_stmt|; comment",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/estimation/LevenbergMarquardtEstimator.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(872, 873)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 1362,
        "line_str": "name|checker operator|!= literal|null condition|) block|{",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1453)"
      },
      {
        "commit_hash": "8f3ac0a30b9fc24d69250b34b00caf8c523c65b2",
        "line_num": 716,
        "line_str": "name|i control|) block|{ specifier|final name|double",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(806, 830)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 933,
        "line_str": "argument_list|() expr_stmt|; name|current operator|= operator|new",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(994, 1007)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 1379,
        "line_str": "name|current argument_list|) condition|) block|{ return|return",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1453)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 702,
        "line_str": "block|{ comment return|return name|current return|;",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(764, 767)"
      },
      {
        "commit_hash": "8f3ac0a30b9fc24d69250b34b00caf8c523c65b2",
        "line_num": 733,
        "line_str": "name|chiSquare operator|+= name|residual operator|* name|residual",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(835, 840)"
      },
      {
        "commit_hash": "8f3ac0a30b9fc24d69250b34b00caf8c523c65b2",
        "line_num": 700,
        "line_str": "name|chiSquare init|= literal|0 decl_stmt|; for|for",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(806, 830)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 1363,
        "line_str": "operator|!= literal|null condition|) block|{ comment",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1453)"
      },
      {
        "commit_hash": "8f3ac0a30b9fc24d69250b34b00caf8c523c65b2",
        "line_num": 717,
        "line_str": "control|) block|{ specifier|final name|double name|residual",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(806, 830)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 614,
        "line_str": "operator|new name|double index|[] block|{ literal|11.412069435091231",
        "file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_line_num": "range(614, 622)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 934,
        "line_str": "expr_stmt|; name|current operator|= operator|new name|VectorialPointValuePair",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(994, 1007)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 581,
        "line_str": "operator|new name|double index|[] block|{ literal|11.4121122022341",
        "file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_line_num": "range(581, 589)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 1380,
        "line_str": "argument_list|) condition|) block|{ return|return name|current",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1453)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 703,
        "line_str": "comment return|return name|current return|; block|}",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(764, 767)"
      },
      {
        "commit_hash": "8f3ac0a30b9fc24d69250b34b00caf8c523c65b2",
        "line_num": 701,
        "line_str": "init|= literal|0 decl_stmt|; for|for control|(",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(806, 830)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 1364,
        "line_str": "literal|null condition|) block|{ comment if|if",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1453)"
      },
      {
        "commit_hash": "8f3ac0a30b9fc24d69250b34b00caf8c523c65b2",
        "line_num": 718,
        "line_str": "block|{ specifier|final name|double name|residual init|=",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(806, 830)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 956,
        "line_str": "index|] operator|* name|residuals index|[ name|i",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/estimation/LevenbergMarquardtEstimator.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(726, 729)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 935,
        "line_str": "name|current operator|= operator|new name|VectorialPointValuePair argument_list|(",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(994, 1007)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 615,
        "line_str": "name|double index|[] block|{ literal|11.412069435091231 block|,",
        "file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_line_num": "range(614, 622)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 1381,
        "line_str": "condition|) block|{ return|return name|current return|;",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1453)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 582,
        "line_str": "name|double index|[] block|{ literal|11.4121122022341 block|,",
        "file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_line_num": "range(581, 589)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 725,
        "line_str": "expr_stmt|; comment name|qTy argument_list|( name|residuals",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/estimation/LevenbergMarquardtEstimator.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(504, 509)"
      },
      {
        "commit_hash": "8f3ac0a30b9fc24d69250b34b00caf8c523c65b2",
        "line_num": 702,
        "line_str": "literal|0 decl_stmt|; for|for control|( name|int",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(806, 830)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1105,
        "line_str": "expr_stmt|; comment name|determineLMParameter argument_list|( name|oldRes",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/estimation/LevenbergMarquardtEstimator.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(875, 880)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 1365,
        "line_str": "condition|) block|{ comment if|if condition|(",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1453)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 957,
        "line_str": "operator|* name|residuals index|[ name|i index|]",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/estimation/LevenbergMarquardtEstimator.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(726, 729)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 936,
        "line_str": "operator|= operator|new name|VectorialPointValuePair argument_list|( name|point",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(994, 1007)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 616,
        "line_str": "index|[] block|{ literal|11.412069435091231 block|, operator|-",
        "file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_line_num": "range(614, 622)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 1382,
        "line_str": "block|{ return|return name|current return|; block|}",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1453)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 583,
        "line_str": "index|[] block|{ literal|11.4121122022341 block|, operator|-",
        "file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_line_num": "range(581, 589)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 726,
        "line_str": "comment name|qTy argument_list|( name|residuals argument_list|)",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/estimation/LevenbergMarquardtEstimator.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(504, 509)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 1376,
        "line_str": "operator|new name|double index|[] block|{ literal|0.2578330049",
        "file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_line_num": "range(1376, 1381)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1651,
        "line_str": "name|oldRes operator|= name|tmpVec expr_stmt|; block|}",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/estimation/LevenbergMarquardtEstimator.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1417, 1421)"
      },
      {
        "commit_hash": "8f3ac0a30b9fc24d69250b34b00caf8c523c65b2",
        "line_num": 703,
        "line_str": "decl_stmt|; for|for control|( name|int name|i",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(806, 830)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1106,
        "line_str": "comment name|determineLMParameter argument_list|( name|oldRes argument_list|,",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/estimation/LevenbergMarquardtEstimator.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(875, 880)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 1366,
        "line_str": "block|{ comment if|if condition|( name|checker",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1453)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 958,
        "line_str": "name|residuals index|[ name|i index|] expr_stmt|;",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/estimation/LevenbergMarquardtEstimator.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(726, 729)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 937,
        "line_str": "operator|new name|VectorialPointValuePair argument_list|( name|point argument_list|,",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(994, 1007)"
      },
      {
        "commit_hash": "a8099b23d46f4e4d0db8406f078aee592bd0c363",
        "line_num": 838,
        "line_str": "operator|+= name|residual operator|* name|residual operator|*",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(840, 845)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 1383,
        "line_str": "return|return name|current return|; block|} block|}",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1453)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 617,
        "line_str": "block|{ literal|11.412069435091231 block|, operator|- literal|0.8968582807605691",
        "file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_line_num": "range(614, 622)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 584,
        "line_str": "block|{ literal|11.4121122022341 block|, operator|- literal|0.8968550851268697",
        "file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_line_num": "range(581, 589)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 727,
        "line_str": "name|qTy argument_list|( name|residuals argument_list|) expr_stmt|;",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/estimation/LevenbergMarquardtEstimator.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(504, 509)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 1377,
        "line_str": "name|double index|[] block|{ literal|0.2578330049 block|,",
        "file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_line_num": "range(1376, 1381)"
      },
      {
        "commit_hash": "05ffef3f7d106b68890136b920db5fe4d2d5e9b8",
        "line_num": 737,
        "line_str": "specifier|final name|double name|residual init|= name|residuals",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(830, 835)"
      },
      {
        "commit_hash": "8f3ac0a30b9fc24d69250b34b00caf8c523c65b2",
        "line_num": 704,
        "line_str": "for|for control|( name|int name|i init|=",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(806, 830)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1652,
        "line_str": "operator|= name|tmpVec expr_stmt|; block|} comment",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/estimation/LevenbergMarquardtEstimator.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1417, 1421)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1107,
        "line_str": "name|determineLMParameter argument_list|( name|oldRes argument_list|, name|delta",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/estimation/LevenbergMarquardtEstimator.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(875, 880)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 1367,
        "line_str": "comment if|if condition|( name|checker operator|.",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1453)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 618,
        "line_str": "literal|11.412069435091231 block|, operator|- literal|0.8968582807605691 block|}",
        "file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_line_num": "range(614, 622)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 938,
        "line_str": "name|VectorialPointValuePair argument_list|( name|point argument_list|, name|objective",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(994, 1007)"
      },
      {
        "commit_hash": "a8099b23d46f4e4d0db8406f078aee592bd0c363",
        "line_num": 839,
        "line_str": "name|residual operator|* name|residual operator|* name|residualsWeights",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(840, 845)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 1384,
        "line_str": "name|current return|; block|} block|} else|else",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1453)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 585,
        "line_str": "literal|11.4121122022341 block|, operator|- literal|0.8968550851268697 block|}",
        "file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_line_num": "range(581, 589)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 728,
        "line_str": "argument_list|( name|residuals argument_list|) expr_stmt|; comment",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/estimation/LevenbergMarquardtEstimator.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(504, 509)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 1378,
        "line_str": "index|[] block|{ literal|0.2578330049 block|, literal|0.257829976764542",
        "file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_line_num": "range(1376, 1381)"
      },
      {
        "commit_hash": "05ffef3f7d106b68890136b920db5fe4d2d5e9b8",
        "line_num": 738,
        "line_str": "name|double name|residual init|= name|residuals index|[",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(830, 835)"
      },
      {
        "commit_hash": "8f3ac0a30b9fc24d69250b34b00caf8c523c65b2",
        "line_num": 705,
        "line_str": "control|( name|int name|i init|= literal|0",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(806, 830)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1653,
        "line_str": "name|tmpVec expr_stmt|; block|} comment if|if",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/estimation/LevenbergMarquardtEstimator.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1417, 1421)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1108,
        "line_str": "argument_list|( name|oldRes argument_list|, name|delta argument_list|,",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/estimation/LevenbergMarquardtEstimator.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(875, 880)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 1368,
        "line_str": "if|if condition|( name|checker operator|. name|converged",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1453)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 619,
        "line_str": "block|, operator|- literal|0.8968582807605691 block|} argument_list|)",
        "file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_line_num": "range(614, 622)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 939,
        "line_str": "argument_list|( name|point argument_list|, name|objective argument_list|)",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(994, 1007)"
      },
      {
        "commit_hash": "a8099b23d46f4e4d0db8406f078aee592bd0c363",
        "line_num": 840,
        "line_str": "operator|* name|residual operator|* name|residualsWeights index|[",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(840, 845)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 1385,
        "line_str": "return|; block|} block|} else|else block|{",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1453)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 586,
        "line_str": "block|, operator|- literal|0.8968550851268697 block|} argument_list|)",
        "file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_line_num": "range(581, 589)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 729,
        "line_str": "name|residuals argument_list|) expr_stmt|; comment comment",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/estimation/LevenbergMarquardtEstimator.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(504, 509)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 1379,
        "line_str": "block|{ literal|0.2578330049 block|, literal|0.257829976764542 block|}",
        "file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_line_num": "range(1376, 1381)"
      },
      {
        "commit_hash": "05ffef3f7d106b68890136b920db5fe4d2d5e9b8",
        "line_num": 739,
        "line_str": "name|residual init|= name|residuals index|[ name|i",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(830, 835)"
      },
      {
        "commit_hash": "8f3ac0a30b9fc24d69250b34b00caf8c523c65b2",
        "line_num": 706,
        "line_str": "name|int name|i init|= literal|0 init|;",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(806, 830)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1654,
        "line_str": "expr_stmt|; block|} comment if|if condition|(",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/estimation/LevenbergMarquardtEstimator.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1417, 1421)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1109,
        "line_str": "name|oldRes argument_list|, name|delta argument_list|, name|diag",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/estimation/LevenbergMarquardtEstimator.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(875, 880)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 1369,
        "line_str": "condition|( name|checker operator|. name|converged argument_list|(",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1453)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 620,
        "line_str": "operator|- literal|0.8968582807605691 block|} argument_list|) argument_list|,",
        "file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_line_num": "range(614, 622)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 940,
        "line_str": "name|point argument_list|, name|objective argument_list|) expr_stmt|;",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(994, 1007)"
      },
      {
        "commit_hash": "a8099b23d46f4e4d0db8406f078aee592bd0c363",
        "line_num": 841,
        "line_str": "name|residual operator|* name|residualsWeights index|[ name|i",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(840, 845)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 1386,
        "line_str": "block|} block|} else|else block|{ comment",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1453)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 587,
        "line_str": "operator|- literal|0.8968550851268697 block|} argument_list|) argument_list|,",
        "file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_line_num": "range(581, 589)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 1380,
        "line_str": "literal|0.2578330049 block|, literal|0.257829976764542 block|} argument_list|)",
        "file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_line_num": "range(1376, 1381)"
      },
      {
        "commit_hash": "05ffef3f7d106b68890136b920db5fe4d2d5e9b8",
        "line_num": 740,
        "line_str": "init|= name|residuals index|[ name|i index|]",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(830, 835)"
      },
      {
        "commit_hash": "8f3ac0a30b9fc24d69250b34b00caf8c523c65b2",
        "line_num": 707,
        "line_str": "name|i init|= literal|0 init|; name|i",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(806, 830)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 1370,
        "line_str": "name|checker operator|. name|converged argument_list|( name|getIterations",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1453)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 621,
        "line_str": "literal|0.8968582807605691 block|} argument_list|) argument_list|, literal|false",
        "file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_line_num": "range(614, 622)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 941,
        "line_str": "argument_list|, name|objective argument_list|) expr_stmt|; comment",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(994, 1007)"
      },
      {
        "commit_hash": "a8099b23d46f4e4d0db8406f078aee592bd0c363",
        "line_num": 842,
        "line_str": "operator|* name|residualsWeights index|[ name|i index|]",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(840, 845)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 1387,
        "line_str": "block|} else|else block|{ comment if|if",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1453)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 588,
        "line_str": "literal|0.8968550851268697 block|} argument_list|) argument_list|, literal|false",
        "file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_line_num": "range(581, 589)"
      },
      {
        "commit_hash": "05ffef3f7d106b68890136b920db5fe4d2d5e9b8",
        "line_num": 741,
        "line_str": "name|residuals index|[ name|i index|] decl_stmt|;",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(830, 835)"
      },
      {
        "commit_hash": "8f3ac0a30b9fc24d69250b34b00caf8c523c65b2",
        "line_num": 708,
        "line_str": "init|= literal|0 init|; name|i operator|<",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(806, 830)"
      },
      {
        "commit_hash": "0fae0bdf347286b3b75048731be6604a807bf12e",
        "line_num": 1656,
        "line_str": "comment if|if condition|( operator|( operator|(",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/estimation/LevenbergMarquardtEstimator.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1453, 1454)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 1371,
        "line_str": "operator|. name|converged argument_list|( name|getIterations argument_list|()",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1453)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 942,
        "line_str": "name|objective argument_list|) expr_stmt|; comment name|double",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(994, 1007)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 1388,
        "line_str": "else|else block|{ comment if|if condition|(",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1453)"
      },
      {
        "commit_hash": "8f3ac0a30b9fc24d69250b34b00caf8c523c65b2",
        "line_num": 742,
        "line_str": "index|] expr_stmt|; block|} return|return name|chiSquare",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(846, 853)"
      },
      {
        "commit_hash": "8f3ac0a30b9fc24d69250b34b00caf8c523c65b2",
        "line_num": 709,
        "line_str": "literal|0 init|; name|i operator|< name|rows",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(806, 830)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 1372,
        "line_str": "name|converged argument_list|( name|getIterations argument_list|() argument_list|,",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1453)"
      },
      {
        "commit_hash": "05ffef3f7d106b68890136b920db5fe4d2d5e9b8",
        "line_num": 645,
        "line_str": "index|[ name|pj index|] operator|* name|residuals",
        "file_path": "src/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(724, 726)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 943,
        "line_str": "argument_list|) expr_stmt|; comment name|double name|actRed",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(994, 1007)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 1389,
        "line_str": "block|{ comment if|if condition|( operator|(",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1453)"
      },
      {
        "commit_hash": "8f3ac0a30b9fc24d69250b34b00caf8c523c65b2",
        "line_num": 743,
        "line_str": "expr_stmt|; block|} return|return name|chiSquare return|;",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(846, 853)"
      },
      {
        "commit_hash": "8f3ac0a30b9fc24d69250b34b00caf8c523c65b2",
        "line_num": 710,
        "line_str": "init|; name|i operator|< name|rows condition|;",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(806, 830)"
      },
      {
        "commit_hash": "66254d66b1b2bd77ad3c0bf467f67910cc898032",
        "line_num": 1373,
        "line_str": "argument_list|( name|getIterations argument_list|() argument_list|, name|previous",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1453)"
      },
      {
        "commit_hash": "05ffef3f7d106b68890136b920db5fe4d2d5e9b8",
        "line_num": 646,
        "line_str": "name|pj index|] operator|* name|residuals index|[",
        "file_path": "src/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(724, 726)"
      },
      {
        "commit_hash": "a24b1ec35bad99a2aa0f8400308bf3cc2fb452b0",
        "line_num": 415,
        "line_str": "condition|( literal|true condition|) block|{ name|incrementIterationsCounter",
        "file_path": "src/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(486, 490)"
      },
      {
        "commit_hash": "8f3ac0a30b9fc24d69250b34b00caf8c523c65b2",
        "line_num": 744,
        "line_str": "block|} return|return name|chiSquare return|; block|}",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(846, 853)"
      },
      {
        "commit_hash": "8f3ac0a30b9fc24d69250b34b00caf8c523c65b2",
        "line_num": 711,
        "line_str": "name|i operator|< name|rows condition|; operator|++",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(806, 830)"
      }
    ]
  },
  {
    "id": 10112,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["6d431d9affce372cf0e1dc0f8e8adfffb751ad43"],
    "fix_commit_hash": "d606ce89612ffedc0b1a3ee7df4dfd2b8e159ef7",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 88,
        "line_str": "argument_list|( name|min argument_list|, name|max argument_list|)",
        "file_path": "src/java/org/apache/commons/math/analysis/BisectionSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java",
        "input_line_num": "range(201, 205)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 87,
        "line_str": "name|solve argument_list|( name|min argument_list|, name|max",
        "file_path": "src/java/org/apache/commons/math/analysis/BisectionSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java",
        "input_line_num": "range(201, 205)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 86,
        "line_str": "return|return name|solve argument_list|( name|min argument_list|,",
        "file_path": "src/java/org/apache/commons/math/analysis/BisectionSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java",
        "input_line_num": "range(201, 205)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 85,
        "line_str": "block|{ return|return name|solve argument_list|( name|min",
        "file_path": "src/java/org/apache/commons/math/analysis/BisectionSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java",
        "input_line_num": "range(201, 205)"
      },
      {
        "commit_hash": "d676348bbf7deb7891c3ade869f3b1d36e499486",
        "line_num": 454,
        "line_str": "literal|0 argument_list|) expr_stmt|; block|} comment",
        "file_path": "src/test/org/apache/commons/math/analysis/BisectionSolverTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/analysis/solvers/BisectionSolverTest.java",
        "input_line_num": "range(589, 590)"
      }
    ]
  },
  {
    "id": 10113,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["edfe1c21d5f139daf883c3df974c1f4f033368fc"],
    "fix_commit_hash": "4949e222b34e180c89aecfaa107ed7174d0f55d3",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "edfe1c21d5f139daf883c3df974c1f4f033368fc",
        "line_num": 860,
        "line_str": "return|return name|getCumPct argument_list|( operator|( name|Comparable",
        "file_path": "src/java/org/apache/commons/math/stat/Frequency.java",
        "input_file_path": "src/main/java/org/apache/commons/math/stat/Frequency.java",
        "input_line_num": "range(857, 862)"
      },
      {
        "commit_hash": "edfe1c21d5f139daf883c3df974c1f4f033368fc",
        "line_num": 859,
        "line_str": "block|{ return|return name|getCumPct argument_list|( operator|(",
        "file_path": "src/java/org/apache/commons/math/stat/Frequency.java",
        "input_file_path": "src/main/java/org/apache/commons/math/stat/Frequency.java",
        "input_line_num": "range(857, 862)"
      },
      {
        "commit_hash": "edfe1c21d5f139daf883c3df974c1f4f033368fc",
        "line_num": 858,
        "line_str": "parameter_list|) block|{ return|return name|getCumPct argument_list|(",
        "file_path": "src/java/org/apache/commons/math/stat/Frequency.java",
        "input_file_path": "src/main/java/org/apache/commons/math/stat/Frequency.java",
        "input_line_num": "range(857, 862)"
      },
      {
        "commit_hash": "edfe1c21d5f139daf883c3df974c1f4f033368fc",
        "line_num": 857,
        "line_str": "name|v parameter_list|) block|{ return|return name|getCumPct",
        "file_path": "src/java/org/apache/commons/math/stat/Frequency.java",
        "input_file_path": "src/main/java/org/apache/commons/math/stat/Frequency.java",
        "input_line_num": "range(857, 862)"
      },
      {
        "commit_hash": "edfe1c21d5f139daf883c3df974c1f4f033368fc",
        "line_num": 861,
        "line_str": "name|getCumPct argument_list|( operator|( name|Comparable argument_list|<",
        "file_path": "src/java/org/apache/commons/math/stat/Frequency.java",
        "input_file_path": "src/main/java/org/apache/commons/math/stat/Frequency.java",
        "input_line_num": "range(857, 862)"
      }
    ]
  },
  {
    "id": 10114,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["1003342463a4eadd45aba706fd8891a1be855609"],
    "fix_commit_hash": "1807c813dec1fd09e9f5df3875e1664101046181",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "1003342463a4eadd45aba706fd8891a1be855609",
        "line_num": 4686,
        "line_str": "name|int name|sum init|= literal|0 decl_stmt|;",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(4949, 4954)"
      },
      {
        "commit_hash": "1003342463a4eadd45aba706fd8891a1be855609",
        "line_num": 4685,
        "line_str": "block|{ name|int name|sum init|= literal|0",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(4949, 4954)"
      },
      {
        "commit_hash": "1003342463a4eadd45aba706fd8891a1be855609",
        "line_num": 4684,
        "line_str": "parameter_list|) block|{ name|int name|sum init|=",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(4949, 4954)"
      },
      {
        "commit_hash": "1003342463a4eadd45aba706fd8891a1be855609",
        "line_num": 4683,
        "line_str": "name|p2 parameter_list|) block|{ name|int name|sum",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(4949, 4954)"
      },
      {
        "commit_hash": "1003342463a4eadd45aba706fd8891a1be855609",
        "line_num": 4682,
        "line_str": "index|[] name|p2 parameter_list|) block|{ name|int",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(4949, 4954)"
      },
      {
        "commit_hash": "37cf3501697c8c69d1d28e0a75a0cb1f76b2f77d",
        "line_num": 644,
        "line_str": "name|cluster3Found argument_list|) expr_stmt|; block|} block|}",
        "file_path": "src/test/org/apache/commons/math/stat/clustering/KMeansPlusPlusClustererTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClustererTest.java",
        "input_line_num": "range(644, 645)"
      },
      {
        "commit_hash": "1003342463a4eadd45aba706fd8891a1be855609",
        "line_num": 4709,
        "line_str": "name|int name|dp init|= name|p1 index|[",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(4972, 4977)"
      },
      {
        "commit_hash": "1003342463a4eadd45aba706fd8891a1be855609",
        "line_num": 4708,
        "line_str": "specifier|final name|int name|dp init|= name|p1",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(4972, 4977)"
      },
      {
        "commit_hash": "1003342463a4eadd45aba706fd8891a1be855609",
        "line_num": 4707,
        "line_str": "block|{ specifier|final name|int name|dp init|=",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(4972, 4977)"
      },
      {
        "commit_hash": "1003342463a4eadd45aba706fd8891a1be855609",
        "line_num": 4706,
        "line_str": "control|) block|{ specifier|final name|int name|dp",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(4972, 4977)"
      },
      {
        "commit_hash": "1003342463a4eadd45aba706fd8891a1be855609",
        "line_num": 4705,
        "line_str": "operator|++ control|) block|{ specifier|final name|int",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(4972, 4977)"
      }
    ]
  },
  {
    "id": 10115,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["afa0446e73e540160191f23be4dff3afdab898a4"],
    "fix_commit_hash": "6604801d11eb57c36f22c1113714b4943a982726",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "64c7a39ddaa272b63134aea892ceb95aa7eb2183",
        "line_num": 1084,
        "line_str": "block|{ if|if condition|( operator|! name|MathUtils",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1150, 1153)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1080,
        "line_str": "literal|null return|; block|} block|} block|}",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1187, 1190)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1076,
        "line_str": "block|} else|else block|{ return|return literal|null",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1170, 1185)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1072,
        "line_str": "name|row operator|= name|i expr_stmt|; block|}",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1170, 1185)"
      },
      {
        "commit_hash": "64c7a39ddaa272b63134aea892ceb95aa7eb2183",
        "line_num": 1101,
        "line_str": "name|epsilon argument_list|) condition|) block|{ if|if",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1168, 1170)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1068,
        "line_str": "operator|== literal|null condition|) block|{ name|row",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1170, 1185)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1064,
        "line_str": "block|{ if|if condition|( name|row operator|==",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1170, 1185)"
      },
      {
        "commit_hash": "64c7a39ddaa272b63134aea892ceb95aa7eb2183",
        "line_num": 1085,
        "line_str": "if|if condition|( operator|! name|MathUtils operator|.",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1150, 1153)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1081,
        "line_str": "return|; block|} block|} block|} return|return",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1187, 1190)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1077,
        "line_str": "else|else block|{ return|return literal|null return|;",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1170, 1185)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1073,
        "line_str": "operator|= name|i expr_stmt|; block|} else|else",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1170, 1185)"
      },
      {
        "commit_hash": "64c7a39ddaa272b63134aea892ceb95aa7eb2183",
        "line_num": 1102,
        "line_str": "argument_list|) condition|) block|{ if|if condition|(",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1168, 1170)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1069,
        "line_str": "literal|null condition|) block|{ name|row operator|=",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1170, 1185)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1065,
        "line_str": "if|if condition|( name|row operator|== literal|null",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1170, 1185)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1082,
        "line_str": "block|} block|} block|} return|return name|row",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1187, 1190)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1074,
        "line_str": "name|i expr_stmt|; block|} else|else block|{",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1170, 1185)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1070,
        "line_str": "condition|) block|{ name|row operator|= name|i",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1170, 1185)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1066,
        "line_str": "condition|( name|row operator|== literal|null condition|)",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1170, 1185)"
      },
      {
        "commit_hash": "64c7a39ddaa272b63134aea892ceb95aa7eb2183",
        "line_num": 1083,
        "line_str": "control|) block|{ if|if condition|( operator|!",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1150, 1153)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1075,
        "line_str": "expr_stmt|; block|} else|else block|{ return|return",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1170, 1185)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1071,
        "line_str": "block|{ name|row operator|= name|i expr_stmt|;",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1170, 1185)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1067,
        "line_str": "name|row operator|== literal|null condition|) block|{",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1170, 1185)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1063,
        "line_str": "condition|) block|{ if|if condition|( name|row",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1170, 1185)"
      }
    ]
  },
  {
    "id": 10116,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["687a67ba41aa84ddbc00b29729318f2f4337277f"],
    "fix_commit_hash": "afa0446e73e540160191f23be4dff3afdab898a4",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "072a28516cdac2020bdc69276906a31e8e3bae71",
        "line_num": 943,
        "line_str": "name|void name|testUnboundedSolution parameter_list|() block|{ name|LinearObjectiveFunction",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(942, 946)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1406,
        "line_str": "argument_list|) operator|== literal|1 condition|) block|{",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1504)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1373,
        "line_str": "condition|) block|{ return|return literal|0 return|;",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1504)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1340,
        "line_str": "return|; block|} comment specifier|protected name|double",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1427, 1435)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1307,
        "line_str": "block|{ name|coefficients index|[ name|i index|]",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1391, 1395)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 299,
        "line_str": "index|[ literal|1 index|] argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(298, 302)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 811,
        "line_str": "expr_stmt|; block|} specifier|public name|void name|testInfeasibleSolution",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(806, 813)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 646,
        "line_str": "index|[ literal|1 index|] argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(645, 649)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1026,
        "line_str": "argument_list|, literal|false argument_list|) expr_stmt|; name|fail",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1053)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 481,
        "line_str": "name|solution operator|. name|getValue argument_list|() argument_list|)",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(481, 488)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 927,
        "line_str": "parameter_list|) block|{ comment block|} catch|catch",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(911, 942)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1390,
        "line_str": "operator|< name|col condition|; name|i operator|++",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1504)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1357,
        "line_str": "operator|+ name|decisionVariable decl_stmt|; name|Integer name|basicRow",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1435, 1447)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1324,
        "line_str": "operator|) expr_stmt|; block|} return|return operator|new",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1410, 1413)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 52,
        "line_str": "name|TestCase import|; end_import  begin_import",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(44, 54)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1043,
        "line_str": "block|} catch|catch parameter_list|( name|OptimizationException name|e",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1053)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1010,
        "line_str": "name|SimplexSolver argument_list|() decl_stmt|; try|try block|{",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1005, 1011)"
      },
      {
        "commit_hash": "072a28516cdac2020bdc69276906a31e8e3bae71",
        "line_num": 944,
        "line_str": "name|testUnboundedSolution parameter_list|() block|{ name|LinearObjectiveFunction name|f",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(942, 946)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1407,
        "line_str": "operator|== literal|1 condition|) block|{ return|return",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1504)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1374,
        "line_str": "block|{ return|return literal|0 return|; block|}",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1504)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1341,
        "line_str": "block|} comment specifier|protected name|double name|getDecisionVariableValue",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1427, 1435)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 300,
        "line_str": "literal|1 index|] argument_list|) expr_stmt|; name|assertEquals",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(298, 302)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 812,
        "line_str": "block|} specifier|public name|void name|testInfeasibleSolution parameter_list|()",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(806, 813)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 647,
        "line_str": "literal|1 index|] argument_list|) expr_stmt|; name|assertEquals",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(645, 649)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1027,
        "line_str": "literal|false argument_list|) expr_stmt|; name|fail argument_list|(",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1053)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 482,
        "line_str": "operator|. name|getValue argument_list|() argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(481, 488)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 928,
        "line_str": "block|{ comment block|} catch|catch parameter_list|(",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(911, 942)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1391,
        "line_str": "name|col condition|; name|i operator|++ control|)",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1504)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1358,
        "line_str": "name|decisionVariable decl_stmt|; name|Integer name|basicRow init|=",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1435, 1447)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1325,
        "line_str": "expr_stmt|; block|} return|return operator|new name|RealPointValuePair",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1410, 1413)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 796,
        "line_str": "argument_list|() index|[ literal|1 index|] argument_list|)",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(796, 800)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 53,
        "line_str": "import|; end_import  begin_import import|import",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(44, 54)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1044,
        "line_str": "catch|catch parameter_list|( name|OptimizationException name|e parameter_list|)",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1053)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1011,
        "line_str": "argument_list|() decl_stmt|; try|try block|{ name|solver",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1005, 1011)"
      },
      {
        "commit_hash": "072a28516cdac2020bdc69276906a31e8e3bae71",
        "line_num": 945,
        "line_str": "parameter_list|() block|{ name|LinearObjectiveFunction name|f init|=",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(942, 946)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1408,
        "line_str": "literal|1 condition|) block|{ return|return literal|0",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1504)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1375,
        "line_str": "return|return literal|0 return|; block|} comment",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1504)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1342,
        "line_str": "comment specifier|protected name|double name|getDecisionVariableValue parameter_list|(",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1427, 1435)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1309,
        "line_str": "index|[ name|i index|] operator|= name|getDecisionVariableValue",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1396, 1404)"
      },
      {
        "commit_hash": "072a28516cdac2020bdc69276906a31e8e3bae71",
        "line_num": 813,
        "line_str": "specifier|public name|void name|testInfeasibleSolution parameter_list|() block|{",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(813, 817)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 301,
        "line_str": "index|] argument_list|) expr_stmt|; name|assertEquals argument_list|(",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(298, 302)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 136,
        "line_str": "begin_class specifier|public class|class name|SimplexSolverTest extends|extends",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(136, 143)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 648,
        "line_str": "index|] argument_list|) expr_stmt|; name|assertEquals argument_list|(",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(645, 649)"
      },
      {
        "commit_hash": "64c7a39ddaa272b63134aea892ceb95aa7eb2183",
        "line_num": 1540,
        "line_str": "argument_list|() index|[ literal|2 index|] argument_list|)",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1536, 1540)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 483,
        "line_str": "name|getValue argument_list|() argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(481, 488)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1028,
        "line_str": "argument_list|) expr_stmt|; name|fail argument_list|( literal|\"An exception should have been thrown.\"",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1053)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 929,
        "line_str": "comment block|} catch|catch parameter_list|( name|OptimizationException",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(911, 942)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1392,
        "line_str": "condition|; name|i operator|++ control|) block|{",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1504)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1359,
        "line_str": "decl_stmt|; name|Integer name|basicRow init|= name|getBasicRow",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1435, 1447)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 896,
        "line_str": "operator|new name|SimplexSolver argument_list|() decl_stmt|; try|try",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(894, 900)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 285,
        "line_str": "argument_list|() index|[ literal|0 index|] argument_list|)",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(285, 289)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 797,
        "line_str": "index|[ literal|1 index|] argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(796, 800)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 632,
        "line_str": "argument_list|() index|[ literal|0 index|] argument_list|)",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(632, 636)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1045,
        "line_str": "parameter_list|( name|OptimizationException name|e parameter_list|) block|{",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1053)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1012,
        "line_str": "decl_stmt|; try|try block|{ name|solver operator|.",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1005, 1011)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1409,
        "line_str": "condition|) block|{ return|return literal|0 return|;",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1504)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1376,
        "line_str": "literal|0 return|; block|} comment comment",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1504)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1343,
        "line_str": "specifier|protected name|double name|getDecisionVariableValue parameter_list|( specifier|final",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1427, 1435)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1310,
        "line_str": "name|i index|] operator|= name|getDecisionVariableValue argument_list|(",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1396, 1404)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 913,
        "line_str": "argument_list|, literal|false argument_list|) expr_stmt|; name|fail",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(911, 942)"
      },
      {
        "commit_hash": "072a28516cdac2020bdc69276906a31e8e3bae71",
        "line_num": 814,
        "line_str": "name|void name|testInfeasibleSolution parameter_list|() block|{ name|LinearObjectiveFunction",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(813, 817)"
      },
      {
        "commit_hash": "64c7a39ddaa272b63134aea892ceb95aa7eb2183",
        "line_num": 1554,
        "line_str": "argument_list|) expr_stmt|; block|} specifier|public name|void",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1546, 1551)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 137,
        "line_str": "specifier|public class|class name|SimplexSolverTest extends|extends name|TestCase",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(136, 143)"
      },
      {
        "commit_hash": "64c7a39ddaa272b63134aea892ceb95aa7eb2183",
        "line_num": 1541,
        "line_str": "index|[ literal|2 index|] argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1536, 1540)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 484,
        "line_str": "argument_list|() argument_list|) expr_stmt|; block|} specifier|public",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(481, 488)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1029,
        "line_str": "expr_stmt|; name|fail argument_list|( literal|\"An exception should have been thrown.\" argument_list|)",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1053)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 930,
        "line_str": "block|} catch|catch parameter_list|( name|OptimizationException name|e",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(911, 942)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1393,
        "line_str": "name|i operator|++ control|) block|{ if|if",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1504)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 897,
        "line_str": "name|SimplexSolver argument_list|() decl_stmt|; try|try block|{",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(894, 900)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 286,
        "line_str": "index|[ literal|0 index|] argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(285, 289)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 798,
        "line_str": "literal|1 index|] argument_list|) expr_stmt|; name|assertEquals",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(796, 800)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 633,
        "line_str": "index|[ literal|0 index|] argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(632, 636)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1046,
        "line_str": "name|OptimizationException name|e parameter_list|) block|{ name|fail",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1053)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1013,
        "line_str": "try|try block|{ name|solver operator|. name|optimize",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1005, 1011)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1410,
        "line_str": "block|{ return|return literal|0 return|; block|}",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1504)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1377,
        "line_str": "return|; block|} comment comment for|for",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1504)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1344,
        "line_str": "name|double name|getDecisionVariableValue parameter_list|( specifier|final name|int",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1427, 1435)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1311,
        "line_str": "index|] operator|= name|getDecisionVariableValue argument_list|( name|i",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1396, 1404)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1278,
        "line_str": "name|getOriginalNumDecisionVariables argument_list|() index|] decl_stmt|; name|double",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1365, 1377)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 914,
        "line_str": "literal|false argument_list|) expr_stmt|; name|fail argument_list|(",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(911, 942)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1360,
        "line_str": "literal|.0000001 argument_list|) expr_stmt|; block|} specifier|public",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1356, 1358)"
      },
      {
        "commit_hash": "072a28516cdac2020bdc69276906a31e8e3bae71",
        "line_num": 815,
        "line_str": "name|testInfeasibleSolution parameter_list|() block|{ name|LinearObjectiveFunction name|f",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(813, 817)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 138,
        "line_str": "class|class name|SimplexSolverTest extends|extends name|TestCase block|{",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(136, 143)"
      },
      {
        "commit_hash": "64c7a39ddaa272b63134aea892ceb95aa7eb2183",
        "line_num": 1542,
        "line_str": "literal|2 index|] argument_list|) expr_stmt|; name|assertEquals",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1536, 1540)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 485,
        "line_str": "argument_list|) expr_stmt|; block|} specifier|public name|void",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(481, 488)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1030,
        "line_str": "name|fail argument_list|( literal|\"An exception should have been thrown.\" argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1053)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 931,
        "line_str": "catch|catch parameter_list|( name|OptimizationException name|e parameter_list|)",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(911, 942)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1394,
        "line_str": "operator|++ control|) block|{ if|if condition|(",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1504)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1361,
        "line_str": "name|basicRow init|= name|getBasicRow argument_list|( name|col",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1504)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 898,
        "line_str": "argument_list|() decl_stmt|; try|try block|{ name|solver",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(894, 900)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 287,
        "line_str": "literal|0 index|] argument_list|) expr_stmt|; name|assertEquals",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(285, 289)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 799,
        "line_str": "index|] argument_list|) expr_stmt|; name|assertEquals argument_list|(",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(796, 800)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 634,
        "line_str": "literal|0 index|] argument_list|) expr_stmt|; name|assertEquals",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(632, 636)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 23,
        "line_str": "package|; end_package  begin_import import|import",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(23, 25)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1014,
        "line_str": "block|{ name|solver operator|. name|optimize argument_list|(",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1005, 1011)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1047,
        "line_str": "name|e parameter_list|) block|{ name|fail argument_list|(",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1053)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1460,
        "line_str": "literal|.0000001 argument_list|) expr_stmt|; block|} specifier|public",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1649, 1653)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1411,
        "line_str": "return|return literal|0 return|; block|} block|}",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1504)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1378,
        "line_str": "block|} comment comment for|for control|(",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1504)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1345,
        "line_str": "name|getDecisionVariableValue parameter_list|( specifier|final name|int name|decisionVariable",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1427, 1435)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1312,
        "line_str": "operator|= name|getDecisionVariableValue argument_list|( name|i argument_list|)",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1396, 1404)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1279,
        "line_str": "argument_list|() index|] decl_stmt|; name|double name|mostNegative",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1365, 1377)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 915,
        "line_str": "argument_list|) expr_stmt|; name|fail argument_list|( literal|\"An exception should have been thrown.\"",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(911, 942)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1361,
        "line_str": "argument_list|) expr_stmt|; block|} specifier|public name|void",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1356, 1358)"
      },
      {
        "commit_hash": "072a28516cdac2020bdc69276906a31e8e3bae71",
        "line_num": 816,
        "line_str": "parameter_list|() block|{ name|LinearObjectiveFunction name|f init|=",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(813, 817)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 783,
        "line_str": "argument_list|() index|[ literal|0 index|] argument_list|)",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(783, 787)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 139,
        "line_str": "name|SimplexSolverTest extends|extends name|TestCase block|{ specifier|public",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(136, 143)"
      },
      {
        "commit_hash": "64c7a39ddaa272b63134aea892ceb95aa7eb2183",
        "line_num": 1543,
        "line_str": "index|] argument_list|) expr_stmt|; name|assertEquals argument_list|(",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1536, 1540)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 486,
        "line_str": "expr_stmt|; block|} specifier|public name|void name|testMinimization",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(481, 488)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1031,
        "line_str": "argument_list|( literal|\"An exception should have been thrown.\" argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1053)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 932,
        "line_str": "parameter_list|( name|OptimizationException name|e parameter_list|) block|{",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(911, 942)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1395,
        "line_str": "control|) block|{ if|if condition|( name|tableau",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1504)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1362,
        "line_str": "init|= name|getBasicRow argument_list|( name|col argument_list|)",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1504)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 899,
        "line_str": "decl_stmt|; try|try block|{ name|solver operator|.",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(894, 900)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 288,
        "line_str": "index|] argument_list|) expr_stmt|; name|assertEquals argument_list|(",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(285, 289)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 635,
        "line_str": "index|] argument_list|) expr_stmt|; name|assertEquals argument_list|(",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(632, 636)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 24,
        "line_str": "end_package  begin_import import|import name|java",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(23, 25)"
      },
      {
        "commit_hash": "64c7a39ddaa272b63134aea892ceb95aa7eb2183",
        "line_num": 1527,
        "line_str": "argument_list|() index|[ literal|1 index|] argument_list|)",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1523, 1527)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1048,
        "line_str": "parameter_list|) block|{ name|fail argument_list|( literal|\"wrong exception caught\"",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1053)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1461,
        "line_str": "argument_list|) expr_stmt|; block|} specifier|public name|void",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1649, 1653)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1412,
        "line_str": "literal|0 return|; block|} block|} return|return",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1504)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1379,
        "line_str": "comment comment for|for control|( name|int",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1504)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1346,
        "line_str": "parameter_list|( specifier|final name|int name|decisionVariable parameter_list|)",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1427, 1435)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1313,
        "line_str": "name|getDecisionVariableValue argument_list|( name|i argument_list|) operator|-",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1396, 1404)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1280,
        "line_str": "index|] decl_stmt|; name|double name|mostNegative init|=",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1365, 1377)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 916,
        "line_str": "expr_stmt|; name|fail argument_list|( literal|\"An exception should have been thrown.\" argument_list|)",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(911, 942)"
      },
      {
        "commit_hash": "64c7a39ddaa272b63134aea892ceb95aa7eb2183",
        "line_num": 1362,
        "line_str": "expr_stmt|; block|} specifier|public name|void name|testEpsilon",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1358, 1360)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 784,
        "line_str": "index|[ literal|0 index|] argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(783, 787)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 140,
        "line_str": "extends|extends name|TestCase block|{ specifier|public name|void",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(136, 143)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1032,
        "line_str": "literal|\"An exception should have been thrown.\" argument_list|) expr_stmt|; block|} catch|catch",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1053)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 487,
        "line_str": "block|} specifier|public name|void name|testMinimization parameter_list|()",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(481, 488)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 933,
        "line_str": "name|OptimizationException name|e parameter_list|) block|{ name|fail",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(911, 942)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1396,
        "line_str": "block|{ if|if condition|( name|tableau operator|.",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1504)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1363,
        "line_str": "name|getBasicRow argument_list|( name|col argument_list|) decl_stmt|;",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1504)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 900,
        "line_str": "try|try block|{ name|solver operator|. name|optimize",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(894, 900)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1049,
        "line_str": "block|{ name|fail argument_list|( literal|\"wrong exception caught\" argument_list|)",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1053)"
      },
      {
        "commit_hash": "64c7a39ddaa272b63134aea892ceb95aa7eb2183",
        "line_num": 1528,
        "line_str": "index|[ literal|1 index|] argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1523, 1527)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 471,
        "line_str": "argument_list|() index|[ literal|1 index|] argument_list|)",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(471, 475)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1462,
        "line_str": "expr_stmt|; block|} specifier|public name|void name|testLargeModel",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1649, 1653)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1413,
        "line_str": "return|; block|} block|} return|return name|getEntry",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1504)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1380,
        "line_str": "comment for|for control|( name|int name|i",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1504)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1347,
        "line_str": "specifier|final name|int name|decisionVariable parameter_list|) block|{",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1427, 1435)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1314,
        "line_str": "argument_list|( name|i argument_list|) operator|- operator|(",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1396, 1404)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1281,
        "line_str": "decl_stmt|; name|double name|mostNegative init|= name|getDecisionVariableValue",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1365, 1377)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 917,
        "line_str": "name|fail argument_list|( literal|\"An exception should have been thrown.\" argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(911, 942)"
      },
      {
        "commit_hash": "64c7a39ddaa272b63134aea892ceb95aa7eb2183",
        "line_num": 1363,
        "line_str": "block|} specifier|public name|void name|testEpsilon parameter_list|()",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1358, 1360)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 785,
        "line_str": "literal|0 index|] argument_list|) expr_stmt|; name|assertEquals",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(783, 787)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 141,
        "line_str": "name|TestCase block|{ specifier|public name|void name|testSimplexSolver",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(136, 143)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1033,
        "line_str": "argument_list|) expr_stmt|; block|} catch|catch parameter_list|(",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1053)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 934,
        "line_str": "name|e parameter_list|) block|{ name|fail argument_list|(",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(911, 942)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1397,
        "line_str": "if|if condition|( name|tableau operator|. name|getEntry",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1504)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1364,
        "line_str": "argument_list|( name|col argument_list|) decl_stmt|; if|if",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1504)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 901,
        "line_str": "block|{ name|solver operator|. name|optimize argument_list|(",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(894, 900)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1050,
        "line_str": "name|fail argument_list|( literal|\"wrong exception caught\" argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1053)"
      },
      {
        "commit_hash": "64c7a39ddaa272b63134aea892ceb95aa7eb2183",
        "line_num": 1529,
        "line_str": "literal|1 index|] argument_list|) expr_stmt|; name|assertEquals",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1523, 1527)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 472,
        "line_str": "index|[ literal|1 index|] argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(471, 475)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1463,
        "line_str": "block|} specifier|public name|void name|testLargeModel parameter_list|()",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1649, 1653)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1414,
        "line_str": "block|} block|} return|return name|getEntry argument_list|(",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1504)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1381,
        "line_str": "for|for control|( name|int name|i init|=",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1504)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1348,
        "line_str": "name|int name|decisionVariable parameter_list|) block|{ name|int",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1435, 1447)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1315,
        "line_str": "name|i argument_list|) operator|- operator|( name|restrictToNonNegative",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1396, 1404)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1282,
        "line_str": "name|double name|mostNegative init|= name|getDecisionVariableValue argument_list|(",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1365, 1377)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 918,
        "line_str": "argument_list|( literal|\"An exception should have been thrown.\" argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(911, 942)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 786,
        "line_str": "index|] argument_list|) expr_stmt|; name|assertEquals argument_list|(",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(783, 787)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 142,
        "line_str": "block|{ specifier|public name|void name|testSimplexSolver parameter_list|()",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(136, 143)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1034,
        "line_str": "expr_stmt|; block|} catch|catch parameter_list|( name|UnboundedSolutionException",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1053)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 935,
        "line_str": "parameter_list|) block|{ name|fail argument_list|( literal|\"wrong exception caught\"",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(911, 942)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1398,
        "line_str": "condition|( name|tableau operator|. name|getEntry argument_list|(",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1504)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1365,
        "line_str": "name|col argument_list|) decl_stmt|; if|if condition|(",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1504)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1051,
        "line_str": "argument_list|( literal|\"wrong exception caught\" argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1053)"
      },
      {
        "commit_hash": "64c7a39ddaa272b63134aea892ceb95aa7eb2183",
        "line_num": 1530,
        "line_str": "index|] argument_list|) expr_stmt|; name|assertEquals argument_list|(",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1523, 1527)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 473,
        "line_str": "literal|1 index|] argument_list|) expr_stmt|; name|assertEquals",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(471, 475)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1415,
        "line_str": "block|} return|return name|getEntry argument_list|( name|basicRow",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1504)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1382,
        "line_str": "control|( name|int name|i init|= name|getNumObjectiveFunctions",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1504)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1349,
        "line_str": "name|decisionVariable parameter_list|) block|{ name|int name|col",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1435, 1447)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1316,
        "line_str": "argument_list|) operator|- operator|( name|restrictToNonNegative condition|?",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1396, 1404)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1283,
        "line_str": "name|mostNegative init|= name|getDecisionVariableValue argument_list|( name|getOriginalNumDecisionVariables",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1365, 1377)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 919,
        "line_str": "literal|\"An exception should have been thrown.\" argument_list|) expr_stmt|; block|} catch|catch",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(911, 942)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 308,
        "line_str": "name|solution operator|. name|getValue argument_list|() argument_list|)",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(308, 316)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 44,
        "line_str": "end_import  begin_import import|import name|junit",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(44, 54)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1035,
        "line_str": "block|} catch|catch parameter_list|( name|UnboundedSolutionException name|e",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1053)"
      },
      {
        "commit_hash": "64c7a39ddaa272b63134aea892ceb95aa7eb2183",
        "line_num": 1514,
        "line_str": "argument_list|() index|[ literal|0 index|] argument_list|)",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1510, 1514)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 936,
        "line_str": "block|{ name|fail argument_list|( literal|\"wrong exception caught\" argument_list|)",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(911, 942)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1399,
        "line_str": "name|tableau operator|. name|getEntry argument_list|( name|basicRow",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1504)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1366,
        "line_str": "argument_list|) decl_stmt|; if|if condition|( name|basicRow",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1504)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1052,
        "line_str": "literal|\"wrong exception caught\" argument_list|) expr_stmt|; block|} block|}",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1053)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 474,
        "line_str": "index|] argument_list|) expr_stmt|; name|assertEquals argument_list|(",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(471, 475)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1416,
        "line_str": "return|return name|getEntry argument_list|( name|basicRow argument_list|,",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1504)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1383,
        "line_str": "name|int name|i init|= name|getNumObjectiveFunctions argument_list|()",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1504)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1350,
        "line_str": "parameter_list|) block|{ name|int name|col init|=",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1435, 1447)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 920,
        "line_str": "argument_list|) expr_stmt|; block|} catch|catch parameter_list|(",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(911, 942)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1284,
        "line_str": "init|= name|getDecisionVariableValue argument_list|( name|getOriginalNumDecisionVariables argument_list|()",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1365, 1377)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 309,
        "line_str": "operator|. name|getValue argument_list|() argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(308, 316)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 656,
        "line_str": "name|solution operator|. name|getValue argument_list|() argument_list|)",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(656, 663)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 45,
        "line_str": "begin_import import|import name|junit operator|.",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(44, 54)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1036,
        "line_str": "catch|catch parameter_list|( name|UnboundedSolutionException name|e parameter_list|)",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1053)"
      },
      {
        "commit_hash": "64c7a39ddaa272b63134aea892ceb95aa7eb2183",
        "line_num": 1515,
        "line_str": "index|[ literal|0 index|] argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1510, 1514)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 458,
        "line_str": "argument_list|() index|[ literal|0 index|] argument_list|)",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(458, 462)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 937,
        "line_str": "name|fail argument_list|( literal|\"wrong exception caught\" argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(911, 942)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1400,
        "line_str": "operator|. name|getEntry argument_list|( name|basicRow argument_list|,",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1504)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1367,
        "line_str": "decl_stmt|; if|if condition|( name|basicRow operator|==",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1504)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1053,
        "line_str": "argument_list|) expr_stmt|; block|} block|} specifier|public",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1053)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 921,
        "line_str": "expr_stmt|; block|} catch|catch parameter_list|( name|NoFeasibleSolutionException",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(911, 942)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1384,
        "line_str": "name|i init|= name|getNumObjectiveFunctions argument_list|() init|;",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1504)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1351,
        "line_str": "block|{ name|int name|col init|= name|getNumObjectiveFunctions",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1435, 1447)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 310,
        "line_str": "name|getValue argument_list|() argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(308, 316)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1285,
        "line_str": "name|getDecisionVariableValue argument_list|( name|getOriginalNumDecisionVariables argument_list|() argument_list|)",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1365, 1377)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 657,
        "line_str": "operator|. name|getValue argument_list|() argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(656, 663)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 46,
        "line_str": "begin_import import|import name|junit operator|. name|framework",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(44, 54)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1037,
        "line_str": "parameter_list|( name|UnboundedSolutionException name|e parameter_list|) block|{",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1053)"
      },
      {
        "commit_hash": "64c7a39ddaa272b63134aea892ceb95aa7eb2183",
        "line_num": 1516,
        "line_str": "literal|0 index|] argument_list|) expr_stmt|; name|assertEquals",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1510, 1514)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 459,
        "line_str": "index|[ literal|0 index|] argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(458, 462)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 938,
        "line_str": "argument_list|( literal|\"wrong exception caught\" argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(911, 942)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1401,
        "line_str": "name|getEntry argument_list|( name|basicRow argument_list|, name|i",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1504)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1368,
        "line_str": "if|if condition|( name|basicRow operator|== literal|null",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1504)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 806,
        "line_str": "name|solution operator|. name|getValue argument_list|() argument_list|)",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(806, 813)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1054,
        "line_str": "expr_stmt|; block|} block|} specifier|public name|void",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1053)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 922,
        "line_str": "block|} catch|catch parameter_list|( name|NoFeasibleSolutionException name|e",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(911, 942)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1385,
        "line_str": "init|= name|getNumObjectiveFunctions argument_list|() init|; name|i",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1504)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1352,
        "line_str": "name|int name|col init|= name|getNumObjectiveFunctions argument_list|()",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1435, 1447)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 311,
        "line_str": "argument_list|() argument_list|) expr_stmt|; block|} comment",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(308, 316)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1286,
        "line_str": "argument_list|( name|getOriginalNumDecisionVariables argument_list|() argument_list|) decl_stmt|;",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1365, 1377)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 658,
        "line_str": "name|getValue argument_list|() argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(656, 663)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 47,
        "line_str": "import|import name|junit operator|. name|framework operator|.",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(44, 54)"
      },
      {
        "commit_hash": "64c7a39ddaa272b63134aea892ceb95aa7eb2183",
        "line_num": 1550,
        "line_str": "name|solution operator|. name|getValue argument_list|() argument_list|)",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1546, 1551)"
      },
      {
        "commit_hash": "64c7a39ddaa272b63134aea892ceb95aa7eb2183",
        "line_num": 1517,
        "line_str": "index|] argument_list|) expr_stmt|; name|assertEquals argument_list|(",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1510, 1514)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 460,
        "line_str": "literal|0 index|] argument_list|) expr_stmt|; name|assertEquals",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(458, 462)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 939,
        "line_str": "literal|\"wrong exception caught\" argument_list|) expr_stmt|; block|} block|}",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(911, 942)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1402,
        "line_str": "argument_list|( name|basicRow argument_list|, name|i argument_list|)",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1504)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1369,
        "line_str": "condition|( name|basicRow operator|== literal|null condition|)",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1504)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1038,
        "line_str": "name|UnboundedSolutionException name|e parameter_list|) block|{ comment",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1053)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 807,
        "line_str": "operator|. name|getValue argument_list|() argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(806, 813)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1055,
        "line_str": "block|} block|} specifier|public name|void name|testRestrictVariablesToNonNegative",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1053)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 923,
        "line_str": "catch|catch parameter_list|( name|NoFeasibleSolutionException name|e parameter_list|)",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(911, 942)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1386,
        "line_str": "name|getNumObjectiveFunctions argument_list|() init|; name|i operator|<",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1504)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1353,
        "line_str": "name|col init|= name|getNumObjectiveFunctions argument_list|() operator|+",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1435, 1447)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 312,
        "line_str": "argument_list|) expr_stmt|; block|} comment specifier|public",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(308, 316)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1287,
        "line_str": "name|getOriginalNumDecisionVariables argument_list|() argument_list|) decl_stmt|; for|for",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1365, 1377)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 659,
        "line_str": "argument_list|() argument_list|) expr_stmt|; block|} specifier|public",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(656, 663)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 48,
        "line_str": "name|junit operator|. name|framework operator|. name|TestCase",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(44, 54)"
      },
      {
        "commit_hash": "64c7a39ddaa272b63134aea892ceb95aa7eb2183",
        "line_num": 1551,
        "line_str": "operator|. name|getValue argument_list|() argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1546, 1551)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1039,
        "line_str": "name|e parameter_list|) block|{ comment block|}",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1053)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 461,
        "line_str": "index|] argument_list|) expr_stmt|; name|assertEquals argument_list|(",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(458, 462)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 940,
        "line_str": "argument_list|) expr_stmt|; block|} block|} specifier|public",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(911, 942)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1403,
        "line_str": "name|basicRow argument_list|, name|i argument_list|) operator|==",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1504)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1370,
        "line_str": "name|basicRow operator|== literal|null condition|) block|{",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1504)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1304,
        "line_str": "name|i operator|++ control|) block|{ name|coefficients",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1391, 1395)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 808,
        "line_str": "name|getValue argument_list|() argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(806, 813)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1056,
        "line_str": "block|} specifier|public name|void name|testRestrictVariablesToNonNegative parameter_list|()",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1053)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 924,
        "line_str": "parameter_list|( name|NoFeasibleSolutionException name|e parameter_list|) block|{",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(911, 942)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1387,
        "line_str": "argument_list|() init|; name|i operator|< name|col",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1504)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1354,
        "line_str": "init|= name|getNumObjectiveFunctions argument_list|() operator|+ name|decisionVariable",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1435, 1447)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 313,
        "line_str": "expr_stmt|; block|} comment specifier|public name|void",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(308, 316)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1288,
        "line_str": "argument_list|() argument_list|) decl_stmt|; for|for control|(",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1365, 1377)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 660,
        "line_str": "argument_list|) expr_stmt|; block|} specifier|public name|void",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(656, 663)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 49,
        "line_str": "operator|. name|framework operator|. name|TestCase import|;",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(44, 54)"
      },
      {
        "commit_hash": "64c7a39ddaa272b63134aea892ceb95aa7eb2183",
        "line_num": 1552,
        "line_str": "name|getValue argument_list|() argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1546, 1551)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1040,
        "line_str": "parameter_list|) block|{ comment block|} catch|catch",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1053)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 941,
        "line_str": "expr_stmt|; block|} block|} specifier|public name|void",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(911, 942)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1404,
        "line_str": "argument_list|, name|i argument_list|) operator|== literal|1",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1504)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1371,
        "line_str": "operator|== literal|null condition|) block|{ return|return",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1504)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1305,
        "line_str": "operator|++ control|) block|{ name|coefficients index|[",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1391, 1395)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 809,
        "line_str": "argument_list|() argument_list|) expr_stmt|; block|} specifier|public",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(806, 813)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 132,
        "line_str": "name|RealPointValuePair import|; end_import  begin_class",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(132, 133)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 925,
        "line_str": "name|NoFeasibleSolutionException name|e parameter_list|) block|{ comment",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(911, 942)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1388,
        "line_str": "init|; name|i operator|< name|col condition|;",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1504)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1355,
        "line_str": "name|getNumObjectiveFunctions argument_list|() operator|+ name|decisionVariable decl_stmt|;",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1435, 1447)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 314,
        "line_str": "block|} comment specifier|public name|void name|testModelWithNoArtificialVars",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(308, 316)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1289,
        "line_str": "argument_list|) decl_stmt|; for|for control|( name|int",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1365, 1377)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 661,
        "line_str": "expr_stmt|; block|} specifier|public name|void name|testSolutionWithNegativeDecisionVariable",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(656, 663)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 50,
        "line_str": "name|framework operator|. name|TestCase import|; end_import",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(44, 54)"
      },
      {
        "commit_hash": "64c7a39ddaa272b63134aea892ceb95aa7eb2183",
        "line_num": 1553,
        "line_str": "argument_list|() argument_list|) expr_stmt|; block|} specifier|public",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1546, 1551)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1041,
        "line_str": "block|{ comment block|} catch|catch parameter_list|(",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1053)"
      },
      {
        "commit_hash": "072a28516cdac2020bdc69276906a31e8e3bae71",
        "line_num": 942,
        "line_str": "specifier|public name|void name|testUnboundedSolution parameter_list|() block|{",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(942, 946)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1405,
        "line_str": "name|i argument_list|) operator|== literal|1 condition|)",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1504)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1372,
        "line_str": "literal|null condition|) block|{ return|return literal|0",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1504)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1306,
        "line_str": "control|) block|{ name|coefficients index|[ name|i",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1391, 1395)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 298,
        "line_str": "argument_list|() index|[ literal|1 index|] argument_list|)",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(298, 302)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 810,
        "line_str": "argument_list|) expr_stmt|; block|} specifier|public name|void",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(806, 813)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 645,
        "line_str": "argument_list|() index|[ literal|1 index|] argument_list|)",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(645, 649)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 926,
        "line_str": "name|e parameter_list|) block|{ comment block|}",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(911, 942)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1389,
        "line_str": "name|i operator|< name|col condition|; name|i",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1504)"
      },
      {
        "commit_hash": "687a67ba41aa84ddbc00b29729318f2f4337277f",
        "line_num": 1356,
        "line_str": "argument_list|() operator|+ name|decisionVariable decl_stmt|; name|Integer",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1435, 1447)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1323,
        "line_str": "name|mostNegative operator|) expr_stmt|; block|} return|return",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1410, 1413)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 315,
        "line_str": "comment specifier|public name|void name|testModelWithNoArtificialVars parameter_list|()",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(308, 316)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 662,
        "line_str": "block|} specifier|public name|void name|testSolutionWithNegativeDecisionVariable parameter_list|()",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(656, 663)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 51,
        "line_str": "operator|. name|TestCase import|; end_import",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(44, 54)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1042,
        "line_str": "comment block|} catch|catch parameter_list|( name|OptimizationException",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1053)"
      },
      {
        "commit_hash": "4ba294477a5179abe8f6a1869388510ad88238e9",
        "line_num": 1009,
        "line_str": "operator|new name|SimplexSolver argument_list|() decl_stmt|; try|try",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1005, 1011)"
      }
    ]
  },
  {
    "id": 10117,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["f33b1d1f5bf34703d703cc293dcbe9ece1f35527"],
    "fix_commit_hash": "67d98f1646e0bf278538e87ec1a39c7de7deb16c",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "f33b1d1f5bf34703d703cc293dcbe9ece1f35527",
        "line_num": 277,
        "line_str": "name|Object name|v parameter_list|) block|{ name|addValue",
        "file_path": "src/java/org/apache/commons/math/stat/Frequency.java",
        "input_file_path": "src/java/org/apache/commons/math/stat/Frequency.java",
        "input_line_num": "range(277, 280)"
      },
      {
        "commit_hash": "f33b1d1f5bf34703d703cc293dcbe9ece1f35527",
        "line_num": 1463,
        "line_str": "parameter_list|( name|ClassCastException name|expected parameter_list|) block|{",
        "file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_line_num": "range(1453, 1465)"
      },
      {
        "commit_hash": "f33b1d1f5bf34703d703cc293dcbe9ece1f35527",
        "line_num": 1459,
        "line_str": "expr_stmt|; comment block|} catch|catch parameter_list|(",
        "file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_line_num": "range(1453, 1465)"
      },
      {
        "commit_hash": "f33b1d1f5bf34703d703cc293dcbe9ece1f35527",
        "line_num": 1426,
        "line_str": "parameter_list|( name|ClassCastException name|expected parameter_list|) block|{",
        "file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_line_num": "range(1423, 1428)"
      },
      {
        "commit_hash": "f33b1d1f5bf34703d703cc293dcbe9ece1f35527",
        "line_num": 1455,
        "line_str": "name|fail argument_list|( literal|\"Expected ClassCastException\" argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_line_num": "range(1453, 1465)"
      },
      {
        "commit_hash": "f33b1d1f5bf34703d703cc293dcbe9ece1f35527",
        "line_num": 1418,
        "line_str": "comment name|fail argument_list|( literal|\"Expected ClassCastException\" argument_list|)",
        "file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_line_num": "range(1417, 1422)"
      },
      {
        "commit_hash": "f33b1d1f5bf34703d703cc293dcbe9ece1f35527",
        "line_num": 290,
        "line_str": "argument_list|) expr_stmt|; block|} comment specifier|public",
        "file_path": "src/java/org/apache/commons/math/stat/Frequency.java",
        "input_file_path": "src/java/org/apache/commons/math/stat/Frequency.java",
        "input_line_num": "range(289, 292)"
      },
      {
        "commit_hash": "f33b1d1f5bf34703d703cc293dcbe9ece1f35527",
        "line_num": 278,
        "line_str": "name|v parameter_list|) block|{ name|addValue argument_list|(",
        "file_path": "src/java/org/apache/commons/math/stat/Frequency.java",
        "input_file_path": "src/java/org/apache/commons/math/stat/Frequency.java",
        "input_line_num": "range(277, 280)"
      },
      {
        "commit_hash": "f33b1d1f5bf34703d703cc293dcbe9ece1f35527",
        "line_num": 1464,
        "line_str": "name|ClassCastException name|expected parameter_list|) block|{ block|}",
        "file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_line_num": "range(1453, 1465)"
      },
      {
        "commit_hash": "f33b1d1f5bf34703d703cc293dcbe9ece1f35527",
        "line_num": 1460,
        "line_str": "comment block|} catch|catch parameter_list|( name|ClassCastException",
        "file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_line_num": "range(1453, 1465)"
      },
      {
        "commit_hash": "f33b1d1f5bf34703d703cc293dcbe9ece1f35527",
        "line_num": 1427,
        "line_str": "name|ClassCastException name|expected parameter_list|) block|{ block|}",
        "file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_line_num": "range(1423, 1428)"
      },
      {
        "commit_hash": "f33b1d1f5bf34703d703cc293dcbe9ece1f35527",
        "line_num": 1456,
        "line_str": "argument_list|( literal|\"Expected ClassCastException\" argument_list|) expr_stmt|; comment",
        "file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_line_num": "range(1453, 1465)"
      },
      {
        "commit_hash": "f33b1d1f5bf34703d703cc293dcbe9ece1f35527",
        "line_num": 1423,
        "line_str": "expr_stmt|; block|} catch|catch parameter_list|( name|ClassCastException",
        "file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_line_num": "range(1423, 1428)"
      },
      {
        "commit_hash": "f33b1d1f5bf34703d703cc293dcbe9ece1f35527",
        "line_num": 1419,
        "line_str": "name|fail argument_list|( literal|\"Expected ClassCastException\" argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_line_num": "range(1417, 1422)"
      },
      {
        "commit_hash": "f33b1d1f5bf34703d703cc293dcbe9ece1f35527",
        "line_num": 291,
        "line_str": "expr_stmt|; block|} comment specifier|public name|void",
        "file_path": "src/java/org/apache/commons/math/stat/Frequency.java",
        "input_file_path": "src/java/org/apache/commons/math/stat/Frequency.java",
        "input_line_num": "range(289, 292)"
      },
      {
        "commit_hash": "f33b1d1f5bf34703d703cc293dcbe9ece1f35527",
        "line_num": 279,
        "line_str": "parameter_list|) block|{ name|addValue argument_list|( operator|(",
        "file_path": "src/java/org/apache/commons/math/stat/Frequency.java",
        "input_file_path": "src/java/org/apache/commons/math/stat/Frequency.java",
        "input_line_num": "range(277, 280)"
      },
      {
        "commit_hash": "f33b1d1f5bf34703d703cc293dcbe9ece1f35527",
        "line_num": 1461,
        "line_str": "block|} catch|catch parameter_list|( name|ClassCastException name|expected",
        "file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_line_num": "range(1453, 1465)"
      },
      {
        "commit_hash": "f33b1d1f5bf34703d703cc293dcbe9ece1f35527",
        "line_num": 1457,
        "line_str": "literal|\"Expected ClassCastException\" argument_list|) expr_stmt|; comment block|}",
        "file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_line_num": "range(1453, 1465)"
      },
      {
        "commit_hash": "f33b1d1f5bf34703d703cc293dcbe9ece1f35527",
        "line_num": 1424,
        "line_str": "block|} catch|catch parameter_list|( name|ClassCastException name|expected",
        "file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_line_num": "range(1423, 1428)"
      },
      {
        "commit_hash": "f33b1d1f5bf34703d703cc293dcbe9ece1f35527",
        "line_num": 1453,
        "line_str": "argument_list|) expr_stmt|; name|fail argument_list|( literal|\"Expected ClassCastException\"",
        "file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_line_num": "range(1453, 1465)"
      },
      {
        "commit_hash": "f33b1d1f5bf34703d703cc293dcbe9ece1f35527",
        "line_num": 1420,
        "line_str": "argument_list|( literal|\"Expected ClassCastException\" argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_line_num": "range(1417, 1422)"
      },
      {
        "commit_hash": "f33b1d1f5bf34703d703cc293dcbe9ece1f35527",
        "line_num": 1462,
        "line_str": "catch|catch parameter_list|( name|ClassCastException name|expected parameter_list|)",
        "file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_line_num": "range(1453, 1465)"
      },
      {
        "commit_hash": "f33b1d1f5bf34703d703cc293dcbe9ece1f35527",
        "line_num": 1458,
        "line_str": "argument_list|) expr_stmt|; comment block|} catch|catch",
        "file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_line_num": "range(1453, 1465)"
      },
      {
        "commit_hash": "f33b1d1f5bf34703d703cc293dcbe9ece1f35527",
        "line_num": 1425,
        "line_str": "catch|catch parameter_list|( name|ClassCastException name|expected parameter_list|)",
        "file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_line_num": "range(1423, 1428)"
      },
      {
        "commit_hash": "f33b1d1f5bf34703d703cc293dcbe9ece1f35527",
        "line_num": 1454,
        "line_str": "expr_stmt|; name|fail argument_list|( literal|\"Expected ClassCastException\" argument_list|)",
        "file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_line_num": "range(1453, 1465)"
      },
      {
        "commit_hash": "f33b1d1f5bf34703d703cc293dcbe9ece1f35527",
        "line_num": 1421,
        "line_str": "literal|\"Expected ClassCastException\" argument_list|) expr_stmt|; block|} catch|catch",
        "file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_line_num": "range(1417, 1422)"
      },
      {
        "commit_hash": "f33b1d1f5bf34703d703cc293dcbe9ece1f35527",
        "line_num": 1417,
        "line_str": "expr_stmt|; comment name|fail argument_list|( literal|\"Expected ClassCastException\"",
        "file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_line_num": "range(1417, 1422)"
      },
      {
        "commit_hash": "f33b1d1f5bf34703d703cc293dcbe9ece1f35527",
        "line_num": 289,
        "line_str": "name|v argument_list|) expr_stmt|; block|} comment",
        "file_path": "src/java/org/apache/commons/math/stat/Frequency.java",
        "input_file_path": "src/java/org/apache/commons/math/stat/Frequency.java",
        "input_line_num": "range(289, 292)"
      }
    ]
  },
  {
    "id": 10118,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["44de7625f81e5a4f976b19af3fb9efcc94c17007"],
    "fix_commit_hash": "d6c120d77f212a2de55308c7342f7cb24fd0e918",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 353,
        "line_str": "expr_stmt|; block|} block|} comment block|}",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(807, 809)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 592,
        "line_str": "operator|. name|MAX_VALUE condition|) block|{ throw|throw",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(487, 506)"
      },
      {
        "commit_hash": "992c1bc58cecad4671d398301f74e3aa51b0b539",
        "line_num": 155,
        "line_str": "operator|) condition|) block|{ return|return literal|1",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(170, 179)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 328,
        "line_str": "name|binomialCoefficientLog argument_list|( name|n argument_list|, name|k",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(531, 536)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 576,
        "line_str": "init|= name|Math operator|. name|round argument_list|(",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(475, 478)"
      },
      {
        "commit_hash": "992c1bc58cecad4671d398301f74e3aa51b0b539",
        "line_num": 139,
        "line_str": "name|int name|k parameter_list|) block|{ if|if",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(154, 159)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 279,
        "line_str": "name|k argument_list|) argument_list|) decl_stmt|; if|if",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(478, 487)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 593,
        "line_str": "name|MAX_VALUE condition|) block|{ throw|throw operator|new",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(487, 506)"
      },
      {
        "commit_hash": "992c1bc58cecad4671d398301f74e3aa51b0b539",
        "line_num": 156,
        "line_str": "condition|) block|{ return|return literal|1 return|;",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(170, 179)"
      },
      {
        "commit_hash": "992c1bc58cecad4671d398301f74e3aa51b0b539",
        "line_num": 140,
        "line_str": "name|k parameter_list|) block|{ if|if condition|(",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(154, 159)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 594,
        "line_str": "condition|) block|{ throw|throw operator|new name|ArithmeticException",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(487, 506)"
      },
      {
        "commit_hash": "992c1bc58cecad4671d398301f74e3aa51b0b539",
        "line_num": 190,
        "line_str": "name|k operator|- literal|1 argument_list|) operator|+",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(206, 211)"
      },
      {
        "commit_hash": "992c1bc58cecad4671d398301f74e3aa51b0b539",
        "line_num": 157,
        "line_str": "block|{ return|return literal|1 return|; block|}",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(170, 179)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 429,
        "line_str": "name|n argument_list|) return|; block|} name|double",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(636, 639)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 330,
        "line_str": "name|n argument_list|, name|k argument_list|) argument_list|)",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(537, 540)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 264,
        "line_str": "return|return name|n return|; block|} name|long",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(471, 475)"
      },
      {
        "commit_hash": "992c1bc58cecad4671d398301f74e3aa51b0b539",
        "line_num": 141,
        "line_str": "parameter_list|) block|{ if|if condition|( operator|(",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(154, 159)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 595,
        "line_str": "block|{ throw|throw operator|new name|ArithmeticException argument_list|(",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(487, 506)"
      },
      {
        "commit_hash": "992c1bc58cecad4671d398301f74e3aa51b0b539",
        "line_num": 191,
        "line_str": "operator|- literal|1 argument_list|) operator|+ name|binomialCoefficient",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(206, 211)"
      },
      {
        "commit_hash": "992c1bc58cecad4671d398301f74e3aa51b0b539",
        "line_num": 158,
        "line_str": "return|return literal|1 return|; block|} if|if",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(170, 179)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 430,
        "line_str": "argument_list|) return|; block|} name|double name|logSum",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(636, 639)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 331,
        "line_str": "argument_list|, name|k argument_list|) argument_list|) operator|+",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(537, 540)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 265,
        "line_str": "name|n return|; block|} name|long name|result",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(471, 475)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 678,
        "line_str": "block|} name|double name|logSum init|= literal|0",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(639, 640)"
      },
      {
        "commit_hash": "992c1bc58cecad4671d398301f74e3aa51b0b539",
        "line_num": 175,
        "line_str": "literal|1 operator|) condition|) block|{ return|return",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(191, 200)"
      },
      {
        "commit_hash": "992c1bc58cecad4671d398301f74e3aa51b0b539",
        "line_num": 142,
        "line_str": "block|{ if|if condition|( operator|( name|n",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(154, 159)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 315,
        "line_str": "name|int name|k parameter_list|) block|{ return|return",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(522, 526)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 596,
        "line_str": "throw|throw operator|new name|ArithmeticException argument_list|( literal|\"result too large to represent in a long integer\"",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(487, 506)"
      },
      {
        "commit_hash": "992c1bc58cecad4671d398301f74e3aa51b0b539",
        "line_num": 192,
        "line_str": "literal|1 argument_list|) operator|+ name|binomialCoefficient argument_list|(",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(206, 211)"
      },
      {
        "commit_hash": "992c1bc58cecad4671d398301f74e3aa51b0b539",
        "line_num": 159,
        "line_str": "literal|1 return|; block|} if|if condition|(",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(170, 179)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 431,
        "line_str": "return|; block|} name|double name|logSum init|=",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(636, 639)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 332,
        "line_str": "name|k argument_list|) argument_list|) operator|+ literal|0.5",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(537, 540)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 266,
        "line_str": "return|; block|} name|long name|result init|=",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(471, 475)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 646,
        "line_str": "argument_list|) argument_list|) operator|+ literal|0.5 argument_list|)",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(540, 542)"
      },
      {
        "commit_hash": "992c1bc58cecad4671d398301f74e3aa51b0b539",
        "line_num": 176,
        "line_str": "operator|) condition|) block|{ return|return name|n",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(191, 200)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 316,
        "line_str": "name|k parameter_list|) block|{ return|return name|Math",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(522, 526)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 597,
        "line_str": "operator|new name|ArithmeticException argument_list|( literal|\"result too large to represent in a long integer\" argument_list|)",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(487, 506)"
      },
      {
        "commit_hash": "992c1bc58cecad4671d398301f74e3aa51b0b539",
        "line_num": 193,
        "line_str": "argument_list|) operator|+ name|binomialCoefficient argument_list|( name|n",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(206, 211)"
      },
      {
        "commit_hash": "992c1bc58cecad4671d398301f74e3aa51b0b539",
        "line_num": 160,
        "line_str": "return|; block|} if|if condition|( operator|(",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(170, 179)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 267,
        "line_str": "block|} name|long name|result init|= name|Math",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(471, 475)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 647,
        "line_str": "argument_list|) operator|+ literal|0.5 argument_list|) return|;",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(540, 542)"
      },
      {
        "commit_hash": "992c1bc58cecad4671d398301f74e3aa51b0b539",
        "line_num": 177,
        "line_str": "condition|) block|{ return|return name|n return|;",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(191, 200)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 317,
        "line_str": "parameter_list|) block|{ return|return name|Math operator|.",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(522, 526)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 598,
        "line_str": "name|ArithmeticException argument_list|( literal|\"result too large to represent in a long integer\" argument_list|) throw|;",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(487, 506)"
      },
      {
        "commit_hash": "992c1bc58cecad4671d398301f74e3aa51b0b539",
        "line_num": 194,
        "line_str": "operator|+ name|binomialCoefficient argument_list|( name|n operator|-",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(206, 211)"
      },
      {
        "commit_hash": "992c1bc58cecad4671d398301f74e3aa51b0b539",
        "line_num": 161,
        "line_str": "block|} if|if condition|( operator|( name|k",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(170, 179)"
      },
      {
        "commit_hash": "992c1bc58cecad4671d398301f74e3aa51b0b539",
        "line_num": 178,
        "line_str": "block|{ return|return name|n return|; block|}",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(191, 200)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 318,
        "line_str": "block|{ return|return name|Math operator|. name|floor",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(522, 526)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 599,
        "line_str": "argument_list|( literal|\"result too large to represent in a long integer\" argument_list|) throw|; block|}",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(487, 506)"
      },
      {
        "commit_hash": "992c1bc58cecad4671d398301f74e3aa51b0b539",
        "line_num": 162,
        "line_str": "if|if condition|( operator|( name|k operator|==",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(170, 179)"
      },
      {
        "commit_hash": "992c1bc58cecad4671d398301f74e3aa51b0b539",
        "line_num": 129,
        "line_str": "return|; block|} comment specifier|private name|long",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(145, 147)"
      },
      {
        "commit_hash": "992c1bc58cecad4671d398301f74e3aa51b0b539",
        "line_num": 179,
        "line_str": "return|return name|n return|; block|} return|return",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(191, 200)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 600,
        "line_str": "literal|\"result too large to represent in a long integer\" argument_list|) throw|; block|} return|return",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(487, 506)"
      },
      {
        "commit_hash": "992c1bc58cecad4671d398301f74e3aa51b0b539",
        "line_num": 130,
        "line_str": "block|} comment specifier|private name|long name|binomialCoefficient",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(145, 147)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 584,
        "line_str": "argument_list|) argument_list|) decl_stmt|; if|if condition|(",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(487, 506)"
      },
      {
        "commit_hash": "992c1bc58cecad4671d398301f74e3aa51b0b539",
        "line_num": 180,
        "line_str": "name|n return|; block|} return|return name|binomialCoefficient",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(191, 200)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 634,
        "line_str": "return|return name|Math operator|. name|floor argument_list|(",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(526, 531)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 601,
        "line_str": "argument_list|) throw|; block|} return|return name|result",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(487, 506)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 271,
        "line_str": "name|Math operator|. name|round argument_list|( name|binomialCoefficientDouble",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(478, 487)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 585,
        "line_str": "argument_list|) decl_stmt|; if|if condition|( name|result",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(487, 506)"
      },
      {
        "commit_hash": "992c1bc58cecad4671d398301f74e3aa51b0b539",
        "line_num": 181,
        "line_str": "return|; block|} return|return name|binomialCoefficient argument_list|(",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(191, 200)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 635,
        "line_str": "name|Math operator|. name|floor argument_list|( name|Math",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(526, 531)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 602,
        "line_str": "throw|; block|} return|return name|result return|;",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(487, 506)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 272,
        "line_str": "operator|. name|round argument_list|( name|binomialCoefficientDouble argument_list|(",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(478, 487)"
      },
      {
        "commit_hash": "992c1bc58cecad4671d398301f74e3aa51b0b539",
        "line_num": 793,
        "line_str": "block|} block|} comment block|} specifier|public",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(809, 812)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 586,
        "line_str": "decl_stmt|; if|if condition|( name|result operator|==",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(487, 506)"
      },
      {
        "commit_hash": "992c1bc58cecad4671d398301f74e3aa51b0b539",
        "line_num": 182,
        "line_str": "block|} return|return name|binomialCoefficient argument_list|( name|n",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(191, 200)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 636,
        "line_str": "operator|. name|floor argument_list|( name|Math operator|.",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(526, 531)"
      },
      {
        "commit_hash": "992c1bc58cecad4671d398301f74e3aa51b0b539",
        "line_num": 199,
        "line_str": "literal|1 argument_list|, name|k argument_list|) return|;",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(215, 219)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 273,
        "line_str": "name|round argument_list|( name|binomialCoefficientDouble argument_list|( name|n",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(478, 487)"
      },
      {
        "commit_hash": "992c1bc58cecad4671d398301f74e3aa51b0b539",
        "line_num": 794,
        "line_str": "block|} comment block|} specifier|public name|void",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(809, 812)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 587,
        "line_str": "if|if condition|( name|result operator|== name|Long",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(487, 506)"
      },
      {
        "commit_hash": "992c1bc58cecad4671d398301f74e3aa51b0b539",
        "line_num": 183,
        "line_str": "return|return name|binomialCoefficient argument_list|( name|n operator|-",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(191, 200)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 637,
        "line_str": "name|floor argument_list|( name|Math operator|. name|exp",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(526, 531)"
      },
      {
        "commit_hash": "992c1bc58cecad4671d398301f74e3aa51b0b539",
        "line_num": 200,
        "line_str": "argument_list|, name|k argument_list|) return|; block|}",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(215, 219)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 274,
        "line_str": "argument_list|( name|binomialCoefficientDouble argument_list|( name|n argument_list|,",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(478, 487)"
      },
      {
        "commit_hash": "992c1bc58cecad4671d398301f74e3aa51b0b539",
        "line_num": 795,
        "line_str": "comment block|} specifier|public name|void name|testBinomialCoefficientFail",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(809, 812)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 588,
        "line_str": "condition|( name|result operator|== name|Long operator|.",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(487, 506)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 324,
        "line_str": "name|Math operator|. name|exp argument_list|( name|binomialCoefficientLog",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(531, 536)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 638,
        "line_str": "argument_list|( name|Math operator|. name|exp argument_list|(",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(526, 531)"
      },
      {
        "commit_hash": "992c1bc58cecad4671d398301f74e3aa51b0b539",
        "line_num": 201,
        "line_str": "name|k argument_list|) return|; block|} comment",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(215, 219)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 275,
        "line_str": "name|binomialCoefficientDouble argument_list|( name|n argument_list|, name|k",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(478, 487)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 589,
        "line_str": "name|result operator|== name|Long operator|. name|MAX_VALUE",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(487, 506)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 325,
        "line_str": "operator|. name|exp argument_list|( name|binomialCoefficientLog argument_list|(",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(531, 536)"
      },
      {
        "commit_hash": "992c1bc58cecad4671d398301f74e3aa51b0b539",
        "line_num": 202,
        "line_str": "argument_list|) return|; block|} comment specifier|private",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(215, 219)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 276,
        "line_str": "argument_list|( name|n argument_list|, name|k argument_list|)",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(478, 487)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 590,
        "line_str": "operator|== name|Long operator|. name|MAX_VALUE condition|)",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(487, 506)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 326,
        "line_str": "name|exp argument_list|( name|binomialCoefficientLog argument_list|( name|n",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(531, 536)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 574,
        "line_str": "name|long name|result init|= name|Math operator|.",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(475, 478)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 277,
        "line_str": "name|n argument_list|, name|k argument_list|) argument_list|)",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(478, 487)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 352,
        "line_str": "argument_list|) expr_stmt|; block|} block|} comment",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(807, 809)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 591,
        "line_str": "name|Long operator|. name|MAX_VALUE condition|) block|{",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(487, 506)"
      },
      {
        "commit_hash": "992c1bc58cecad4671d398301f74e3aa51b0b539",
        "line_num": 154,
        "line_str": "literal|0 operator|) condition|) block|{ return|return",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(170, 179)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 327,
        "line_str": "argument_list|( name|binomialCoefficientLog argument_list|( name|n argument_list|,",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(531, 536)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 575,
        "line_str": "name|result init|= name|Math operator|. name|round",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(475, 478)"
      },
      {
        "commit_hash": "992c1bc58cecad4671d398301f74e3aa51b0b539",
        "line_num": 138,
        "line_str": "parameter_list|, name|int name|k parameter_list|) block|{",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(154, 159)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 278,
        "line_str": "argument_list|, name|k argument_list|) argument_list|) decl_stmt|;",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(478, 487)"
      }
    ]
  },
  {
    "id": 10119,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["44de7625f81e5a4f976b19af3fb9efcc94c17007"],
    "fix_commit_hash": "93a7cbcf61e8f8d93556ed321b0018e90b7b9393",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 592,
        "line_str": "name|n argument_list|) argument_list|) decl_stmt|; if|if",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(891, 915)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 588,
        "line_str": "name|round argument_list|( name|factorialDouble argument_list|( name|n",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(891, 915)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 584,
        "line_str": "name|result init|= name|Math operator|. name|round",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(891, 915)"
      },
      {
        "commit_hash": "992c1bc58cecad4671d398301f74e3aa51b0b539",
        "line_num": 1142,
        "line_str": "operator|< literal|10 condition|; name|i operator|++",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(1363, 1368)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 613,
        "line_str": "return|return name|result return|; block|} comment",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(917, 927)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 580,
        "line_str": "name|n parameter_list|) block|{ name|long name|result",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(891, 915)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 609,
        "line_str": "literal|\"result too large to represent in a long integer\" argument_list|) throw|; block|} return|return",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(917, 927)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 605,
        "line_str": "throw|throw operator|new name|ArithmeticException argument_list|( literal|\"result too large to represent in a long integer\"",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(917, 927)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 601,
        "line_str": "operator|. name|MAX_VALUE condition|) block|{ throw|throw",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(891, 915)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 597,
        "line_str": "condition|( name|result operator|== name|Long operator|.",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(891, 915)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 593,
        "line_str": "argument_list|) argument_list|) decl_stmt|; if|if condition|(",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(891, 915)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 589,
        "line_str": "argument_list|( name|factorialDouble argument_list|( name|n argument_list|)",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(891, 915)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 684,
        "line_str": "literal|\"must have n> 0 for n!\" argument_list|) throw|; block|} name|double",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(996, 999)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 585,
        "line_str": "init|= name|Math operator|. name|round argument_list|(",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(891, 915)"
      },
      {
        "commit_hash": "992c1bc58cecad4671d398301f74e3aa51b0b539",
        "line_num": 1143,
        "line_str": "literal|10 condition|; name|i operator|++ control|)",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(1363, 1368)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 614,
        "line_str": "name|result return|; block|} comment specifier|public",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(917, 927)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 581,
        "line_str": "parameter_list|) block|{ name|long name|result init|=",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(891, 915)"
      },
      {
        "commit_hash": "992c1bc58cecad4671d398301f74e3aa51b0b539",
        "line_num": 1139,
        "line_str": "literal|1 init|; name|i operator|< literal|10",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(1363, 1368)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 610,
        "line_str": "argument_list|) throw|; block|} return|return name|result",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(917, 927)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 639,
        "line_str": "literal|\"must have n>= 0 for n!\" argument_list|) throw|; block|} return|return",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(951, 954)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 606,
        "line_str": "operator|new name|ArithmeticException argument_list|( literal|\"result too large to represent in a long integer\" argument_list|)",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(917, 927)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 602,
        "line_str": "name|MAX_VALUE condition|) block|{ throw|throw operator|new",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(891, 915)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 598,
        "line_str": "name|result operator|== name|Long operator|. name|MAX_VALUE",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(891, 915)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 594,
        "line_str": "argument_list|) decl_stmt|; if|if condition|( name|result",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(891, 915)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 590,
        "line_str": "name|factorialDouble argument_list|( name|n argument_list|) argument_list|)",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(891, 915)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 685,
        "line_str": "argument_list|) throw|; block|} name|double name|logSum",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(996, 999)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 586,
        "line_str": "name|Math operator|. name|round argument_list|( name|factorialDouble",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(891, 915)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 582,
        "line_str": "block|{ name|long name|result init|= name|Math",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(891, 915)"
      },
      {
        "commit_hash": "992c1bc58cecad4671d398301f74e3aa51b0b539",
        "line_num": 1140,
        "line_str": "init|; name|i operator|< literal|10 condition|;",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(1363, 1368)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 611,
        "line_str": "throw|; block|} return|return name|result return|;",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(917, 927)"
      },
      {
        "commit_hash": "fca43c65b3ca28dde5b13efbacb0c387525fd9c1",
        "line_num": 834,
        "line_str": "literal|true return|; block|} comment specifier|public",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(881, 883)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 640,
        "line_str": "argument_list|) throw|; block|} return|return name|Math",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(951, 954)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 607,
        "line_str": "name|ArithmeticException argument_list|( literal|\"result too large to represent in a long integer\" argument_list|) throw|;",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(917, 927)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 599,
        "line_str": "operator|== name|Long operator|. name|MAX_VALUE condition|)",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(891, 915)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 595,
        "line_str": "decl_stmt|; if|if condition|( name|result operator|==",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(891, 915)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 591,
        "line_str": "argument_list|( name|n argument_list|) argument_list|) decl_stmt|;",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(891, 915)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 686,
        "line_str": "throw|; block|} name|double name|logSum init|=",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(996, 999)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 587,
        "line_str": "operator|. name|round argument_list|( name|factorialDouble argument_list|(",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(891, 915)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 583,
        "line_str": "name|long name|result init|= name|Math operator|.",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(891, 915)"
      },
      {
        "commit_hash": "992c1bc58cecad4671d398301f74e3aa51b0b539",
        "line_num": 1141,
        "line_str": "name|i operator|< literal|10 condition|; name|i",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(1363, 1368)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 612,
        "line_str": "block|} return|return name|result return|; block|}",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(917, 927)"
      },
      {
        "commit_hash": "fca43c65b3ca28dde5b13efbacb0c387525fd9c1",
        "line_num": 835,
        "line_str": "return|; block|} comment specifier|public specifier|static",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(881, 883)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 579,
        "line_str": "name|int name|n parameter_list|) block|{ name|long",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(891, 915)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 641,
        "line_str": "throw|; block|} return|return name|Math operator|.",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(951, 954)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 608,
        "line_str": "argument_list|( literal|\"result too large to represent in a long integer\" argument_list|) throw|; block|}",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(917, 927)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 571,
        "line_str": "block|} comment specifier|public specifier|static name|long",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(883, 884)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 600,
        "line_str": "name|Long operator|. name|MAX_VALUE condition|) block|{",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(891, 915)"
      },
      {
        "commit_hash": "dd83f95ac098a77eee4c52de13f9f7661edda53e",
        "line_num": 596,
        "line_str": "if|if condition|( name|result operator|== name|Long",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(891, 915)"
      }
    ]
  },
  {
    "id": 10120,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["03fb09e5a2a1651351db7d092091132c1b297e21"],
    "fix_commit_hash": "df83e24817ac946f9e4d9c047744568218cc0fcd",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "03fb09e5a2a1651351db7d092091132c1b297e21",
        "line_num": 1299,
        "line_str": "operator|* name|v operator|== literal|0 condition|)",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1048, 1057)"
      },
      {
        "commit_hash": "03fb09e5a2a1651351db7d092091132c1b297e21",
        "line_num": 1298,
        "line_str": "name|u operator|* name|v operator|== literal|0",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1048, 1057)"
      },
      {
        "commit_hash": "03fb09e5a2a1651351db7d092091132c1b297e21",
        "line_num": 1297,
        "line_str": "condition|( name|u operator|* name|v operator|==",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1048, 1057)"
      },
      {
        "commit_hash": "03fb09e5a2a1651351db7d092091132c1b297e21",
        "line_num": 1296,
        "line_str": "if|if condition|( name|u operator|* name|v",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1048, 1057)"
      },
      {
        "commit_hash": "03fb09e5a2a1651351db7d092091132c1b297e21",
        "line_num": 1295,
        "line_str": "block|{ if|if condition|( name|u operator|*",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1048, 1057)"
      },
      {
        "commit_hash": "03fb09e5a2a1651351db7d092091132c1b297e21",
        "line_num": 1294,
        "line_str": "parameter_list|) block|{ if|if condition|( name|u",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1048, 1057)"
      },
      {
        "commit_hash": "992c1bc58cecad4671d398301f74e3aa51b0b539",
        "line_num": 1603,
        "line_str": "name|c argument_list|) argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(1827, 1828)"
      },
      {
        "commit_hash": "03fb09e5a2a1651351db7d092091132c1b297e21",
        "line_num": 1302,
        "line_str": "literal|0 condition|) block|{ return|return operator|(",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1048, 1057)"
      },
      {
        "commit_hash": "03fb09e5a2a1651351db7d092091132c1b297e21",
        "line_num": 1301,
        "line_str": "operator|== literal|0 condition|) block|{ return|return",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1048, 1057)"
      },
      {
        "commit_hash": "03fb09e5a2a1651351db7d092091132c1b297e21",
        "line_num": 1300,
        "line_str": "name|v operator|== literal|0 condition|) block|{",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1048, 1057)"
      }
    ]
  },
  {
    "id": 10121,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["44de7625f81e5a4f976b19af3fb9efcc94c17007"],
    "fix_commit_hash": "b6be358a77a65c759bd72bfe9398a6d8deb827b7",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 461,
        "line_str": "argument_list|( name|imaginary argument_list|) operator|== name|Double",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(667, 704)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 457,
        "line_str": "operator|( name|Double operator|. name|doubleToRawLongBits argument_list|(",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(667, 704)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 453,
        "line_str": "argument_list|() argument_list|) operator|) operator|&& operator|(",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(667, 704)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 449,
        "line_str": "argument_list|( name|rhs operator|. name|getReal argument_list|()",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(667, 704)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 445,
        "line_str": "operator|== name|Double operator|. name|doubleToRawLongBits argument_list|(",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(667, 704)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 441,
        "line_str": "name|doubleToRawLongBits argument_list|( name|real argument_list|) operator|==",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(667, 704)"
      },
      {
        "commit_hash": "a67e82eeb4d33e20714f02e47b13c35ed544792d",
        "line_num": 664,
        "line_str": "argument_list|) operator|) expr_stmt|; block|} block|}",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(704, 705)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 470,
        "line_str": "operator|. name|getImaginary argument_list|() argument_list|) operator|)",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(667, 704)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 437,
        "line_str": "operator|= operator|( name|Double operator|. name|doubleToRawLongBits",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(667, 704)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 466,
        "line_str": "operator|. name|doubleToRawLongBits argument_list|( name|rhs operator|.",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(667, 704)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 462,
        "line_str": "name|imaginary argument_list|) operator|== name|Double operator|.",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(667, 704)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 458,
        "line_str": "name|Double operator|. name|doubleToRawLongBits argument_list|( name|imaginary",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(667, 704)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 454,
        "line_str": "argument_list|) operator|) operator|&& operator|( name|Double",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(667, 704)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 450,
        "line_str": "name|rhs operator|. name|getReal argument_list|() argument_list|)",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(667, 704)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 446,
        "line_str": "name|Double operator|. name|doubleToRawLongBits argument_list|( name|rhs",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(667, 704)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 442,
        "line_str": "argument_list|( name|real argument_list|) operator|== name|Double",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(667, 704)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 471,
        "line_str": "name|getImaginary argument_list|() argument_list|) operator|) expr_stmt|;",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(667, 704)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 438,
        "line_str": "operator|( name|Double operator|. name|doubleToRawLongBits argument_list|(",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(667, 704)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 467,
        "line_str": "name|doubleToRawLongBits argument_list|( name|rhs operator|. name|getImaginary",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(667, 704)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 463,
        "line_str": "argument_list|) operator|== name|Double operator|. name|doubleToRawLongBits",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(667, 704)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 459,
        "line_str": "operator|. name|doubleToRawLongBits argument_list|( name|imaginary argument_list|)",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(667, 704)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 455,
        "line_str": "operator|) operator|&& operator|( name|Double operator|.",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(667, 704)"
      },
      {
        "commit_hash": "a67e82eeb4d33e20714f02e47b13c35ed544792d",
        "line_num": 1147,
        "line_str": "argument_list|() argument_list|) expr_stmt|; block|} block|}",
        "file_path": "src/test/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(5546, 5547)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 451,
        "line_str": "operator|. name|getReal argument_list|() argument_list|) operator|)",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(667, 704)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 447,
        "line_str": "operator|. name|doubleToRawLongBits argument_list|( name|rhs operator|.",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(667, 704)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 443,
        "line_str": "name|real argument_list|) operator|== name|Double operator|.",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(667, 704)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 472,
        "line_str": "argument_list|() argument_list|) operator|) expr_stmt|; block|}",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(667, 704)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 439,
        "line_str": "name|Double operator|. name|doubleToRawLongBits argument_list|( name|real",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(667, 704)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 468,
        "line_str": "argument_list|( name|rhs operator|. name|getImaginary argument_list|()",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(667, 704)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 464,
        "line_str": "operator|== name|Double operator|. name|doubleToRawLongBits argument_list|(",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(667, 704)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 460,
        "line_str": "name|doubleToRawLongBits argument_list|( name|imaginary argument_list|) operator|==",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(667, 704)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 456,
        "line_str": "operator|&& operator|( name|Double operator|. name|doubleToRawLongBits",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(667, 704)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 452,
        "line_str": "name|getReal argument_list|() argument_list|) operator|) operator|&&",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(667, 704)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 448,
        "line_str": "name|doubleToRawLongBits argument_list|( name|rhs operator|. name|getReal",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(667, 704)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 444,
        "line_str": "argument_list|) operator|== name|Double operator|. name|doubleToRawLongBits",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(667, 704)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 440,
        "line_str": "operator|. name|doubleToRawLongBits argument_list|( name|real argument_list|)",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(667, 704)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 469,
        "line_str": "name|rhs operator|. name|getImaginary argument_list|() argument_list|)",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(667, 704)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 436,
        "line_str": "name|ret operator|= operator|( name|Double operator|.",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(667, 704)"
      },
      {
        "commit_hash": "a67e82eeb4d33e20714f02e47b13c35ed544792d",
        "line_num": 626,
        "line_str": "block|{ name|ret operator|= operator|( name|Double",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(666, 667)"
      },
      {
        "commit_hash": "44de7625f81e5a4f976b19af3fb9efcc94c17007",
        "line_num": 465,
        "line_str": "name|Double operator|. name|doubleToRawLongBits argument_list|( name|rhs",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(667, 704)"
      }
    ]
  },
  {
    "id": 10122,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["ea662c48bef22341df290a2da434d709e323805d"],
    "fix_commit_hash": "27bce8dfe83aef5152cbd2377ed0fd0bb1da0cbf",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "150ca8e58b62a70d00da787c16c3e0418aa9bdc2",
        "line_num": 426,
        "line_str": "argument_list|, name|yMin argument_list|) return|; block|}",
        "file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_line_num": "range(425, 429)"
      },
      {
        "commit_hash": "150ca8e58b62a70d00da787c16c3e0418aa9bdc2",
        "line_num": 352,
        "line_str": "name|max argument_list|) expr_stmt|; name|double name|yMin",
        "file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_line_num": "range(352, 355)"
      },
      {
        "commit_hash": "ea662c48bef22341df290a2da434d709e323805d",
        "line_num": 191,
        "line_str": "block|{ throw|throw operator|new name|IllegalArgumentException argument_list|(",
        "file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_line_num": "range(381, 385)"
      },
      {
        "commit_hash": "150ca8e58b62a70d00da787c16c3e0418aa9bdc2",
        "line_num": 414,
        "line_str": "return|return name|solve argument_list|( name|min argument_list|,",
        "file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_line_num": "range(409, 415)"
      },
      {
        "commit_hash": "150ca8e58b62a70d00da787c16c3e0418aa9bdc2",
        "line_num": 410,
        "line_str": "argument_list|) throw|; block|} comment return|return",
        "file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_line_num": "range(409, 415)"
      },
      {
        "commit_hash": "150ca8e58b62a70d00da787c16c3e0418aa9bdc2",
        "line_num": 377,
        "line_str": "condition|( name|yMin operator|* name|yMax operator|>=",
        "file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_line_num": "range(372, 381)"
      },
      {
        "commit_hash": "150ca8e58b62a70d00da787c16c3e0418aa9bdc2",
        "line_num": 373,
        "line_str": "argument_list|) decl_stmt|; comment if|if condition|(",
        "file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_line_num": "range(372, 381)"
      },
      {
        "commit_hash": "150ca8e58b62a70d00da787c16c3e0418aa9bdc2",
        "line_num": 427,
        "line_str": "name|yMin argument_list|) return|; block|} comment",
        "file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_line_num": "range(425, 429)"
      },
      {
        "commit_hash": "150ca8e58b62a70d00da787c16c3e0418aa9bdc2",
        "line_num": 353,
        "line_str": "argument_list|) expr_stmt|; name|double name|yMin init|=",
        "file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_line_num": "range(352, 355)"
      },
      {
        "commit_hash": "ea662c48bef22341df290a2da434d709e323805d",
        "line_num": 188,
        "line_str": "operator|>= literal|0 condition|) block|{ throw|throw",
        "file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_line_num": "range(381, 385)"
      },
      {
        "commit_hash": "150ca8e58b62a70d00da787c16c3e0418aa9bdc2",
        "line_num": 411,
        "line_str": "throw|; block|} comment return|return name|solve",
        "file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_line_num": "range(409, 415)"
      },
      {
        "commit_hash": "150ca8e58b62a70d00da787c16c3e0418aa9bdc2",
        "line_num": 378,
        "line_str": "name|yMin operator|* name|yMax operator|>= literal|0",
        "file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_line_num": "range(372, 381)"
      },
      {
        "commit_hash": "150ca8e58b62a70d00da787c16c3e0418aa9bdc2",
        "line_num": 374,
        "line_str": "decl_stmt|; comment if|if condition|( name|yMin",
        "file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_line_num": "range(372, 381)"
      },
      {
        "commit_hash": "150ca8e58b62a70d00da787c16c3e0418aa9bdc2",
        "line_num": 428,
        "line_str": "argument_list|) return|; block|} comment specifier|private",
        "file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_line_num": "range(425, 429)"
      },
      {
        "commit_hash": "150ca8e58b62a70d00da787c16c3e0418aa9bdc2",
        "line_num": 354,
        "line_str": "expr_stmt|; name|double name|yMin init|= name|f",
        "file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_line_num": "range(352, 355)"
      },
      {
        "commit_hash": "ea662c48bef22341df290a2da434d709e323805d",
        "line_num": 189,
        "line_str": "literal|0 condition|) block|{ throw|throw operator|new",
        "file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_line_num": "range(381, 385)"
      },
      {
        "commit_hash": "150ca8e58b62a70d00da787c16c3e0418aa9bdc2",
        "line_num": 412,
        "line_str": "block|} comment return|return name|solve argument_list|(",
        "file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_line_num": "range(409, 415)"
      },
      {
        "commit_hash": "150ca8e58b62a70d00da787c16c3e0418aa9bdc2",
        "line_num": 379,
        "line_str": "operator|* name|yMax operator|>= literal|0 condition|)",
        "file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_line_num": "range(372, 381)"
      },
      {
        "commit_hash": "150ca8e58b62a70d00da787c16c3e0418aa9bdc2",
        "line_num": 375,
        "line_str": "comment if|if condition|( name|yMin operator|*",
        "file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_line_num": "range(372, 381)"
      },
      {
        "commit_hash": "150ca8e58b62a70d00da787c16c3e0418aa9bdc2",
        "line_num": 425,
        "line_str": "name|min argument_list|, name|yMin argument_list|) return|;",
        "file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_line_num": "range(425, 429)"
      },
      {
        "commit_hash": "ea662c48bef22341df290a2da434d709e323805d",
        "line_num": 190,
        "line_str": "condition|) block|{ throw|throw operator|new name|IllegalArgumentException",
        "file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_line_num": "range(381, 385)"
      },
      {
        "commit_hash": "150ca8e58b62a70d00da787c16c3e0418aa9bdc2",
        "line_num": 413,
        "line_str": "comment return|return name|solve argument_list|( name|min",
        "file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_line_num": "range(409, 415)"
      },
      {
        "commit_hash": "150ca8e58b62a70d00da787c16c3e0418aa9bdc2",
        "line_num": 380,
        "line_str": "name|yMax operator|>= literal|0 condition|) block|{",
        "file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_line_num": "range(372, 381)"
      },
      {
        "commit_hash": "150ca8e58b62a70d00da787c16c3e0418aa9bdc2",
        "line_num": 409,
        "line_str": "literal|\"]\" argument_list|) throw|; block|} comment",
        "file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_line_num": "range(409, 415)"
      },
      {
        "commit_hash": "150ca8e58b62a70d00da787c16c3e0418aa9bdc2",
        "line_num": 376,
        "line_str": "if|if condition|( name|yMin operator|* name|yMax",
        "file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_line_num": "range(372, 381)"
      },
      {
        "commit_hash": "150ca8e58b62a70d00da787c16c3e0418aa9bdc2",
        "line_num": 372,
        "line_str": "name|max argument_list|) decl_stmt|; comment if|if",
        "file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_line_num": "range(372, 381)"
      }
    ]
  },
  {
    "id": 10123,
    "repo_name": "mockito/mockito",
    "bug_commit_hash": ["3f361d67aff7a125532f1fe287f4535fce923d6e"],
    "fix_commit_hash": "9f7ef28b92e411020c72a6eb00048672b6fc251c",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "fbb11a0ceead06d0ae72d45fc96467da5ef3f6ca",
        "line_num": 198,
        "line_str": "name|GenericMetadataSupportTest block|{ interface|interface name|UpperBoundedTypeWithClass parameter_list|<",
        "file_path": "test/org/mockito/internal/util/reflection/GenericMetadataSupportTest.java",
        "input_file_path": "test/org/mockito/internal/util/reflection/GenericMetadataSupportTest.java",
        "input_line_num": "range(191, 193)"
      },
      {
        "commit_hash": "fbb11a0ceead06d0ae72d45fc96467da5ef3f6ca",
        "line_num": 197,
        "line_str": "class|class name|GenericMetadataSupportTest block|{ interface|interface name|UpperBoundedTypeWithClass",
        "file_path": "test/org/mockito/internal/util/reflection/GenericMetadataSupportTest.java",
        "input_file_path": "test/org/mockito/internal/util/reflection/GenericMetadataSupportTest.java",
        "input_line_num": "range(191, 193)"
      },
      {
        "commit_hash": "64245c2627d7ca2651cd30fc5d8dd70196b169e5",
        "line_num": 168,
        "line_str": "block|{ interface|interface name|UpperBoundedTypeWithClass parameter_list|< name|E",
        "file_path": "test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java",
        "input_file_path": "test/org/mockito/internal/util/reflection/GenericMetadataSupportTest.java",
        "input_line_num": "range(193, 194)"
      },
      {
        "commit_hash": "bde8d923cb8121f3bbe1c091779db373b9cb70dd",
        "line_num": 301,
        "line_str": "else|else block|{ name|contextualActualTypeParameters operator|. name|put",
        "file_path": "src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java",
        "input_file_path": "src/org/mockito/internal/util/reflection/GenericMetadataSupport.java",
        "input_line_num": "range(213, 218)"
      },
      {
        "commit_hash": "bde8d923cb8121f3bbe1c091779db373b9cb70dd",
        "line_num": 300,
        "line_str": "block|} else|else block|{ name|contextualActualTypeParameters operator|.",
        "file_path": "src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java",
        "input_file_path": "src/org/mockito/internal/util/reflection/GenericMetadataSupport.java",
        "input_line_num": "range(213, 218)"
      },
      {
        "commit_hash": "bde8d923cb8121f3bbe1c091779db373b9cb70dd",
        "line_num": 299,
        "line_str": "expr_stmt|; block|} else|else block|{ name|contextualActualTypeParameters",
        "file_path": "src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java",
        "input_file_path": "src/org/mockito/internal/util/reflection/GenericMetadataSupport.java",
        "input_line_num": "range(213, 218)"
      },
      {
        "commit_hash": "bde8d923cb8121f3bbe1c091779db373b9cb70dd",
        "line_num": 298,
        "line_str": "argument_list|) expr_stmt|; block|} else|else block|{",
        "file_path": "src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java",
        "input_file_path": "src/org/mockito/internal/util/reflection/GenericMetadataSupport.java",
        "input_line_num": "range(213, 218)"
      },
      {
        "commit_hash": "bde8d923cb8121f3bbe1c091779db373b9cb70dd",
        "line_num": 297,
        "line_str": "argument_list|) argument_list|) expr_stmt|; block|} else|else",
        "file_path": "src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java",
        "input_file_path": "src/org/mockito/internal/util/reflection/GenericMetadataSupport.java",
        "input_line_num": "range(213, 218)"
      }
    ]
  },
  {
    "id": 10124,
    "repo_name": "JodaOrg/joda-time",
    "bug_commit_hash": ["5e02296cd44327cf3f25183ba38ea4ab5ca8683d"],
    "fix_commit_hash": "c211558df84b0078151836742233d42f71bd7c79",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "5e02296cd44327cf3f25183ba38ea4ab5ca8683d",
        "line_num": 467,
        "line_str": "block|} return|return literal|0 return|; block|}",
        "file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_line_num": "range(452, 468)"
      },
      {
        "commit_hash": "5e02296cd44327cf3f25183ba38ea4ab5ca8683d",
        "line_num": 463,
        "line_str": "block|{ return|return literal|1 return|; block|}",
        "file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_line_num": "range(452, 468)"
      },
      {
        "commit_hash": "5e02296cd44327cf3f25183ba38ea4ab5ca8683d",
        "line_num": 459,
        "line_str": "operator|. name|isSupported argument_list|() condition|) block|{",
        "file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_line_num": "range(452, 468)"
      },
      {
        "commit_hash": "5e02296cd44327cf3f25183ba38ea4ab5ca8683d",
        "line_num": 455,
        "line_str": "block|{ if|if condition|( name|durationField operator|.",
        "file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_line_num": "range(452, 468)"
      },
      {
        "commit_hash": "963b6422da8afcdc6eb1a8063e65ede7828db010",
        "line_num": 569,
        "line_str": "operator|> literal|0 condition|) block|{ name|int",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(569, 573)"
      },
      {
        "commit_hash": "963b6422da8afcdc6eb1a8063e65ede7828db010",
        "line_num": 631,
        "line_str": "operator|== literal|0 condition|) block|{ if|if",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(616, 620)"
      },
      {
        "commit_hash": "5e02296cd44327cf3f25183ba38ea4ab5ca8683d",
        "line_num": 464,
        "line_str": "return|return literal|1 return|; block|} return|return",
        "file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_line_num": "range(452, 468)"
      },
      {
        "commit_hash": "5e02296cd44327cf3f25183ba38ea4ab5ca8683d",
        "line_num": 460,
        "line_str": "name|isSupported argument_list|() condition|) block|{ return|return",
        "file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_line_num": "range(452, 468)"
      },
      {
        "commit_hash": "5e02296cd44327cf3f25183ba38ea4ab5ca8683d",
        "line_num": 456,
        "line_str": "if|if condition|( name|durationField operator|. name|isSupported",
        "file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_line_num": "range(452, 468)"
      },
      {
        "commit_hash": "963b6422da8afcdc6eb1a8063e65ede7828db010",
        "line_num": 570,
        "line_str": "literal|0 condition|) block|{ name|int name|compare",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(569, 573)"
      },
      {
        "commit_hash": "5e02296cd44327cf3f25183ba38ea4ab5ca8683d",
        "line_num": 452,
        "line_str": "name|DurationField name|durationField parameter_list|) block|{ if|if",
        "file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_line_num": "range(452, 468)"
      },
      {
        "commit_hash": "963b6422da8afcdc6eb1a8063e65ede7828db010",
        "line_num": 632,
        "line_str": "literal|0 condition|) block|{ if|if condition|(",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(616, 620)"
      },
      {
        "commit_hash": "5e02296cd44327cf3f25183ba38ea4ab5ca8683d",
        "line_num": 465,
        "line_str": "literal|1 return|; block|} return|return literal|0",
        "file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_line_num": "range(452, 468)"
      },
      {
        "commit_hash": "5e02296cd44327cf3f25183ba38ea4ab5ca8683d",
        "line_num": 461,
        "line_str": "argument_list|() condition|) block|{ return|return literal|1",
        "file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_line_num": "range(452, 468)"
      },
      {
        "commit_hash": "5e02296cd44327cf3f25183ba38ea4ab5ca8683d",
        "line_num": 457,
        "line_str": "condition|( name|durationField operator|. name|isSupported argument_list|()",
        "file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_line_num": "range(452, 468)"
      },
      {
        "commit_hash": "963b6422da8afcdc6eb1a8063e65ede7828db010",
        "line_num": 571,
        "line_str": "condition|) block|{ name|int name|compare init|=",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(569, 573)"
      },
      {
        "commit_hash": "5e02296cd44327cf3f25183ba38ea4ab5ca8683d",
        "line_num": 453,
        "line_str": "name|durationField parameter_list|) block|{ if|if condition|(",
        "file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_line_num": "range(452, 468)"
      },
      {
        "commit_hash": "963b6422da8afcdc6eb1a8063e65ede7828db010",
        "line_num": 629,
        "line_str": "condition|( name|compare operator|== literal|0 condition|)",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(616, 620)"
      },
      {
        "commit_hash": "5e02296cd44327cf3f25183ba38ea4ab5ca8683d",
        "line_num": 466,
        "line_str": "return|; block|} return|return literal|0 return|;",
        "file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_line_num": "range(452, 468)"
      },
      {
        "commit_hash": "5e02296cd44327cf3f25183ba38ea4ab5ca8683d",
        "line_num": 462,
        "line_str": "condition|) block|{ return|return literal|1 return|;",
        "file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_line_num": "range(452, 468)"
      },
      {
        "commit_hash": "5e02296cd44327cf3f25183ba38ea4ab5ca8683d",
        "line_num": 458,
        "line_str": "name|durationField operator|. name|isSupported argument_list|() condition|)",
        "file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_line_num": "range(452, 468)"
      },
      {
        "commit_hash": "963b6422da8afcdc6eb1a8063e65ede7828db010",
        "line_num": 572,
        "line_str": "block|{ name|int name|compare init|= name|lastUnitField",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(569, 573)"
      },
      {
        "commit_hash": "5e02296cd44327cf3f25183ba38ea4ab5ca8683d",
        "line_num": 454,
        "line_str": "parameter_list|) block|{ if|if condition|( name|durationField",
        "file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_line_num": "range(452, 468)"
      },
      {
        "commit_hash": "963b6422da8afcdc6eb1a8063e65ede7828db010",
        "line_num": 630,
        "line_str": "name|compare operator|== literal|0 condition|) block|{",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(616, 620)"
      }
    ]
  },
  {
    "id": 10125,
    "repo_name": "JodaOrg/joda-time",
    "bug_commit_hash": ["41fd5ef2ad308cb70e3baed35806a1ff26e67db6"],
    "fix_commit_hash": "91a77efce6e4530f76de5568a91e77ebf32cb87f",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "41fd5ef2ad308cb70e3baed35806a1ff26e67db6",
        "line_num": 362,
        "line_str": "argument_list|) expr_stmt|; block|} comment specifier|public",
        "file_path": "JodaTime/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_file_path": "src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_line_num": "range(348, 365)"
      },
      {
        "commit_hash": "41fd5ef2ad308cb70e3baed35806a1ff26e67db6",
        "line_num": 358,
        "line_str": "argument_list|( name|Boolean operator|. name|FALSE argument_list|)",
        "file_path": "JodaTime/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_file_path": "src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_line_num": "range(348, 365)"
      },
      {
        "commit_hash": "41fd5ef2ad308cb70e3baed35806a1ff26e67db6",
        "line_num": 354,
        "line_str": "block|{ name|cVerbose operator|. name|set argument_list|(",
        "file_path": "JodaTime/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_file_path": "src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_line_num": "range(348, 365)"
      },
      {
        "commit_hash": "41fd5ef2ad308cb70e3baed35806a1ff26e67db6",
        "line_num": 350,
        "line_str": "argument_list|> argument_list|() decl_stmt|; static|static block|{",
        "file_path": "JodaTime/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_file_path": "src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_line_num": "range(348, 365)"
      },
      {
        "commit_hash": "bfe85bf77edb5d4fbc2e4d312b1cea424f27883e",
        "line_num": 263,
        "line_str": "expr_stmt|; block|} specifier|public name|void name|testCompile",
        "file_path": "JodaTime/src/test/org/joda/time/tz/TestCompiler.java",
        "input_file_path": "src/test/java/org/joda/time/tz/TestCompiler.java",
        "input_line_num": "range(299, 303)"
      },
      {
        "commit_hash": "41fd5ef2ad308cb70e3baed35806a1ff26e67db6",
        "line_num": 363,
        "line_str": "expr_stmt|; block|} comment specifier|public specifier|static",
        "file_path": "JodaTime/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_file_path": "src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_line_num": "range(348, 365)"
      },
      {
        "commit_hash": "41fd5ef2ad308cb70e3baed35806a1ff26e67db6",
        "line_num": 359,
        "line_str": "name|Boolean operator|. name|FALSE argument_list|) expr_stmt|;",
        "file_path": "JodaTime/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_file_path": "src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_line_num": "range(348, 365)"
      },
      {
        "commit_hash": "41fd5ef2ad308cb70e3baed35806a1ff26e67db6",
        "line_num": 355,
        "line_str": "name|cVerbose operator|. name|set argument_list|( name|Boolean",
        "file_path": "JodaTime/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_file_path": "src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_line_num": "range(348, 365)"
      },
      {
        "commit_hash": "41fd5ef2ad308cb70e3baed35806a1ff26e67db6",
        "line_num": 351,
        "line_str": "argument_list|() decl_stmt|; static|static block|{ name|cVerbose",
        "file_path": "JodaTime/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_file_path": "src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_line_num": "range(348, 365)"
      },
      {
        "commit_hash": "bfe85bf77edb5d4fbc2e4d312b1cea424f27883e",
        "line_num": 264,
        "line_str": "block|} specifier|public name|void name|testCompile parameter_list|()",
        "file_path": "JodaTime/src/test/org/joda/time/tz/TestCompiler.java",
        "input_file_path": "src/test/java/org/joda/time/tz/TestCompiler.java",
        "input_line_num": "range(299, 303)"
      },
      {
        "commit_hash": "41fd5ef2ad308cb70e3baed35806a1ff26e67db6",
        "line_num": 364,
        "line_str": "block|} comment specifier|public specifier|static name|boolean",
        "file_path": "JodaTime/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_file_path": "src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_line_num": "range(348, 365)"
      },
      {
        "commit_hash": "41fd5ef2ad308cb70e3baed35806a1ff26e67db6",
        "line_num": 360,
        "line_str": "operator|. name|FALSE argument_list|) expr_stmt|; block|}",
        "file_path": "JodaTime/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_file_path": "src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_line_num": "range(348, 365)"
      },
      {
        "commit_hash": "41fd5ef2ad308cb70e3baed35806a1ff26e67db6",
        "line_num": 356,
        "line_str": "operator|. name|set argument_list|( name|Boolean operator|.",
        "file_path": "JodaTime/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_file_path": "src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_line_num": "range(348, 365)"
      },
      {
        "commit_hash": "41fd5ef2ad308cb70e3baed35806a1ff26e67db6",
        "line_num": 352,
        "line_str": "decl_stmt|; static|static block|{ name|cVerbose operator|.",
        "file_path": "JodaTime/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_file_path": "src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_line_num": "range(348, 365)"
      },
      {
        "commit_hash": "41fd5ef2ad308cb70e3baed35806a1ff26e67db6",
        "line_num": 348,
        "line_str": "argument_list|< name|Boolean argument_list|> argument_list|() decl_stmt|;",
        "file_path": "JodaTime/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_file_path": "src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_line_num": "range(348, 365)"
      },
      {
        "commit_hash": "bfe85bf77edb5d4fbc2e4d312b1cea424f27883e",
        "line_num": 261,
        "line_str": "name|originalDateTimeZone argument_list|) expr_stmt|; block|} specifier|public",
        "file_path": "JodaTime/src/test/org/joda/time/tz/TestCompiler.java",
        "input_file_path": "src/test/java/org/joda/time/tz/TestCompiler.java",
        "input_line_num": "range(299, 303)"
      },
      {
        "commit_hash": "41fd5ef2ad308cb70e3baed35806a1ff26e67db6",
        "line_num": 361,
        "line_str": "name|FALSE argument_list|) expr_stmt|; block|} comment",
        "file_path": "JodaTime/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_file_path": "src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_line_num": "range(348, 365)"
      },
      {
        "commit_hash": "41fd5ef2ad308cb70e3baed35806a1ff26e67db6",
        "line_num": 357,
        "line_str": "name|set argument_list|( name|Boolean operator|. name|FALSE",
        "file_path": "JodaTime/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_file_path": "src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_line_num": "range(348, 365)"
      },
      {
        "commit_hash": "41fd5ef2ad308cb70e3baed35806a1ff26e67db6",
        "line_num": 353,
        "line_str": "static|static block|{ name|cVerbose operator|. name|set",
        "file_path": "JodaTime/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_file_path": "src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_line_num": "range(348, 365)"
      },
      {
        "commit_hash": "41fd5ef2ad308cb70e3baed35806a1ff26e67db6",
        "line_num": 349,
        "line_str": "name|Boolean argument_list|> argument_list|() decl_stmt|; static|static",
        "file_path": "JodaTime/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_file_path": "src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_line_num": "range(348, 365)"
      },
      {
        "commit_hash": "bfe85bf77edb5d4fbc2e4d312b1cea424f27883e",
        "line_num": 262,
        "line_str": "argument_list|) expr_stmt|; block|} specifier|public name|void",
        "file_path": "JodaTime/src/test/org/joda/time/tz/TestCompiler.java",
        "input_file_path": "src/test/java/org/joda/time/tz/TestCompiler.java",
        "input_line_num": "range(299, 303)"
      }
    ]
  },
  {
    "id": 10126,
    "repo_name": "JodaOrg/joda-time",
    "bug_commit_hash": ["43d4a8969c0dc84e632852ef77a408253e226d9f"],
    "fix_commit_hash": "de6baa0e9db0ad2c9508b185f9ad532436862da6",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "43d4a8969c0dc84e632852ef77a408253e226d9f",
        "line_num": 363,
        "line_str": "case|case operator|- literal|1 case|: return|return",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(363, 367)"
      },
      {
        "commit_hash": "43d4a8969c0dc84e632852ef77a408253e226d9f",
        "line_num": 392,
        "line_str": "condition|( name|total operator|/ name|scalar operator|!=",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(391, 396)"
      },
      {
        "commit_hash": "43d4a8969c0dc84e632852ef77a408253e226d9f",
        "line_num": 359,
        "line_str": "condition|( name|scalar condition|) block|{ case|case",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(351, 361)"
      },
      {
        "commit_hash": "43d4a8969c0dc84e632852ef77a408253e226d9f",
        "line_num": 326,
        "line_str": "name|ArithmeticException argument_list|( literal|\"The calculation caused an overflow: \" operator|+ name|val1",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(324, 329)"
      },
      {
        "commit_hash": "43d4a8969c0dc84e632852ef77a408253e226d9f",
        "line_num": 388,
        "line_str": "operator|* name|scalar decl_stmt|; if|if condition|(",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(385, 390)"
      },
      {
        "commit_hash": "43d4a8969c0dc84e632852ef77a408253e226d9f",
        "line_num": 355,
        "line_str": "name|scalar parameter_list|) block|{ switch|switch condition|(",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(351, 361)"
      },
      {
        "commit_hash": "43d4a8969c0dc84e632852ef77a408253e226d9f",
        "line_num": 351,
        "line_str": "name|long name|val1 parameter_list|, name|int name|scalar",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(351, 361)"
      },
      {
        "commit_hash": "43d4a8969c0dc84e632852ef77a408253e226d9f",
        "line_num": 409,
        "line_str": "operator|+ name|scalar argument_list|) throw|; block|}",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(406, 411)"
      },
      {
        "commit_hash": "43d4a8969c0dc84e632852ef77a408253e226d9f",
        "line_num": 401,
        "line_str": "operator|new name|ArithmeticException argument_list|( literal|\"The calculation caused an overflow: \" operator|+",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(400, 405)"
      },
      {
        "commit_hash": "43d4a8969c0dc84e632852ef77a408253e226d9f",
        "line_num": 364,
        "line_str": "operator|- literal|1 case|: return|return operator|-",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(363, 367)"
      },
      {
        "commit_hash": "43d4a8969c0dc84e632852ef77a408253e226d9f",
        "line_num": 393,
        "line_str": "name|total operator|/ name|scalar operator|!= name|val1",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(391, 396)"
      },
      {
        "commit_hash": "43d4a8969c0dc84e632852ef77a408253e226d9f",
        "line_num": 360,
        "line_str": "name|scalar condition|) block|{ case|case operator|-",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(351, 361)"
      },
      {
        "commit_hash": "43d4a8969c0dc84e632852ef77a408253e226d9f",
        "line_num": 327,
        "line_str": "argument_list|( literal|\"The calculation caused an overflow: \" operator|+ name|val1 operator|+",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(324, 329)"
      },
      {
        "commit_hash": "43d4a8969c0dc84e632852ef77a408253e226d9f",
        "line_num": 389,
        "line_str": "name|scalar decl_stmt|; if|if condition|( name|total",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(385, 390)"
      },
      {
        "commit_hash": "43d4a8969c0dc84e632852ef77a408253e226d9f",
        "line_num": 356,
        "line_str": "parameter_list|) block|{ switch|switch condition|( name|scalar",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(351, 361)"
      },
      {
        "commit_hash": "43d4a8969c0dc84e632852ef77a408253e226d9f",
        "line_num": 385,
        "line_str": "name|total init|= name|val1 operator|* name|scalar",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(385, 390)"
      },
      {
        "commit_hash": "43d4a8969c0dc84e632852ef77a408253e226d9f",
        "line_num": 352,
        "line_str": "name|val1 parameter_list|, name|int name|scalar parameter_list|)",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(351, 361)"
      },
      {
        "commit_hash": "43d4a8969c0dc84e632852ef77a408253e226d9f",
        "line_num": 410,
        "line_str": "name|scalar argument_list|) throw|; block|} return|return",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(406, 411)"
      },
      {
        "commit_hash": "43d4a8969c0dc84e632852ef77a408253e226d9f",
        "line_num": 406,
        "line_str": "name|val1 operator|+ literal|\" * \" operator|+ name|scalar",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(406, 411)"
      },
      {
        "commit_hash": "43d4a8969c0dc84e632852ef77a408253e226d9f",
        "line_num": 402,
        "line_str": "name|ArithmeticException argument_list|( literal|\"The calculation caused an overflow: \" operator|+ name|val1",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(400, 405)"
      },
      {
        "commit_hash": "43d4a8969c0dc84e632852ef77a408253e226d9f",
        "line_num": 365,
        "line_str": "literal|1 case|: return|return operator|- name|val1",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(363, 367)"
      },
      {
        "commit_hash": "43d4a8969c0dc84e632852ef77a408253e226d9f",
        "line_num": 394,
        "line_str": "operator|/ name|scalar operator|!= name|val1 condition|)",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(391, 396)"
      },
      {
        "commit_hash": "43d4a8969c0dc84e632852ef77a408253e226d9f",
        "line_num": 328,
        "line_str": "literal|\"The calculation caused an overflow: \" operator|+ name|val1 operator|+ literal|\" * \"",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(324, 329)"
      },
      {
        "commit_hash": "43d4a8969c0dc84e632852ef77a408253e226d9f",
        "line_num": 357,
        "line_str": "block|{ switch|switch condition|( name|scalar condition|)",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(351, 361)"
      },
      {
        "commit_hash": "43d4a8969c0dc84e632852ef77a408253e226d9f",
        "line_num": 324,
        "line_str": "throw|throw operator|new name|ArithmeticException argument_list|( literal|\"The calculation caused an overflow: \"",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(324, 329)"
      },
      {
        "commit_hash": "43d4a8969c0dc84e632852ef77a408253e226d9f",
        "line_num": 386,
        "line_str": "init|= name|val1 operator|* name|scalar decl_stmt|;",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(385, 390)"
      },
      {
        "commit_hash": "43d4a8969c0dc84e632852ef77a408253e226d9f",
        "line_num": 353,
        "line_str": "parameter_list|, name|int name|scalar parameter_list|) block|{",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(351, 361)"
      },
      {
        "commit_hash": "43d4a8969c0dc84e632852ef77a408253e226d9f",
        "line_num": 407,
        "line_str": "operator|+ literal|\" * \" operator|+ name|scalar argument_list|)",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(406, 411)"
      },
      {
        "commit_hash": "43d4a8969c0dc84e632852ef77a408253e226d9f",
        "line_num": 403,
        "line_str": "argument_list|( literal|\"The calculation caused an overflow: \" operator|+ name|val1 operator|+",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(400, 405)"
      },
      {
        "commit_hash": "43d4a8969c0dc84e632852ef77a408253e226d9f",
        "line_num": 366,
        "line_str": "case|: return|return operator|- name|val1 return|;",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(363, 367)"
      },
      {
        "commit_hash": "43d4a8969c0dc84e632852ef77a408253e226d9f",
        "line_num": 395,
        "line_str": "name|scalar operator|!= name|val1 condition|) block|{",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(391, 396)"
      },
      {
        "commit_hash": "43d4a8969c0dc84e632852ef77a408253e226d9f",
        "line_num": 391,
        "line_str": "if|if condition|( name|total operator|/ name|scalar",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(391, 396)"
      },
      {
        "commit_hash": "43d4a8969c0dc84e632852ef77a408253e226d9f",
        "line_num": 358,
        "line_str": "switch|switch condition|( name|scalar condition|) block|{",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(351, 361)"
      },
      {
        "commit_hash": "43d4a8969c0dc84e632852ef77a408253e226d9f",
        "line_num": 325,
        "line_str": "operator|new name|ArithmeticException argument_list|( literal|\"The calculation caused an overflow: \" operator|+",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(324, 329)"
      },
      {
        "commit_hash": "43d4a8969c0dc84e632852ef77a408253e226d9f",
        "line_num": 387,
        "line_str": "name|val1 operator|* name|scalar decl_stmt|; if|if",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(385, 390)"
      },
      {
        "commit_hash": "43d4a8969c0dc84e632852ef77a408253e226d9f",
        "line_num": 354,
        "line_str": "name|int name|scalar parameter_list|) block|{ switch|switch",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(351, 361)"
      },
      {
        "commit_hash": "43d4a8969c0dc84e632852ef77a408253e226d9f",
        "line_num": 408,
        "line_str": "literal|\" * \" operator|+ name|scalar argument_list|) throw|;",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(406, 411)"
      },
      {
        "commit_hash": "43d4a8969c0dc84e632852ef77a408253e226d9f",
        "line_num": 404,
        "line_str": "literal|\"The calculation caused an overflow: \" operator|+ name|val1 operator|+ literal|\" * \"",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(400, 405)"
      },
      {
        "commit_hash": "43d4a8969c0dc84e632852ef77a408253e226d9f",
        "line_num": 400,
        "line_str": "throw|throw operator|new name|ArithmeticException argument_list|( literal|\"The calculation caused an overflow: \"",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(400, 405)"
      }
    ]
  },
  {
    "id": 10127,
    "repo_name": "JodaOrg/joda-time",
    "bug_commit_hash": ["0595368c1c8c78910f7ac49a8e7b20edb802cfa0"],
    "fix_commit_hash": "6f70ce01e743b014bdd9cf8386c45583294e134f",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "0595368c1c8c78910f7ac49a8e7b20edb802cfa0",
        "line_num": 1531,
        "line_str": "name|iDefaultYear argument_list|) decl_stmt|; name|int name|newPos",
        "file_path": "JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_line_num": "range(1530, 1535)"
      },
      {
        "commit_hash": "0595368c1c8c78910f7ac49a8e7b20edb802cfa0",
        "line_num": 1527,
        "line_str": "name|iLocale argument_list|, name|iPivotYear argument_list|, name|iDefaultYear",
        "file_path": "JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_line_num": "range(1530, 1535)"
      },
      {
        "commit_hash": "0595368c1c8c78910f7ac49a8e7b20edb802cfa0",
        "line_num": 1528,
        "line_str": "argument_list|, name|iPivotYear argument_list|, name|iDefaultYear argument_list|)",
        "file_path": "JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_line_num": "range(1530, 1535)"
      },
      {
        "commit_hash": "0595368c1c8c78910f7ac49a8e7b20edb802cfa0",
        "line_num": 1529,
        "line_str": "name|iPivotYear argument_list|, name|iDefaultYear argument_list|) decl_stmt|;",
        "file_path": "JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_line_num": "range(1530, 1535)"
      },
      {
        "commit_hash": "0595368c1c8c78910f7ac49a8e7b20edb802cfa0",
        "line_num": 1530,
        "line_str": "argument_list|, name|iDefaultYear argument_list|) decl_stmt|; name|int",
        "file_path": "JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_line_num": "range(1530, 1535)"
      }
    ]
  },
  {
    "id": 10128,
    "repo_name": "JodaOrg/joda-time",
    "bug_commit_hash": ["068d69ce6debd795067b658922d8c5c6f48c3a38"],
    "fix_commit_hash": "5e02296cd44327cf3f25183ba38ea4ab5ca8683d",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "963b6422da8afcdc6eb1a8063e65ede7828db010",
        "line_num": 589,
        "line_str": "operator|( name|compare operator|!= literal|0 operator|&&",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(584, 601)"
      },
      {
        "commit_hash": "963b6422da8afcdc6eb1a8063e65ede7828db010",
        "line_num": 1357,
        "line_str": "operator|== literal|0 condition|) block|{ name|DurationField",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(1357, 1361)"
      },
      {
        "commit_hash": "963b6422da8afcdc6eb1a8063e65ede7828db010",
        "line_num": 585,
        "line_str": "name|compare operator|< literal|0 operator||| operator|(",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(584, 601)"
      },
      {
        "commit_hash": "963b6422da8afcdc6eb1a8063e65ede7828db010",
        "line_num": 664,
        "line_str": "literal|\"Types array must not contain duplicate: \" operator|+ name|loopType operator|. name|getName",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(662, 665)"
      },
      {
        "commit_hash": "bddbd7bb5e79580a9605a302a5d274e6e31a71b9",
        "line_num": 428,
        "line_str": "block|{ return|return literal|0 return|; block|}",
        "file_path": "JodaTime/src/java/org/joda/time/chrono/UnsupportedDurationField.java",
        "input_file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_line_num": "range(453, 456)"
      },
      {
        "commit_hash": "963b6422da8afcdc6eb1a8063e65ede7828db010",
        "line_num": 598,
        "line_str": "operator|== literal|false operator|) condition|) block|{",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(584, 601)"
      },
      {
        "commit_hash": "963b6422da8afcdc6eb1a8063e65ede7828db010",
        "line_num": 594,
        "line_str": "name|loopUnitField operator|. name|isSupported argument_list|() operator|==",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(584, 601)"
      },
      {
        "commit_hash": "963b6422da8afcdc6eb1a8063e65ede7828db010",
        "line_num": 1358,
        "line_str": "literal|0 condition|) block|{ name|DurationField name|rangeField",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(1357, 1361)"
      },
      {
        "commit_hash": "963b6422da8afcdc6eb1a8063e65ede7828db010",
        "line_num": 590,
        "line_str": "name|compare operator|!= literal|0 operator|&& name|loopUnitField",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(584, 601)"
      },
      {
        "commit_hash": "963b6422da8afcdc6eb1a8063e65ede7828db010",
        "line_num": 586,
        "line_str": "operator|< literal|0 operator||| operator|( name|compare",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(584, 601)"
      },
      {
        "commit_hash": "963b6422da8afcdc6eb1a8063e65ede7828db010",
        "line_num": 3289,
        "line_str": "name|result argument_list|) expr_stmt|; block|} comment",
        "file_path": "JodaTime/src/test/org/joda/time/TestPartial_Basics.java",
        "input_file_path": "src/test/java/org/joda/time/TestPartial_Basics.java",
        "input_line_num": "range(3262, 3263)"
      },
      {
        "commit_hash": "963b6422da8afcdc6eb1a8063e65ede7828db010",
        "line_num": 793,
        "line_str": "name|IllegalArgumentException argument_list|( literal|\"Types array must not contain duplicate: \" operator|+ name|loopType",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(793, 796)"
      },
      {
        "commit_hash": "963b6422da8afcdc6eb1a8063e65ede7828db010",
        "line_num": 599,
        "line_str": "literal|false operator|) condition|) block|{ throw|throw",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(584, 601)"
      },
      {
        "commit_hash": "963b6422da8afcdc6eb1a8063e65ede7828db010",
        "line_num": 595,
        "line_str": "operator|. name|isSupported argument_list|() operator|== literal|false",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(584, 601)"
      },
      {
        "commit_hash": "963b6422da8afcdc6eb1a8063e65ede7828db010",
        "line_num": 1359,
        "line_str": "condition|) block|{ name|DurationField name|rangeField init|=",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(1357, 1361)"
      },
      {
        "commit_hash": "963b6422da8afcdc6eb1a8063e65ede7828db010",
        "line_num": 591,
        "line_str": "operator|!= literal|0 operator|&& name|loopUnitField operator|.",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(584, 601)"
      },
      {
        "commit_hash": "963b6422da8afcdc6eb1a8063e65ede7828db010",
        "line_num": 587,
        "line_str": "literal|0 operator||| operator|( name|compare operator|!=",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(584, 601)"
      },
      {
        "commit_hash": "963b6422da8afcdc6eb1a8063e65ede7828db010",
        "line_num": 794,
        "line_str": "argument_list|( literal|\"Types array must not contain duplicate: \" operator|+ name|loopType operator|.",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(793, 796)"
      },
      {
        "commit_hash": "963b6422da8afcdc6eb1a8063e65ede7828db010",
        "line_num": 600,
        "line_str": "operator|) condition|) block|{ throw|throw operator|new",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(584, 601)"
      },
      {
        "commit_hash": "963b6422da8afcdc6eb1a8063e65ede7828db010",
        "line_num": 662,
        "line_str": "name|IllegalArgumentException argument_list|( literal|\"Types array must not contain duplicate: \" operator|+ name|loopType",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(662, 665)"
      },
      {
        "commit_hash": "bddbd7bb5e79580a9605a302a5d274e6e31a71b9",
        "line_num": 426,
        "line_str": "name|durationField parameter_list|) block|{ return|return literal|0",
        "file_path": "JodaTime/src/java/org/joda/time/chrono/UnsupportedDurationField.java",
        "input_file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_line_num": "range(453, 456)"
      },
      {
        "commit_hash": "963b6422da8afcdc6eb1a8063e65ede7828db010",
        "line_num": 596,
        "line_str": "name|isSupported argument_list|() operator|== literal|false operator|)",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(584, 601)"
      },
      {
        "commit_hash": "963b6422da8afcdc6eb1a8063e65ede7828db010",
        "line_num": 592,
        "line_str": "literal|0 operator|&& name|loopUnitField operator|. name|isSupported",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(584, 601)"
      },
      {
        "commit_hash": "963b6422da8afcdc6eb1a8063e65ede7828db010",
        "line_num": 1360,
        "line_str": "block|{ name|DurationField name|rangeField init|= name|fieldType",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(1357, 1361)"
      },
      {
        "commit_hash": "963b6422da8afcdc6eb1a8063e65ede7828db010",
        "line_num": 588,
        "line_str": "operator||| operator|( name|compare operator|!= literal|0",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(584, 601)"
      },
      {
        "commit_hash": "963b6422da8afcdc6eb1a8063e65ede7828db010",
        "line_num": 584,
        "line_str": "condition|( name|compare operator|< literal|0 operator|||",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(584, 601)"
      },
      {
        "commit_hash": "8e3ab1b659545b9af1952c8c604f278fd368e371",
        "line_num": 452,
        "line_str": "name|DurationField name|durationField parameter_list|) block|{ return|return",
        "file_path": "JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_line_num": "range(452, 453)"
      },
      {
        "commit_hash": "963b6422da8afcdc6eb1a8063e65ede7828db010",
        "line_num": 795,
        "line_str": "literal|\"Types array must not contain duplicate: \" operator|+ name|loopType operator|. name|getName",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(793, 796)"
      },
      {
        "commit_hash": "963b6422da8afcdc6eb1a8063e65ede7828db010",
        "line_num": 663,
        "line_str": "argument_list|( literal|\"Types array must not contain duplicate: \" operator|+ name|loopType operator|.",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(662, 665)"
      },
      {
        "commit_hash": "bddbd7bb5e79580a9605a302a5d274e6e31a71b9",
        "line_num": 427,
        "line_str": "parameter_list|) block|{ return|return literal|0 return|;",
        "file_path": "JodaTime/src/java/org/joda/time/chrono/UnsupportedDurationField.java",
        "input_file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_line_num": "range(453, 456)"
      },
      {
        "commit_hash": "963b6422da8afcdc6eb1a8063e65ede7828db010",
        "line_num": 597,
        "line_str": "argument_list|() operator|== literal|false operator|) condition|)",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(584, 601)"
      },
      {
        "commit_hash": "963b6422da8afcdc6eb1a8063e65ede7828db010",
        "line_num": 593,
        "line_str": "operator|&& name|loopUnitField operator|. name|isSupported argument_list|()",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(584, 601)"
      }
    ]
  },
  {
    "id": 10129,
    "repo_name": "JodaOrg/joda-time",
    "bug_commit_hash": ["0595368c1c8c78910f7ac49a8e7b20edb802cfa0"],
    "fix_commit_hash": "4721a2cbeb664ddfa976a54bef26fc35d6fa66d5",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "6f70ce01e743b014bdd9cf8386c45583294e134f",
        "line_num": 1554,
        "line_str": "argument_list|) argument_list|) decl_stmt|; name|int name|newPos",
        "file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_line_num": "range(1530, 1543)"
      },
      {
        "commit_hash": "6f70ce01e743b014bdd9cf8386c45583294e134f",
        "line_num": 1553,
        "line_str": "name|instantLocal argument_list|) argument_list|) decl_stmt|; name|int",
        "file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_line_num": "range(1530, 1543)"
      },
      {
        "commit_hash": "75e0e5df3f1f5598a6ad128f15b1ceac94ca4d01",
        "line_num": 1092,
        "line_str": "argument_list|() decl_stmt|; name|long name|instantLocal init|=",
        "file_path": "JodaTime/src/java/org/joda/time/format/DateTimeFormatter.java",
        "input_file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_line_num": "range(1494, 1497)"
      },
      {
        "commit_hash": "6f70ce01e743b014bdd9cf8386c45583294e134f",
        "line_num": 1551,
        "line_str": "name|get argument_list|( name|instantLocal argument_list|) argument_list|)",
        "file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_line_num": "range(1530, 1543)"
      },
      {
        "commit_hash": "6f70ce01e743b014bdd9cf8386c45583294e134f",
        "line_num": 1552,
        "line_str": "argument_list|( name|instantLocal argument_list|) argument_list|) decl_stmt|;",
        "file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_line_num": "range(1530, 1543)"
      },
      {
        "commit_hash": "6f70ce01e743b014bdd9cf8386c45583294e134f",
        "line_num": 1550,
        "line_str": "operator|. name|get argument_list|( name|instantLocal argument_list|)",
        "file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_line_num": "range(1530, 1543)"
      },
      {
        "commit_hash": "6f70ce01e743b014bdd9cf8386c45583294e134f",
        "line_num": 1549,
        "line_str": "argument_list|() operator|. name|get argument_list|( name|instantLocal",
        "file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_line_num": "range(1530, 1543)"
      },
      {
        "commit_hash": "6f70ce01e743b014bdd9cf8386c45583294e134f",
        "line_num": 1548,
        "line_str": "name|year argument_list|() operator|. name|get argument_list|(",
        "file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_line_num": "range(1530, 1543)"
      },
      {
        "commit_hash": "6f70ce01e743b014bdd9cf8386c45583294e134f",
        "line_num": 1547,
        "line_str": "operator|. name|year argument_list|() operator|. name|get",
        "file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_line_num": "range(1530, 1543)"
      },
      {
        "commit_hash": "6f70ce01e743b014bdd9cf8386c45583294e134f",
        "line_num": 1546,
        "line_str": "name|chrono operator|. name|year argument_list|() operator|.",
        "file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_line_num": "range(1530, 1543)"
      },
      {
        "commit_hash": "6f70ce01e743b014bdd9cf8386c45583294e134f",
        "line_num": 1544,
        "line_str": "name|iPivotYear argument_list|, name|chrono operator|. name|year",
        "file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_line_num": "range(1530, 1543)"
      },
      {
        "commit_hash": "6f70ce01e743b014bdd9cf8386c45583294e134f",
        "line_num": 1543,
        "line_str": "argument_list|, name|iPivotYear argument_list|, name|chrono operator|.",
        "file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_line_num": "range(1530, 1543)"
      },
      {
        "commit_hash": "6f70ce01e743b014bdd9cf8386c45583294e134f",
        "line_num": 1542,
        "line_str": "name|iLocale argument_list|, name|iPivotYear argument_list|, name|chrono",
        "file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_line_num": "range(1530, 1543)"
      },
      {
        "commit_hash": "75e0e5df3f1f5598a6ad128f15b1ceac94ca4d01",
        "line_num": 1090,
        "line_str": "operator|. name|getChronology argument_list|() decl_stmt|; name|long",
        "file_path": "JodaTime/src/java/org/joda/time/format/DateTimeFormatter.java",
        "input_file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_line_num": "range(1494, 1497)"
      },
      {
        "commit_hash": "75e0e5df3f1f5598a6ad128f15b1ceac94ca4d01",
        "line_num": 1091,
        "line_str": "name|getChronology argument_list|() decl_stmt|; name|long name|instantLocal",
        "file_path": "JodaTime/src/java/org/joda/time/format/DateTimeFormatter.java",
        "input_file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_line_num": "range(1494, 1497)"
      },
      {
        "commit_hash": "6f70ce01e743b014bdd9cf8386c45583294e134f",
        "line_num": 1545,
        "line_str": "argument_list|, name|chrono operator|. name|year argument_list|()",
        "file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_line_num": "range(1530, 1543)"
      }
    ]
  }
]
