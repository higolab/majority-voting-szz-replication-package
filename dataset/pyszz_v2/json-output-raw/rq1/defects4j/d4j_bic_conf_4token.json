[
  {
    "id": 10000,
    "repo_name": "apache/commons-cli",
    "bug_commit_hash": ["c0d5c79f572fc44c527e842f94bbbe9e4b12701d"],
    "fix_commit_hash": "20002f7f4e971349a1c95dd3b05846c5b824b65c",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "c0d5c79f572fc44c527e842f94bbbe9e4b12701d",
        "line_num": 137,
        "line_str": "operator|. name|substring argument_list|( literal|0",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(148, 157)"
      },
      {
        "commit_hash": "c0d5c79f572fc44c527e842f94bbbe9e4b12701d",
        "line_num": 104,
        "line_str": "argument_list|( literal|\"\\\"\" argument_list|) condition|)",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(115, 137)"
      },
      {
        "commit_hash": "c0d5c79f572fc44c527e842f94bbbe9e4b12701d",
        "line_num": 100,
        "line_str": "condition|( name|str operator|. name|startsWith",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(107, 112)"
      },
      {
        "commit_hash": "c0d5c79f572fc44c527e842f94bbbe9e4b12701d",
        "line_num": 129,
        "line_str": "argument_list|( literal|\"\\\"\" argument_list|) condition|)",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(140, 143)"
      },
      {
        "commit_hash": "c0d5c79f572fc44c527e842f94bbbe9e4b12701d",
        "line_num": 96,
        "line_str": "name|str parameter_list|) block|{ if|if",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(107, 112)"
      },
      {
        "commit_hash": "c0d5c79f572fc44c527e842f94bbbe9e4b12701d",
        "line_num": 125,
        "line_str": "condition|( name|str operator|. name|endsWith",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(115, 137)"
      },
      {
        "commit_hash": "c0d5c79f572fc44c527e842f94bbbe9e4b12701d",
        "line_num": 121,
        "line_str": "argument_list|) expr_stmt|; block|} if|if",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(115, 137)"
      },
      {
        "commit_hash": "c0d5c79f572fc44c527e842f94bbbe9e4b12701d",
        "line_num": 117,
        "line_str": "name|str operator|. name|length argument_list|()",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(115, 137)"
      },
      {
        "commit_hash": "c0d5c79f572fc44c527e842f94bbbe9e4b12701d",
        "line_num": 113,
        "line_str": "name|substring argument_list|( literal|1 argument_list|,",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(115, 137)"
      },
      {
        "commit_hash": "c0d5c79f572fc44c527e842f94bbbe9e4b12701d",
        "line_num": 142,
        "line_str": "name|str operator|. name|length argument_list|()",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(148, 157)"
      },
      {
        "commit_hash": "c0d5c79f572fc44c527e842f94bbbe9e4b12701d",
        "line_num": 109,
        "line_str": "name|str operator|= name|str operator|.",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(115, 137)"
      },
      {
        "commit_hash": "c0d5c79f572fc44c527e842f94bbbe9e4b12701d",
        "line_num": 138,
        "line_str": "name|substring argument_list|( literal|0 argument_list|,",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(148, 157)"
      },
      {
        "commit_hash": "c0d5c79f572fc44c527e842f94bbbe9e4b12701d",
        "line_num": 105,
        "line_str": "literal|\"\\\"\" argument_list|) condition|) block|{",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(115, 137)"
      },
      {
        "commit_hash": "c0d5c79f572fc44c527e842f94bbbe9e4b12701d",
        "line_num": 130,
        "line_str": "literal|\"\\\"\" argument_list|) condition|) block|{",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(140, 143)"
      },
      {
        "commit_hash": "c0d5c79f572fc44c527e842f94bbbe9e4b12701d",
        "line_num": 97,
        "line_str": "parameter_list|) block|{ if|if condition|(",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(107, 112)"
      },
      {
        "commit_hash": "c0d5c79f572fc44c527e842f94bbbe9e4b12701d",
        "line_num": 122,
        "line_str": "expr_stmt|; block|} if|if condition|(",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(115, 137)"
      },
      {
        "commit_hash": "c0d5c79f572fc44c527e842f94bbbe9e4b12701d",
        "line_num": 118,
        "line_str": "operator|. name|length argument_list|() argument_list|)",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(115, 137)"
      },
      {
        "commit_hash": "c0d5c79f572fc44c527e842f94bbbe9e4b12701d",
        "line_num": 114,
        "line_str": "argument_list|( literal|1 argument_list|, name|str",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(115, 137)"
      },
      {
        "commit_hash": "c0d5c79f572fc44c527e842f94bbbe9e4b12701d",
        "line_num": 143,
        "line_str": "operator|. name|length argument_list|() operator|-",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(148, 157)"
      },
      {
        "commit_hash": "c0d5c79f572fc44c527e842f94bbbe9e4b12701d",
        "line_num": 110,
        "line_str": "operator|= name|str operator|. name|substring",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(115, 137)"
      },
      {
        "commit_hash": "c0d5c79f572fc44c527e842f94bbbe9e4b12701d",
        "line_num": 139,
        "line_str": "argument_list|( literal|0 argument_list|, name|str",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(148, 157)"
      },
      {
        "commit_hash": "c0d5c79f572fc44c527e842f94bbbe9e4b12701d",
        "line_num": 106,
        "line_str": "argument_list|) condition|) block|{ name|str",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(115, 137)"
      },
      {
        "commit_hash": "c0d5c79f572fc44c527e842f94bbbe9e4b12701d",
        "line_num": 131,
        "line_str": "argument_list|) condition|) block|{ name|str",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(140, 143)"
      },
      {
        "commit_hash": "c0d5c79f572fc44c527e842f94bbbe9e4b12701d",
        "line_num": 98,
        "line_str": "block|{ if|if condition|( name|str",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(107, 112)"
      },
      {
        "commit_hash": "c0d5c79f572fc44c527e842f94bbbe9e4b12701d",
        "line_num": 123,
        "line_str": "block|} if|if condition|( name|str",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(115, 137)"
      },
      {
        "commit_hash": "c0d5c79f572fc44c527e842f94bbbe9e4b12701d",
        "line_num": 119,
        "line_str": "name|length argument_list|() argument_list|) expr_stmt|;",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(115, 137)"
      },
      {
        "commit_hash": "c0d5c79f572fc44c527e842f94bbbe9e4b12701d",
        "line_num": 115,
        "line_str": "literal|1 argument_list|, name|str operator|.",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(115, 137)"
      },
      {
        "commit_hash": "c0d5c79f572fc44c527e842f94bbbe9e4b12701d",
        "line_num": 144,
        "line_str": "name|length argument_list|() operator|- literal|1",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(148, 157)"
      },
      {
        "commit_hash": "c0d5c79f572fc44c527e842f94bbbe9e4b12701d",
        "line_num": 111,
        "line_str": "name|str operator|. name|substring argument_list|(",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(115, 137)"
      },
      {
        "commit_hash": "c0d5c79f572fc44c527e842f94bbbe9e4b12701d",
        "line_num": 140,
        "line_str": "literal|0 argument_list|, name|str operator|.",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(148, 157)"
      },
      {
        "commit_hash": "c0d5c79f572fc44c527e842f94bbbe9e4b12701d",
        "line_num": 107,
        "line_str": "condition|) block|{ name|str operator|=",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(115, 137)"
      },
      {
        "commit_hash": "c0d5c79f572fc44c527e842f94bbbe9e4b12701d",
        "line_num": 99,
        "line_str": "if|if condition|( name|str operator|.",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(107, 112)"
      },
      {
        "commit_hash": "c0d5c79f572fc44c527e842f94bbbe9e4b12701d",
        "line_num": 124,
        "line_str": "if|if condition|( name|str operator|.",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(115, 137)"
      },
      {
        "commit_hash": "c0d5c79f572fc44c527e842f94bbbe9e4b12701d",
        "line_num": 120,
        "line_str": "argument_list|() argument_list|) expr_stmt|; block|}",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(115, 137)"
      },
      {
        "commit_hash": "c0d5c79f572fc44c527e842f94bbbe9e4b12701d",
        "line_num": 116,
        "line_str": "argument_list|, name|str operator|. name|length",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(115, 137)"
      },
      {
        "commit_hash": "c0d5c79f572fc44c527e842f94bbbe9e4b12701d",
        "line_num": 145,
        "line_str": "argument_list|() operator|- literal|1 argument_list|)",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(148, 157)"
      },
      {
        "commit_hash": "c0d5c79f572fc44c527e842f94bbbe9e4b12701d",
        "line_num": 112,
        "line_str": "operator|. name|substring argument_list|( literal|1",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(115, 137)"
      },
      {
        "commit_hash": "c0d5c79f572fc44c527e842f94bbbe9e4b12701d",
        "line_num": 141,
        "line_str": "argument_list|, name|str operator|. name|length",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(148, 157)"
      },
      {
        "commit_hash": "c0d5c79f572fc44c527e842f94bbbe9e4b12701d",
        "line_num": 108,
        "line_str": "block|{ name|str operator|= name|str",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(115, 137)"
      }
    ]
  },
  {
    "id": 10001,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["1a7fbd18b47c102152869c3b046b65ff0f12fc43"],
    "fix_commit_hash": "0884a4cbef1c82153ef306477a12af0480385a35",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "1a7fbd18b47c102152869c3b046b65ff0f12fc43",
        "line_num": 4279,
        "line_str": "name|valueCheck argument_list|( name|n operator|.",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(4967, 4971)"
      },
      {
        "commit_hash": "1a7fbd18b47c102152869c3b046b65ff0f12fc43",
        "line_num": 4246,
        "line_str": "specifier|static name|boolean name|valueCheck parameter_list|(",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(4936, 4940)"
      },
      {
        "commit_hash": "1a7fbd18b47c102152869c3b046b65ff0f12fc43",
        "line_num": 4308,
        "line_str": "argument_list|) operator|&& name|valueCheck argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(4998, 5002)"
      },
      {
        "commit_hash": "1a7fbd18b47c102152869c3b046b65ff0f12fc43",
        "line_num": 4403,
        "line_str": "return|return name|valueCheck argument_list|( name|n",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(5094, 5098)"
      },
      {
        "commit_hash": "1a7fbd18b47c102152869c3b046b65ff0f12fc43",
        "line_num": 4626,
        "line_str": "parameter_list|) block|{ return|return name|valueCheck",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(5321, 5325)"
      },
      {
        "commit_hash": "1a7fbd18b47c102152869c3b046b65ff0f12fc43",
        "line_num": 4337,
        "line_str": "argument_list|) operator|&& name|valueCheck argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(5027, 5031)"
      },
      {
        "commit_hash": "1a7fbd18b47c102152869c3b046b65ff0f12fc43",
        "line_num": 4300,
        "line_str": "name|valueCheck argument_list|( name|n operator|.",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(4988, 4992)"
      },
      {
        "commit_hash": "1a7fbd18b47c102152869c3b046b65ff0f12fc43",
        "line_num": 4325,
        "line_str": "return|return name|valueCheck argument_list|( name|n",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(5014, 5018)"
      },
      {
        "commit_hash": "1a7fbd18b47c102152869c3b046b65ff0f12fc43",
        "line_num": 4866,
        "line_str": "name|valueCheck argument_list|( name|n argument_list|,",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(5500, 5504)"
      },
      {
        "commit_hash": "1a7fbd18b47c102152869c3b046b65ff0f12fc43",
        "line_num": 4247,
        "line_str": "name|boolean name|valueCheck parameter_list|( name|Node",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(4936, 4940)"
      },
      {
        "commit_hash": "1a7fbd18b47c102152869c3b046b65ff0f12fc43",
        "line_num": 4309,
        "line_str": "operator|&& name|valueCheck argument_list|( name|n",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(4998, 5002)"
      },
      {
        "commit_hash": "1a7fbd18b47c102152869c3b046b65ff0f12fc43",
        "line_num": 4276,
        "line_str": "name|COMMA case|: return|return name|valueCheck",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(4967, 4971)"
      },
      {
        "commit_hash": "1a7fbd18b47c102152869c3b046b65ff0f12fc43",
        "line_num": 4404,
        "line_str": "name|valueCheck argument_list|( name|n argument_list|,",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(5094, 5098)"
      },
      {
        "commit_hash": "1a7fbd18b47c102152869c3b046b65ff0f12fc43",
        "line_num": 4338,
        "line_str": "operator|&& name|valueCheck argument_list|( name|n",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(5027, 5031)"
      },
      {
        "commit_hash": "1a7fbd18b47c102152869c3b046b65ff0f12fc43",
        "line_num": 4627,
        "line_str": "block|{ return|return name|valueCheck argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(5321, 5325)"
      },
      {
        "commit_hash": "1a7fbd18b47c102152869c3b046b65ff0f12fc43",
        "line_num": 4297,
        "line_str": "name|OR case|: return|return name|valueCheck",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(4988, 4992)"
      },
      {
        "commit_hash": "1a7fbd18b47c102152869c3b046b65ff0f12fc43",
        "line_num": 4326,
        "line_str": "name|valueCheck argument_list|( name|n operator|.",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(5014, 5018)"
      },
      {
        "commit_hash": "1a7fbd18b47c102152869c3b046b65ff0f12fc43",
        "line_num": 4863,
        "line_str": "condition|) block|{ return|return name|valueCheck",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(5500, 5504)"
      },
      {
        "commit_hash": "1a7fbd18b47c102152869c3b046b65ff0f12fc43",
        "line_num": 4248,
        "line_str": "name|valueCheck parameter_list|( name|Node name|n",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(4936, 4940)"
      },
      {
        "commit_hash": "1a7fbd18b47c102152869c3b046b65ff0f12fc43",
        "line_num": 4310,
        "line_str": "name|valueCheck argument_list|( name|n operator|.",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(4998, 5002)"
      },
      {
        "commit_hash": "1a7fbd18b47c102152869c3b046b65ff0f12fc43",
        "line_num": 4277,
        "line_str": "case|: return|return name|valueCheck argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(4967, 4971)"
      },
      {
        "commit_hash": "1a7fbd18b47c102152869c3b046b65ff0f12fc43",
        "line_num": 4628,
        "line_str": "return|return name|valueCheck argument_list|( name|n",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(5321, 5325)"
      },
      {
        "commit_hash": "1a7fbd18b47c102152869c3b046b65ff0f12fc43",
        "line_num": 4339,
        "line_str": "name|valueCheck argument_list|( name|n operator|.",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(5027, 5031)"
      },
      {
        "commit_hash": "1a7fbd18b47c102152869c3b046b65ff0f12fc43",
        "line_num": 4401,
        "line_str": "parameter_list|) block|{ return|return name|valueCheck",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(5094, 5098)"
      },
      {
        "commit_hash": "1a7fbd18b47c102152869c3b046b65ff0f12fc43",
        "line_num": 4298,
        "line_str": "case|: return|return name|valueCheck argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(4988, 4992)"
      },
      {
        "commit_hash": "1a7fbd18b47c102152869c3b046b65ff0f12fc43",
        "line_num": 4323,
        "line_str": "name|HOOK case|: return|return name|valueCheck",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(5014, 5018)"
      },
      {
        "commit_hash": "1a7fbd18b47c102152869c3b046b65ff0f12fc43",
        "line_num": 4864,
        "line_str": "block|{ return|return name|valueCheck argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(5500, 5504)"
      },
      {
        "commit_hash": "1a7fbd18b47c102152869c3b046b65ff0f12fc43",
        "line_num": 4278,
        "line_str": "return|return name|valueCheck argument_list|( name|n",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(4967, 4971)"
      },
      {
        "commit_hash": "1a7fbd18b47c102152869c3b046b65ff0f12fc43",
        "line_num": 4245,
        "line_str": "comment specifier|static name|boolean name|valueCheck",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(4936, 4940)"
      },
      {
        "commit_hash": "1a7fbd18b47c102152869c3b046b65ff0f12fc43",
        "line_num": 4629,
        "line_str": "name|valueCheck argument_list|( name|n argument_list|,",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(5321, 5325)"
      },
      {
        "commit_hash": "1a7fbd18b47c102152869c3b046b65ff0f12fc43",
        "line_num": 4307,
        "line_str": "name|p argument_list|) operator|&& name|valueCheck",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(4998, 5002)"
      },
      {
        "commit_hash": "1a7fbd18b47c102152869c3b046b65ff0f12fc43",
        "line_num": 4402,
        "line_str": "block|{ return|return name|valueCheck argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(5094, 5098)"
      },
      {
        "commit_hash": "1a7fbd18b47c102152869c3b046b65ff0f12fc43",
        "line_num": 4336,
        "line_str": "name|p argument_list|) operator|&& name|valueCheck",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(5027, 5031)"
      },
      {
        "commit_hash": "1a7fbd18b47c102152869c3b046b65ff0f12fc43",
        "line_num": 4299,
        "line_str": "return|return name|valueCheck argument_list|( name|n",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(4988, 4992)"
      },
      {
        "commit_hash": "1a7fbd18b47c102152869c3b046b65ff0f12fc43",
        "line_num": 4324,
        "line_str": "case|: return|return name|valueCheck argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(5014, 5018)"
      },
      {
        "commit_hash": "1a7fbd18b47c102152869c3b046b65ff0f12fc43",
        "line_num": 4865,
        "line_str": "return|return name|valueCheck argument_list|( name|n",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(5500, 5504)"
      }
    ]
  },
  {
    "id": 10002,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["1be1c2636ef14071afa7da5cb8988972bd90149f"],
    "fix_commit_hash": "67289ae4cbaba3ae70cd2e8fb92f3f2898039dfb",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "66485d3df654fa92b7500d5e15b58300677edca3",
        "line_num": 44,
        "line_str": "operator|. name|google operator|. name|javascript",
        "file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_line_num": "range(72, 84)"
      },
      {
        "commit_hash": "bca9abb0e3062d373fe52c0e8340337588c05708",
        "line_num": 69,
        "line_str": "begin_import import|import name|com operator|.",
        "file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_line_num": "range(67, 72)"
      },
      {
        "commit_hash": "1be1c2636ef14071afa7da5cb8988972bd90149f",
        "line_num": 518,
        "line_str": "name|Exception block|{ name|UnionType name|numStr",
        "file_path": "test/com/google/javascript/rhino/jstype/UnionTypeTest.java",
        "input_file_path": "test/com/google/javascript/rhino/jstype/UnionTypeTest.java",
        "input_line_num": "range(518, 522)"
      },
      {
        "commit_hash": "1be1c2636ef14071afa7da5cb8988972bd90149f",
        "line_num": 543,
        "line_str": "argument_list|, name|numStr operator|. name|getGreatestSubtype",
        "file_path": "test/com/google/javascript/rhino/jstype/UnionTypeTest.java",
        "input_file_path": "test/com/google/javascript/rhino/jstype/UnionTypeTest.java",
        "input_line_num": "range(541, 545)"
      },
      {
        "commit_hash": "66485d3df654fa92b7500d5e15b58300677edca3",
        "line_num": 53,
        "line_str": "name|JSType operator|. name|TypePair import|;",
        "file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_line_num": "range(72, 84)"
      },
      {
        "commit_hash": "66485d3df654fa92b7500d5e15b58300677edca3",
        "line_num": 49,
        "line_str": "name|rhino operator|. name|jstype operator|.",
        "file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_line_num": "range(72, 84)"
      },
      {
        "commit_hash": "1be1c2636ef14071afa7da5cb8988972bd90149f",
        "line_num": 817,
        "line_str": "condition|( name|result operator|!= literal|null",
        "file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_line_num": "range(815, 821)"
      },
      {
        "commit_hash": "66485d3df654fa92b7500d5e15b58300677edca3",
        "line_num": 45,
        "line_str": "name|google operator|. name|javascript operator|.",
        "file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_line_num": "range(72, 84)"
      },
      {
        "commit_hash": "bca9abb0e3062d373fe52c0e8340337588c05708",
        "line_num": 70,
        "line_str": "import|import name|com operator|. name|google",
        "file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_line_num": "range(67, 72)"
      },
      {
        "commit_hash": "1be1c2636ef14071afa7da5cb8988972bd90149f",
        "line_num": 519,
        "line_str": "block|{ name|UnionType name|numStr init|=",
        "file_path": "test/com/google/javascript/rhino/jstype/UnionTypeTest.java",
        "input_file_path": "test/com/google/javascript/rhino/jstype/UnionTypeTest.java",
        "input_line_num": "range(518, 522)"
      },
      {
        "commit_hash": "1be1c2636ef14071afa7da5cb8988972bd90149f",
        "line_num": 820,
        "line_str": "literal|null condition|) block|{ return|return",
        "file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_line_num": "range(815, 821)"
      },
      {
        "commit_hash": "1be1c2636ef14071afa7da5cb8988972bd90149f",
        "line_num": 544,
        "line_str": "name|numStr operator|. name|getGreatestSubtype argument_list|(",
        "file_path": "test/com/google/javascript/rhino/jstype/UnionTypeTest.java",
        "input_file_path": "test/com/google/javascript/rhino/jstype/UnionTypeTest.java",
        "input_line_num": "range(541, 545)"
      },
      {
        "commit_hash": "66485d3df654fa92b7500d5e15b58300677edca3",
        "line_num": 54,
        "line_str": "operator|. name|TypePair import|; end_import",
        "file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_line_num": "range(72, 84)"
      },
      {
        "commit_hash": "1be1c2636ef14071afa7da5cb8988972bd90149f",
        "line_num": 818,
        "line_str": "name|result operator|!= literal|null condition|)",
        "file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_line_num": "range(815, 821)"
      },
      {
        "commit_hash": "66485d3df654fa92b7500d5e15b58300677edca3",
        "line_num": 50,
        "line_str": "operator|. name|jstype operator|. name|JSType",
        "file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_line_num": "range(72, 84)"
      },
      {
        "commit_hash": "66485d3df654fa92b7500d5e15b58300677edca3",
        "line_num": 46,
        "line_str": "operator|. name|javascript operator|. name|rhino",
        "file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_line_num": "range(72, 84)"
      },
      {
        "commit_hash": "bca9abb0e3062d373fe52c0e8340337588c05708",
        "line_num": 71,
        "line_str": "name|com operator|. name|google operator|.",
        "file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_line_num": "range(67, 72)"
      },
      {
        "commit_hash": "bca9abb0e3062d373fe52c0e8340337588c05708",
        "line_num": 67,
        "line_str": "end_import  begin_import import|import",
        "file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_line_num": "range(67, 72)"
      },
      {
        "commit_hash": "1be1c2636ef14071afa7da5cb8988972bd90149f",
        "line_num": 520,
        "line_str": "name|UnionType name|numStr init|= operator|(",
        "file_path": "test/com/google/javascript/rhino/jstype/UnionTypeTest.java",
        "input_file_path": "test/com/google/javascript/rhino/jstype/UnionTypeTest.java",
        "input_line_num": "range(518, 522)"
      },
      {
        "commit_hash": "66485d3df654fa92b7500d5e15b58300677edca3",
        "line_num": 55,
        "line_str": "name|TypePair import|; end_import",
        "file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_line_num": "range(72, 84)"
      },
      {
        "commit_hash": "1be1c2636ef14071afa7da5cb8988972bd90149f",
        "line_num": 541,
        "line_str": "name|URI_ERROR_TYPE argument_list|) argument_list|, name|numStr",
        "file_path": "test/com/google/javascript/rhino/jstype/UnionTypeTest.java",
        "input_file_path": "test/com/google/javascript/rhino/jstype/UnionTypeTest.java",
        "input_line_num": "range(541, 545)"
      },
      {
        "commit_hash": "66485d3df654fa92b7500d5e15b58300677edca3",
        "line_num": 48,
        "line_str": "operator|. name|rhino operator|. name|jstype",
        "file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_line_num": "range(72, 84)"
      },
      {
        "commit_hash": "66485d3df654fa92b7500d5e15b58300677edca3",
        "line_num": 51,
        "line_str": "name|jstype operator|. name|JSType operator|.",
        "file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_line_num": "range(72, 84)"
      },
      {
        "commit_hash": "1be1c2636ef14071afa7da5cb8988972bd90149f",
        "line_num": 819,
        "line_str": "operator|!= literal|null condition|) block|{",
        "file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_line_num": "range(815, 821)"
      },
      {
        "commit_hash": "66485d3df654fa92b7500d5e15b58300677edca3",
        "line_num": 47,
        "line_str": "name|javascript operator|. name|rhino operator|.",
        "file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_line_num": "range(72, 84)"
      },
      {
        "commit_hash": "1be1c2636ef14071afa7da5cb8988972bd90149f",
        "line_num": 815,
        "line_str": "decl_stmt|; if|if condition|( name|result",
        "file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_line_num": "range(815, 821)"
      },
      {
        "commit_hash": "bca9abb0e3062d373fe52c0e8340337588c05708",
        "line_num": 68,
        "line_str": "begin_import import|import name|com",
        "file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_line_num": "range(67, 72)"
      },
      {
        "commit_hash": "1be1c2636ef14071afa7da5cb8988972bd90149f",
        "line_num": 521,
        "line_str": "name|numStr init|= operator|( name|UnionType",
        "file_path": "test/com/google/javascript/rhino/jstype/UnionTypeTest.java",
        "input_file_path": "test/com/google/javascript/rhino/jstype/UnionTypeTest.java",
        "input_line_num": "range(518, 522)"
      },
      {
        "commit_hash": "1be1c2636ef14071afa7da5cb8988972bd90149f",
        "line_num": 542,
        "line_str": "argument_list|) argument_list|, name|numStr operator|.",
        "file_path": "test/com/google/javascript/rhino/jstype/UnionTypeTest.java",
        "input_file_path": "test/com/google/javascript/rhino/jstype/UnionTypeTest.java",
        "input_line_num": "range(541, 545)"
      },
      {
        "commit_hash": "66485d3df654fa92b7500d5e15b58300677edca3",
        "line_num": 52,
        "line_str": "operator|. name|JSType operator|. name|TypePair",
        "file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_line_num": "range(72, 84)"
      },
      {
        "commit_hash": "1be1c2636ef14071afa7da5cb8988972bd90149f",
        "line_num": 816,
        "line_str": "if|if condition|( name|result operator|!=",
        "file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_line_num": "range(815, 821)"
      }
    ]
  },
  {
    "id": 10003,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["87071ddf324c3885361f0375b84e15c7cd62283d"],
    "fix_commit_hash": "0fb76a81bbdd8ab84a00b8be2099abfb83c88668",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "87071ddf324c3885361f0375b84e15c7cd62283d",
        "line_num": 1585,
        "line_str": "literal|null condition|) block|{ name|parent",
        "file_path": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
        "input_file_path": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
        "input_line_num": "range(1583, 1586)"
      },
      {
        "commit_hash": "87071ddf324c3885361f0375b84e15c7cd62283d",
        "line_num": 1584,
        "line_str": "operator|!= literal|null condition|) block|{",
        "file_path": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
        "input_file_path": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
        "input_line_num": "range(1583, 1586)"
      },
      {
        "commit_hash": "87071ddf324c3885361f0375b84e15c7cd62283d",
        "line_num": 1583,
        "line_str": "name|provided operator|!= literal|null condition|)",
        "file_path": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
        "input_file_path": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
        "input_line_num": "range(1583, 1586)"
      }
    ]
  },
  {
    "id": 10004,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["b80dfd3b0e5e4b490b7afb469320d18bac4520b4"],
    "fix_commit_hash": "4597738e8898f738c1f969fe90479728be81cc80",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 3527,
        "line_str": "argument_list|) expr_stmt|; block|} specifier|public",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3546)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2358,
        "line_str": "block|{ name|hasSideEffects operator|= name|NodeUtil",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2325,
        "line_str": "if|if condition|( name|block operator|.",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 826,
        "line_str": "literal|\"var d=c\" argument_list|) expr_stmt|; block|}",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(823, 827)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 5368,
        "line_str": "literal|\"    return foo(obj) + saved;\" operator|+ literal|\"  })(obj[\\\"prop\\\"]);\" argument_list|,",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(5356, 5379)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 4757,
        "line_str": "literal|\"    }\" operator|+ literal|\"    JSCompiler_inline_result$$1=JSCompiler_inline_result$$0.getDomHelper().getWindow();\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4740, 4764)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2507,
        "line_str": "argument_list|) condition|) block|{ return|return",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2495, 2516)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 83,
        "line_str": "name|super argument_list|( name|EXTERNS argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(80, 88)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 3544,
        "line_str": "argument_list|, name|INLINE_DIRECT argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3546)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 3511,
        "line_str": "specifier|public name|void name|testIssue1101a parameter_list|()",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3546)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2131,
        "line_str": "operator|+ literal|\"{var a$$inline_0=chg()+1+1;\" operator|+ literal|\"a=chg()+a$$inline_0+a$$inline_0}\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2129, 2135)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2342,
        "line_str": "expr_stmt|; name|Node name|stmt init|=",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2379,
        "line_str": "literal|\"foo(bar(x));\" argument_list|, literal|\"nochg(x)\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2378, 2382)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 678,
        "line_str": "literal|\"    JSCompiler_inline_result$$0=function(a$$inline_2){\" operator|+ literal|\"        return a$$inline_2+1};\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(667, 685)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 4741,
        "line_str": "literal|\"  {\" operator|+ literal|\"    var JSCompiler_inline_result$$0;\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4740, 4764)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 67,
        "line_str": "init|= literal|false decl_stmt|; specifier|final",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(67, 78)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 3528,
        "line_str": "expr_stmt|; block|} specifier|public name|void",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3546)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2359,
        "line_str": "name|hasSideEffects operator|= name|NodeUtil operator|.",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2326,
        "line_str": "condition|( name|block operator|. name|hasChildren",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 5369,
        "line_str": "operator|+ literal|\"  })(obj[\\\"prop\\\"]);\" argument_list|, literal|\"var x;\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(5356, 5379)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 4758,
        "line_str": "operator|+ literal|\"    JSCompiler_inline_result$$1=JSCompiler_inline_result$$0.getDomHelper().getWindow();\" operator|+ literal|\"  }\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4740, 4764)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2508,
        "line_str": "condition|) block|{ return|return name|CanInlineResult",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2495, 2516)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2165,
        "line_str": "comment name|test argument_list|( literal|\"function f(a){return chg() + a + a;}\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2165, 2169)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 3545,
        "line_str": "name|INLINE_DIRECT argument_list|) expr_stmt|; block|}",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3546)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 3512,
        "line_str": "name|void name|testIssue1101a parameter_list|() block|{",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3546)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 84,
        "line_str": "argument_list|( name|EXTERNS argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(80, 88)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2343,
        "line_str": "name|Node name|stmt init|= name|block",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2132,
        "line_str": "literal|\"{var a$$inline_0=chg()+1+1;\" operator|+ literal|\"a=chg()+a$$inline_0+a$$inline_0}\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2129, 2135)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 365,
        "line_str": "comment name|test argument_list|( literal|\"function BAR_FN(x, y, z) { return z(nochg(x + y)) }\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(365, 379)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2380,
        "line_str": "argument_list|, literal|\"nochg(x)\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2378, 2382)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 1323,
        "line_str": "block|} specifier|public name|void name|testInlineIfParametersModified9",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(1323, 1327)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 679,
        "line_str": "operator|+ literal|\"        return a$$inline_2+1};\" operator|+ literal|\"  }\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(667, 685)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 4742,
        "line_str": "operator|+ literal|\"    var JSCompiler_inline_result$$0;\" operator|+ literal|\"    {\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4740, 4764)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2149,
        "line_str": "expr_stmt|; name|test argument_list|( literal|\"function f(a){return nochg() + a + a;}\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2149, 2157)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 68,
        "line_str": "literal|false decl_stmt|; specifier|final specifier|static",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(67, 78)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 3529,
        "line_str": "block|} specifier|public name|void name|testIssue1101b",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3546)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2360,
        "line_str": "operator|= name|NodeUtil operator|. name|mayHaveSideEffects",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2327,
        "line_str": "name|block operator|. name|hasChildren argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 5370,
        "line_str": "literal|\"  })(obj[\\\"prop\\\"]);\" argument_list|, literal|\"var x;\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(5356, 5379)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 4759,
        "line_str": "literal|\"    JSCompiler_inline_result$$1=JSCompiler_inline_result$$0.getDomHelper().getWindow();\" operator|+ literal|\"  }\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4740, 4764)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2509,
        "line_str": "block|{ return|return name|CanInlineResult operator|.",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2495, 2516)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2166,
        "line_str": "name|test argument_list|( literal|\"function f(a){return chg() + a + a;}\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2165, 2169)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 85,
        "line_str": "name|EXTERNS argument_list|) expr_stmt|; name|this",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(80, 88)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 3513,
        "line_str": "name|testIssue1101a parameter_list|() block|{ name|helperCanInlineReferenceToFunction",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3546)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2133,
        "line_str": "operator|+ literal|\"a=chg()+a$$inline_0+a$$inline_0}\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2129, 2135)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2344,
        "line_str": "name|stmt init|= name|block operator|.",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 366,
        "line_str": "name|test argument_list|( literal|\"function BAR_FN(x, y, z) { return z(nochg(x + y)) }\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(365, 379)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2381,
        "line_str": "literal|\"nochg(x)\" argument_list|) expr_stmt|; block|}",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2378, 2382)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 1324,
        "line_str": "specifier|public name|void name|testInlineIfParametersModified9 parameter_list|()",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(1323, 1327)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 680,
        "line_str": "literal|\"        return a$$inline_2+1};\" operator|+ literal|\"  }\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(667, 685)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 4743,
        "line_str": "literal|\"    var JSCompiler_inline_result$$0;\" operator|+ literal|\"    {\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4740, 4764)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2150,
        "line_str": "name|test argument_list|( literal|\"function f(a){return nochg() + a + a;}\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2149, 2157)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 69,
        "line_str": "decl_stmt|; specifier|final specifier|static name|String",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(67, 78)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 3530,
        "line_str": "specifier|public name|void name|testIssue1101b parameter_list|()",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3546)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 581,
        "line_str": "operator|+ literal|\"var d=b()+foo()\" argument_list|, literal|\"var JSCompiler_inline_result$$0;\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(581, 591)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2361,
        "line_str": "name|NodeUtil operator|. name|mayHaveSideEffects argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2328,
        "line_str": "operator|. name|hasChildren argument_list|() condition|)",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 5371,
        "line_str": "argument_list|, literal|\"var x;\" operator|+ literal|\"{\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(5356, 5379)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 4760,
        "line_str": "operator|+ literal|\"  }\" operator|+ literal|\"  var myUrl=new JSCompiler_temp_const$$0(JSCompiler_inline_result$$1.location.href)\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4740, 4764)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2510,
        "line_str": "return|return name|CanInlineResult operator|. name|NO",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2495, 2516)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2167,
        "line_str": "argument_list|( literal|\"function f(a){return chg() + a + a;}\" operator|+ literal|\"var a = f(f(1))\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2165, 2169)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 86,
        "line_str": "argument_list|) expr_stmt|; name|this operator|.",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(80, 88)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 3514,
        "line_str": "parameter_list|() block|{ name|helperCanInlineReferenceToFunction argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3546)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2134,
        "line_str": "literal|\"a=chg()+a$$inline_0+a$$inline_0}\" argument_list|) expr_stmt|; block|}",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2129, 2135)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2345,
        "line_str": "init|= name|block operator|. name|getFirstChild",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 367,
        "line_str": "argument_list|( literal|\"function BAR_FN(x, y, z) { return z(nochg(x + y)) }\" operator|+ literal|\"alert(BAR_FN(1, 2, baz))\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(365, 379)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 1325,
        "line_str": "name|void name|testInlineIfParametersModified9 parameter_list|() block|{",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(1323, 1327)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 681,
        "line_str": "operator|+ literal|\"  }\" operator|+ literal|\"  var d=c+JSCompiler_inline_result$$0\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(667, 685)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 4744,
        "line_str": "operator|+ literal|\"    {\" operator|+ literal|\"      var self$$inline_1=self$$2;\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4740, 4764)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2151,
        "line_str": "argument_list|( literal|\"function f(a){return nochg() + a + a;}\" operator|+ literal|\"var a = f(f(1));\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2149, 2157)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 582,
        "line_str": "literal|\"var d=b()+foo()\" argument_list|, literal|\"var JSCompiler_inline_result$$0;\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(581, 591)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 3531,
        "line_str": "name|void name|testIssue1101b parameter_list|() block|{",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3546)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 70,
        "line_str": "specifier|final specifier|static name|String name|EXTERNS",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(67, 78)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2362,
        "line_str": "operator|. name|mayHaveSideEffects argument_list|( name|stmt",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2329,
        "line_str": "name|hasChildren argument_list|() condition|) block|{",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 1309,
        "line_str": "block|} specifier|public name|void name|testInlineIfParametersModified8",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(1309, 1313)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 5372,
        "line_str": "literal|\"var x;\" operator|+ literal|\"{\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(5356, 5379)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 4761,
        "line_str": "literal|\"  }\" operator|+ literal|\"  var myUrl=new JSCompiler_temp_const$$0(JSCompiler_inline_result$$1.location.href)\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4740, 4764)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2511,
        "line_str": "name|CanInlineResult operator|. name|NO return|;",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2495, 2516)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2168,
        "line_str": "literal|\"function f(a){return chg() + a + a;}\" operator|+ literal|\"var a = f(f(1))\" argument_list|,",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2165, 2169)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 87,
        "line_str": "expr_stmt|; name|this operator|. name|enableNormalize",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(80, 88)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 3515,
        "line_str": "block|{ name|helperCanInlineReferenceToFunction argument_list|( name|CanInlineResult",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3546)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2346,
        "line_str": "name|block operator|. name|getFirstChild argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 368,
        "line_str": "literal|\"function BAR_FN(x, y, z) { return z(nochg(x + y)) }\" operator|+ literal|\"alert(BAR_FN(1, 2, baz))\" argument_list|,",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(365, 379)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 1326,
        "line_str": "name|testInlineIfParametersModified9 parameter_list|() block|{ comment",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(1323, 1327)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 5356,
        "line_str": "argument_list|) expr_stmt|; block|} specifier|public",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(5356, 5379)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 682,
        "line_str": "literal|\"  }\" operator|+ literal|\"  var d=c+JSCompiler_inline_result$$0\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(667, 685)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 4745,
        "line_str": "literal|\"    {\" operator|+ literal|\"      var self$$inline_1=self$$2;\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4740, 4764)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2495,
        "line_str": "literal|null condition|) block|{ if|if",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2495, 2516)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2152,
        "line_str": "literal|\"function f(a){return nochg() + a + a;}\" operator|+ literal|\"var a = f(f(1));\" argument_list|,",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2149, 2157)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 3532,
        "line_str": "name|testIssue1101b parameter_list|() block|{ name|helperCanInlineReferenceToFunction",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3546)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 71,
        "line_str": "specifier|static name|String name|EXTERNS init|=",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(67, 78)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2363,
        "line_str": "name|mayHaveSideEffects argument_list|( name|stmt operator|.",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2330,
        "line_str": "argument_list|() condition|) block|{ name|Preconditions",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 583,
        "line_str": "argument_list|, literal|\"var JSCompiler_inline_result$$0;\" operator|+ literal|\"{var x$$inline_1;\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(581, 591)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 1310,
        "line_str": "specifier|public name|void name|testInlineIfParametersModified8 parameter_list|()",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(1309, 1313)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 5373,
        "line_str": "operator|+ literal|\"{\" operator|+ literal|\"  var saved$$inline_0=obj[\\\"prop\\\"];x=foo(obj)+saved$$inline_0\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(5356, 5379)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 4762,
        "line_str": "operator|+ literal|\"  var myUrl=new JSCompiler_temp_const$$0(JSCompiler_inline_result$$1.location.href)\" operator|+ literal|\"}\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4740, 4764)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2512,
        "line_str": "operator|. name|NO return|; block|}",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2495, 2516)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 3516,
        "line_str": "name|helperCanInlineReferenceToFunction argument_list|( name|CanInlineResult operator|.",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3546)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2347,
        "line_str": "operator|. name|getFirstChild argument_list|() decl_stmt|;",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 369,
        "line_str": "operator|+ literal|\"alert(BAR_FN(1, 2, baz))\" argument_list|, literal|\"var JSCompiler_temp_const$$0=alert;\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(365, 379)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 5357,
        "line_str": "expr_stmt|; block|} specifier|public name|void",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(5356, 5379)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 683,
        "line_str": "operator|+ literal|\"  var d=c+JSCompiler_inline_result$$0\" operator|+ literal|\"}\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(667, 685)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 4746,
        "line_str": "operator|+ literal|\"      var self$$inline_1=self$$2;\" operator|+ literal|\"      if(!self$$inline_1.domServices_) {\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4740, 4764)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2496,
        "line_str": "condition|) block|{ if|if condition|(",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2495, 2516)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2153,
        "line_str": "operator|+ literal|\"var a = f(f(1));\" argument_list|, literal|\"var a= nochg()+(nochg()+1+1)+(nochg()+1+1);\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2149, 2157)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 3533,
        "line_str": "parameter_list|() block|{ name|helperCanInlineReferenceToFunction argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3546)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 72,
        "line_str": "name|String name|EXTERNS init|= literal|\"/** @nosideeffects */ function nochg(){}\\n\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(67, 78)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2364,
        "line_str": "argument_list|( name|stmt operator|. name|getFirstChild",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2331,
        "line_str": "condition|) block|{ name|Preconditions operator|.",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 584,
        "line_str": "literal|\"var JSCompiler_inline_result$$0;\" operator|+ literal|\"{var x$$inline_1;\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(581, 591)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 1311,
        "line_str": "name|void name|testInlineIfParametersModified8 parameter_list|() block|{",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(1309, 1313)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 5374,
        "line_str": "literal|\"{\" operator|+ literal|\"  var saved$$inline_0=obj[\\\"prop\\\"];x=foo(obj)+saved$$inline_0\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(5356, 5379)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 667,
        "line_str": "operator|+ literal|\"function _x(){ var d=b()+foo() }\" argument_list|, literal|\"function _x(){\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(667, 685)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2513,
        "line_str": "name|NO return|; block|} comment",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2495, 2516)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 4730,
        "line_str": "operator|+ literal|\"};\" argument_list|, literal|\"HangoutStarter.prototype.launchHangout=function(){\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4730, 4738)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 4763,
        "line_str": "literal|\"  var myUrl=new JSCompiler_temp_const$$0(JSCompiler_inline_result$$1.location.href)\" operator|+ literal|\"}\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4740, 4764)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 3517,
        "line_str": "argument_list|( name|CanInlineResult operator|. name|NO",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3546)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2348,
        "line_str": "name|getFirstChild argument_list|() decl_stmt|; if|if",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 370,
        "line_str": "literal|\"alert(BAR_FN(1, 2, baz))\" argument_list|, literal|\"var JSCompiler_temp_const$$0=alert;\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(365, 379)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 783,
        "line_str": "operator|+ literal|\"var d=foo(bar(1),e)\" argument_list|, literal|\"var d=c+e;\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(783, 787)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 5358,
        "line_str": "block|} specifier|public name|void name|testIssue1101",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(5356, 5379)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 684,
        "line_str": "literal|\"  var d=c+JSCompiler_inline_result$$0\" operator|+ literal|\"}\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(667, 685)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 4747,
        "line_str": "literal|\"      var self$$inline_1=self$$2;\" operator|+ literal|\"      if(!self$$inline_1.domServices_) {\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4740, 4764)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2497,
        "line_str": "block|{ if|if condition|( name|hasSideEffects",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2495, 2516)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2154,
        "line_str": "literal|\"var a = f(f(1));\" argument_list|, literal|\"var a= nochg()+(nochg()+1+1)+(nochg()+1+1);\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2149, 2157)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 3534,
        "line_str": "block|{ name|helperCanInlineReferenceToFunction argument_list|( name|CanInlineResult",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3546)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 73,
        "line_str": "name|EXTERNS init|= literal|\"/** @nosideeffects */ function nochg(){}\\n\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(67, 78)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2365,
        "line_str": "name|stmt operator|. name|getFirstChild argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2332,
        "line_str": "block|{ name|Preconditions operator|. name|checkState",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 585,
        "line_str": "operator|+ literal|\"{var x$$inline_1;\" operator|+ literal|\"JSCompiler_inline_result$$0=function(a$$inline_2){return a$$inline_2+1};}\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(581, 591)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 1312,
        "line_str": "name|testInlineIfParametersModified8 parameter_list|() block|{ comment",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(1309, 1313)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 5375,
        "line_str": "operator|+ literal|\"  var saved$$inline_0=obj[\\\"prop\\\"];x=foo(obj)+saved$$inline_0\" operator|+ literal|\"}\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(5356, 5379)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 668,
        "line_str": "literal|\"function _x(){ var d=b()+foo() }\" argument_list|, literal|\"function _x(){\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(667, 685)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2514,
        "line_str": "return|; block|} comment comment",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2495, 2516)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2171,
        "line_str": "argument_list|, literal|\"var a;\" operator|+ literal|\"{var a$$inline_0=chg()+1+1;\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2171, 2177)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 4731,
        "line_str": "literal|\"};\" argument_list|, literal|\"HangoutStarter.prototype.launchHangout=function(){\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4730, 4738)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 3518,
        "line_str": "name|CanInlineResult operator|. name|NO argument_list|,",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3546)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2349,
        "line_str": "argument_list|() decl_stmt|; if|if condition|(",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2316,
        "line_str": "name|getLastChild argument_list|() decl_stmt|; name|boolean",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 371,
        "line_str": "argument_list|, literal|\"var JSCompiler_temp_const$$0=alert;\" operator|+ literal|\"var JSCompiler_inline_result$$1;\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(365, 379)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 784,
        "line_str": "literal|\"var d=foo(bar(1),e)\" argument_list|, literal|\"var d=c+e;\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(783, 787)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 5359,
        "line_str": "specifier|public name|void name|testIssue1101 parameter_list|()",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(5356, 5379)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 4748,
        "line_str": "operator|+ literal|\"      if(!self$$inline_1.domServices_) {\" operator|+ literal|\"        self$$inline_1.domServices_=goog$component$DomServices.get(self$$inline_1.appContext_);\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4740, 4764)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2498,
        "line_str": "if|if condition|( name|hasSideEffects operator|&&",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2495, 2516)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2155,
        "line_str": "argument_list|, literal|\"var a= nochg()+(nochg()+1+1)+(nochg()+1+1);\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2149, 2157)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 3535,
        "line_str": "name|helperCanInlineReferenceToFunction argument_list|( name|CanInlineResult operator|.",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3546)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 586,
        "line_str": "literal|\"{var x$$inline_1;\" operator|+ literal|\"JSCompiler_inline_result$$0=function(a$$inline_2){return a$$inline_2+1};}\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(581, 591)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2366,
        "line_str": "operator|. name|getFirstChild argument_list|() argument_list|,",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2333,
        "line_str": "name|Preconditions operator|. name|checkState argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 74,
        "line_str": "init|= literal|\"/** @nosideeffects */ function nochg(){}\\n\" operator|+ literal|\"function chg(){}\\n\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(67, 78)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 5376,
        "line_str": "literal|\"  var saved$$inline_0=obj[\\\"prop\\\"];x=foo(obj)+saved$$inline_0\" operator|+ literal|\"}\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(5356, 5379)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 669,
        "line_str": "argument_list|, literal|\"function _x(){\" operator|+ literal|\"  var JSCompiler_inline_result$$0;\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(667, 685)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2515,
        "line_str": "block|} comment comment comment",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2495, 2516)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2172,
        "line_str": "literal|\"var a;\" operator|+ literal|\"{var a$$inline_0=chg()+1+1;\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2171, 2177)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 4732,
        "line_str": "argument_list|, literal|\"HangoutStarter.prototype.launchHangout=function(){\" operator|+ literal|\"  var self$$2=a.b;\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4730, 4738)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 3519,
        "line_str": "operator|. name|NO argument_list|, literal|\"function foo(a){return modifiyX() + a;} foo(x);\"",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3546)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2350,
        "line_str": "decl_stmt|; if|if condition|( name|stmt",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2317,
        "line_str": "argument_list|() decl_stmt|; name|boolean name|hasSideEffects",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 372,
        "line_str": "literal|\"var JSCompiler_temp_const$$0=alert;\" operator|+ literal|\"var JSCompiler_inline_result$$1;\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(365, 379)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 785,
        "line_str": "argument_list|, literal|\"var d=c+e;\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(783, 787)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 5360,
        "line_str": "name|void name|testIssue1101 parameter_list|() block|{",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(5356, 5379)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 4749,
        "line_str": "literal|\"      if(!self$$inline_1.domServices_) {\" operator|+ literal|\"        self$$inline_1.domServices_=goog$component$DomServices.get(self$$inline_1.appContext_);\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4740, 4764)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2499,
        "line_str": "condition|( name|hasSideEffects operator|&& name|NodeUtil",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2495, 2516)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2156,
        "line_str": "literal|\"var a= nochg()+(nochg()+1+1)+(nochg()+1+1);\" argument_list|) expr_stmt|; block|}",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2149, 2157)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 3536,
        "line_str": "argument_list|( name|CanInlineResult operator|. name|NO",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3546)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 75,
        "line_str": "literal|\"/** @nosideeffects */ function nochg(){}\\n\" operator|+ literal|\"function chg(){}\\n\" decl_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(67, 78)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2367,
        "line_str": "name|getFirstChild argument_list|() argument_list|, name|compiler",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2334,
        "line_str": "operator|. name|checkState argument_list|( name|block",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 587,
        "line_str": "operator|+ literal|\"JSCompiler_inline_result$$0=function(a$$inline_2){return a$$inline_2+1};}\" operator|+ literal|\"var d=c+JSCompiler_inline_result$$0\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(581, 591)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2123,
        "line_str": "comment name|test argument_list|( literal|\"function f(a){return chg() + a + a;}\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2123, 2127)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 5377,
        "line_str": "operator|+ literal|\"}\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(5356, 5379)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 670,
        "line_str": "literal|\"function _x(){\" operator|+ literal|\"  var JSCompiler_inline_result$$0;\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(667, 685)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2173,
        "line_str": "operator|+ literal|\"{var a$$inline_0=chg()+1+1;\" operator|+ literal|\"a=chg()+a$$inline_0+a$$inline_0}\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2171, 2177)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 92,
        "line_str": "expr_stmt|; name|this operator|. name|enableComputeSideEffects",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(92, 96)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2107,
        "line_str": "expr_stmt|; name|testSame argument_list|( literal|\"function f(a){return chg() + a + a;}\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2107, 2111)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 3520,
        "line_str": "name|NO argument_list|, literal|\"function foo(a){return modifiyX() + a;} foo(x);\" argument_list|,",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3546)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 4733,
        "line_str": "literal|\"HangoutStarter.prototype.launchHangout=function(){\" operator|+ literal|\"  var self$$2=a.b;\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4730, 4738)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2351,
        "line_str": "if|if condition|( name|stmt operator|.",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2318,
        "line_str": "decl_stmt|; name|boolean name|hasSideEffects init|=",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 373,
        "line_str": "operator|+ literal|\"var JSCompiler_inline_result$$1;\" operator|+ literal|\"{JSCompiler_inline_result$$1=baz(nochg(1+2));}\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(365, 379)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 1331,
        "line_str": "argument_list|( literal|\"function f(a){return a[2]=2}f(o)\" argument_list|, literal|\"{o[2]=2}\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(1331, 1335)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 786,
        "line_str": "literal|\"var d=c+e;\" argument_list|) expr_stmt|; block|}",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(783, 787)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 5361,
        "line_str": "name|testIssue1101 parameter_list|() block|{ name|test",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(5356, 5379)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 4750,
        "line_str": "operator|+ literal|\"        self$$inline_1.domServices_=goog$component$DomServices.get(self$$inline_1.appContext_);\" operator|+ literal|\"      }\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4740, 4764)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2500,
        "line_str": "name|hasSideEffects operator|&& name|NodeUtil operator|.",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2495, 2516)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 76,
        "line_str": "operator|+ literal|\"function chg(){}\\n\" decl_stmt|; specifier|public",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(67, 78)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 3537,
        "line_str": "name|CanInlineResult operator|. name|NO argument_list|,",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3546)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 588,
        "line_str": "literal|\"JSCompiler_inline_result$$0=function(a$$inline_2){return a$$inline_2+1};}\" operator|+ literal|\"var d=c+JSCompiler_inline_result$$0\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(581, 591)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2368,
        "line_str": "argument_list|() argument_list|, name|compiler argument_list|)",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2335,
        "line_str": "name|checkState argument_list|( name|block operator|.",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2124,
        "line_str": "name|test argument_list|( literal|\"function f(a){return chg() + a + a;}\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2123, 2127)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2372,
        "line_str": "expr_stmt|; name|test argument_list|( literal|\"var foo = function(a) { return nochg(a); };\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2372, 2376)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 5378,
        "line_str": "literal|\"}\" argument_list|) expr_stmt|; block|}",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(5356, 5379)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 671,
        "line_str": "operator|+ literal|\"  var JSCompiler_inline_result$$0;\" operator|+ literal|\"  {\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(667, 685)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2174,
        "line_str": "literal|\"{var a$$inline_0=chg()+1+1;\" operator|+ literal|\"a=chg()+a$$inline_0+a$$inline_0}\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2171, 2177)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 93,
        "line_str": "name|this operator|. name|enableComputeSideEffects argument_list|()",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(92, 96)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2108,
        "line_str": "name|testSame argument_list|( literal|\"function f(a){return chg() + a + a;}\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2107, 2111)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 3521,
        "line_str": "argument_list|, literal|\"function foo(a){return modifiyX() + a;} foo(x);\" argument_list|, literal|\"foo\"",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3546)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 4734,
        "line_str": "operator|+ literal|\"  var self$$2=a.b;\" operator|+ literal|\"  var JSCompiler_temp_const$$0=goog.Uri;\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4730, 4738)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2352,
        "line_str": "condition|( name|stmt operator|. name|isReturn",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2319,
        "line_str": "name|boolean name|hasSideEffects init|= literal|false",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 374,
        "line_str": "literal|\"var JSCompiler_inline_result$$1;\" operator|+ literal|\"{JSCompiler_inline_result$$1=baz(nochg(1+2));}\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(365, 379)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 1332,
        "line_str": "literal|\"function f(a){return a[2]=2}f(o)\" argument_list|, literal|\"{o[2]=2}\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(1331, 1335)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 5362,
        "line_str": "parameter_list|() block|{ name|test argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(5356, 5379)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 4751,
        "line_str": "literal|\"        self$$inline_1.domServices_=goog$component$DomServices.get(self$$inline_1.appContext_);\" operator|+ literal|\"      }\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4740, 4764)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2501,
        "line_str": "operator|&& name|NodeUtil operator|. name|canBeSideEffected",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2495, 2516)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 77,
        "line_str": "literal|\"function chg(){}\\n\" decl_stmt|; specifier|public name|InlineFunctionsTest",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(67, 78)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 3538,
        "line_str": "operator|. name|NO argument_list|, literal|\"function foo(a){return (x.prop = 2),a;} foo(x.prop);\"",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3546)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 589,
        "line_str": "operator|+ literal|\"var d=c+JSCompiler_inline_result$$0\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(581, 591)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2369,
        "line_str": "argument_list|, name|compiler argument_list|) expr_stmt|;",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2336,
        "line_str": "argument_list|( name|block operator|. name|hasOneChild",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2125,
        "line_str": "argument_list|( literal|\"function f(a){return chg() + a + a;}\" operator|+ literal|\"var a = f(f(1));\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2123, 2127)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2373,
        "line_str": "name|test argument_list|( literal|\"var foo = function(a) { return nochg(a); };\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2372, 2376)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 672,
        "line_str": "literal|\"  var JSCompiler_inline_result$$0;\" operator|+ literal|\"  {\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(667, 685)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2175,
        "line_str": "operator|+ literal|\"a=chg()+a$$inline_0+a$$inline_0}\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2171, 2177)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 94,
        "line_str": "operator|. name|enableComputeSideEffects argument_list|() expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(92, 96)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2109,
        "line_str": "argument_list|( literal|\"function f(a){return chg() + a + a;}\" operator|+ literal|\"var a = f(f(1));\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2107, 2111)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 3522,
        "line_str": "literal|\"function foo(a){return modifiyX() + a;} foo(x);\" argument_list|, literal|\"foo\" argument_list|,",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3546)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 4735,
        "line_str": "literal|\"  var self$$2=a.b;\" operator|+ literal|\"  var JSCompiler_temp_const$$0=goog.Uri;\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4730, 4738)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2353,
        "line_str": "name|stmt operator|. name|isReturn argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2320,
        "line_str": "name|hasSideEffects init|= literal|false decl_stmt|;",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 375,
        "line_str": "operator|+ literal|\"{JSCompiler_inline_result$$1=baz(nochg(1+2));}\" operator|+ literal|\"JSCompiler_temp_const$$0(JSCompiler_inline_result$$1)\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(365, 379)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 1333,
        "line_str": "argument_list|, literal|\"{o[2]=2}\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(1331, 1335)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 5363,
        "line_str": "block|{ name|test argument_list|( literal|\"var x = (function (saved) {\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(5356, 5379)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 4752,
        "line_str": "operator|+ literal|\"      }\" operator|+ literal|\"      JSCompiler_inline_result$$0=self$$inline_1.domServices_;\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4740, 4764)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2502,
        "line_str": "name|NodeUtil operator|. name|canBeSideEffected argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2495, 2516)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 590,
        "line_str": "literal|\"var d=c+JSCompiler_inline_result$$0\" argument_list|) expr_stmt|; block|}",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(581, 591)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 3539,
        "line_str": "name|NO argument_list|, literal|\"function foo(a){return (x.prop = 2),a;} foo(x.prop);\" argument_list|,",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3546)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2126,
        "line_str": "literal|\"function f(a){return chg() + a + a;}\" operator|+ literal|\"var a = f(f(1));\" argument_list|,",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2123, 2127)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2370,
        "line_str": "name|compiler argument_list|) expr_stmt|; block|}",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2337,
        "line_str": "name|block operator|. name|hasOneChild argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2374,
        "line_str": "argument_list|( literal|\"var foo = function(a) { return nochg(a); };\" operator|+ literal|\"var bar = function(b) { return b; };\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2372, 2376)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 1317,
        "line_str": "argument_list|( literal|\"function f(a){return a.x=2}f(o)\" argument_list|, literal|\"{o.x=2}\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(1317, 1321)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 673,
        "line_str": "operator|+ literal|\"  {\" operator|+ literal|\"    var x$$inline_1;\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(667, 685)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2176,
        "line_str": "literal|\"a=chg()+a$$inline_0+a$$inline_0}\" argument_list|) expr_stmt|; block|}",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2171, 2177)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 95,
        "line_str": "name|enableComputeSideEffects argument_list|() expr_stmt|; block|}",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(92, 96)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2110,
        "line_str": "literal|\"function f(a){return chg() + a + a;}\" operator|+ literal|\"var a = f(f(1));\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2107, 2111)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 3523,
        "line_str": "argument_list|, literal|\"foo\" argument_list|, name|INLINE_DIRECT",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3546)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 4736,
        "line_str": "operator|+ literal|\"  var JSCompiler_temp_const$$0=goog.Uri;\" operator|+ literal|\"  var JSCompiler_inline_result$$1;\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4730, 4738)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2354,
        "line_str": "operator|. name|isReturn argument_list|() condition|)",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2321,
        "line_str": "init|= literal|false decl_stmt|; comment",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 376,
        "line_str": "literal|\"{JSCompiler_inline_result$$1=baz(nochg(1+2));}\" operator|+ literal|\"JSCompiler_temp_const$$0(JSCompiler_inline_result$$1)\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(365, 379)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 1334,
        "line_str": "literal|\"{o[2]=2}\" argument_list|) expr_stmt|; block|}",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(1331, 1335)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 5364,
        "line_str": "name|test argument_list|( literal|\"var x = (function (saved) {\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(5356, 5379)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 4753,
        "line_str": "literal|\"      }\" operator|+ literal|\"      JSCompiler_inline_result$$0=self$$inline_1.domServices_;\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4740, 4764)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2503,
        "line_str": "operator|. name|canBeSideEffected argument_list|( name|cArg",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2495, 2516)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 3540,
        "line_str": "argument_list|, literal|\"function foo(a){return (x.prop = 2),a;} foo(x.prop);\" argument_list|, literal|\"foo\"",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3546)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2371,
        "line_str": "argument_list|) expr_stmt|; block|} block|}",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2338,
        "line_str": "operator|. name|hasOneChild argument_list|() argument_list|)",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2375,
        "line_str": "literal|\"var foo = function(a) { return nochg(a); };\" operator|+ literal|\"var bar = function(b) { return b; };\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2372, 2376)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 1318,
        "line_str": "literal|\"function f(a){return a.x=2}f(o)\" argument_list|, literal|\"{o.x=2}\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(1317, 1321)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 674,
        "line_str": "literal|\"  {\" operator|+ literal|\"    var x$$inline_1;\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(667, 685)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 4737,
        "line_str": "literal|\"  var JSCompiler_temp_const$$0=goog.Uri;\" operator|+ literal|\"  var JSCompiler_inline_result$$1;\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4730, 4738)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 3524,
        "line_str": "literal|\"foo\" argument_list|, name|INLINE_DIRECT argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3546)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2355,
        "line_str": "name|isReturn argument_list|() condition|) block|{",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2322,
        "line_str": "literal|false decl_stmt|; comment if|if",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 377,
        "line_str": "operator|+ literal|\"JSCompiler_temp_const$$0(JSCompiler_inline_result$$1)\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(365, 379)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 823,
        "line_str": "operator|+ literal|\"var d=bar(foo(1,e))\" argument_list|, literal|\"var d=c\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(823, 827)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 5365,
        "line_str": "argument_list|( literal|\"var x = (function (saved) {\" operator|+ literal|\"    return foo(obj) + saved;\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(5356, 5379)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 4754,
        "line_str": "operator|+ literal|\"      JSCompiler_inline_result$$0=self$$inline_1.domServices_;\" operator|+ literal|\"    }\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4740, 4764)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2504,
        "line_str": "name|canBeSideEffected argument_list|( name|cArg argument_list|)",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2495, 2516)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 80,
        "line_str": "name|InlineFunctionsTest parameter_list|() block|{ name|super",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(80, 88)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 3541,
        "line_str": "literal|\"function foo(a){return (x.prop = 2),a;} foo(x.prop);\" argument_list|, literal|\"foo\" argument_list|,",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3546)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 3508,
        "line_str": "argument_list|) expr_stmt|; block|} specifier|public",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3546)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2372,
        "line_str": "expr_stmt|; block|} block|} comment",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2339,
        "line_str": "name|hasOneChild argument_list|() argument_list|) expr_stmt|;",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 1319,
        "line_str": "argument_list|, literal|\"{o.x=2}\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(1317, 1321)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 675,
        "line_str": "operator|+ literal|\"    var x$$inline_1;\" operator|+ literal|\"    JSCompiler_inline_result$$0=function(a$$inline_2){\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(667, 685)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 3525,
        "line_str": "argument_list|, name|INLINE_DIRECT argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3546)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2356,
        "line_str": "argument_list|() condition|) block|{ name|hasSideEffects",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2323,
        "line_str": "decl_stmt|; comment if|if condition|(",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 378,
        "line_str": "literal|\"JSCompiler_temp_const$$0(JSCompiler_inline_result$$1)\" argument_list|) expr_stmt|; block|}",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(365, 379)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 824,
        "line_str": "literal|\"var d=bar(foo(1,e))\" argument_list|, literal|\"var d=c\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(823, 827)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 5366,
        "line_str": "literal|\"var x = (function (saved) {\" operator|+ literal|\"    return foo(obj) + saved;\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(5356, 5379)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 4755,
        "line_str": "literal|\"      JSCompiler_inline_result$$0=self$$inline_1.domServices_;\" operator|+ literal|\"    }\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4740, 4764)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2505,
        "line_str": "argument_list|( name|cArg argument_list|) condition|)",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2495, 2516)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 81,
        "line_str": "parameter_list|() block|{ name|super argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(80, 88)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 3542,
        "line_str": "argument_list|, literal|\"foo\" argument_list|, name|INLINE_DIRECT",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3546)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 3509,
        "line_str": "expr_stmt|; block|} specifier|public name|void",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3546)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2373,
        "line_str": "block|} block|} comment name|Node",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2340,
        "line_str": "argument_list|() argument_list|) expr_stmt|; name|Node",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2129,
        "line_str": "argument_list|, literal|\"var a;\" operator|+ literal|\"{var a$$inline_0=chg()+1+1;\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2129, 2135)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 1320,
        "line_str": "literal|\"{o.x=2}\" argument_list|) expr_stmt|; block|}",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(1317, 1321)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 676,
        "line_str": "literal|\"    var x$$inline_1;\" operator|+ literal|\"    JSCompiler_inline_result$$0=function(a$$inline_2){\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(667, 685)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 3526,
        "line_str": "name|INLINE_DIRECT argument_list|) expr_stmt|; block|}",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3546)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2357,
        "line_str": "condition|) block|{ name|hasSideEffects operator|=",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2324,
        "line_str": "comment if|if condition|( name|block",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 825,
        "line_str": "argument_list|, literal|\"var d=c\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(823, 827)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 5367,
        "line_str": "operator|+ literal|\"    return foo(obj) + saved;\" operator|+ literal|\"  })(obj[\\\"prop\\\"]);\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(5356, 5379)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 4756,
        "line_str": "operator|+ literal|\"    }\" operator|+ literal|\"    JSCompiler_inline_result$$1=JSCompiler_inline_result$$0.getDomHelper().getWindow();\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4740, 4764)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2506,
        "line_str": "name|cArg argument_list|) condition|) block|{",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2495, 2516)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 82,
        "line_str": "block|{ name|super argument_list|( name|EXTERNS",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(80, 88)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 3543,
        "line_str": "literal|\"foo\" argument_list|, name|INLINE_DIRECT argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3546)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 3510,
        "line_str": "block|} specifier|public name|void name|testIssue1101a",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(3508, 3546)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2374,
        "line_str": "block|} comment name|Node name|cArg",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2341,
        "line_str": "argument_list|) expr_stmt|; name|Node name|stmt",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(2316, 2375)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2130,
        "line_str": "literal|\"var a;\" operator|+ literal|\"{var a$$inline_0=chg()+1+1;\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2129, 2135)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2378,
        "line_str": "operator|+ literal|\"foo(bar(x));\" argument_list|, literal|\"nochg(x)\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2378, 2382)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 677,
        "line_str": "operator|+ literal|\"    JSCompiler_inline_result$$0=function(a$$inline_2){\" operator|+ literal|\"        return a$$inline_2+1};\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(667, 685)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 4740,
        "line_str": "operator|+ literal|\"  {\" operator|+ literal|\"    var JSCompiler_inline_result$$0;\"",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(4740, 4764)"
      }
    ]
  },
  {
    "id": 10005,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["000ea0f8d6684bb9ff84a483d4ff44952b29d3f7"],
    "fix_commit_hash": "0123fd5303c85d0d26add64aa2e19fee33f73aaa",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "78995bf9e88599055a8c4165d89c09dc92a44b30",
        "line_num": 134,
        "line_str": "argument_list|( literal|\"var AA;(function () {AA=1})()\" argument_list|, literal|\"(function () {1})()\"",
        "file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_line_num": "range(134, 142)"
      },
      {
        "commit_hash": "78995bf9e88599055a8c4165d89c09dc92a44b30",
        "line_num": 229,
        "line_str": "argument_list|, literal|\"(function () {1})()\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_line_num": "range(227, 242)"
      },
      {
        "commit_hash": "78995bf9e88599055a8c4165d89c09dc92a44b30",
        "line_num": 130,
        "line_str": "literal|\"var AA; if (false) AA=1; else AA=2; AA;\" argument_list|) expr_stmt|; name|test",
        "file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_line_num": "range(134, 142)"
      },
      {
        "commit_hash": "78995bf9e88599055a8c4165d89c09dc92a44b30",
        "line_num": 225,
        "line_str": "expr_stmt|; name|test argument_list|( literal|\"/** @const */var aa;(function () {aa=1})()\"",
        "file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_line_num": "range(227, 242)"
      },
      {
        "commit_hash": "d1df970451b5a18956448097b3afb43f3a82263d",
        "line_num": 1284,
        "line_str": "name|isFunction condition|) block|{ break|break;",
        "file_path": "src/com/google/javascript/jscomp/ReferenceCollectingCallback.java",
        "input_file_path": "src/com/google/javascript/jscomp/ReferenceCollectingCallback.java",
        "input_line_num": "range(1602, 1605)"
      },
      {
        "commit_hash": "78995bf9e88599055a8c4165d89c09dc92a44b30",
        "line_num": 234,
        "line_str": "argument_list|( literal|\"/** @const */var aa;(function () {aa=1})(); var z=aa\" argument_list|, literal|\"(function () {1})(); var z=1\"",
        "file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_line_num": "range(227, 242)"
      },
      {
        "commit_hash": "78995bf9e88599055a8c4165d89c09dc92a44b30",
        "line_num": 135,
        "line_str": "literal|\"var AA;(function () {AA=1})()\" argument_list|, literal|\"(function () {1})()\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_line_num": "range(134, 142)"
      },
      {
        "commit_hash": "78995bf9e88599055a8c4165d89c09dc92a44b30",
        "line_num": 230,
        "line_str": "literal|\"(function () {1})()\" argument_list|) expr_stmt|; name|test",
        "file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_line_num": "range(227, 242)"
      },
      {
        "commit_hash": "78995bf9e88599055a8c4165d89c09dc92a44b30",
        "line_num": 131,
        "line_str": "argument_list|) expr_stmt|; name|test argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_line_num": "range(134, 142)"
      },
      {
        "commit_hash": "78995bf9e88599055a8c4165d89c09dc92a44b30",
        "line_num": 226,
        "line_str": "name|test argument_list|( literal|\"/** @const */var aa;(function () {aa=1})()\" argument_list|,",
        "file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_line_num": "range(227, 242)"
      },
      {
        "commit_hash": "d1df970451b5a18956448097b3afb43f3a82263d",
        "line_num": 1285,
        "line_str": "condition|) block|{ break|break; block|}",
        "file_path": "src/com/google/javascript/jscomp/ReferenceCollectingCallback.java",
        "input_file_path": "src/com/google/javascript/jscomp/ReferenceCollectingCallback.java",
        "input_line_num": "range(1602, 1605)"
      },
      {
        "commit_hash": "78995bf9e88599055a8c4165d89c09dc92a44b30",
        "line_num": 235,
        "line_str": "literal|\"/** @const */var aa;(function () {aa=1})(); var z=aa\" argument_list|, literal|\"(function () {1})(); var z=1\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_line_num": "range(227, 242)"
      },
      {
        "commit_hash": "78995bf9e88599055a8c4165d89c09dc92a44b30",
        "line_num": 136,
        "line_str": "argument_list|, literal|\"(function () {1})()\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_line_num": "range(134, 142)"
      },
      {
        "commit_hash": "78995bf9e88599055a8c4165d89c09dc92a44b30",
        "line_num": 231,
        "line_str": "argument_list|) expr_stmt|; name|test argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_line_num": "range(227, 242)"
      },
      {
        "commit_hash": "78995bf9e88599055a8c4165d89c09dc92a44b30",
        "line_num": 132,
        "line_str": "expr_stmt|; name|test argument_list|( literal|\"var AA;(function () {AA=1})()\"",
        "file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_line_num": "range(134, 142)"
      },
      {
        "commit_hash": "78995bf9e88599055a8c4165d89c09dc92a44b30",
        "line_num": 227,
        "line_str": "argument_list|( literal|\"/** @const */var aa;(function () {aa=1})()\" argument_list|, literal|\"(function () {1})()\"",
        "file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_line_num": "range(227, 242)"
      },
      {
        "commit_hash": "78995bf9e88599055a8c4165d89c09dc92a44b30",
        "line_num": 223,
        "line_str": "literal|\"1\" argument_list|) expr_stmt|; name|test",
        "file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_line_num": "range(227, 242)"
      },
      {
        "commit_hash": "d1df970451b5a18956448097b3afb43f3a82263d",
        "line_num": 1286,
        "line_str": "block|{ break|break; block|} if|else if",
        "file_path": "src/com/google/javascript/jscomp/ReferenceCollectingCallback.java",
        "input_file_path": "src/com/google/javascript/jscomp/ReferenceCollectingCallback.java",
        "input_line_num": "range(1602, 1605)"
      },
      {
        "commit_hash": "78995bf9e88599055a8c4165d89c09dc92a44b30",
        "line_num": 236,
        "line_str": "argument_list|, literal|\"(function () {1})(); var z=1\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_line_num": "range(227, 242)"
      },
      {
        "commit_hash": "78995bf9e88599055a8c4165d89c09dc92a44b30",
        "line_num": 137,
        "line_str": "literal|\"(function () {1})()\" argument_list|) expr_stmt|; comment",
        "file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_line_num": "range(134, 142)"
      },
      {
        "commit_hash": "78995bf9e88599055a8c4165d89c09dc92a44b30",
        "line_num": 232,
        "line_str": "expr_stmt|; name|test argument_list|( literal|\"/** @const */var aa;(function () {aa=1})(); var z=aa\"",
        "file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_line_num": "range(227, 242)"
      },
      {
        "commit_hash": "78995bf9e88599055a8c4165d89c09dc92a44b30",
        "line_num": 133,
        "line_str": "name|test argument_list|( literal|\"var AA;(function () {AA=1})()\" argument_list|,",
        "file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_line_num": "range(134, 142)"
      },
      {
        "commit_hash": "78995bf9e88599055a8c4165d89c09dc92a44b30",
        "line_num": 228,
        "line_str": "literal|\"/** @const */var aa;(function () {aa=1})()\" argument_list|, literal|\"(function () {1})()\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_line_num": "range(227, 242)"
      },
      {
        "commit_hash": "78995bf9e88599055a8c4165d89c09dc92a44b30",
        "line_num": 224,
        "line_str": "argument_list|) expr_stmt|; name|test argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_line_num": "range(227, 242)"
      },
      {
        "commit_hash": "78995bf9e88599055a8c4165d89c09dc92a44b30",
        "line_num": 237,
        "line_str": "literal|\"(function () {1})(); var z=1\" argument_list|) expr_stmt|; name|testSame",
        "file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_line_num": "range(227, 242)"
      },
      {
        "commit_hash": "78995bf9e88599055a8c4165d89c09dc92a44b30",
        "line_num": 233,
        "line_str": "name|test argument_list|( literal|\"/** @const */var aa;(function () {aa=1})(); var z=aa\" argument_list|,",
        "file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_line_num": "range(227, 242)"
      }
    ]
  },
  {
    "id": 10006,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["78995bf9e88599055a8c4165d89c09dc92a44b30"],
    "fix_commit_hash": "2aee36e667526ff8b0b5e6dad66506acee920ea6",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "d1df970451b5a18956448097b3afb43f3a82263d",
        "line_num": 1142,
        "line_str": "name|isAssignedOnceInLifetime argument_list|() condition|) block|{",
        "file_path": "src/com/google/javascript/jscomp/InlineVariables.java",
        "input_file_path": "src/com/google/javascript/jscomp/InlineVariables.java",
        "input_line_num": "range(1304, 1306)"
      },
      {
        "commit_hash": "d1df970451b5a18956448097b3afb43f3a82263d",
        "line_num": 1141,
        "line_str": "operator|. name|isAssignedOnceInLifetime argument_list|() condition|)",
        "file_path": "src/com/google/javascript/jscomp/InlineVariables.java",
        "input_file_path": "src/com/google/javascript/jscomp/InlineVariables.java",
        "input_line_num": "range(1304, 1306)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 1029,
        "line_str": "argument_list|() condition|) block|{ name|List",
        "file_path": "src/com/google/javascript/jscomp/InlineVariables.java",
        "input_file_path": "src/com/google/javascript/jscomp/InlineVariables.java",
        "input_line_num": "range(1306, 1307)"
      }
    ]
  },
  {
    "id": 10007,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["5909c3db59b16886917456ab950ef9661a7fe6b1"],
    "fix_commit_hash": "d82fb38b0121bf690cea58df293185c7e91ded9c",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "41acde3e8e5e8d37ade765b41d9fd29861f03e5e",
        "line_num": 3620,
        "line_str": "return|return name|len operator|> literal|0",
        "file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_line_num": "range(3767, 3769)"
      },
      {
        "commit_hash": "41acde3e8e5e8d37ade765b41d9fd29861f03e5e",
        "line_num": 3619,
        "line_str": "block|} return|return name|len operator|>",
        "file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_line_num": "range(3767, 3769)"
      },
      {
        "commit_hash": "41acde3e8e5e8d37ade765b41d9fd29861f03e5e",
        "line_num": 3578,
        "line_str": "decl_stmt|; for|for control|( name|int",
        "file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_line_num": "range(3724, 3727)"
      },
      {
        "commit_hash": "41acde3e8e5e8d37ade765b41d9fd29861f03e5e",
        "line_num": 3577,
        "line_str": "argument_list|() decl_stmt|; for|for control|(",
        "file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_line_num": "range(3724, 3727)"
      },
      {
        "commit_hash": "41acde3e8e5e8d37ade765b41d9fd29861f03e5e",
        "line_num": 3576,
        "line_str": "name|length argument_list|() decl_stmt|; for|for",
        "file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_line_num": "range(3724, 3727)"
      },
      {
        "commit_hash": "5909c3db59b16886917456ab950ef9661a7fe6b1",
        "line_num": 3629,
        "line_str": "operator|&& name|s operator|. name|charAt",
        "file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_line_num": "range(3769, 3773)"
      },
      {
        "commit_hash": "5909c3db59b16886917456ab950ef9661a7fe6b1",
        "line_num": 3628,
        "line_str": "literal|0 operator|&& name|s operator|.",
        "file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_line_num": "range(3769, 3773)"
      },
      {
        "commit_hash": "5909c3db59b16886917456ab950ef9661a7fe6b1",
        "line_num": 3627,
        "line_str": "operator|> literal|0 operator|&& name|s",
        "file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_line_num": "range(3769, 3773)"
      },
      {
        "commit_hash": "5909c3db59b16886917456ab950ef9661a7fe6b1",
        "line_num": 3626,
        "line_str": "name|len operator|> literal|0 operator|&&",
        "file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_line_num": "range(3769, 3773)"
      }
    ]
  },
  {
    "id": 10008,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["a2715a52745d816a87c05d3007ed8bfe7ef18491"],
    "fix_commit_hash": "7f6700e2b54af3af409f3e8851a0d98a72beef4b",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "5811ff459cf6847fcb30650fa82564abe2742b2f",
        "line_num": 236,
        "line_str": "literal|\"({'\\u1d17A':0})\" argument_list|) expr_stmt|; block|}",
        "file_path": "test/com/google/javascript/jscomp/ConvertToDottedPropertiesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/ConvertToDottedPropertiesTest.java",
        "input_line_num": "range(236, 237)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 2112,
        "line_str": "argument_list|) argument_list|) condition|) return|return",
        "file_path": "src/com/google/javascript/rhino/TokenStream.java",
        "input_file_path": "src/com/google/javascript/rhino/TokenStream.java",
        "input_line_num": "range(1501, 1507)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 2100,
        "line_str": "literal|0 operator||| operator|! name|Character",
        "file_path": "src/com/google/javascript/rhino/TokenStream.java",
        "input_file_path": "src/com/google/javascript/rhino/TokenStream.java",
        "input_line_num": "range(1488, 1490)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 2099,
        "line_str": "operator|== literal|0 operator||| operator|!",
        "file_path": "src/com/google/javascript/rhino/TokenStream.java",
        "input_file_path": "src/com/google/javascript/rhino/TokenStream.java",
        "input_line_num": "range(1488, 1490)"
      },
      {
        "commit_hash": "7ba4542ae58a5a99cbd69ea413a0b74c07b9cae7",
        "line_num": 1521,
        "line_str": "block|{ if|if condition|( operator|!",
        "file_path": "src/com/google/javascript/rhino/TokenStream.java",
        "input_file_path": "src/com/google/javascript/rhino/TokenStream.java",
        "input_line_num": "range(1521, 1522)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 2117,
        "line_str": "return|; for|for control|( name|int",
        "file_path": "src/com/google/javascript/rhino/TokenStream.java",
        "input_file_path": "src/com/google/javascript/rhino/TokenStream.java",
        "input_line_num": "range(1501, 1507)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 2116,
        "line_str": "literal|false return|; for|for control|(",
        "file_path": "src/com/google/javascript/rhino/TokenStream.java",
        "input_file_path": "src/com/google/javascript/rhino/TokenStream.java",
        "input_line_num": "range(1501, 1507)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 2115,
        "line_str": "return|return literal|false return|; for|for",
        "file_path": "src/com/google/javascript/rhino/TokenStream.java",
        "input_file_path": "src/com/google/javascript/rhino/TokenStream.java",
        "input_line_num": "range(1501, 1507)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 2114,
        "line_str": "condition|) return|return literal|false return|;",
        "file_path": "src/com/google/javascript/rhino/TokenStream.java",
        "input_file_path": "src/com/google/javascript/rhino/TokenStream.java",
        "input_line_num": "range(1501, 1507)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 2113,
        "line_str": "argument_list|) condition|) return|return literal|false",
        "file_path": "src/com/google/javascript/rhino/TokenStream.java",
        "input_file_path": "src/com/google/javascript/rhino/TokenStream.java",
        "input_line_num": "range(1501, 1507)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 2144,
        "line_str": "condition|( operator|! name|Character operator|.",
        "file_path": "src/com/google/javascript/rhino/TokenStream.java",
        "input_file_path": "src/com/google/javascript/rhino/TokenStream.java",
        "input_line_num": "range(1522, 1524)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 2143,
        "line_str": "if|if condition|( operator|! name|Character",
        "file_path": "src/com/google/javascript/rhino/TokenStream.java",
        "input_file_path": "src/com/google/javascript/rhino/TokenStream.java",
        "input_line_num": "range(1522, 1524)"
      }
    ]
  },
  {
    "id": 10009,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["cc628d6050107e3dfcc7bd2748708c12ef15b4e0"],
    "fix_commit_hash": "4fbbc47cb18f241b23dd2d4bf9c15d45b2473523",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 4560,
        "line_str": "name|line init|= name|stream operator|.",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(5670, 5675)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 5163,
        "line_str": "name|line init|= name|stream operator|.",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(6397, 6402)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 4969,
        "line_str": "name|line operator|= name|stream operator|.",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(6203, 6208)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 4713,
        "line_str": "name|line init|= name|stream operator|.",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(5828, 5833)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 4561,
        "line_str": "init|= name|stream operator|. name|getRemainingJSDocLine",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(5670, 5675)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 5164,
        "line_str": "init|= name|stream operator|. name|getRemainingJSDocLine",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(6397, 6402)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 4714,
        "line_str": "init|= name|stream operator|. name|getRemainingJSDocLine",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(5828, 5833)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 4970,
        "line_str": "operator|= name|stream operator|. name|getRemainingJSDocLine",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(6203, 6208)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 4562,
        "line_str": "name|stream operator|. name|getRemainingJSDocLine argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(5670, 5675)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 5165,
        "line_str": "name|stream operator|. name|getRemainingJSDocLine argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(6397, 6402)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 4715,
        "line_str": "name|stream operator|. name|getRemainingJSDocLine argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(5828, 5833)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 4971,
        "line_str": "name|stream operator|. name|getRemainingJSDocLine argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(6203, 6208)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 4563,
        "line_str": "operator|. name|getRemainingJSDocLine argument_list|() operator|.",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(5670, 5675)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 4559,
        "line_str": "name|String name|line init|= name|stream",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(5670, 5675)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 5166,
        "line_str": "operator|. name|getRemainingJSDocLine argument_list|() decl_stmt|;",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(6397, 6402)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 4716,
        "line_str": "operator|. name|getRemainingJSDocLine argument_list|() decl_stmt|;",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(5828, 5833)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 4972,
        "line_str": "operator|. name|getRemainingJSDocLine argument_list|() expr_stmt|;",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(6203, 6208)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 5162,
        "line_str": "name|String name|line init|= name|stream",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(6397, 6402)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 4712,
        "line_str": "name|String name|line init|= name|stream",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(5828, 5833)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 4968,
        "line_str": "expr_stmt|; name|line operator|= name|stream",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(6203, 6208)"
      }
    ]
  },
  {
    "id": 10010,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["a2153e7405e09c8fa413a01874c949b8b2bcd32b"],
    "fix_commit_hash": "33ab4df84afbdb36216b8a1ea3a526c438615e26",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "f80152eb5a2de72e8336b26e0e78b9e6baae37d2",
        "line_num": 5665,
        "line_str": "if|if condition|( name|rValue operator|.",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(6049, 6053)"
      },
      {
        "commit_hash": "f80152eb5a2de72e8336b26e0e78b9e6baae37d2",
        "line_num": 5664,
        "line_str": "block|{ if|if condition|( name|rValue",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(6049, 6053)"
      },
      {
        "commit_hash": "f80152eb5a2de72e8336b26e0e78b9e6baae37d2",
        "line_num": 5663,
        "line_str": "condition|) block|{ if|if condition|(",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(6049, 6053)"
      },
      {
        "commit_hash": "f80152eb5a2de72e8336b26e0e78b9e6baae37d2",
        "line_num": 5662,
        "line_str": "literal|null condition|) block|{ if|if",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(6049, 6053)"
      },
      {
        "commit_hash": "a2153e7405e09c8fa413a01874c949b8b2bcd32b",
        "line_num": 5587,
        "line_str": "block|{ return|return name|rValue operator|.",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(6068, 6071)"
      },
      {
        "commit_hash": "a2153e7405e09c8fa413a01874c949b8b2bcd32b",
        "line_num": 5586,
        "line_str": "condition|) block|{ return|return name|rValue",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(6068, 6071)"
      },
      {
        "commit_hash": "a2153e7405e09c8fa413a01874c949b8b2bcd32b",
        "line_num": 5585,
        "line_str": "argument_list|() condition|) block|{ return|return",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(6068, 6071)"
      }
    ]
  },
  {
    "id": 10011,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["b2430d29987b54e977a5e5e8db9242f4486c750b"],
    "fix_commit_hash": "d1cfe67977d8f3aaa85ec20c262171da394d5977",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "b2430d29987b54e977a5e5e8db9242f4486c750b",
        "line_num": 6631,
        "line_str": "operator|. name|getOwnPropertyNames argument_list|() decl_stmt|;",
        "file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_line_num": "range(6771, 6776)"
      },
      {
        "commit_hash": "b2430d29987b54e977a5e5e8db9242f4486c750b",
        "line_num": 6630,
        "line_str": "argument_list|() operator|. name|getOwnPropertyNames argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_line_num": "range(6771, 6776)"
      },
      {
        "commit_hash": "b2430d29987b54e977a5e5e8db9242f4486c750b",
        "line_num": 6629,
        "line_str": "name|getImplicitPrototype argument_list|() operator|. name|getOwnPropertyNames",
        "file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_line_num": "range(6771, 6776)"
      },
      {
        "commit_hash": "b2430d29987b54e977a5e5e8db9242f4486c750b",
        "line_num": 6628,
        "line_str": "operator|. name|getImplicitPrototype argument_list|() operator|.",
        "file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_line_num": "range(6771, 6776)"
      },
      {
        "commit_hash": "aa7c8f99aa0cf5b8016e139b383aa0dd13f68051",
        "line_num": 6273,
        "line_str": "decl_stmt|; for|for control|( name|String",
        "file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_line_num": "range(6776, 6778)"
      },
      {
        "commit_hash": "aa7c8f99aa0cf5b8016e139b383aa0dd13f68051",
        "line_num": 6272,
        "line_str": "argument_list|() decl_stmt|; for|for control|(",
        "file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_line_num": "range(6776, 6778)"
      },
      {
        "commit_hash": "aa7c8f99aa0cf5b8016e139b383aa0dd13f68051",
        "line_num": 6267,
        "line_str": "name|currentPropertyNames init|= name|interfaceType operator|.",
        "file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_line_num": "range(6761, 6769)"
      },
      {
        "commit_hash": "aa7c8f99aa0cf5b8016e139b383aa0dd13f68051",
        "line_num": 6266,
        "line_str": "argument_list|> name|currentPropertyNames init|= name|interfaceType",
        "file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_line_num": "range(6761, 6769)"
      },
      {
        "commit_hash": "aa7c8f99aa0cf5b8016e139b383aa0dd13f68051",
        "line_num": 6265,
        "line_str": "name|String argument_list|> name|currentPropertyNames init|=",
        "file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_line_num": "range(6761, 6769)"
      },
      {
        "commit_hash": "aa7c8f99aa0cf5b8016e139b383aa0dd13f68051",
        "line_num": 6264,
        "line_str": "argument_list|< name|String argument_list|> name|currentPropertyNames",
        "file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_line_num": "range(6761, 6769)"
      },
      {
        "commit_hash": "aa7c8f99aa0cf5b8016e139b383aa0dd13f68051",
        "line_num": 6263,
        "line_str": "name|Set argument_list|< name|String argument_list|>",
        "file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_line_num": "range(6761, 6769)"
      },
      {
        "commit_hash": "aa7c8f99aa0cf5b8016e139b383aa0dd13f68051",
        "line_num": 6262,
        "line_str": "block|{ name|Set argument_list|< name|String",
        "file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_line_num": "range(6761, 6769)"
      },
      {
        "commit_hash": "aa7c8f99aa0cf5b8016e139b383aa0dd13f68051",
        "line_num": 6261,
        "line_str": "parameter_list|) block|{ name|Set argument_list|<",
        "file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_line_num": "range(6761, 6769)"
      },
      {
        "commit_hash": "aa7c8f99aa0cf5b8016e139b383aa0dd13f68051",
        "line_num": 6260,
        "line_str": "name|interfaceType parameter_list|) block|{ name|Set",
        "file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_line_num": "range(6761, 6769)"
      },
      {
        "commit_hash": "b2430d29987b54e977a5e5e8db9242f4486c750b",
        "line_num": 6632,
        "line_str": "name|getOwnPropertyNames argument_list|() decl_stmt|; for|for",
        "file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_line_num": "range(6771, 6776)"
      }
    ]
  },
  {
    "id": 10012,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["dbf6ea95477810188582b9e9ac6c9645717cbe95"],
    "fix_commit_hash": "1787d7b2cff83a0f177dd958033c53e4502406d2",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 578,
        "line_str": "argument_list|() operator|!= literal|null condition|)",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 598)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 512,
        "line_str": "operator||| name|n operator|== name|parent",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 479,
        "line_str": "name|Token operator|. name|EXPR_RESULT operator|&&",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 446,
        "line_str": "if|if condition|( name|ancestorType operator|==",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 413,
        "line_str": "block|{ return|return; block|} block|}",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 380,
        "line_str": "name|parent operator|. name|getFirstChild argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 412)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 347,
        "line_str": "condition|) block|{ name|Node name|gramps",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 373)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 595,
        "line_str": "comment return|return; block|} name|String",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 598)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 529,
        "line_str": "comment block|} else|else block|{",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 496,
        "line_str": "name|FOR operator|&& name|parent operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 463,
        "line_str": "name|ancestorType operator|!= name|Token operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 430,
        "line_str": "name|an range|: name|parent operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 397,
        "line_str": "name|isName argument_list|() operator|&& literal|\"eval\"",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 412)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 364,
        "line_str": "name|parent operator|== name|gramps operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 373)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 331,
        "line_str": "block|} name|int name|pt init|=",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 373)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 579,
        "line_str": "operator|!= literal|null condition|) block|{",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 598)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 12125,
        "line_str": "operator|. name|COMMA case|: return|return",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(12125, 12128)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 513,
        "line_str": "name|n operator|== name|parent operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 480,
        "line_str": "operator|. name|EXPR_RESULT operator|&& name|pt",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 447,
        "line_str": "condition|( name|ancestorType operator|== name|Token",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 414,
        "line_str": "return|return; block|} block|} if|if",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 381,
        "line_str": "operator|. name|getFirstChild argument_list|() operator|&&",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 412)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 348,
        "line_str": "block|{ name|Node name|gramps init|=",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 373)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 596,
        "line_str": "return|return; block|} name|String name|msg",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 598)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 563,
        "line_str": "name|getCompiler argument_list|() argument_list|) condition|)",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 598)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 530,
        "line_str": "block|} else|else block|{ return|return;",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 497,
        "line_str": "operator|&& name|parent operator|. name|getChildCount",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 464,
        "line_str": "operator|!= name|Token operator|. name|BLOCK",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 431,
        "line_str": "range|: name|parent operator|. name|getAncestors",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 398,
        "line_str": "argument_list|() operator|&& literal|\"eval\" operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 412)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 365,
        "line_str": "operator|== name|gramps operator|. name|getFirstChild",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 373)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 332,
        "line_str": "name|int name|pt init|= name|parent",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 373)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 580,
        "line_str": "literal|null condition|) block|{ comment",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 598)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 12126,
        "line_str": "name|COMMA case|: return|return operator|(",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(12125, 12128)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 514,
        "line_str": "operator|== name|parent operator|. name|getFirstChild",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 481,
        "line_str": "name|EXPR_RESULT operator|&& name|pt operator|!=",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 448,
        "line_str": "name|ancestorType operator|== name|Token operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 415,
        "line_str": "block|} block|} if|if condition|(",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 382,
        "line_str": "name|getFirstChild argument_list|() operator|&& name|parent",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 412)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 349,
        "line_str": "name|Node name|gramps init|= name|parent",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 373)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 597,
        "line_str": "block|} name|String name|msg init|=",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 598)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 564,
        "line_str": "argument_list|() argument_list|) condition|) block|{",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 598)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 531,
        "line_str": "else|else block|{ return|return; comment",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 498,
        "line_str": "name|parent operator|. name|getChildCount argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 465,
        "line_str": "name|Token operator|. name|BLOCK condition|)",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 432,
        "line_str": "name|parent operator|. name|getAncestors argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 399,
        "line_str": "operator|&& literal|\"eval\" operator|. name|equals",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 412)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 366,
        "line_str": "name|gramps operator|. name|getFirstChild argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 373)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 333,
        "line_str": "name|pt init|= name|parent operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 373)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 581,
        "line_str": "condition|) block|{ comment comment",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 598)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 12127,
        "line_str": "case|: return|return operator|( name|expr",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(12125, 12128)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 515,
        "line_str": "name|parent operator|. name|getFirstChild argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 482,
        "line_str": "operator|&& name|pt operator|!= name|Token",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 449,
        "line_str": "operator|== name|Token operator|. name|COMMA",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 416,
        "line_str": "block|} if|if condition|( name|n",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 383,
        "line_str": "argument_list|() operator|&& name|parent operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 412)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 350,
        "line_str": "name|gramps init|= name|parent operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 373)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 565,
        "line_str": "argument_list|) condition|) block|{ if|if",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 598)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 532,
        "line_str": "block|{ return|return; comment block|}",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 499,
        "line_str": "operator|. name|getChildCount argument_list|() operator|==",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 466,
        "line_str": "operator|. name|BLOCK condition|) return|return;",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 433,
        "line_str": "operator|. name|getAncestors argument_list|() control|)",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 400,
        "line_str": "literal|\"eval\" operator|. name|equals argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 412)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 367,
        "line_str": "operator|. name|getFirstChild argument_list|() condition|)",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 373)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 334,
        "line_str": "init|= name|parent operator|. name|getType",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 373)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 582,
        "line_str": "block|{ comment comment return|return;",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 598)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 549,
        "line_str": "decl_stmt|; if|if condition|( name|isSimpleOp",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(549, 552)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 516,
        "line_str": "operator|. name|getFirstChild argument_list|() operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 483,
        "line_str": "name|pt operator|!= name|Token operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 450,
        "line_str": "name|Token operator|. name|COMMA condition|)",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 417,
        "line_str": "if|if condition|( name|n operator|==",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 384,
        "line_str": "operator|&& name|parent operator|. name|getChildCount",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 412)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 351,
        "line_str": "init|= name|parent operator|. name|getParent",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 373)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 566,
        "line_str": "condition|) block|{ if|if condition|(",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 598)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 533,
        "line_str": "return|return; comment block|} block|}",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 500,
        "line_str": "name|getChildCount argument_list|() operator|== literal|4",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 467,
        "line_str": "name|BLOCK condition|) return|return; else|else",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 434,
        "line_str": "name|getAncestors argument_list|() control|) block|{",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 401,
        "line_str": "operator|. name|equals argument_list|( name|n",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 412)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 368,
        "line_str": "name|getFirstChild argument_list|() condition|) block|{",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 373)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 335,
        "line_str": "name|parent operator|. name|getType argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 373)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 583,
        "line_str": "comment comment return|return; block|}",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 598)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 550,
        "line_str": "if|if condition|( name|isSimpleOp operator|||",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(549, 552)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 517,
        "line_str": "name|getFirstChild argument_list|() operator|. name|getNext",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 484,
        "line_str": "operator|!= name|Token operator|. name|BLOCK",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 451,
        "line_str": "operator|. name|COMMA condition|) continue|continue;",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 418,
        "line_str": "condition|( name|n operator|== name|parent",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 385,
        "line_str": "name|parent operator|. name|getChildCount argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 412)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 352,
        "line_str": "name|parent operator|. name|getParent argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 373)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 567,
        "line_str": "block|{ if|if condition|( name|n",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 598)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 534,
        "line_str": "comment block|} block|} name|boolean",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 501,
        "line_str": "argument_list|() operator|== literal|4 operator|&&",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 468,
        "line_str": "condition|) return|return; else|else break|break;",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 435,
        "line_str": "argument_list|() control|) block|{ name|int",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 402,
        "line_str": "name|equals argument_list|( name|n operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 412)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 369,
        "line_str": "argument_list|() condition|) block|{ comment",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 373)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 336,
        "line_str": "operator|. name|getType argument_list|() decl_stmt|;",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 373)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 584,
        "line_str": "comment return|return; block|} if|else if",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 598)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 551,
        "line_str": "condition|( name|isSimpleOp operator||| operator|!",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(549, 552)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 518,
        "line_str": "argument_list|() operator|. name|getNext argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 485,
        "line_str": "name|Token operator|. name|BLOCK condition|)",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 452,
        "line_str": "name|COMMA condition|) continue|continue; if|if",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 419,
        "line_str": "name|n operator|== name|parent operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 386,
        "line_str": "operator|. name|getChildCount argument_list|() operator|==",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 412)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 353,
        "line_str": "operator|. name|getParent argument_list|() decl_stmt|;",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 373)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 568,
        "line_str": "if|if condition|( name|n operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 598)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 535,
        "line_str": "block|} block|} name|boolean name|isSimpleOp",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 502,
        "line_str": "operator|== literal|4 operator|&& operator|(",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 469,
        "line_str": "return|return; else|else break|break; block|}",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 436,
        "line_str": "control|) block|{ name|int name|ancestorType",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 403,
        "line_str": "argument_list|( name|n operator|. name|getNext",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 412)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 370,
        "line_str": "condition|) block|{ comment comment",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 373)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 337,
        "line_str": "name|getType argument_list|() decl_stmt|; if|if",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 373)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 585,
        "line_str": "return|return; block|} if|else if condition|(",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 598)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 519,
        "line_str": "operator|. name|getNext argument_list|() operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 486,
        "line_str": "operator|. name|BLOCK condition|) block|{",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 453,
        "line_str": "condition|) continue|continue; if|if condition|(",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 420,
        "line_str": "operator|== name|parent operator|. name|getLastChild",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 387,
        "line_str": "name|getChildCount argument_list|() operator|== literal|2",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 412)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 354,
        "line_str": "name|getParent argument_list|() decl_stmt|; if|if",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 373)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 569,
        "line_str": "condition|( name|n operator|. name|isQualifiedName",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 598)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 536,
        "line_str": "block|} name|boolean name|isSimpleOp init|=",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 503,
        "line_str": "literal|4 operator|&& operator|( name|n",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 470,
        "line_str": "else|else break|break; block|} block|}",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 437,
        "line_str": "block|{ name|int name|ancestorType init|=",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 404,
        "line_str": "name|n operator|. name|getNext argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 412)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 371,
        "line_str": "block|{ comment comment comment",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 373)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 338,
        "line_str": "argument_list|() decl_stmt|; if|if condition|(",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 373)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 586,
        "line_str": "block|} if|else if condition|( name|n",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 598)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 520,
        "line_str": "name|getNext argument_list|() operator|. name|getNext",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 487,
        "line_str": "name|BLOCK condition|) block|{ if|if",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 454,
        "line_str": "continue|continue; if|if condition|( name|ancestorType",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 421,
        "line_str": "name|parent operator|. name|getLastChild argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 388,
        "line_str": "argument_list|() operator|== literal|2 operator|&&",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 412)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 355,
        "line_str": "argument_list|() decl_stmt|; if|if condition|(",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 373)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 570,
        "line_str": "name|n operator|. name|isQualifiedName argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 598)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 504,
        "line_str": "operator|&& operator|( name|n operator|==",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 471,
        "line_str": "break|break; block|} block|} block|}",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 438,
        "line_str": "name|int name|ancestorType init|= name|an",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 405,
        "line_str": "operator|. name|getNext argument_list|() operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 412)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 372,
        "line_str": "comment comment comment comment",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 373)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 339,
        "line_str": "decl_stmt|; if|if condition|( name|pt",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 373)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 587,
        "line_str": "if|else if condition|( name|n operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 598)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 521,
        "line_str": "argument_list|() operator|. name|getNext argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 488,
        "line_str": "condition|) block|{ if|if condition|(",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 455,
        "line_str": "if|if condition|( name|ancestorType operator|!=",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 422,
        "line_str": "operator|. name|getLastChild argument_list|() condition|)",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 389,
        "line_str": "operator|== literal|2 operator|&& name|n",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 412)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 356,
        "line_str": "decl_stmt|; if|if condition|( name|gramps",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 373)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 571,
        "line_str": "operator|. name|isQualifiedName argument_list|() operator|&&",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 598)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 505,
        "line_str": "operator|( name|n operator|== name|parent",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 472,
        "line_str": "block|} block|} block|} if|else if",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 439,
        "line_str": "name|ancestorType init|= name|an operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 406,
        "line_str": "name|getNext argument_list|() operator|. name|getString",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 412)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 340,
        "line_str": "if|if condition|( name|pt operator|==",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 373)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 588,
        "line_str": "condition|( name|n operator|. name|isExprResult",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 598)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 522,
        "line_str": "operator|. name|getNext argument_list|() operator|)",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 489,
        "line_str": "block|{ if|if condition|( name|pt",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 456,
        "line_str": "condition|( name|ancestorType operator|!= name|Token",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 423,
        "line_str": "name|getLastChild argument_list|() condition|) block|{",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 390,
        "line_str": "literal|2 operator|&& name|n operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 412)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 357,
        "line_str": "if|if condition|( name|gramps operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 373)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 572,
        "line_str": "name|isQualifiedName argument_list|() operator|&& name|n",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 598)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 506,
        "line_str": "name|n operator|== name|parent operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 473,
        "line_str": "block|} block|} if|else if condition|(",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 440,
        "line_str": "init|= name|an operator|. name|getType",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 407,
        "line_str": "argument_list|() operator|. name|getString argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 412)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 341,
        "line_str": "condition|( name|pt operator|== name|Token",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 373)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 589,
        "line_str": "name|n operator|. name|isExprResult argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 598)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 523,
        "line_str": "name|getNext argument_list|() operator|) condition|)",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 490,
        "line_str": "if|if condition|( name|pt operator|==",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 457,
        "line_str": "name|ancestorType operator|!= name|Token operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 424,
        "line_str": "argument_list|() condition|) block|{ for|for",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 391,
        "line_str": "operator|&& name|n operator|. name|getNext",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 412)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 358,
        "line_str": "condition|( name|gramps operator|. name|isCall",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 373)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 573,
        "line_str": "argument_list|() operator|&& name|n operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 598)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 507,
        "line_str": "operator|== name|parent operator|. name|getFirstChild",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 474,
        "line_str": "block|} if|else if condition|( name|pt",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 441,
        "line_str": "name|an operator|. name|getType argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 408,
        "line_str": "operator|. name|getString argument_list|() argument_list|)",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 412)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 342,
        "line_str": "name|pt operator|== name|Token operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 373)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 590,
        "line_str": "operator|. name|isExprResult argument_list|() condition|)",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 598)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 524,
        "line_str": "argument_list|() operator|) condition|) block|{",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 491,
        "line_str": "condition|( name|pt operator|== name|Token",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 458,
        "line_str": "operator|!= name|Token operator|. name|EXPR_RESULT",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 425,
        "line_str": "condition|) block|{ for|for control|(",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 392,
        "line_str": "name|n operator|. name|getNext argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 412)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 359,
        "line_str": "name|gramps operator|. name|isCall argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 373)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 574,
        "line_str": "operator|&& name|n operator|. name|getJSDocInfo",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 598)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 508,
        "line_str": "name|parent operator|. name|getFirstChild argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 475,
        "line_str": "if|else if condition|( name|pt operator|!=",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 442,
        "line_str": "operator|. name|getType argument_list|() decl_stmt|;",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 409,
        "line_str": "name|getString argument_list|() argument_list|) condition|)",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 412)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 376,
        "line_str": "if|if condition|( name|n operator|==",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 412)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 343,
        "line_str": "operator|== name|Token operator|. name|COMMA",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 373)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 591,
        "line_str": "name|isExprResult argument_list|() condition|) block|{",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 598)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 525,
        "line_str": "operator|) condition|) block|{ comment",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 492,
        "line_str": "name|pt operator|== name|Token operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 459,
        "line_str": "name|Token operator|. name|EXPR_RESULT operator|&&",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 426,
        "line_str": "block|{ for|for control|( name|Node",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 393,
        "line_str": "operator|. name|getNext argument_list|() operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 412)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 360,
        "line_str": "operator|. name|isCall argument_list|() operator|&&",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 373)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 575,
        "line_str": "name|n operator|. name|getJSDocInfo argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 598)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 509,
        "line_str": "operator|. name|getFirstChild argument_list|() operator|||",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 476,
        "line_str": "condition|( name|pt operator|!= name|Token",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 443,
        "line_str": "name|getType argument_list|() decl_stmt|; if|if",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 410,
        "line_str": "argument_list|() argument_list|) condition|) block|{",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 412)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 377,
        "line_str": "condition|( name|n operator|== name|parent",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 412)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 344,
        "line_str": "name|Token operator|. name|COMMA condition|)",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 373)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 592,
        "line_str": "argument_list|() condition|) block|{ comment",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 598)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 526,
        "line_str": "condition|) block|{ comment comment",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 493,
        "line_str": "operator|== name|Token operator|. name|FOR",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 460,
        "line_str": "operator|. name|EXPR_RESULT operator|&& name|ancestorType",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 427,
        "line_str": "for|for control|( name|Node name|an",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 394,
        "line_str": "name|getNext argument_list|() operator|. name|isName",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 412)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 361,
        "line_str": "name|isCall argument_list|() operator|&& name|parent",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 373)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 576,
        "line_str": "operator|. name|getJSDocInfo argument_list|() operator|!=",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 598)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 510,
        "line_str": "name|getFirstChild argument_list|() operator||| name|n",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 477,
        "line_str": "name|pt operator|!= name|Token operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 444,
        "line_str": "argument_list|() decl_stmt|; if|if condition|(",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 411,
        "line_str": "argument_list|) condition|) block|{ return|return;",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 412)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 378,
        "line_str": "name|n operator|== name|parent operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 412)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 345,
        "line_str": "operator|. name|COMMA condition|) block|{",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 373)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 593,
        "line_str": "condition|) block|{ comment return|return;",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 598)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 527,
        "line_str": "block|{ comment comment block|}",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 494,
        "line_str": "name|Token operator|. name|FOR operator|&&",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 461,
        "line_str": "name|EXPR_RESULT operator|&& name|ancestorType operator|!=",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 428,
        "line_str": "control|( name|Node name|an range|:",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 395,
        "line_str": "argument_list|() operator|. name|isName argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 412)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 362,
        "line_str": "argument_list|() operator|&& name|parent operator|==",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 373)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 329,
        "line_str": "block|{ return|return; block|} name|int",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 373)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 577,
        "line_str": "name|getJSDocInfo argument_list|() operator|!= literal|null",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 598)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 511,
        "line_str": "argument_list|() operator||| name|n operator|==",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 478,
        "line_str": "operator|!= name|Token operator|. name|EXPR_RESULT",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 445,
        "line_str": "decl_stmt|; if|if condition|( name|ancestorType",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 379,
        "line_str": "operator|== name|parent operator|. name|getFirstChild",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 412)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 346,
        "line_str": "name|COMMA condition|) block|{ name|Node",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 373)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 594,
        "line_str": "block|{ comment return|return; block|}",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(563, 598)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 528,
        "line_str": "comment comment block|} else|else",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 495,
        "line_str": "operator|. name|FOR operator|&& name|parent",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 462,
        "line_str": "operator|&& name|ancestorType operator|!= name|Token",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 429,
        "line_str": "name|Node name|an range|: name|parent",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(413, 537)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 396,
        "line_str": "operator|. name|isName argument_list|() operator|&&",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(376, 412)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 363,
        "line_str": "operator|&& name|parent operator|== name|gramps",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 373)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 330,
        "line_str": "return|return; block|} name|int name|pt",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(329, 373)"
      }
    ]
  },
  {
    "id": 10013,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["2f28243f97f468e92316a2c7ea209c857689ab43"],
    "fix_commit_hash": "7a8983042131c5a9c2b5421ae42075cbb8ef1aeb",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "2f28243f97f468e92316a2c7ea209c857689ab43",
        "line_num": 1158,
        "line_str": "operator|. name|isLabelName argument_list|() argument_list|)",
        "file_path": "src/com/google/javascript/rhino/IR.java",
        "input_file_path": "src/com/google/javascript/rhino/IR.java",
        "input_line_num": "range(1209, 1213)"
      },
      {
        "commit_hash": "2f28243f97f468e92316a2c7ea209c857689ab43",
        "line_num": 1157,
        "line_str": "name|finallyBody operator|. name|isLabelName argument_list|()",
        "file_path": "src/com/google/javascript/rhino/IR.java",
        "input_file_path": "src/com/google/javascript/rhino/IR.java",
        "input_line_num": "range(1209, 1213)"
      },
      {
        "commit_hash": "2f28243f97f468e92316a2c7ea209c857689ab43",
        "line_num": 1156,
        "line_str": "argument_list|( name|finallyBody operator|. name|isLabelName",
        "file_path": "src/com/google/javascript/rhino/IR.java",
        "input_file_path": "src/com/google/javascript/rhino/IR.java",
        "input_line_num": "range(1209, 1213)"
      },
      {
        "commit_hash": "2f28243f97f468e92316a2c7ea209c857689ab43",
        "line_num": 1222,
        "line_str": "name|Node name|catchBody init|= name|block",
        "file_path": "src/com/google/javascript/rhino/IR.java",
        "input_file_path": "src/com/google/javascript/rhino/IR.java",
        "input_line_num": "range(1275, 1279)"
      },
      {
        "commit_hash": "2f28243f97f468e92316a2c7ea209c857689ab43",
        "line_num": 1159,
        "line_str": "name|isLabelName argument_list|() argument_list|) expr_stmt|;",
        "file_path": "src/com/google/javascript/rhino/IR.java",
        "input_file_path": "src/com/google/javascript/rhino/IR.java",
        "input_line_num": "range(1209, 1213)"
      },
      {
        "commit_hash": "2f28243f97f468e92316a2c7ea209c857689ab43",
        "line_num": 1149,
        "line_str": "name|isLabelName argument_list|() argument_list|) expr_stmt|;",
        "file_path": "src/com/google/javascript/rhino/IR.java",
        "input_file_path": "src/com/google/javascript/rhino/IR.java",
        "input_line_num": "range(1199, 1203)"
      },
      {
        "commit_hash": "2f28243f97f468e92316a2c7ea209c857689ab43",
        "line_num": 1148,
        "line_str": "operator|. name|isLabelName argument_list|() argument_list|)",
        "file_path": "src/com/google/javascript/rhino/IR.java",
        "input_file_path": "src/com/google/javascript/rhino/IR.java",
        "input_line_num": "range(1199, 1203)"
      },
      {
        "commit_hash": "2f28243f97f468e92316a2c7ea209c857689ab43",
        "line_num": 1147,
        "line_str": "name|tryBody operator|. name|isLabelName argument_list|()",
        "file_path": "src/com/google/javascript/rhino/IR.java",
        "input_file_path": "src/com/google/javascript/rhino/IR.java",
        "input_line_num": "range(1199, 1203)"
      },
      {
        "commit_hash": "2f28243f97f468e92316a2c7ea209c857689ab43",
        "line_num": 1146,
        "line_str": "argument_list|( name|tryBody operator|. name|isLabelName",
        "file_path": "src/com/google/javascript/rhino/IR.java",
        "input_file_path": "src/com/google/javascript/rhino/IR.java",
        "input_line_num": "range(1199, 1203)"
      },
      {
        "commit_hash": "2f28243f97f468e92316a2c7ea209c857689ab43",
        "line_num": 329,
        "line_str": "name|block return|; block|} specifier|public",
        "file_path": "src/com/google/javascript/rhino/IR.java",
        "input_file_path": "src/com/google/javascript/rhino/IR.java",
        "input_line_num": "range(382, 383)"
      },
      {
        "commit_hash": "2f28243f97f468e92316a2c7ea209c857689ab43",
        "line_num": 1225,
        "line_str": "name|block argument_list|( name|catchNode argument_list|)",
        "file_path": "src/com/google/javascript/rhino/IR.java",
        "input_file_path": "src/com/google/javascript/rhino/IR.java",
        "input_line_num": "range(1275, 1279)"
      },
      {
        "commit_hash": "2f28243f97f468e92316a2c7ea209c857689ab43",
        "line_num": 1224,
        "line_str": "init|= name|block argument_list|( name|catchNode",
        "file_path": "src/com/google/javascript/rhino/IR.java",
        "input_file_path": "src/com/google/javascript/rhino/IR.java",
        "input_line_num": "range(1275, 1279)"
      },
      {
        "commit_hash": "2f28243f97f468e92316a2c7ea209c857689ab43",
        "line_num": 1223,
        "line_str": "name|catchBody init|= name|block argument_list|(",
        "file_path": "src/com/google/javascript/rhino/IR.java",
        "input_file_path": "src/com/google/javascript/rhino/IR.java",
        "input_line_num": "range(1275, 1279)"
      }
    ]
  },
  {
    "id": 10014,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["74a817bbf5256d671036356c58096f612535e4a2"],
    "fix_commit_hash": "38e2b8f247423734adec3dbd76fa22da1a3561a8",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 1566,
        "line_str": "argument_list|() argument_list|) argument_list|) expr_stmt|;",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1805, 1817)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 731,
        "line_str": "name|cfgNode argument_list|) decl_stmt|; if|if",
        "file_path": "src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "input_file_path": "src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "input_line_num": "range(889, 892)"
      },
      {
        "commit_hash": "74a817bbf5256d671036356c58096f612535e4a2",
        "line_num": 934,
        "line_str": "name|inline argument_list|( literal|\"var y; var x = noSFX(Y), z = noSFX(); noSFX(); noSFX(), print(x)\" argument_list|,",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(969, 979)"
      },
      {
        "commit_hash": "9147da9979fb00599efd700fa5e0cccfa93d25a5",
        "line_num": 1723,
        "line_str": "argument_list|) decl_stmt|; for|for control|(",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1983, 1986)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 1562,
        "line_str": "argument_list|( name|n operator|. name|getString",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1805, 1817)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 451,
        "line_str": "literal|\"var x = a + b; print(x);      x = a - b; print(x)\" argument_list|, literal|\"var x;         print(a + b);             print(a - b)\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(568, 573)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 500,
        "line_str": "argument_list|( name|root argument_list|) expr_stmt|;",
        "file_path": "src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "input_file_path": "src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "input_line_num": "range(674, 679)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 1558,
        "line_str": "argument_list|( name|jsScope operator|. name|getVar",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1805, 1817)"
      },
      {
        "commit_hash": "3d80e1ed8fffbcb5f41b63f64726d9a4c76f209f",
        "line_num": 1781,
        "line_str": "operator|. name|isName argument_list|() operator|&&",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1785, 1788)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 307,
        "line_str": "argument_list|() decl_stmt|; name|Definition parameter_list|(",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(334, 336)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 496,
        "line_str": "argument_list|) operator|) operator|. name|traverse",
        "file_path": "src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "input_file_path": "src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "input_line_num": "range(674, 679)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 1550,
        "line_str": "argument_list|) condition|) block|{ name|def",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1799, 1800)"
      },
      {
        "commit_hash": "74a817bbf5256d671036356c58096f612535e4a2",
        "line_num": 856,
        "line_str": "argument_list|) expr_stmt|; block|} specifier|public",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(886, 896)"
      },
      {
        "commit_hash": "74a817bbf5256d671036356c58096f612535e4a2",
        "line_num": 852,
        "line_str": "argument_list|( literal|\"var y; var x = noSFX(y); print(x)\" argument_list|, literal|\"var y;var x;print(noSFX(y))\"",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(886, 896)"
      },
      {
        "commit_hash": "74a817bbf5256d671036356c58096f612535e4a2",
        "line_num": 51,
        "line_str": "init|= literal|\"\" operator|+ literal|\"/** @nosideeffects */ function noSFX() {} \\n\"",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(51, 53)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 1542,
        "line_str": "name|isDeclared argument_list|( name|n operator|.",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1788, 1792)"
      },
      {
        "commit_hash": "74a817bbf5256d671036356c58096f612535e4a2",
        "line_num": 848,
        "line_str": "name|testInlineAcrossSideEffect1 parameter_list|() block|{ name|inline",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(886, 896)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 464,
        "line_str": "argument_list|( literal|\"var x; if (g) { x= a + b; print(x)    }  x = a - b; print(x)\" argument_list|, literal|\"var x; if (g) {           print(a + b)}             print(a - b)\"",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(582, 587)"
      },
      {
        "commit_hash": "74a817bbf5256d671036356c58096f612535e4a2",
        "line_num": 939,
        "line_str": "argument_list|) expr_stmt|; block|} specifier|public",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(969, 979)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 1567,
        "line_str": "argument_list|) argument_list|) expr_stmt|; block|}",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1805, 1817)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 732,
        "line_str": "argument_list|) decl_stmt|; if|if condition|(",
        "file_path": "src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "input_file_path": "src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "input_line_num": "range(889, 892)"
      },
      {
        "commit_hash": "9147da9979fb00599efd700fa5e0cccfa93d25a5",
        "line_num": 1534,
        "line_str": "name|getString argument_list|() argument_list|, literal|true",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1795, 1799)"
      },
      {
        "commit_hash": "9147da9979fb00599efd700fa5e0cccfa93d25a5",
        "line_num": 1724,
        "line_str": "decl_stmt|; for|for control|( name|Var",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1983, 1986)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 1563,
        "line_str": "name|n operator|. name|getString argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1805, 1817)"
      },
      {
        "commit_hash": "74a817bbf5256d671036356c58096f612535e4a2",
        "line_num": 935,
        "line_str": "argument_list|( literal|\"var y; var x = noSFX(Y), z = noSFX(); noSFX(); noSFX(), print(x)\" argument_list|, literal|\"var y; var x, z = noSFX(); noSFX(); noSFX(), print(noSFX(Y))\"",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(969, 979)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 452,
        "line_str": "argument_list|, literal|\"var x;         print(a + b);             print(a - b)\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(568, 573)"
      },
      {
        "commit_hash": "74a817bbf5256d671036356c58096f612535e4a2",
        "line_num": 931,
        "line_str": "name|testCanInlineAcrossNoSideEffect parameter_list|() block|{ name|inline",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(969, 979)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 1559,
        "line_str": "name|jsScope operator|. name|getVar argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1805, 1817)"
      },
      {
        "commit_hash": "3d80e1ed8fffbcb5f41b63f64726d9a4c76f209f",
        "line_num": 1782,
        "line_str": "name|isName argument_list|() operator|&& name|jsScope",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1785, 1788)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 448,
        "line_str": "comment name|inline argument_list|( literal|\"var x = a + b; print(x);      x = a - b; print(x)\"",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(568, 573)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 497,
        "line_str": "operator|) operator|. name|traverse argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "input_file_path": "src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "input_line_num": "range(674, 679)"
      },
      {
        "commit_hash": "74a817bbf5256d671036356c58096f612535e4a2",
        "line_num": 857,
        "line_str": "expr_stmt|; block|} specifier|public name|void",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(886, 896)"
      },
      {
        "commit_hash": "74a817bbf5256d671036356c58096f612535e4a2",
        "line_num": 853,
        "line_str": "literal|\"var y; var x = noSFX(y); print(x)\" argument_list|, literal|\"var y;var x;print(noSFX(y))\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(886, 896)"
      },
      {
        "commit_hash": "74a817bbf5256d671036356c58096f612535e4a2",
        "line_num": 52,
        "line_str": "literal|\"\" operator|+ literal|\"/** @nosideeffects */ function noSFX() {} \\n\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(51, 53)"
      },
      {
        "commit_hash": "74a817bbf5256d671036356c58096f612535e4a2",
        "line_num": 849,
        "line_str": "parameter_list|() block|{ name|inline argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(886, 896)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 465,
        "line_str": "literal|\"var x; if (g) { x= a + b; print(x)    }  x = a - b; print(x)\" argument_list|, literal|\"var x; if (g) {           print(a + b)}             print(a - b)\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(582, 587)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 1539,
        "line_str": "operator|&& name|jsScope operator|. name|isDeclared",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1788, 1792)"
      },
      {
        "commit_hash": "74a817bbf5256d671036356c58096f612535e4a2",
        "line_num": 940,
        "line_str": "expr_stmt|; block|} specifier|public name|void",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(969, 979)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 733,
        "line_str": "decl_stmt|; if|if condition|( name|defNode",
        "file_path": "src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "input_file_path": "src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "input_line_num": "range(889, 892)"
      },
      {
        "commit_hash": "9147da9979fb00599efd700fa5e0cccfa93d25a5",
        "line_num": 1535,
        "line_str": "argument_list|() argument_list|, literal|true argument_list|)",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1795, 1799)"
      },
      {
        "commit_hash": "74a817bbf5256d671036356c58096f612535e4a2",
        "line_num": 936,
        "line_str": "literal|\"var y; var x = noSFX(Y), z = noSFX(); noSFX(); noSFX(), print(x)\" argument_list|, literal|\"var y; var x, z = noSFX(); noSFX(); noSFX(), print(noSFX(Y))\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(969, 979)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 1564,
        "line_str": "operator|. name|getString argument_list|() argument_list|)",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1805, 1817)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 463,
        "line_str": "name|inline argument_list|( literal|\"var x; if (g) { x= a + b; print(x)    }  x = a - b; print(x)\" argument_list|,",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(582, 587)"
      },
      {
        "commit_hash": "74a817bbf5256d671036356c58096f612535e4a2",
        "line_num": 932,
        "line_str": "parameter_list|() block|{ name|inline argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(969, 979)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 1560,
        "line_str": "operator|. name|getVar argument_list|( name|n",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1805, 1817)"
      },
      {
        "commit_hash": "3d80e1ed8fffbcb5f41b63f64726d9a4c76f209f",
        "line_num": 1783,
        "line_str": "argument_list|() operator|&& name|jsScope operator|.",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1785, 1788)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 449,
        "line_str": "name|inline argument_list|( literal|\"var x = a + b; print(x);      x = a - b; print(x)\" argument_list|,",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(568, 573)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 498,
        "line_str": "operator|. name|traverse argument_list|( name|root",
        "file_path": "src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "input_file_path": "src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "input_line_num": "range(674, 679)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 1556,
        "line_str": "operator|. name|add argument_list|( name|jsScope",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1805, 1817)"
      },
      {
        "commit_hash": "74a817bbf5256d671036356c58096f612535e4a2",
        "line_num": 854,
        "line_str": "argument_list|, literal|\"var y;var x;print(noSFX(y))\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(886, 896)"
      },
      {
        "commit_hash": "74a817bbf5256d671036356c58096f612535e4a2",
        "line_num": 850,
        "line_str": "block|{ name|inline argument_list|( literal|\"var y; var x = noSFX(y); print(x)\"",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(886, 896)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 466,
        "line_str": "argument_list|, literal|\"var x; if (g) {           print(a + b)}             print(a - b)\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(582, 587)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 1540,
        "line_str": "name|jsScope operator|. name|isDeclared argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1788, 1792)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 462,
        "line_str": "comment name|inline argument_list|( literal|\"var x; if (g) { x= a + b; print(x)    }  x = a - b; print(x)\"",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(582, 587)"
      },
      {
        "commit_hash": "9147da9979fb00599efd700fa5e0cccfa93d25a5",
        "line_num": 1536,
        "line_str": "argument_list|, literal|true argument_list|) condition|)",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1795, 1799)"
      },
      {
        "commit_hash": "74a817bbf5256d671036356c58096f612535e4a2",
        "line_num": 937,
        "line_str": "argument_list|, literal|\"var y; var x, z = noSFX(); noSFX(); noSFX(), print(noSFX(Y))\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(969, 979)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 1565,
        "line_str": "name|getString argument_list|() argument_list|) argument_list|)",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1805, 1817)"
      },
      {
        "commit_hash": "74a817bbf5256d671036356c58096f612535e4a2",
        "line_num": 933,
        "line_str": "block|{ name|inline argument_list|( literal|\"var y; var x = noSFX(Y), z = noSFX(); noSFX(); noSFX(), print(x)\"",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(969, 979)"
      },
      {
        "commit_hash": "9147da9979fb00599efd700fa5e0cccfa93d25a5",
        "line_num": 1722,
        "line_str": "argument_list|) argument_list|) decl_stmt|; for|for",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1983, 1986)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 1561,
        "line_str": "name|getVar argument_list|( name|n operator|.",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1805, 1817)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 450,
        "line_str": "argument_list|( literal|\"var x = a + b; print(x);      x = a - b; print(x)\" argument_list|, literal|\"var x;         print(a + b);             print(a - b)\"",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(568, 573)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 499,
        "line_str": "name|traverse argument_list|( name|root argument_list|)",
        "file_path": "src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "input_file_path": "src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "input_line_num": "range(674, 679)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 1557,
        "line_str": "name|add argument_list|( name|jsScope operator|.",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1805, 1817)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 306,
        "line_str": "name|newHashSet argument_list|() decl_stmt|; name|Definition",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(334, 336)"
      },
      {
        "commit_hash": "74a817bbf5256d671036356c58096f612535e4a2",
        "line_num": 855,
        "line_str": "literal|\"var y;var x;print(noSFX(y))\" argument_list|) expr_stmt|; block|}",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(886, 896)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 1545,
        "line_str": "operator|. name|getString argument_list|() argument_list|,",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1794, 1795)"
      },
      {
        "commit_hash": "74a817bbf5256d671036356c58096f612535e4a2",
        "line_num": 851,
        "line_str": "name|inline argument_list|( literal|\"var y; var x = noSFX(y); print(x)\" argument_list|,",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(886, 896)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 1541,
        "line_str": "operator|. name|isDeclared argument_list|( name|n",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1788, 1792)"
      },
      {
        "commit_hash": "9147da9979fb00599efd700fa5e0cccfa93d25a5",
        "line_num": 1537,
        "line_str": "literal|true argument_list|) condition|) block|{",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(1795, 1799)"
      },
      {
        "commit_hash": "74a817bbf5256d671036356c58096f612535e4a2",
        "line_num": 938,
        "line_str": "literal|\"var y; var x, z = noSFX(); noSFX(); noSFX(), print(noSFX(Y))\" argument_list|) expr_stmt|; block|}",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(969, 979)"
      }
    ]
  },
  {
    "id": 10015,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["a4c526dae1537f027f429145656ffb849699c1fc"],
    "fix_commit_hash": "0a670cb51fd56c12c19f98884c9513792ebc3f76",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "a4c526dae1537f027f429145656ffb849699c1fc",
        "line_num": 5092,
        "line_str": "name|skipAllPasses operator|&& name|options operator|.",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(5150, 5157)"
      },
      {
        "commit_hash": "a4c526dae1537f027f429145656ffb849699c1fc",
        "line_num": 5091,
        "line_str": "operator|. name|skipAllPasses operator|&& name|options",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(5150, 5157)"
      },
      {
        "commit_hash": "a4c526dae1537f027f429145656ffb849699c1fc",
        "line_num": 5090,
        "line_str": "name|options operator|. name|skipAllPasses operator|&&",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(5150, 5157)"
      },
      {
        "commit_hash": "a4c526dae1537f027f429145656ffb849699c1fc",
        "line_num": 5089,
        "line_str": "operator|! name|options operator|. name|skipAllPasses",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(5150, 5157)"
      },
      {
        "commit_hash": "a4c526dae1537f027f429145656ffb849699c1fc",
        "line_num": 5088,
        "line_str": "operator|&& operator|! name|options operator|.",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(5150, 5157)"
      },
      {
        "commit_hash": "a4c526dae1537f027f429145656ffb849699c1fc",
        "line_num": 5087,
        "line_str": "argument_list|() operator|&& operator|! name|options",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(5150, 5157)"
      },
      {
        "commit_hash": "a4c526dae1537f027f429145656ffb849699c1fc",
        "line_num": 5086,
        "line_str": "name|needsManagement argument_list|() operator|&& operator|!",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(5150, 5157)"
      }
    ]
  },
  {
    "id": 10016,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["091577d5000b2260452cdc79eacf54925de894a3"],
    "fix_commit_hash": "382422adae8e9f07fc23c94089c0ebe08a2174bc",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "22784dc96c391b01692ce686eb93b9aa0ef74ede",
        "line_num": 2074,
        "line_str": "block|{ comment comment comment",
        "file_path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java",
        "input_line_num": "range(2073, 2075)"
      },
      {
        "commit_hash": "22784dc96c391b01692ce686eb93b9aa0ef74ede",
        "line_num": 2073,
        "line_str": "parameter_list|) block|{ comment comment",
        "file_path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java",
        "input_line_num": "range(2073, 2075)"
      }
    ]
  },
  {
    "id": 10017,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["41abf3b75893403d9e21c33d06e8dc233b5cf657"],
    "fix_commit_hash": "46da17d59abb4f9c48b6ffd31601c212490b970b",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "f6607996d6d3bd6820ce3848d147991b27600a12",
        "line_num": 4896,
        "line_str": "block|} return|return literal|false return|;",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(5724, 5728)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 5247,
        "line_str": "operator|( name|rhsValue operator|!= literal|null",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(7022, 7032)"
      },
      {
        "commit_hash": "ec324a9bb23eb78c76f537f4c4170ba88d542f1c",
        "line_num": 7068,
        "line_str": "operator|. name|isFunction argument_list|() operator|&&",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(7037, 7040)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 5243,
        "line_str": "comment name|inferred operator|= operator|!",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(7022, 7032)"
      },
      {
        "commit_hash": "f6607996d6d3bd6820ce3848d147991b27600a12",
        "line_num": 4892,
        "line_str": "name|isGlobal argument_list|() return|; block|}",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(5718, 5722)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 5239,
        "line_str": "condition|( name|inferred condition|) block|{",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(7022, 7032)"
      },
      {
        "commit_hash": "8b9b9a4436478e14ff95ab7074c68b75c8bb4707",
        "line_num": 6833,
        "line_str": "argument_list|) operator|) operator|) expr_stmt|;",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(7053, 7056)"
      },
      {
        "commit_hash": "8b9b9a4436478e14ff95ab7074c68b75c8bb4707",
        "line_num": 6821,
        "line_str": "name|info operator|!= literal|null operator|||",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(7040, 7046)"
      },
      {
        "commit_hash": "f6607996d6d3bd6820ce3848d147991b27600a12",
        "line_num": 4897,
        "line_str": "return|return literal|false return|; block|}",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(5724, 5728)"
      },
      {
        "commit_hash": "ec324a9bb23eb78c76f537f4c4170ba88d542f1c",
        "line_num": 7069,
        "line_str": "name|isFunction argument_list|() operator|&& operator|(",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(7037, 7040)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 5244,
        "line_str": "name|inferred operator|= operator|! operator|(",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(7022, 7032)"
      },
      {
        "commit_hash": "f6607996d6d3bd6820ce3848d147991b27600a12",
        "line_num": 4889,
        "line_str": "return|return name|var operator|. name|isGlobal",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(5718, 5722)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 5240,
        "line_str": "name|inferred condition|) block|{ comment",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(7022, 7032)"
      },
      {
        "commit_hash": "8b9b9a4436478e14ff95ab7074c68b75c8bb4707",
        "line_num": 6834,
        "line_str": "operator|) operator|) expr_stmt|; block|}",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(7053, 7056)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 5199,
        "line_str": "block|} return|return; block|} name|boolean",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(6966, 6969)"
      },
      {
        "commit_hash": "8b9b9a4436478e14ff95ab7074c68b75c8bb4707",
        "line_num": 6822,
        "line_str": "operator|!= literal|null operator||| operator|!",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(7040, 7046)"
      },
      {
        "commit_hash": "f6607996d6d3bd6820ce3848d147991b27600a12",
        "line_num": 4898,
        "line_str": "literal|false return|; block|} comment",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(5724, 5728)"
      },
      {
        "commit_hash": "ec324a9bb23eb78c76f537f4c4170ba88d542f1c",
        "line_num": 7070,
        "line_str": "argument_list|() operator|&& operator|( name|info",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(7037, 7040)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 5245,
        "line_str": "operator|= operator|! operator|( name|rhsValue",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(7022, 7032)"
      },
      {
        "commit_hash": "f6607996d6d3bd6820ce3848d147991b27600a12",
        "line_num": 4890,
        "line_str": "name|var operator|. name|isGlobal argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(5718, 5722)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 5241,
        "line_str": "condition|) block|{ comment name|inferred",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(7022, 7032)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 5270,
        "line_str": "operator|) expr_stmt|; block|} if|if",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(7056, 7058)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 5200,
        "line_str": "return|return; block|} name|boolean name|inferred",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(6966, 6969)"
      },
      {
        "commit_hash": "8b9b9a4436478e14ff95ab7074c68b75c8bb4707",
        "line_num": 6823,
        "line_str": "literal|null operator||| operator|! name|scope",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(7040, 7046)"
      },
      {
        "commit_hash": "8b9b9a4436478e14ff95ab7074c68b75c8bb4707",
        "line_num": 6819,
        "line_str": "operator|&& operator|( name|info operator|!=",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(7040, 7046)"
      },
      {
        "commit_hash": "f6607996d6d3bd6820ce3848d147991b27600a12",
        "line_num": 4895,
        "line_str": "block|} block|} return|return literal|false",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(5724, 5728)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 5246,
        "line_str": "operator|! operator|( name|rhsValue operator|!=",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(7022, 7032)"
      },
      {
        "commit_hash": "f6607996d6d3bd6820ce3848d147991b27600a12",
        "line_num": 4891,
        "line_str": "operator|. name|isGlobal argument_list|() return|;",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(5718, 5722)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 5242,
        "line_str": "block|{ comment name|inferred operator|=",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(7022, 7032)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 5271,
        "line_str": "expr_stmt|; block|} if|if condition|(",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(7056, 7058)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 5238,
        "line_str": "if|if condition|( name|inferred condition|)",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(7022, 7032)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 5267,
        "line_str": "argument_list|, literal|false argument_list|) operator|)",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(7052, 7053)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 5201,
        "line_str": "block|} name|boolean name|inferred init|=",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(6966, 6969)"
      },
      {
        "commit_hash": "8b9b9a4436478e14ff95ab7074c68b75c8bb4707",
        "line_num": 6832,
        "line_str": "literal|false argument_list|) operator|) operator|)",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(7053, 7056)"
      },
      {
        "commit_hash": "8b9b9a4436478e14ff95ab7074c68b75c8bb4707",
        "line_num": 6824,
        "line_str": "operator||| operator|! name|scope operator|.",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(7040, 7046)"
      },
      {
        "commit_hash": "8b9b9a4436478e14ff95ab7074c68b75c8bb4707",
        "line_num": 6820,
        "line_str": "operator|( name|info operator|!= literal|null",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(7040, 7046)"
      }
    ]
  },
  {
    "id": 10018,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["41acde3e8e5e8d37ade765b41d9fd29861f03e5e"],
    "fix_commit_hash": "5909c3db59b16886917456ab950ef9661a7fe6b1",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "41acde3e8e5e8d37ade765b41d9fd29861f03e5e",
        "line_num": 3623,
        "line_str": "literal|0 return|; block|} specifier|static",
        "file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_line_num": "range(3626, 3629)"
      },
      {
        "commit_hash": "41acde3e8e5e8d37ade765b41d9fd29861f03e5e",
        "line_num": 3622,
        "line_str": "operator|> literal|0 return|; block|}",
        "file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_line_num": "range(3626, 3629)"
      },
      {
        "commit_hash": "41acde3e8e5e8d37ade765b41d9fd29861f03e5e",
        "line_num": 3621,
        "line_str": "name|len operator|> literal|0 return|;",
        "file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_line_num": "range(3626, 3629)"
      }
    ]
  },
  {
    "id": 10019,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["8bf67e65c7ee2a202ac2dbf252727ae656642350"],
    "fix_commit_hash": "49b4ef31c850611a5c85d95140b4cedda7f4c59a",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "c00a33b88d00f3b28787da26e3bb65ae2c1f4893",
        "line_num": 941,
        "line_str": "argument_list|() condition|) block|{ name|options",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(993, 996)"
      },
      {
        "commit_hash": "c00a33b88d00f3b28787da26e3bb65ae2c1f4893",
        "line_num": 940,
        "line_str": "name|isOn argument_list|() condition|) block|{",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(993, 996)"
      },
      {
        "commit_hash": "c00a33b88d00f3b28787da26e3bb65ae2c1f4893",
        "line_num": 939,
        "line_str": "operator|. name|isOn argument_list|() condition|)",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(993, 996)"
      }
    ]
  },
  {
    "id": 10020,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["a095236ba70304d61b8ec02ea316d3504cc0ea1d"],
    "fix_commit_hash": "fbaadc736f0031dd84bebea33abae497b47158cb",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 875,
        "line_str": "block|} specifier|private name|void name|assertExpressionBooleanTrue",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(957, 961)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 809,
        "line_str": "expr_stmt|; name|assertExpressionBooleanFalse argument_list|( literal|\"false\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(879, 883)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 677,
        "line_str": "name|assertExpressionBooleanFalse argument_list|( literal|\"a=false\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(746, 750)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 3226,
        "line_str": "block|{ name|increment operator|= name|trySimpilifyUnusedResult",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(3470, 3474)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 876,
        "line_str": "specifier|private name|void name|assertExpressionBooleanTrue parameter_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(957, 961)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 810,
        "line_str": "name|assertExpressionBooleanFalse argument_list|( literal|\"false\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(879, 883)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 744,
        "line_str": "literal|\"!false\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(816, 820)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 480,
        "line_str": "literal|\"/a/\" argument_list|) expr_stmt|; name|assertBooleanTrue",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(591, 595)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 3227,
        "line_str": "name|increment operator|= name|trySimpilifyUnusedResult argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(3470, 3474)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 877,
        "line_str": "name|void name|assertExpressionBooleanTrue parameter_list|( name|String",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(957, 961)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 745,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(816, 820)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 679,
        "line_str": "literal|\"a=false\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(751, 755)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 585,
        "line_str": "name|Node name|left init|= name|trySimpilifyUnusedResult",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(906, 910)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 481,
        "line_str": "argument_list|) expr_stmt|; name|assertBooleanTrue argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(591, 595)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 3228,
        "line_str": "operator|= name|trySimpilifyUnusedResult argument_list|( name|increment",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(3470, 3474)"
      },
      {
        "commit_hash": "86a7d25f3cc1177f35dc6480260fb807912c03fa",
        "line_num": 944,
        "line_str": "literal|\"-'0.0'\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(944, 948)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 878,
        "line_str": "name|assertExpressionBooleanTrue parameter_list|( name|String name|val",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(957, 961)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 812,
        "line_str": "literal|\"false\" argument_list|) expr_stmt|; name|assertExpressionBooleanFalse",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(884, 888)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 746,
        "line_str": "expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"!''\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(816, 820)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 680,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(751, 755)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 586,
        "line_str": "name|left init|= name|trySimpilifyUnusedResult argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(906, 910)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 482,
        "line_str": "expr_stmt|; name|assertBooleanTrue argument_list|( literal|\"{}\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(591, 595)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 3229,
        "line_str": "name|trySimpilifyUnusedResult argument_list|( name|increment argument_list|,",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(3470, 3474)"
      },
      {
        "commit_hash": "86a7d25f3cc1177f35dc6480260fb807912c03fa",
        "line_num": 945,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(944, 948)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 813,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanFalse argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(884, 888)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 747,
        "line_str": "name|assertExpressionBooleanTrue argument_list|( literal|\"!''\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(816, 820)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 681,
        "line_str": "expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"a=(false,true)\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(751, 755)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 587,
        "line_str": "init|= name|trySimpilifyUnusedResult argument_list|( name|n",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(906, 910)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 483,
        "line_str": "name|assertBooleanTrue argument_list|( literal|\"{}\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(591, 595)"
      },
      {
        "commit_hash": "86a7d25f3cc1177f35dc6480260fb807912c03fa",
        "line_num": 946,
        "line_str": "expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"{a:foo()}\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(944, 948)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 814,
        "line_str": "expr_stmt|; name|assertExpressionBooleanFalse argument_list|( literal|\"null\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(884, 888)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 682,
        "line_str": "name|assertExpressionBooleanTrue argument_list|( literal|\"a=(false,true)\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(751, 755)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 588,
        "line_str": "name|trySimpilifyUnusedResult argument_list|( name|n operator|.",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(906, 910)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 522,
        "line_str": "name|Node name|conditionalResultNode init|= name|trySimpilifyUnusedResult",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(843, 847)"
      },
      {
        "commit_hash": "86a7d25f3cc1177f35dc6480260fb807912c03fa",
        "line_num": 947,
        "line_str": "name|assertExpressionBooleanTrue argument_list|( literal|\"{a:foo()}\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(944, 948)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 815,
        "line_str": "name|assertExpressionBooleanFalse argument_list|( literal|\"null\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(884, 888)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 523,
        "line_str": "name|conditionalResultNode init|= name|trySimpilifyUnusedResult argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(843, 847)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 485,
        "line_str": "literal|\"{}\" argument_list|) expr_stmt|; name|assertBooleanTrue",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(596, 600)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 750,
        "line_str": "argument_list|) expr_stmt|; comment name|assertExpressionBooleanUnknown",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(822, 826)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 684,
        "line_str": "literal|\"a=(false,true)\" argument_list|) expr_stmt|; name|assertExpressionBooleanFalse",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(756, 760)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 524,
        "line_str": "init|= name|trySimpilifyUnusedResult argument_list|( name|n",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(843, 847)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 486,
        "line_str": "argument_list|) expr_stmt|; name|assertBooleanTrue argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(596, 600)"
      },
      {
        "commit_hash": "86a7d25f3cc1177f35dc6480260fb807912c03fa",
        "line_num": 949,
        "line_str": "literal|\"{a:foo()}\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(949, 953)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 817,
        "line_str": "literal|\"null\" argument_list|) expr_stmt|; name|assertExpressionBooleanFalse",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(889, 893)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 751,
        "line_str": "expr_stmt|; comment name|assertExpressionBooleanUnknown argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(822, 826)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 685,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanFalse argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(756, 760)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 525,
        "line_str": "name|trySimpilifyUnusedResult argument_list|( name|n operator|.",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(843, 847)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 487,
        "line_str": "expr_stmt|; name|assertBooleanTrue argument_list|( literal|\"[]\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(596, 600)"
      },
      {
        "commit_hash": "86a7d25f3cc1177f35dc6480260fb807912c03fa",
        "line_num": 950,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(949, 953)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 818,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanFalse argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(889, 893)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 752,
        "line_str": "comment name|assertExpressionBooleanUnknown argument_list|( literal|\"a *= 2\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(822, 826)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 686,
        "line_str": "expr_stmt|; name|assertExpressionBooleanFalse argument_list|( literal|\"a=(true,false)\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(756, 760)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 488,
        "line_str": "name|assertBooleanTrue argument_list|( literal|\"[]\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(596, 600)"
      },
      {
        "commit_hash": "86a7d25f3cc1177f35dc6480260fb807912c03fa",
        "line_num": 951,
        "line_str": "expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"[foo()]\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(949, 953)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 819,
        "line_str": "expr_stmt|; name|assertExpressionBooleanFalse argument_list|( literal|\"0\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(889, 893)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 753,
        "line_str": "name|assertExpressionBooleanUnknown argument_list|( literal|\"a *= 2\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(822, 826)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 687,
        "line_str": "name|assertExpressionBooleanFalse argument_list|( literal|\"a=(true,false)\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(756, 760)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 395,
        "line_str": "name|Node name|falseNode init|= name|trySimpilifyUnusedResult",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(716, 720)"
      },
      {
        "commit_hash": "86a7d25f3cc1177f35dc6480260fb807912c03fa",
        "line_num": 952,
        "line_str": "name|assertExpressionBooleanTrue argument_list|( literal|\"[foo()]\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(949, 953)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 820,
        "line_str": "name|assertExpressionBooleanFalse argument_list|( literal|\"0\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(889, 893)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 490,
        "line_str": "literal|\"[]\" argument_list|) expr_stmt|; name|assertBooleanFalse",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(601, 605)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 396,
        "line_str": "name|falseNode init|= name|trySimpilifyUnusedResult argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(716, 720)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 689,
        "line_str": "literal|\"a=(true,false)\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(761, 765)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 491,
        "line_str": "argument_list|) expr_stmt|; name|assertBooleanFalse argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(601, 605)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 397,
        "line_str": "init|= name|trySimpilifyUnusedResult argument_list|( name|n",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(716, 720)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 822,
        "line_str": "literal|\"0\" argument_list|) expr_stmt|; name|assertExpressionBooleanFalse",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(894, 898)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 690,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(761, 765)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 596,
        "line_str": "name|Node name|right init|= name|trySimpilifyUnusedResult",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(917, 921)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 492,
        "line_str": "expr_stmt|; name|assertBooleanFalse argument_list|( literal|\"false\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(601, 605)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 398,
        "line_str": "name|trySimpilifyUnusedResult argument_list|( name|n operator|.",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(716, 720)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 332,
        "line_str": "comment specifier|private name|Node name|trySimpilifyUnusedResult",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(653, 657)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 823,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanFalse argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(894, 898)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 757,
        "line_str": "expr_stmt|; comment comment name|assertExpressionBooleanUnknown",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 833)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 691,
        "line_str": "expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"a=(false || true)\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(761, 765)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 597,
        "line_str": "name|right init|= name|trySimpilifyUnusedResult argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(917, 921)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 559,
        "line_str": "block|} specifier|private name|void name|assertBooleanFalse",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(686, 690)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 493,
        "line_str": "name|assertBooleanFalse argument_list|( literal|\"false\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(601, 605)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 333,
        "line_str": "specifier|private name|Node name|trySimpilifyUnusedResult parameter_list|(",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(653, 657)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 824,
        "line_str": "expr_stmt|; name|assertExpressionBooleanFalse argument_list|( literal|\"''\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(894, 898)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 758,
        "line_str": "comment comment name|assertExpressionBooleanUnknown argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 833)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 692,
        "line_str": "name|assertExpressionBooleanTrue argument_list|( literal|\"a=(false || true)\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(761, 765)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 598,
        "line_str": "init|= name|trySimpilifyUnusedResult argument_list|( name|n",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(917, 921)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 560,
        "line_str": "specifier|private name|void name|assertBooleanFalse parameter_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(686, 690)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 334,
        "line_str": "name|Node name|trySimpilifyUnusedResult parameter_list|( name|Node",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(653, 657)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 364,
        "line_str": "name|VOID case|: return|return name|TernaryValue",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(649, 650)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 825,
        "line_str": "name|assertExpressionBooleanFalse argument_list|( literal|\"''\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(894, 898)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 759,
        "line_str": "comment name|assertExpressionBooleanUnknown argument_list|( literal|\"2 + 2\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 833)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 599,
        "line_str": "name|trySimpilifyUnusedResult argument_list|( name|n operator|.",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(917, 921)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 561,
        "line_str": "name|void name|assertBooleanFalse parameter_list|( name|String",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(686, 690)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 495,
        "line_str": "literal|\"false\" argument_list|) expr_stmt|; name|assertBooleanFalse",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(606, 610)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 335,
        "line_str": "name|trySimpilifyUnusedResult parameter_list|( name|Node name|n",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(653, 657)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 760,
        "line_str": "name|assertExpressionBooleanUnknown argument_list|( literal|\"2 + 2\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(829, 833)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 694,
        "line_str": "literal|\"a=(false || true)\" argument_list|) expr_stmt|; name|assertExpressionBooleanFalse",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(766, 770)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 562,
        "line_str": "name|assertBooleanFalse parameter_list|( name|String name|val",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(686, 690)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 496,
        "line_str": "argument_list|) expr_stmt|; name|assertBooleanFalse argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(606, 610)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 827,
        "line_str": "literal|\"''\" argument_list|) expr_stmt|; name|assertExpressionBooleanFalse",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(899, 903)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 695,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanFalse argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(766, 770)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 497,
        "line_str": "expr_stmt|; name|assertBooleanFalse argument_list|( literal|\"null\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(606, 610)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 828,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanFalse argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(899, 903)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 762,
        "line_str": "literal|\"2 + 2\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(834, 838)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 696,
        "line_str": "expr_stmt|; name|assertExpressionBooleanFalse argument_list|( literal|\"a=(true&& false)\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(766, 770)"
      },
      {
        "commit_hash": "8f8b3c307e05b9cb8071bd4cb4dad0036f9e4623",
        "line_num": 1659,
        "line_str": "name|trySimpilifyUnusedResult argument_list|( name|left argument_list|)",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(1935, 1936)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 498,
        "line_str": "name|assertBooleanFalse argument_list|( literal|\"null\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(606, 610)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 829,
        "line_str": "expr_stmt|; name|assertExpressionBooleanFalse argument_list|( literal|\"undefined\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(899, 903)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 763,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(834, 838)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 697,
        "line_str": "name|assertExpressionBooleanFalse argument_list|( literal|\"a=(true&& false)\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(766, 770)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 339,
        "line_str": "parameter_list|) block|{ return|return name|trySimpilifyUnusedResult",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(660, 664)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 830,
        "line_str": "name|assertExpressionBooleanFalse argument_list|( literal|\"undefined\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(899, 903)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 764,
        "line_str": "expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"a=1\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(834, 838)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 500,
        "line_str": "literal|\"null\" argument_list|) expr_stmt|; name|assertBooleanFalse",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(611, 615)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 340,
        "line_str": "block|{ return|return name|trySimpilifyUnusedResult argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(660, 664)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 765,
        "line_str": "name|assertExpressionBooleanTrue argument_list|( literal|\"a=1\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(834, 838)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 699,
        "line_str": "literal|\"a=(true&& false)\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(771, 775)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 501,
        "line_str": "argument_list|) expr_stmt|; name|assertBooleanFalse argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(611, 615)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 341,
        "line_str": "return|return name|trySimpilifyUnusedResult argument_list|( name|n",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(660, 664)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 832,
        "line_str": "literal|\"undefined\" argument_list|) expr_stmt|; name|assertExpressionBooleanFalse",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(904, 908)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 700,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(771, 775)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 502,
        "line_str": "expr_stmt|; name|assertBooleanFalse argument_list|( literal|\"0\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(611, 615)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 342,
        "line_str": "name|trySimpilifyUnusedResult argument_list|( name|n argument_list|,",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(660, 664)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 833,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanFalse argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(904, 908)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 767,
        "line_str": "literal|\"a=1\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(839, 843)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 701,
        "line_str": "expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"a=!(true&& false)\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(771, 775)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 503,
        "line_str": "name|assertBooleanFalse argument_list|( literal|\"0\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(611, 615)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 834,
        "line_str": "expr_stmt|; name|assertExpressionBooleanFalse argument_list|( literal|\"void 0\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(904, 908)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 768,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(839, 843)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 702,
        "line_str": "name|assertExpressionBooleanTrue argument_list|( literal|\"a=!(true&& false)\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(771, 775)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 901,
        "line_str": "block|} specifier|private name|void name|assertExpressionBooleanFalse",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(983, 987)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 835,
        "line_str": "name|assertExpressionBooleanFalse argument_list|( literal|\"void 0\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(904, 908)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 769,
        "line_str": "expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"a=/a/\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(839, 843)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 505,
        "line_str": "literal|\"0\" argument_list|) expr_stmt|; name|assertBooleanFalse",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(616, 620)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 902,
        "line_str": "specifier|private name|void name|assertExpressionBooleanFalse parameter_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(983, 987)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 770,
        "line_str": "name|assertExpressionBooleanTrue argument_list|( literal|\"a=/a/\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(839, 843)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 704,
        "line_str": "literal|\"a=!(true&& false)\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(776, 780)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 506,
        "line_str": "argument_list|) expr_stmt|; name|assertBooleanFalse argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(616, 620)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 903,
        "line_str": "name|void name|assertExpressionBooleanFalse parameter_list|( name|String",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(983, 987)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 837,
        "line_str": "literal|\"void 0\" argument_list|) expr_stmt|; name|assertExpressionBooleanFalse",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(909, 913)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 705,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(776, 780)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 507,
        "line_str": "expr_stmt|; name|assertBooleanFalse argument_list|( literal|\"''\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(616, 620)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 904,
        "line_str": "name|assertExpressionBooleanFalse parameter_list|( name|String name|val",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(983, 987)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 838,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanFalse argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(909, 913)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 772,
        "line_str": "literal|\"a=/a/\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(844, 848)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 706,
        "line_str": "expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"a,true\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(776, 780)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 508,
        "line_str": "name|assertBooleanFalse argument_list|( literal|\"''\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(616, 620)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 839,
        "line_str": "expr_stmt|; name|assertExpressionBooleanFalse argument_list|( literal|\"void foo()\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(909, 913)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 773,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(844, 848)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 707,
        "line_str": "name|assertExpressionBooleanTrue argument_list|( literal|\"a,true\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(776, 780)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 840,
        "line_str": "name|assertExpressionBooleanFalse argument_list|( literal|\"void foo()\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(909, 913)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 774,
        "line_str": "expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"a={}\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(844, 848)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 510,
        "line_str": "literal|\"''\" argument_list|) expr_stmt|; name|assertBooleanFalse",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(621, 625)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 350,
        "line_str": "comment specifier|private name|Node name|trySimpilifyUnusedResult",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(671, 675)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 775,
        "line_str": "name|assertExpressionBooleanTrue argument_list|( literal|\"a={}\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(844, 848)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 709,
        "line_str": "literal|\"a,true\" argument_list|) expr_stmt|; name|assertExpressionBooleanFalse",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(781, 785)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 511,
        "line_str": "argument_list|) expr_stmt|; name|assertBooleanFalse argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(621, 625)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 351,
        "line_str": "specifier|private name|Node name|trySimpilifyUnusedResult parameter_list|(",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(671, 675)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 842,
        "line_str": "literal|\"void foo()\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(914, 918)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 710,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanFalse argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(781, 785)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 512,
        "line_str": "expr_stmt|; name|assertBooleanFalse argument_list|( literal|\"undefined\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(621, 625)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 352,
        "line_str": "name|Node name|trySimpilifyUnusedResult parameter_list|( name|Node",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(671, 675)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 843,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(914, 918)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 777,
        "line_str": "literal|\"a={}\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(849, 853)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 711,
        "line_str": "expr_stmt|; name|assertExpressionBooleanFalse argument_list|( literal|\"a,false\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(781, 785)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 551,
        "line_str": "comment name|result operator|= name|trySimpilifyUnusedResult",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(872, 876)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 513,
        "line_str": "name|assertBooleanFalse argument_list|( literal|\"undefined\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(621, 625)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 353,
        "line_str": "name|trySimpilifyUnusedResult parameter_list|( name|Node name|n",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(671, 675)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 844,
        "line_str": "expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"a?true:true\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(914, 918)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 778,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(849, 853)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 712,
        "line_str": "name|assertExpressionBooleanFalse argument_list|( literal|\"a,false\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(781, 785)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 552,
        "line_str": "name|result operator|= name|trySimpilifyUnusedResult argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(872, 876)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 845,
        "line_str": "name|assertExpressionBooleanTrue argument_list|( literal|\"a?true:true\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(914, 918)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 779,
        "line_str": "expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"true\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(849, 853)"
      },
      {
        "commit_hash": "86a7d25f3cc1177f35dc6480260fb807912c03fa",
        "line_num": 647,
        "line_str": "argument_list|) expr_stmt|; comment name|assertBooleanUnknown",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(647, 651)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 553,
        "line_str": "operator|= name|trySimpilifyUnusedResult argument_list|( name|n",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(872, 876)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 515,
        "line_str": "literal|\"undefined\" argument_list|) expr_stmt|; name|assertBooleanFalse",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(626, 630)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 780,
        "line_str": "name|assertExpressionBooleanTrue argument_list|( literal|\"true\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(849, 853)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 714,
        "line_str": "literal|\"a,false\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(786, 790)"
      },
      {
        "commit_hash": "86a7d25f3cc1177f35dc6480260fb807912c03fa",
        "line_num": 648,
        "line_str": "expr_stmt|; comment name|assertBooleanUnknown argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(647, 651)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 554,
        "line_str": "name|trySimpilifyUnusedResult argument_list|( name|n operator|.",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(872, 876)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 516,
        "line_str": "argument_list|) expr_stmt|; name|assertBooleanFalse argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(626, 630)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 488,
        "line_str": "block|{ name|result operator|= name|trySimpilifyUnusedResult",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(809, 813)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 320,
        "line_str": "operator|. name|FALSE case|: case|case",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(643, 649)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 847,
        "line_str": "literal|\"a?true:true\" argument_list|) expr_stmt|; name|assertExpressionBooleanFalse",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(919, 923)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 715,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(786, 790)"
      },
      {
        "commit_hash": "86a7d25f3cc1177f35dc6480260fb807912c03fa",
        "line_num": 649,
        "line_str": "comment name|assertBooleanUnknown argument_list|( literal|\"{a:foo()}\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(647, 651)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 517,
        "line_str": "expr_stmt|; name|assertBooleanFalse argument_list|( literal|\"void 0\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(626, 630)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 489,
        "line_str": "name|result operator|= name|trySimpilifyUnusedResult argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(809, 813)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 321,
        "line_str": "name|FALSE case|: case|case name|Token",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(643, 649)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 848,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanFalse argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(919, 923)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 782,
        "line_str": "literal|\"true\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(854, 858)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 716,
        "line_str": "expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"true||false\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(786, 790)"
      },
      {
        "commit_hash": "86a7d25f3cc1177f35dc6480260fb807912c03fa",
        "line_num": 650,
        "line_str": "name|assertBooleanUnknown argument_list|( literal|\"{a:foo()}\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(647, 651)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 518,
        "line_str": "name|assertBooleanFalse argument_list|( literal|\"void 0\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(626, 630)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 490,
        "line_str": "operator|= name|trySimpilifyUnusedResult argument_list|( name|n",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(809, 813)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 322,
        "line_str": "case|: case|case name|Token operator|.",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(643, 649)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 849,
        "line_str": "expr_stmt|; name|assertExpressionBooleanFalse argument_list|( literal|\"a?false:false\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(919, 923)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 783,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(854, 858)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 717,
        "line_str": "name|assertExpressionBooleanTrue argument_list|( literal|\"true||false\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(786, 790)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 585,
        "line_str": "block|} specifier|private name|void name|assertBooleanUnknown",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(712, 716)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 491,
        "line_str": "name|trySimpilifyUnusedResult argument_list|( name|n operator|.",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(809, 813)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 323,
        "line_str": "case|case name|Token operator|. name|VOID",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(643, 649)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 850,
        "line_str": "name|assertExpressionBooleanFalse argument_list|( literal|\"a?false:false\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(919, 923)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 784,
        "line_str": "expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"10\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(854, 858)"
      },
      {
        "commit_hash": "86a7d25f3cc1177f35dc6480260fb807912c03fa",
        "line_num": 652,
        "line_str": "literal|\"{a:foo()}\" argument_list|) expr_stmt|; name|assertBooleanUnknown",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(652, 656)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 586,
        "line_str": "specifier|private name|void name|assertBooleanUnknown parameter_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(712, 716)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 324,
        "line_str": "name|Token operator|. name|VOID case|:",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(643, 649)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 785,
        "line_str": "name|assertExpressionBooleanTrue argument_list|( literal|\"10\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(854, 858)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 719,
        "line_str": "literal|\"true||false\" argument_list|) expr_stmt|; name|assertExpressionBooleanFalse",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(791, 795)"
      },
      {
        "commit_hash": "86a7d25f3cc1177f35dc6480260fb807912c03fa",
        "line_num": 653,
        "line_str": "argument_list|) expr_stmt|; name|assertBooleanUnknown argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(652, 656)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 587,
        "line_str": "name|void name|assertBooleanUnknown parameter_list|( name|String",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(712, 716)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 521,
        "line_str": "argument_list|) expr_stmt|; name|assertBooleanUnknown argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(637, 640)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 325,
        "line_str": "operator|. name|VOID case|: return|return",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(643, 649)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 852,
        "line_str": "literal|\"a?false:false\" argument_list|) expr_stmt|; name|assertExpressionBooleanUnknown",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(924, 928)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 720,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanFalse argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(791, 795)"
      },
      {
        "commit_hash": "86a7d25f3cc1177f35dc6480260fb807912c03fa",
        "line_num": 654,
        "line_str": "expr_stmt|; name|assertBooleanUnknown argument_list|( literal|\"[foo()]\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(652, 656)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 588,
        "line_str": "name|assertBooleanUnknown parameter_list|( name|String name|val",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(712, 716)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 522,
        "line_str": "expr_stmt|; name|assertBooleanUnknown argument_list|( literal|\"b\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(637, 640)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 853,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanUnknown argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(924, 928)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 787,
        "line_str": "literal|\"10\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(859, 863)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 721,
        "line_str": "expr_stmt|; name|assertExpressionBooleanFalse argument_list|( literal|\"false||false\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(791, 795)"
      },
      {
        "commit_hash": "86a7d25f3cc1177f35dc6480260fb807912c03fa",
        "line_num": 655,
        "line_str": "name|assertBooleanUnknown argument_list|( literal|\"[foo()]\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(652, 656)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 523,
        "line_str": "name|assertBooleanUnknown argument_list|( literal|\"b\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(637, 640)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 3204,
        "line_str": "block|{ name|init operator|= name|trySimpilifyUnusedResult",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(3448, 3452)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 854,
        "line_str": "expr_stmt|; name|assertExpressionBooleanUnknown argument_list|( literal|\"a?true:false\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(924, 928)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 788,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(859, 863)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 722,
        "line_str": "name|assertExpressionBooleanFalse argument_list|( literal|\"false||false\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(791, 795)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 1619,
        "line_str": "decl_stmt|; name|left operator|= name|trySimpilifyUnusedResult",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(1932, 1935)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 298,
        "line_str": "name|Node name|result init|= name|trySimpilifyUnusedResult",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(567, 571)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 3205,
        "line_str": "name|init operator|= name|trySimpilifyUnusedResult argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(3448, 3452)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 855,
        "line_str": "name|assertExpressionBooleanUnknown argument_list|( literal|\"a?true:false\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(924, 928)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 789,
        "line_str": "expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"'0'\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(859, 863)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 1620,
        "line_str": "name|left operator|= name|trySimpilifyUnusedResult argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(1932, 1935)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 525,
        "line_str": "literal|\"b\" argument_list|) expr_stmt|; name|assertBooleanUnknown",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(641, 645)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 299,
        "line_str": "name|result init|= name|trySimpilifyUnusedResult argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(567, 571)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 3206,
        "line_str": "operator|= name|trySimpilifyUnusedResult argument_list|( name|init",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(3448, 3452)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 790,
        "line_str": "name|assertExpressionBooleanTrue argument_list|( literal|\"'0'\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(859, 863)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 724,
        "line_str": "literal|\"false||false\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(796, 800)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 1621,
        "line_str": "operator|= name|trySimpilifyUnusedResult argument_list|( name|left",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(1932, 1935)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 526,
        "line_str": "argument_list|) expr_stmt|; name|assertBooleanUnknown argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(641, 645)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 460,
        "line_str": "name|testGetBooleanValue parameter_list|() block|{ name|assertBooleanTrue",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 575)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 300,
        "line_str": "init|= name|trySimpilifyUnusedResult argument_list|( name|subtree",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(567, 571)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 3207,
        "line_str": "name|trySimpilifyUnusedResult argument_list|( name|init argument_list|,",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(3448, 3452)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 857,
        "line_str": "literal|\"a?true:false\" argument_list|) expr_stmt|; name|assertExpressionBooleanUnknown",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(929, 933)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 725,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(796, 800)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 527,
        "line_str": "expr_stmt|; name|assertBooleanUnknown argument_list|( literal|\"-'0.0'\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(641, 645)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 461,
        "line_str": "parameter_list|() block|{ name|assertBooleanTrue argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 575)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 301,
        "line_str": "name|trySimpilifyUnusedResult argument_list|( name|subtree operator|.",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(567, 571)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 858,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanUnknown argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(929, 933)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 792,
        "line_str": "literal|\"'0'\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(864, 868)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 726,
        "line_str": "expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"true&&true\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(796, 800)"
      },
      {
        "commit_hash": "9b4ae3ac4b39ed3267d23e12d99e1fd6d86400c5",
        "line_num": 528,
        "line_str": "literal|\"void 0\" argument_list|) expr_stmt|; name|assertBooleanFalse",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(631, 635)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 462,
        "line_str": "block|{ name|assertBooleanTrue argument_list|( literal|\"true\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 575)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 859,
        "line_str": "expr_stmt|; name|assertExpressionBooleanUnknown argument_list|( literal|\"a?true:foo()\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(929, 933)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 793,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(864, 868)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 727,
        "line_str": "name|assertExpressionBooleanTrue argument_list|( literal|\"true&&true\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(796, 800)"
      },
      {
        "commit_hash": "9b4ae3ac4b39ed3267d23e12d99e1fd6d86400c5",
        "line_num": 529,
        "line_str": "argument_list|) expr_stmt|; name|assertBooleanFalse argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(631, 635)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 463,
        "line_str": "name|assertBooleanTrue argument_list|( literal|\"true\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(571, 575)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 860,
        "line_str": "name|assertExpressionBooleanUnknown argument_list|( literal|\"a?true:foo()\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(929, 933)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 794,
        "line_str": "expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"/a/\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(864, 868)"
      },
      {
        "commit_hash": "9b4ae3ac4b39ed3267d23e12d99e1fd6d86400c5",
        "line_num": 530,
        "line_str": "expr_stmt|; name|assertBooleanFalse argument_list|( literal|\"void foo()\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(631, 635)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 927,
        "line_str": "block|} specifier|private name|void name|assertExpressionBooleanUnknown",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(1009, 1013)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 795,
        "line_str": "name|assertExpressionBooleanTrue argument_list|( literal|\"/a/\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(864, 868)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 729,
        "line_str": "literal|\"true&&true\" argument_list|) expr_stmt|; name|assertExpressionBooleanFalse",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(801, 805)"
      },
      {
        "commit_hash": "9b4ae3ac4b39ed3267d23e12d99e1fd6d86400c5",
        "line_num": 531,
        "line_str": "name|assertBooleanFalse argument_list|( literal|\"void foo()\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(631, 635)"
      },
      {
        "commit_hash": "86a7d25f3cc1177f35dc6480260fb807912c03fa",
        "line_num": 731,
        "line_str": "name|TRUE return|; block|} block|}",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(748, 751)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 465,
        "line_str": "literal|\"true\" argument_list|) expr_stmt|; name|assertBooleanTrue",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(576, 580)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 928,
        "line_str": "specifier|private name|void name|assertExpressionBooleanUnknown parameter_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(1009, 1013)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 862,
        "line_str": "literal|\"a?true:foo()\" argument_list|) expr_stmt|; name|assertExpressionBooleanUnknown",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(934, 938)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 730,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanFalse argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(801, 805)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 702,
        "line_str": "expr_stmt|; name|c operator|= name|trySimpilifyUnusedResult",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(1023, 1027)"
      },
      {
        "commit_hash": "86a7d25f3cc1177f35dc6480260fb807912c03fa",
        "line_num": 732,
        "line_str": "return|; block|} block|} return|return",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(748, 751)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 466,
        "line_str": "argument_list|) expr_stmt|; name|assertBooleanTrue argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(576, 580)"
      },
      {
        "commit_hash": "86a7d25f3cc1177f35dc6480260fb807912c03fa",
        "line_num": 534,
        "line_str": "operator|. name|TRUE return|; default|default:",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(551, 553)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 929,
        "line_str": "name|void name|assertExpressionBooleanUnknown parameter_list|( name|String",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(1009, 1013)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 863,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanUnknown argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(934, 938)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 797,
        "line_str": "literal|\"/a/\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(869, 873)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 731,
        "line_str": "expr_stmt|; name|assertExpressionBooleanFalse argument_list|( literal|\"true&&false\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(801, 805)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 703,
        "line_str": "name|c operator|= name|trySimpilifyUnusedResult argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(1023, 1027)"
      },
      {
        "commit_hash": "9b4ae3ac4b39ed3267d23e12d99e1fd6d86400c5",
        "line_num": 533,
        "line_str": "literal|\"void foo()\" argument_list|) expr_stmt|; name|assertBooleanUnknown",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(636, 637)"
      },
      {
        "commit_hash": "86a7d25f3cc1177f35dc6480260fb807912c03fa",
        "line_num": 733,
        "line_str": "block|} block|} return|return name|TernaryValue",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(748, 751)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 467,
        "line_str": "expr_stmt|; name|assertBooleanTrue argument_list|( literal|\"10\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(576, 580)"
      },
      {
        "commit_hash": "86a7d25f3cc1177f35dc6480260fb807912c03fa",
        "line_num": 535,
        "line_str": "name|TRUE return|; default|default: return|return",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(551, 553)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 930,
        "line_str": "name|assertExpressionBooleanUnknown parameter_list|( name|String name|val",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(1009, 1013)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 864,
        "line_str": "expr_stmt|; name|assertExpressionBooleanUnknown argument_list|( literal|\"b\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(934, 938)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 798,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(869, 873)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 732,
        "line_str": "name|assertExpressionBooleanFalse argument_list|( literal|\"true&&false\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(801, 805)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 704,
        "line_str": "operator|= name|trySimpilifyUnusedResult argument_list|( name|c",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(1023, 1027)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 534,
        "line_str": "specifier|private name|void name|assertBooleanTrue parameter_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(660, 664)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 468,
        "line_str": "name|assertBooleanTrue argument_list|( literal|\"10\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(576, 580)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 865,
        "line_str": "name|assertExpressionBooleanUnknown argument_list|( literal|\"b\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(934, 938)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 799,
        "line_str": "expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"{}\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(869, 873)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 705,
        "line_str": "name|trySimpilifyUnusedResult argument_list|( name|c argument_list|)",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(1023, 1027)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 535,
        "line_str": "name|void name|assertBooleanTrue parameter_list|( name|String",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(660, 664)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 800,
        "line_str": "name|assertExpressionBooleanTrue argument_list|( literal|\"{}\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(869, 873)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 734,
        "line_str": "literal|\"true&&false\" argument_list|) expr_stmt|; name|assertExpressionBooleanFalse",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(806, 810)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 536,
        "line_str": "name|assertBooleanTrue parameter_list|( name|String name|val",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(660, 664)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 470,
        "line_str": "literal|\"10\" argument_list|) expr_stmt|; name|assertBooleanTrue",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(581, 585)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 867,
        "line_str": "literal|\"b\" argument_list|) expr_stmt|; name|assertExpressionBooleanUnknown",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(939, 943)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 735,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanFalse argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(806, 810)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 669,
        "line_str": "name|testGetExpressionBooleanValue parameter_list|() block|{ name|assertExpressionBooleanTrue",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 745)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 471,
        "line_str": "argument_list|) expr_stmt|; name|assertBooleanTrue argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(581, 585)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 868,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanUnknown argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(939, 943)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 802,
        "line_str": "literal|\"{}\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(874, 878)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 736,
        "line_str": "expr_stmt|; name|assertExpressionBooleanFalse argument_list|( literal|\"!true\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(806, 810)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 670,
        "line_str": "parameter_list|() block|{ name|assertExpressionBooleanTrue argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 745)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 472,
        "line_str": "expr_stmt|; name|assertBooleanTrue argument_list|( literal|\"'0'\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(581, 585)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 869,
        "line_str": "expr_stmt|; name|assertExpressionBooleanUnknown argument_list|( literal|\"-'0.0'\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(939, 943)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 803,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(874, 878)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 737,
        "line_str": "name|assertExpressionBooleanFalse argument_list|( literal|\"!true\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(806, 810)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 671,
        "line_str": "block|{ name|assertExpressionBooleanTrue argument_list|( literal|\"a=true\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 745)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 473,
        "line_str": "name|assertBooleanTrue argument_list|( literal|\"'0'\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(581, 585)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 870,
        "line_str": "name|assertExpressionBooleanUnknown argument_list|( literal|\"-'0.0'\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(939, 943)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 804,
        "line_str": "expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"[]\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(874, 878)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 672,
        "line_str": "name|assertExpressionBooleanTrue argument_list|( literal|\"a=true\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(741, 745)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 805,
        "line_str": "name|assertExpressionBooleanTrue argument_list|( literal|\"[]\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(874, 878)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 739,
        "line_str": "literal|\"!true\" argument_list|) expr_stmt|; name|assertExpressionBooleanTrue",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(811, 815)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 475,
        "line_str": "literal|\"'0'\" argument_list|) expr_stmt|; name|assertBooleanTrue",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(586, 590)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 381,
        "line_str": "name|Node name|trueNode init|= name|trySimpilifyUnusedResult",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(702, 706)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 740,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanTrue argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(811, 815)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 674,
        "line_str": "literal|\"a=true\" argument_list|) expr_stmt|; name|assertExpressionBooleanFalse",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(746, 750)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 476,
        "line_str": "argument_list|) expr_stmt|; name|assertBooleanTrue argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(586, 590)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 382,
        "line_str": "name|trueNode init|= name|trySimpilifyUnusedResult argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(702, 706)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 807,
        "line_str": "literal|\"[]\" argument_list|) expr_stmt|; name|assertExpressionBooleanFalse",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(879, 883)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 741,
        "line_str": "expr_stmt|; name|assertExpressionBooleanTrue argument_list|( literal|\"!false\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(811, 815)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 675,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanFalse argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(746, 750)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 477,
        "line_str": "expr_stmt|; name|assertBooleanTrue argument_list|( literal|\"/a/\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(586, 590)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 383,
        "line_str": "init|= name|trySimpilifyUnusedResult argument_list|( name|n",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(702, 706)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 808,
        "line_str": "argument_list|) expr_stmt|; name|assertExpressionBooleanFalse argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(879, 883)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 742,
        "line_str": "name|assertExpressionBooleanTrue argument_list|( literal|\"!false\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(811, 815)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 676,
        "line_str": "expr_stmt|; name|assertExpressionBooleanFalse argument_list|( literal|\"a=false\"",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(746, 750)"
      },
      {
        "commit_hash": "e33e925eea3a8e4de958864e531e1adc4da62e18",
        "line_num": 478,
        "line_str": "name|assertBooleanTrue argument_list|( literal|\"/a/\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(586, 590)"
      },
      {
        "commit_hash": "48701cc70fde194c05ecd008fc1015b9d82921d1",
        "line_num": 384,
        "line_str": "name|trySimpilifyUnusedResult argument_list|( name|n operator|.",
        "file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java",
        "input_line_num": "range(702, 706)"
      }
    ]
  },
  {
    "id": 10021,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["e9a1cc9c431416354dec3dcb393affd7f41c6596"],
    "fix_commit_hash": "34e4616a924bf272c076039e143e20f1d792731e",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 100,
        "line_str": "operator|new name|CompilerPass argument_list|() block|{",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 150)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 992,
        "line_str": "argument_list|( literal|\"(function () {})();\" argument_list|, literal|\"\"",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(983, 996)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 117,
        "line_str": "name|SimpleDefinitionFinder name|definitionFinder init|= operator|new",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 150)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 51,
        "line_str": "init|= literal|\"/** @const */ var Math = {};\" operator|+ literal|\"/** @nosideeffects */ Math.random = function(){};\"",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(43, 58)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 18,
        "line_str": "package|; end_package  begin_import",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(18, 34)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 167,
        "line_str": "name|externs argument_list|, name|root argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(160, 174)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 134,
        "line_str": "expr_stmt|; operator|new name|PureFunctionIdentifier argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 150)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 101,
        "line_str": "name|CompilerPass argument_list|() block|{ annotation|@",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 150)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 993,
        "line_str": "literal|\"(function () {})();\" argument_list|, literal|\"\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(983, 996)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 118,
        "line_str": "name|definitionFinder init|= operator|new name|SimpleDefinitionFinder",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 150)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 52,
        "line_str": "literal|\"/** @const */ var Math = {};\" operator|+ literal|\"/** @nosideeffects */ Math.random = function(){};\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(43, 58)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 19,
        "line_str": "end_package  begin_import import|import",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(18, 34)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 168,
        "line_str": "argument_list|, name|root argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(160, 174)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 135,
        "line_str": "operator|new name|PureFunctionIdentifier argument_list|( name|compiler",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 150)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 102,
        "line_str": "argument_list|() block|{ annotation|@ name|Override",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 150)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 994,
        "line_str": "argument_list|, literal|\"\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(983, 996)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 119,
        "line_str": "init|= operator|new name|SimpleDefinitionFinder argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 150)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 53,
        "line_str": "operator|+ literal|\"/** @nosideeffects */ Math.random = function(){};\" operator|+ literal|\"/** @nosideeffects */ Math.sin = function(){};\"",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(43, 58)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 20,
        "line_str": "begin_import import|import name|com",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(18, 34)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 169,
        "line_str": "name|root argument_list|) expr_stmt|; block|}",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(160, 174)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 136,
        "line_str": "name|PureFunctionIdentifier argument_list|( name|compiler argument_list|,",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 150)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 103,
        "line_str": "block|{ annotation|@ name|Override specifier|public",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 150)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 995,
        "line_str": "literal|\"\" argument_list|) expr_stmt|; comment",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(983, 996)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 120,
        "line_str": "operator|new name|SimpleDefinitionFinder argument_list|( name|compiler",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 150)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 54,
        "line_str": "literal|\"/** @nosideeffects */ Math.random = function(){};\" operator|+ literal|\"/** @nosideeffects */ Math.sin = function(){};\" decl_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(43, 58)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 21,
        "line_str": "begin_import import|import name|com operator|.",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(18, 34)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 170,
        "line_str": "argument_list|) expr_stmt|; block|} block|}",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(160, 174)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 137,
        "line_str": "argument_list|( name|compiler argument_list|, name|definitionFinder",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 150)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 104,
        "line_str": "annotation|@ name|Override specifier|public name|void",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 150)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 121,
        "line_str": "name|SimpleDefinitionFinder argument_list|( name|compiler argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 150)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 55,
        "line_str": "operator|+ literal|\"/** @nosideeffects */ Math.sin = function(){};\" decl_stmt|; specifier|public",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(43, 58)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 22,
        "line_str": "import|import name|com operator|. name|google",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(18, 34)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 171,
        "line_str": "expr_stmt|; block|} block|} return|;",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(160, 174)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 138,
        "line_str": "name|compiler argument_list|, name|definitionFinder argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 150)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 105,
        "line_str": "name|Override specifier|public name|void name|process",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 150)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 122,
        "line_str": "argument_list|( name|compiler argument_list|) decl_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 150)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 56,
        "line_str": "literal|\"/** @nosideeffects */ Math.sin = function(){};\" decl_stmt|; specifier|public name|PeepholeRemoveDeadCodeTest",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(43, 58)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 23,
        "line_str": "name|com operator|. name|google operator|.",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(18, 34)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 172,
        "line_str": "block|} block|} return|; block|}",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(160, 174)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 139,
        "line_str": "argument_list|, name|definitionFinder argument_list|) operator|.",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 150)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 106,
        "line_str": "specifier|public name|void name|process parameter_list|(",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 150)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 123,
        "line_str": "name|compiler argument_list|) decl_stmt|; name|definitionFinder",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 150)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 57,
        "line_str": "decl_stmt|; specifier|public name|PeepholeRemoveDeadCodeTest parameter_list|()",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(43, 58)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 24,
        "line_str": "operator|. name|google operator|. name|javascript",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(18, 34)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 173,
        "line_str": "block|} return|; block|} annotation|@",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(160, 174)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 140,
        "line_str": "name|definitionFinder argument_list|) operator|. name|process",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 150)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 107,
        "line_str": "name|void name|process parameter_list|( name|Node",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 150)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 124,
        "line_str": "argument_list|) decl_stmt|; name|definitionFinder operator|.",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 150)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 25,
        "line_str": "name|google operator|. name|javascript operator|.",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(18, 34)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 983,
        "line_str": "expr_stmt|; name|foldSame argument_list|( literal|\"(function () { f(); })();\"",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(983, 996)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 141,
        "line_str": "argument_list|) operator|. name|process argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 150)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 108,
        "line_str": "name|process parameter_list|( name|Node name|externs",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 150)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 125,
        "line_str": "decl_stmt|; name|definitionFinder operator|. name|process",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 150)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 26,
        "line_str": "operator|. name|javascript operator|. name|rhino",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(18, 34)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 984,
        "line_str": "name|foldSame argument_list|( literal|\"(function () { f(); })();\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(983, 996)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 142,
        "line_str": "operator|. name|process argument_list|( name|externs",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 150)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 109,
        "line_str": "parameter_list|( name|Node name|externs parameter_list|,",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 150)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 43,
        "line_str": "extends|extends name|CompilerTestCase block|{ specifier|private",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(43, 58)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 3776,
        "line_str": "literal|false return|; block|} if|if",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(3776, 3778)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 126,
        "line_str": "name|definitionFinder operator|. name|process argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 150)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 27,
        "line_str": "name|javascript operator|. name|rhino operator|.",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(18, 34)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 985,
        "line_str": "argument_list|( literal|\"(function () { f(); })();\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(983, 996)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 143,
        "line_str": "name|process argument_list|( name|externs argument_list|,",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 150)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 110,
        "line_str": "name|Node name|externs parameter_list|, name|Node",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 150)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 44,
        "line_str": "name|CompilerTestCase block|{ specifier|private specifier|static",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(43, 58)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 3777,
        "line_str": "return|; block|} if|if condition|(",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(3776, 3778)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 160,
        "line_str": "argument_list|() argument_list|) decl_stmt|; name|peepholePass",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(160, 174)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 127,
        "line_str": "operator|. name|process argument_list|( name|externs",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 150)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 61,
        "line_str": "block|{ name|super argument_list|( name|MATH",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(61, 65)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 28,
        "line_str": "operator|. name|rhino operator|. name|Node",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(18, 34)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 986,
        "line_str": "literal|\"(function () { f(); })();\" argument_list|) expr_stmt|; comment",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(983, 996)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 144,
        "line_str": "argument_list|( name|externs argument_list|, name|root",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 150)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 111,
        "line_str": "name|externs parameter_list|, name|Node name|root",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 150)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 45,
        "line_str": "block|{ specifier|private specifier|static specifier|final",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(43, 58)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 161,
        "line_str": "argument_list|) decl_stmt|; name|peepholePass operator|.",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(160, 174)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 128,
        "line_str": "name|process argument_list|( name|externs argument_list|,",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 150)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 62,
        "line_str": "name|super argument_list|( name|MATH argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(61, 65)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 29,
        "line_str": "name|rhino operator|. name|Node import|;",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(18, 34)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 987,
        "line_str": "argument_list|) expr_stmt|; comment comment",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(983, 996)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 145,
        "line_str": "name|externs argument_list|, name|root argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 150)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 112,
        "line_str": "parameter_list|, name|Node name|root parameter_list|)",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 150)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 46,
        "line_str": "specifier|private specifier|static specifier|final name|String",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(43, 58)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 162,
        "line_str": "decl_stmt|; name|peepholePass operator|. name|process",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(160, 174)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 129,
        "line_str": "argument_list|( name|externs argument_list|, name|root",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 150)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 96,
        "line_str": "name|compiler parameter_list|) block|{ return|return",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 150)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 63,
        "line_str": "argument_list|( name|MATH argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(61, 65)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 30,
        "line_str": "operator|. name|Node import|; end_import",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(18, 34)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 988,
        "line_str": "expr_stmt|; comment comment name|fold",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(983, 996)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 146,
        "line_str": "argument_list|, name|root argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 150)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 113,
        "line_str": "name|Node name|root parameter_list|) block|{",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 150)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 47,
        "line_str": "specifier|static specifier|final name|String name|MATH",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(43, 58)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 163,
        "line_str": "name|peepholePass operator|. name|process argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(160, 174)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 130,
        "line_str": "name|externs argument_list|, name|root argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 150)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 97,
        "line_str": "parameter_list|) block|{ return|return operator|new",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 150)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 64,
        "line_str": "name|MATH argument_list|) expr_stmt|; block|}",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(61, 65)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 31,
        "line_str": "name|Node import|; end_import",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(18, 34)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 989,
        "line_str": "comment comment name|fold argument_list|(",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(983, 996)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 147,
        "line_str": "name|root argument_list|) expr_stmt|; name|PeepholeOptimizationsPass",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 150)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 114,
        "line_str": "name|root parameter_list|) block|{ name|SimpleDefinitionFinder",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 150)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 48,
        "line_str": "specifier|final name|String name|MATH init|=",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(43, 58)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 164,
        "line_str": "operator|. name|process argument_list|( name|externs",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(160, 174)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 131,
        "line_str": "argument_list|, name|root argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 150)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 98,
        "line_str": "block|{ return|return operator|new name|CompilerPass",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 150)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 32,
        "line_str": "import|; end_import  begin_comment",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(18, 34)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 990,
        "line_str": "comment name|fold argument_list|( literal|\"(function () {})();\"",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(983, 996)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 148,
        "line_str": "argument_list|) expr_stmt|; name|PeepholeOptimizationsPass name|peepholePass",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 150)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 115,
        "line_str": "parameter_list|) block|{ name|SimpleDefinitionFinder name|definitionFinder",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 150)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 49,
        "line_str": "name|String name|MATH init|= literal|\"/** @const */ var Math = {};\"",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(43, 58)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 165,
        "line_str": "name|process argument_list|( name|externs argument_list|,",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(160, 174)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 132,
        "line_str": "name|root argument_list|) expr_stmt|; operator|new",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 150)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 99,
        "line_str": "return|return operator|new name|CompilerPass argument_list|()",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 150)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 33,
        "line_str": "end_import  begin_comment comment",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(18, 34)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 991,
        "line_str": "name|fold argument_list|( literal|\"(function () {})();\" argument_list|,",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(983, 996)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 149,
        "line_str": "expr_stmt|; name|PeepholeOptimizationsPass name|peepholePass init|=",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 150)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 116,
        "line_str": "block|{ name|SimpleDefinitionFinder name|definitionFinder init|=",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 150)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 50,
        "line_str": "name|MATH init|= literal|\"/** @const */ var Math = {};\" operator|+",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(43, 58)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 166,
        "line_str": "argument_list|( name|externs argument_list|, name|root",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(160, 174)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 133,
        "line_str": "argument_list|) expr_stmt|; operator|new name|PureFunctionIdentifier",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(96, 150)"
      }
    ]
  },
  {
    "id": 10022,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["22a1fcd79bd2bfbfdc9e80d5162bdf19065f9e5e"],
    "fix_commit_hash": "b12d1d6489329c989b15635f6f7f06681b3f6582",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "22a1fcd79bd2bfbfdc9e80d5162bdf19065f9e5e",
        "line_num": 403,
        "line_str": "decl_stmt|; comment if|if condition|(",
        "file_path": "src/com/google/javascript/jscomp/LightweightMessageFormatter.java",
        "input_file_path": "src/com/google/javascript/jscomp/LightweightMessageFormatter.java",
        "input_line_num": "range(402, 404)"
      },
      {
        "commit_hash": "22a1fcd79bd2bfbfdc9e80d5162bdf19065f9e5e",
        "line_num": 402,
        "line_str": "argument_list|() decl_stmt|; comment if|if",
        "file_path": "src/com/google/javascript/jscomp/LightweightMessageFormatter.java",
        "input_file_path": "src/com/google/javascript/jscomp/LightweightMessageFormatter.java",
        "input_line_num": "range(402, 404)"
      },
      {
        "commit_hash": "22a1fcd79bd2bfbfdc9e80d5162bdf19065f9e5e",
        "line_num": 419,
        "line_str": "operator|< name|sourceExcerpt operator|. name|length",
        "file_path": "src/com/google/javascript/jscomp/LightweightMessageFormatter.java",
        "input_file_path": "src/com/google/javascript/jscomp/LightweightMessageFormatter.java",
        "input_line_num": "range(416, 420)"
      },
      {
        "commit_hash": "22a1fcd79bd2bfbfdc9e80d5162bdf19065f9e5e",
        "line_num": 418,
        "line_str": "name|charno operator|< name|sourceExcerpt operator|.",
        "file_path": "src/com/google/javascript/jscomp/LightweightMessageFormatter.java",
        "input_file_path": "src/com/google/javascript/jscomp/LightweightMessageFormatter.java",
        "input_line_num": "range(416, 420)"
      },
      {
        "commit_hash": "22a1fcd79bd2bfbfdc9e80d5162bdf19065f9e5e",
        "line_num": 417,
        "line_str": "operator|&& name|charno operator|< name|sourceExcerpt",
        "file_path": "src/com/google/javascript/jscomp/LightweightMessageFormatter.java",
        "input_file_path": "src/com/google/javascript/jscomp/LightweightMessageFormatter.java",
        "input_line_num": "range(416, 420)"
      },
      {
        "commit_hash": "22a1fcd79bd2bfbfdc9e80d5162bdf19065f9e5e",
        "line_num": 416,
        "line_str": "name|charno operator|&& name|charno operator|<",
        "file_path": "src/com/google/javascript/jscomp/LightweightMessageFormatter.java",
        "input_file_path": "src/com/google/javascript/jscomp/LightweightMessageFormatter.java",
        "input_line_num": "range(416, 420)"
      }
    ]
  },
  {
    "id": 10023,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["75a9013e3907e5db97f10578227497d7b018caf5"],
    "fix_commit_hash": "de726510af4329fb8eeb8a54b2d93d8d37c87545",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "524c758183be741ff1519acfa8a4bf714dd2c4cd",
        "line_num": 5818,
        "line_str": "name|setTagAsStrict argument_list|( name|options operator|.",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(5934, 5937)"
      },
      {
        "commit_hash": "524c758183be741ff1519acfa8a4bf714dd2c4cd",
        "line_num": 5817,
        "line_str": "operator|. name|setTagAsStrict argument_list|( name|options",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(5934, 5937)"
      },
      {
        "commit_hash": "e829dafb9b3365bda6b6bb80f5fa97783752d143",
        "line_num": 5204,
        "line_str": "literal|null argument_list|) return|; block|}",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(5868, 5871)"
      },
      {
        "commit_hash": "e829dafb9b3365bda6b6bb80f5fa97783752d143",
        "line_num": 5139,
        "line_str": "name|sourceMap argument_list|) decl_stmt|; if|if",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(5750, 5753)"
      },
      {
        "commit_hash": "e829dafb9b3365bda6b6bb80f5fa97783752d143",
        "line_num": 5138,
        "line_str": "argument_list|, name|sourceMap argument_list|) decl_stmt|;",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(5750, 5753)"
      },
      {
        "commit_hash": "e829dafb9b3365bda6b6bb80f5fa97783752d143",
        "line_num": 5137,
        "line_str": "name|root argument_list|, name|sourceMap argument_list|)",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(5750, 5753)"
      },
      {
        "commit_hash": "e829dafb9b3365bda6b6bb80f5fa97783752d143",
        "line_num": 5202,
        "line_str": "name|n argument_list|, literal|null argument_list|)",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(5868, 5871)"
      },
      {
        "commit_hash": "e829dafb9b3365bda6b6bb80f5fa97783752d143",
        "line_num": 5203,
        "line_str": "argument_list|, literal|null argument_list|) return|;",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(5868, 5871)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 4657,
        "line_str": "argument_list|) expr_stmt|; block|} name|String",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(5742, 5745)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 4658,
        "line_str": "expr_stmt|; block|} name|String name|code",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(5742, 5745)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 4659,
        "line_str": "block|} name|String name|code init|=",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(5742, 5745)"
      },
      {
        "commit_hash": "e829dafb9b3365bda6b6bb80f5fa97783752d143",
        "line_num": 5217,
        "line_str": "name|sourceMap parameter_list|) block|{ name|CodePrinter",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(5881, 5884)"
      },
      {
        "commit_hash": "e829dafb9b3365bda6b6bb80f5fa97783752d143",
        "line_num": 5216,
        "line_str": "name|SourceMap name|sourceMap parameter_list|) block|{",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(5881, 5884)"
      },
      {
        "commit_hash": "e829dafb9b3365bda6b6bb80f5fa97783752d143",
        "line_num": 5215,
        "line_str": "parameter_list|, name|SourceMap name|sourceMap parameter_list|)",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(5881, 5884)"
      },
      {
        "commit_hash": "524c758183be741ff1519acfa8a4bf714dd2c4cd",
        "line_num": 5819,
        "line_str": "argument_list|( name|options operator|. name|getLanguageOut",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(5934, 5937)"
      }
    ]
  },
  {
    "id": 10024,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"],
    "fix_commit_hash": "48aea0ff7d027507362007415963a4b662fb10a7",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "b88400ce0e9c1a0dadfd3417c256b02a82f38fe1",
        "line_num": 4580,
        "line_str": "literal|\"\\\\0\" argument_list|) expr_stmt|; break|break;",
        "file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_line_num": "range(4814, 4818)"
      },
      {
        "commit_hash": "b88400ce0e9c1a0dadfd3417c256b02a82f38fe1",
        "line_num": 4579,
        "line_str": "argument_list|( literal|\"\\\\0\" argument_list|) expr_stmt|;",
        "file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_line_num": "range(4814, 4818)"
      },
      {
        "commit_hash": "b88400ce0e9c1a0dadfd3417c256b02a82f38fe1",
        "line_num": 4578,
        "line_str": "name|append argument_list|( literal|\"\\\\0\" argument_list|)",
        "file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_line_num": "range(4814, 4818)"
      },
      {
        "commit_hash": "b88400ce0e9c1a0dadfd3417c256b02a82f38fe1",
        "line_num": 4577,
        "line_str": "operator|. name|append argument_list|( literal|\"\\\\0\"",
        "file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_line_num": "range(4814, 4818)"
      },
      {
        "commit_hash": "b88400ce0e9c1a0dadfd3417c256b02a82f38fe1",
        "line_num": 4316,
        "line_str": "literal|\"var x=\\\"\\\\0\\\"\" argument_list|) expr_stmt|; block|}",
        "file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_line_num": "range(4475, 4479)"
      },
      {
        "commit_hash": "b88400ce0e9c1a0dadfd3417c256b02a82f38fe1",
        "line_num": 4315,
        "line_str": "argument_list|, literal|\"var x=\\\"\\\\0\\\"\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_line_num": "range(4475, 4479)"
      },
      {
        "commit_hash": "b88400ce0e9c1a0dadfd3417c256b02a82f38fe1",
        "line_num": 4314,
        "line_str": "literal|\"var x ='\\\\u0000';\" argument_list|, literal|\"var x=\\\"\\\\0\\\"\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_line_num": "range(4475, 4479)"
      },
      {
        "commit_hash": "b88400ce0e9c1a0dadfd3417c256b02a82f38fe1",
        "line_num": 4313,
        "line_str": "argument_list|( literal|\"var x ='\\\\u0000';\" argument_list|, literal|\"var x=\\\"\\\\0\\\"\"",
        "file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_line_num": "range(4475, 4479)"
      },
      {
        "commit_hash": "b88400ce0e9c1a0dadfd3417c256b02a82f38fe1",
        "line_num": 4309,
        "line_str": "literal|\"var x=\\\"\\\\0\\\"\" argument_list|) expr_stmt|; name|assertPrint",
        "file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_line_num": "range(4468, 4472)"
      },
      {
        "commit_hash": "b88400ce0e9c1a0dadfd3417c256b02a82f38fe1",
        "line_num": 4308,
        "line_str": "argument_list|, literal|\"var x=\\\"\\\\0\\\"\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_line_num": "range(4468, 4472)"
      },
      {
        "commit_hash": "b88400ce0e9c1a0dadfd3417c256b02a82f38fe1",
        "line_num": 4307,
        "line_str": "literal|\"var x ='\\\\x00';\" argument_list|, literal|\"var x=\\\"\\\\0\\\"\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_line_num": "range(4468, 4472)"
      },
      {
        "commit_hash": "b88400ce0e9c1a0dadfd3417c256b02a82f38fe1",
        "line_num": 4306,
        "line_str": "argument_list|( literal|\"var x ='\\\\x00';\" argument_list|, literal|\"var x=\\\"\\\\0\\\"\"",
        "file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_line_num": "range(4468, 4472)"
      },
      {
        "commit_hash": "b88400ce0e9c1a0dadfd3417c256b02a82f38fe1",
        "line_num": 4302,
        "line_str": "literal|\"var x=\\\"\\\\0\\\"\" argument_list|) expr_stmt|; name|assertPrint",
        "file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_line_num": "range(4461, 4465)"
      },
      {
        "commit_hash": "b88400ce0e9c1a0dadfd3417c256b02a82f38fe1",
        "line_num": 4301,
        "line_str": "argument_list|, literal|\"var x=\\\"\\\\0\\\"\" argument_list|) expr_stmt|;",
        "file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_line_num": "range(4461, 4465)"
      },
      {
        "commit_hash": "b88400ce0e9c1a0dadfd3417c256b02a82f38fe1",
        "line_num": 4300,
        "line_str": "literal|\"var x ='\\\\0';\" argument_list|, literal|\"var x=\\\"\\\\0\\\"\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_line_num": "range(4461, 4465)"
      },
      {
        "commit_hash": "b88400ce0e9c1a0dadfd3417c256b02a82f38fe1",
        "line_num": 4299,
        "line_str": "argument_list|( literal|\"var x ='\\\\0';\" argument_list|, literal|\"var x=\\\"\\\\0\\\"\"",
        "file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_line_num": "range(4461, 4465)"
      }
    ]
  },
  {
    "id": 10025,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["70f817ae4f80ac11dd2dfe97babf5896c690fb48"],
    "fix_commit_hash": "59a30b48325cccadabae8687fdf603d72e26c157",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "70f817ae4f80ac11dd2dfe97babf5896c690fb48",
        "line_num": 2032,
        "line_str": "argument_list|) expr_stmt|; block|} break|break;",
        "file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_line_num": "range(2068, 2069)"
      }
    ]
  },
  {
    "id": 10026,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["5709ec1d0bbe5b7726a14d06f7eab9c35150e314"],
    "fix_commit_hash": "9d5a6e3082dd99f6c44df1b3526b9e83b79aa7da",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 3652,
        "line_str": "block|} continue|continue name|retry continue|;",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(3878, 3882)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 3651,
        "line_str": "expr_stmt|; block|} continue|continue name|retry",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(3878, 3882)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 3650,
        "line_str": "argument_list|() expr_stmt|; block|} continue|continue",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(3878, 3882)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 3649,
        "line_str": "name|eatTokensUntilEOL argument_list|() expr_stmt|; block|}",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(3878, 3882)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 6043,
        "line_str": "return|; block|} block|} return|return",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(6737, 6740)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 3645,
        "line_str": "break|break; block|} name|token operator|=",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(3873, 3875)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 3644,
        "line_str": "block|} break|break; block|} name|token",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(3873, 3875)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 6171,
        "line_str": "name|LP condition|) block|{ return|return",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(6919, 6922)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 6044,
        "line_str": "block|} block|} return|return name|reportGenericTypeSyntaxWarning",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(6737, 6740)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 6045,
        "line_str": "block|} return|return name|reportGenericTypeSyntaxWarning argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(6737, 6740)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 6172,
        "line_str": "condition|) block|{ return|return name|reportTypeSyntaxWarning",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(6919, 6922)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 6173,
        "line_str": "block|{ return|return name|reportTypeSyntaxWarning argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(6919, 6922)"
      }
    ]
  },
  {
    "id": 10027,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["847b296c23a63aa0a0b38cc3e63883e1688288e3"],
    "fix_commit_hash": "ee8344091722c28c9351e78dcb4155fbfddfd1af",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "847b296c23a63aa0a0b38cc3e63883e1688288e3",
        "line_num": 3967,
        "line_str": "operator|<= literal|0x7f condition|) block|{",
        "file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_line_num": "range(5022, 5026)"
      },
      {
        "commit_hash": "847b296c23a63aa0a0b38cc3e63883e1688288e3",
        "line_num": 3966,
        "line_str": "name|c operator|<= literal|0x7f condition|)",
        "file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_line_num": "range(5022, 5026)"
      },
      {
        "commit_hash": "847b296c23a63aa0a0b38cc3e63883e1688288e3",
        "line_num": 3965,
        "line_str": "operator|&& name|c operator|<= literal|0x7f",
        "file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_line_num": "range(5022, 5026)"
      },
      {
        "commit_hash": "847b296c23a63aa0a0b38cc3e63883e1688288e3",
        "line_num": 3964,
        "line_str": "literal|0x1f operator|&& name|c operator|<=",
        "file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_line_num": "range(5022, 5026)"
      }
    ]
  },
  {
    "id": 10028,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"],
    "fix_commit_hash": "03fee32a06ccf8257b2da67b9034270be38805ae",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
        "line_num": 3291,
        "line_str": "operator|. name|getType argument_list|() operator|==",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4229, 4241)"
      },
      {
        "commit_hash": "9925370292834ea846727f1f9db76af0d40261df",
        "line_num": 1970,
        "line_str": "name|fold argument_list|( literal|\"x = true == true\" argument_list|,",
        "file_path": "test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java",
        "input_line_num": "range(2931, 2935)"
      },
      {
        "commit_hash": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
        "line_num": 3320,
        "line_str": "name|getType argument_list|() expr_stmt|; break|break;",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4252, 4263)"
      },
      {
        "commit_hash": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
        "line_num": 3287,
        "line_str": "case|: name|result operator|= name|left",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4229, 4241)"
      },
      {
        "commit_hash": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
        "line_num": 3316,
        "line_str": "argument_list|() operator|!= name|right operator|.",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4252, 4263)"
      },
      {
        "commit_hash": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
        "line_num": 3312,
        "line_str": "operator|= name|left operator|. name|getType",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4252, 4263)"
      },
      {
        "commit_hash": "9925370292834ea846727f1f9db76af0d40261df",
        "line_num": 2247,
        "line_str": "argument_list|( literal|\"x = true === true\" argument_list|, literal|\"x = true\"",
        "file_path": "test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java",
        "input_line_num": "range(3207, 3211)"
      },
      {
        "commit_hash": "510ff24ac51a8c73ff3f2401379654c37a00546b",
        "line_num": 3341,
        "line_str": "name|int name|rhType init|= name|right",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4179, 4184)"
      },
      {
        "commit_hash": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
        "line_num": 3039,
        "line_str": "decl_stmt|; switch|switch condition|( name|left",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4092, 4101)"
      },
      {
        "commit_hash": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
        "line_num": 3238,
        "line_str": "operator|. name|getType argument_list|() decl_stmt|;",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4184, 4189)"
      },
      {
        "commit_hash": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
        "line_num": 3044,
        "line_str": "name|getType argument_list|() condition|) block|{",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4092, 4101)"
      },
      {
        "commit_hash": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
        "line_num": 3296,
        "line_str": "operator|. name|getType argument_list|() expr_stmt|;",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4229, 4241)"
      },
      {
        "commit_hash": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
        "line_num": 3040,
        "line_str": "switch|switch condition|( name|left operator|.",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4092, 4101)"
      },
      {
        "commit_hash": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
        "line_num": 3292,
        "line_str": "name|getType argument_list|() operator|== name|right",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4229, 4241)"
      },
      {
        "commit_hash": "9925370292834ea846727f1f9db76af0d40261df",
        "line_num": 1971,
        "line_str": "argument_list|( literal|\"x = true == true\" argument_list|, literal|\"x = true\"",
        "file_path": "test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java",
        "input_line_num": "range(2931, 2935)"
      },
      {
        "commit_hash": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
        "line_num": 3288,
        "line_str": "name|result operator|= name|left operator|.",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4229, 4241)"
      },
      {
        "commit_hash": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
        "line_num": 3317,
        "line_str": "operator|!= name|right operator|. name|getType",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4252, 4263)"
      },
      {
        "commit_hash": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
        "line_num": 3313,
        "line_str": "name|left operator|. name|getType argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4252, 4263)"
      },
      {
        "commit_hash": "9925370292834ea846727f1f9db76af0d40261df",
        "line_num": 2248,
        "line_str": "literal|\"x = true === true\" argument_list|, literal|\"x = true\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java",
        "input_line_num": "range(3207, 3211)"
      },
      {
        "commit_hash": "510ff24ac51a8c73ff3f2401379654c37a00546b",
        "line_num": 3342,
        "line_str": "name|rhType init|= name|right operator|.",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4179, 4184)"
      },
      {
        "commit_hash": "510ff24ac51a8c73ff3f2401379654c37a00546b",
        "line_num": 3338,
        "line_str": "expr_stmt|; break|break; block|} name|int",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4179, 4184)"
      },
      {
        "commit_hash": "eaaa156632369f88e9667f55c7761cef8367cf57",
        "line_num": 3487,
        "line_str": "argument_list|, literal|\"false\" argument_list|, literal|\"0\"",
        "file_path": "test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java",
        "input_line_num": "range(4831, 4833)"
      },
      {
        "commit_hash": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
        "line_num": 3239,
        "line_str": "name|getType argument_list|() decl_stmt|; if|if",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4184, 4189)"
      },
      {
        "commit_hash": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
        "line_num": 3045,
        "line_str": "argument_list|() condition|) block|{ case|case",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4092, 4101)"
      },
      {
        "commit_hash": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
        "line_num": 3041,
        "line_str": "condition|( name|left operator|. name|getType",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4092, 4101)"
      },
      {
        "commit_hash": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
        "line_num": 3297,
        "line_str": "name|getType argument_list|() expr_stmt|; break|break;",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4229, 4241)"
      },
      {
        "commit_hash": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
        "line_num": 3037,
        "line_str": "operator|) operator|) decl_stmt|; switch|switch",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4092, 4101)"
      },
      {
        "commit_hash": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
        "line_num": 3293,
        "line_str": "argument_list|() operator|== name|right operator|.",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4229, 4241)"
      },
      {
        "commit_hash": "9925370292834ea846727f1f9db76af0d40261df",
        "line_num": 1972,
        "line_str": "literal|\"x = true == true\" argument_list|, literal|\"x = true\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java",
        "input_line_num": "range(2931, 2935)"
      },
      {
        "commit_hash": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
        "line_num": 3289,
        "line_str": "operator|= name|left operator|. name|getType",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4229, 4241)"
      },
      {
        "commit_hash": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
        "line_num": 3318,
        "line_str": "name|right operator|. name|getType argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4252, 4263)"
      },
      {
        "commit_hash": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
        "line_num": 3314,
        "line_str": "operator|. name|getType argument_list|() operator|!=",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4252, 4263)"
      },
      {
        "commit_hash": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
        "line_num": 3310,
        "line_str": "case|: name|result operator|= name|left",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4252, 4263)"
      },
      {
        "commit_hash": "9925370292834ea846727f1f9db76af0d40261df",
        "line_num": 2245,
        "line_str": "expr_stmt|; name|fold argument_list|( literal|\"x = true === true\"",
        "file_path": "test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java",
        "input_line_num": "range(3207, 3211)"
      },
      {
        "commit_hash": "510ff24ac51a8c73ff3f2401379654c37a00546b",
        "line_num": 3339,
        "line_str": "break|break; block|} name|int name|rhType",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4179, 4184)"
      },
      {
        "commit_hash": "eaaa156632369f88e9667f55c7761cef8367cf57",
        "line_num": 3488,
        "line_str": "literal|\"false\" argument_list|, literal|\"0\" argument_list|,",
        "file_path": "test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java",
        "input_line_num": "range(4831, 4833)"
      },
      {
        "commit_hash": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
        "line_num": 3240,
        "line_str": "argument_list|() decl_stmt|; if|if condition|(",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4184, 4189)"
      },
      {
        "commit_hash": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
        "line_num": 3236,
        "line_str": "init|= name|right operator|. name|getType",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4184, 4189)"
      },
      {
        "commit_hash": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
        "line_num": 3042,
        "line_str": "name|left operator|. name|getType argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4092, 4101)"
      },
      {
        "commit_hash": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
        "line_num": 3298,
        "line_str": "argument_list|() expr_stmt|; break|break; case|case",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4229, 4241)"
      },
      {
        "commit_hash": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
        "line_num": 3038,
        "line_str": "operator|) decl_stmt|; switch|switch condition|(",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4092, 4101)"
      },
      {
        "commit_hash": "510ff24ac51a8c73ff3f2401379654c37a00546b",
        "line_num": 3422,
        "line_str": "argument_list|() expr_stmt|; break|break; case|case",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4263, 4264)"
      },
      {
        "commit_hash": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
        "line_num": 3294,
        "line_str": "operator|== name|right operator|. name|getType",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4229, 4241)"
      },
      {
        "commit_hash": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
        "line_num": 3290,
        "line_str": "name|left operator|. name|getType argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4229, 4241)"
      },
      {
        "commit_hash": "9925370292834ea846727f1f9db76af0d40261df",
        "line_num": 1969,
        "line_str": "expr_stmt|; name|fold argument_list|( literal|\"x = true == true\"",
        "file_path": "test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java",
        "input_line_num": "range(2931, 2935)"
      },
      {
        "commit_hash": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
        "line_num": 3319,
        "line_str": "operator|. name|getType argument_list|() expr_stmt|;",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4252, 4263)"
      },
      {
        "commit_hash": "510ff24ac51a8c73ff3f2401379654c37a00546b",
        "line_num": 3348,
        "line_str": "decl_stmt|; if|if condition|( name|rhType",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4189, 4190)"
      },
      {
        "commit_hash": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
        "line_num": 3315,
        "line_str": "name|getType argument_list|() operator|!= name|right",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4252, 4263)"
      },
      {
        "commit_hash": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
        "line_num": 3311,
        "line_str": "name|result operator|= name|left operator|.",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4252, 4263)"
      },
      {
        "commit_hash": "9925370292834ea846727f1f9db76af0d40261df",
        "line_num": 2246,
        "line_str": "name|fold argument_list|( literal|\"x = true === true\" argument_list|,",
        "file_path": "test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java",
        "input_line_num": "range(3207, 3211)"
      },
      {
        "commit_hash": "510ff24ac51a8c73ff3f2401379654c37a00546b",
        "line_num": 3340,
        "line_str": "block|} name|int name|rhType init|=",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4179, 4184)"
      },
      {
        "commit_hash": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
        "line_num": 3237,
        "line_str": "name|right operator|. name|getType argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4184, 4189)"
      },
      {
        "commit_hash": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
        "line_num": 3043,
        "line_str": "operator|. name|getType argument_list|() condition|)",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4092, 4101)"
      },
      {
        "commit_hash": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
        "line_num": 3295,
        "line_str": "name|right operator|. name|getType argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(4229, 4241)"
      }
    ]
  },
  {
    "id": 10029,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["fe64e87cccd2c38524c0b36c49beb4c988d1453a"],
    "fix_commit_hash": "78b01c3a435cd175ce3ee70f97b2f8faac342cdc",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "6a17da87f9e132bdc147b33223826da040c77a6b",
        "line_num": 1570,
        "line_str": "condition|) block|{ comment name|VariableLiveness",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1569, 1573)"
      },
      {
        "commit_hash": "6a17da87f9e132bdc147b33223826da040c77a6b",
        "line_num": 1537,
        "line_str": "block|} comment for|for control|(",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1535, 1538)"
      },
      {
        "commit_hash": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
        "line_num": 1025,
        "line_str": "argument_list|, name|variable argument_list|) decl_stmt|;",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1365, 1369)"
      },
      {
        "commit_hash": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
        "line_num": 1054,
        "line_str": "return|; block|} block|} block|}",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1393, 1397)"
      },
      {
        "commit_hash": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
        "line_num": 1017,
        "line_str": "condition|) block|{ name|VariableLiveness name|state",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1345, 1359)"
      },
      {
        "commit_hash": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
        "line_num": 984,
        "line_str": "condition|) block|{ for|for control|(",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1323, 1326)"
      },
      {
        "commit_hash": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
        "line_num": 1174,
        "line_str": "name|isEnteringNewCfgNode argument_list|( name|child argument_list|)",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1558, 1569)"
      },
      {
        "commit_hash": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
        "line_num": 1013,
        "line_str": "name|isEnteringNewCfgNode argument_list|( name|sibling argument_list|)",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1345, 1359)"
      },
      {
        "commit_hash": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
        "line_num": 1170,
        "line_str": "condition|( operator|! name|ControlFlowGraph operator|.",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1558, 1569)"
      },
      {
        "commit_hash": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
        "line_num": 1009,
        "line_str": "condition|( operator|! name|ControlFlowGraph operator|.",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1345, 1359)"
      },
      {
        "commit_hash": "6a17da87f9e132bdc147b33223826da040c77a6b",
        "line_num": 1360,
        "line_str": "name|state init|= name|isVariableReadBeforeKill argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1359, 1362)"
      },
      {
        "commit_hash": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
        "line_num": 1166,
        "line_str": "argument_list|() control|) block|{ if|if",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1558, 1569)"
      },
      {
        "commit_hash": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
        "line_num": 1005,
        "line_str": "argument_list|() control|) block|{ if|if",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1345, 1359)"
      },
      {
        "commit_hash": "6a17da87f9e132bdc147b33223826da040c77a6b",
        "line_num": 1396,
        "line_str": "block|} specifier|public name|void name|testInExpression",
        "file_path": "test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java",
        "input_line_num": "range(1396, 1400)"
      },
      {
        "commit_hash": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
        "line_num": 1096,
        "line_str": "block|{ if|if condition|( name|NodeUtil",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1436, 1437)"
      },
      {
        "commit_hash": "6a17da87f9e132bdc147b33223826da040c77a6b",
        "line_num": 1571,
        "line_str": "block|{ comment name|VariableLiveness name|state",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1569, 1573)"
      },
      {
        "commit_hash": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
        "line_num": 1026,
        "line_str": "name|variable argument_list|) decl_stmt|; comment",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1365, 1369)"
      },
      {
        "commit_hash": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
        "line_num": 1055,
        "line_str": "block|} block|} block|} name|n",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1393, 1397)"
      },
      {
        "commit_hash": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
        "line_num": 1018,
        "line_str": "block|{ name|VariableLiveness name|state init|=",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1345, 1359)"
      },
      {
        "commit_hash": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
        "line_num": 985,
        "line_str": "block|{ for|for control|( name|Node",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1323, 1326)"
      },
      {
        "commit_hash": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
        "line_num": 1175,
        "line_str": "argument_list|( name|child argument_list|) condition|)",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1558, 1569)"
      },
      {
        "commit_hash": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
        "line_num": 1014,
        "line_str": "argument_list|( name|sibling argument_list|) condition|)",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1345, 1359)"
      },
      {
        "commit_hash": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
        "line_num": 1171,
        "line_str": "operator|! name|ControlFlowGraph operator|. name|isEnteringNewCfgNode",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1558, 1569)"
      },
      {
        "commit_hash": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
        "line_num": 1010,
        "line_str": "operator|! name|ControlFlowGraph operator|. name|isEnteringNewCfgNode",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1345, 1359)"
      },
      {
        "commit_hash": "6a17da87f9e132bdc147b33223826da040c77a6b",
        "line_num": 1361,
        "line_str": "init|= name|isVariableReadBeforeKill argument_list|( name|sibling",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1359, 1362)"
      },
      {
        "commit_hash": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
        "line_num": 1167,
        "line_str": "control|) block|{ if|if condition|(",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1558, 1569)"
      },
      {
        "commit_hash": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
        "line_num": 1006,
        "line_str": "control|) block|{ if|if condition|(",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1345, 1359)"
      },
      {
        "commit_hash": "6a17da87f9e132bdc147b33223826da040c77a6b",
        "line_num": 1397,
        "line_str": "specifier|public name|void name|testInExpression parameter_list|()",
        "file_path": "test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java",
        "input_line_num": "range(1396, 1400)"
      },
      {
        "commit_hash": "6a17da87f9e132bdc147b33223826da040c77a6b",
        "line_num": 1572,
        "line_str": "comment name|VariableLiveness name|state init|=",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1569, 1573)"
      },
      {
        "commit_hash": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
        "line_num": 1027,
        "line_str": "argument_list|) decl_stmt|; comment if|if",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1365, 1369)"
      },
      {
        "commit_hash": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
        "line_num": 1056,
        "line_str": "block|} block|} name|n operator|=",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1393, 1397)"
      },
      {
        "commit_hash": "6a17da87f9e132bdc147b33223826da040c77a6b",
        "line_num": 1535,
        "line_str": "return|; block|} block|} comment",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1535, 1538)"
      },
      {
        "commit_hash": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
        "line_num": 1209,
        "line_str": "return|; block|} block|} end_class",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1602, 1603)"
      },
      {
        "commit_hash": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
        "line_num": 1176,
        "line_str": "name|child argument_list|) condition|) block|{",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1558, 1569)"
      },
      {
        "commit_hash": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
        "line_num": 1015,
        "line_str": "name|sibling argument_list|) condition|) block|{",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1345, 1359)"
      },
      {
        "commit_hash": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
        "line_num": 1172,
        "line_str": "name|ControlFlowGraph operator|. name|isEnteringNewCfgNode argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1558, 1569)"
      },
      {
        "commit_hash": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
        "line_num": 1011,
        "line_str": "name|ControlFlowGraph operator|. name|isEnteringNewCfgNode argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1345, 1359)"
      },
      {
        "commit_hash": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
        "line_num": 1168,
        "line_str": "block|{ if|if condition|( operator|!",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1558, 1569)"
      },
      {
        "commit_hash": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
        "line_num": 1007,
        "line_str": "block|{ if|if condition|( operator|!",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1345, 1359)"
      },
      {
        "commit_hash": "6a17da87f9e132bdc147b33223826da040c77a6b",
        "line_num": 1398,
        "line_str": "name|void name|testInExpression parameter_list|() block|{",
        "file_path": "test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java",
        "input_line_num": "range(1396, 1400)"
      },
      {
        "commit_hash": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
        "line_num": 1028,
        "line_str": "decl_stmt|; comment if|if condition|(",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1365, 1369)"
      },
      {
        "commit_hash": "6a17da87f9e132bdc147b33223826da040c77a6b",
        "line_num": 1569,
        "line_str": "argument_list|) condition|) block|{ comment",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1569, 1573)"
      },
      {
        "commit_hash": "6a17da87f9e132bdc147b33223826da040c77a6b",
        "line_num": 1536,
        "line_str": "block|} block|} comment for|for",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1535, 1538)"
      },
      {
        "commit_hash": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
        "line_num": 1053,
        "line_str": "literal|false return|; block|} block|}",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1393, 1397)"
      },
      {
        "commit_hash": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
        "line_num": 1016,
        "line_str": "argument_list|) condition|) block|{ name|VariableLiveness",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1345, 1359)"
      },
      {
        "commit_hash": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
        "line_num": 983,
        "line_str": "name|exprRoot condition|) block|{ for|for",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1323, 1326)"
      },
      {
        "commit_hash": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
        "line_num": 1173,
        "line_str": "operator|. name|isEnteringNewCfgNode argument_list|( name|child",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1558, 1569)"
      },
      {
        "commit_hash": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
        "line_num": 1012,
        "line_str": "operator|. name|isEnteringNewCfgNode argument_list|( name|sibling",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1345, 1359)"
      },
      {
        "commit_hash": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
        "line_num": 1169,
        "line_str": "if|if condition|( operator|! name|ControlFlowGraph",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1558, 1569)"
      },
      {
        "commit_hash": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
        "line_num": 1008,
        "line_str": "if|if condition|( operator|! name|ControlFlowGraph",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1345, 1359)"
      },
      {
        "commit_hash": "6a17da87f9e132bdc147b33223826da040c77a6b",
        "line_num": 1359,
        "line_str": "name|VariableLiveness name|state init|= name|isVariableReadBeforeKill",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(1359, 1362)"
      },
      {
        "commit_hash": "6a17da87f9e132bdc147b33223826da040c77a6b",
        "line_num": 1399,
        "line_str": "name|testInExpression parameter_list|() block|{ name|inFunction",
        "file_path": "test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java",
        "input_line_num": "range(1396, 1400)"
      }
    ]
  },
  {
    "id": 10030,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["80ee905775eded2256972f3e762862fcf66f0095"],
    "fix_commit_hash": "6300a43566d4adcf8828128267808a8740edc835",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "9adfc8062e31dc6b9cd5614d4ba6f8ecd27d5c92",
        "line_num": 725,
        "line_str": "block|} block|} specifier|private name|void",
        "file_path": "src/com/google/javascript/jscomp/CollapseVariableDeclarations.java",
        "input_file_path": "src/com/google/javascript/jscomp/CollapseVariableDeclarations.java",
        "input_line_num": "range(706, 707)"
      },
      {
        "commit_hash": "9adfc8062e31dc6b9cd5614d4ba6f8ecd27d5c92",
        "line_num": 715,
        "line_str": "name|s operator|&& operator|! name|blacklistedVars",
        "file_path": "src/com/google/javascript/jscomp/CollapseVariableDeclarations.java",
        "input_file_path": "src/com/google/javascript/jscomp/CollapseVariableDeclarations.java",
        "input_line_num": "range(696, 697)"
      }
    ]
  },
  {
    "id": 10031,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["711b76ac1015234f86805f1735ff2c3da195f55c"],
    "fix_commit_hash": "58786c3f717fa506280127265cd68fedf17de0a9",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "711b76ac1015234f86805f1735ff2c3da195f55c",
        "line_num": 4163,
        "line_str": "name|NOT case|: return|return literal|true",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(5082, 5084)"
      },
      {
        "commit_hash": "711b76ac1015234f86805f1735ff2c3da195f55c",
        "line_num": 4162,
        "line_str": "operator|. name|NOT case|: return|return",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(5082, 5084)"
      }
    ]
  },
  {
    "id": 10032,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["8a76da206034045c555297e5069eb273d05fc6fb"],
    "fix_commit_hash": "a857aec27d79fc234fddd4a72c1215af0251b2d8",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "043a352c2e85815a90a1926d112902d924bab6c1",
        "line_num": 370,
        "line_str": "name|isNoResolvedType argument_list|() return|; block|}",
        "file_path": "src/com/google/javascript/rhino/jstype/JSType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/JSType.java",
        "input_line_num": "range(369, 371)"
      },
      {
        "commit_hash": "043a352c2e85815a90a1926d112902d924bab6c1",
        "line_num": 369,
        "line_str": "operator||| name|isNoResolvedType argument_list|() return|;",
        "file_path": "src/com/google/javascript/rhino/jstype/JSType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/JSType.java",
        "input_line_num": "range(369, 371)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 320,
        "line_str": "argument_list|() return|; block|} specifier|public",
        "file_path": "src/com/google/javascript/rhino/jstype/JSType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/JSType.java",
        "input_line_num": "range(371, 372)"
      }
    ]
  },
  {
    "id": 10033,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["2581851be3b2202bd48d4c76889b020f4cecebf6"],
    "fix_commit_hash": "21a2103d7fa5664ea324ef9ee25b4a8922e50955",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 774,
        "line_str": "argument_list|) return|; block|} else|else",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 706)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 708,
        "line_str": "operator|. name|getOutEdges argument_list|() decl_stmt|;",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 890,
        "line_str": "argument_list|( name|ControlFlowAnalysis operator|. name|computeFollowNode",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(801, 806)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 758,
        "line_str": "name|hasChildren argument_list|() condition|) block|{",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 706)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 725,
        "line_str": "name|outEdges operator|. name|get argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 692,
        "line_str": "operator|== literal|null condition|) block|{",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 775,
        "line_str": "return|; block|} else|else block|{",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 706)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 709,
        "line_str": "name|getOutEdges argument_list|() decl_stmt|; if|if",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 759,
        "line_str": "argument_list|() condition|) block|{ name|Node",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 706)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 726,
        "line_str": "operator|. name|get argument_list|( literal|0",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 693,
        "line_str": "literal|null condition|) block|{ name|List",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 776,
        "line_str": "block|} else|else block|{ return|return",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 706)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 710,
        "line_str": "argument_list|() decl_stmt|; if|if condition|(",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 760,
        "line_str": "condition|) block|{ name|Node name|first",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 706)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 727,
        "line_str": "name|get argument_list|( literal|0 argument_list|)",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 694,
        "line_str": "condition|) block|{ name|List argument_list|<",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 777,
        "line_str": "else|else block|{ return|return name|tryRemoveUnconditionalBranching",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 706)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 711,
        "line_str": "decl_stmt|; if|if condition|( name|outEdges",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 761,
        "line_str": "block|{ name|Node name|first init|=",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 706)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 728,
        "line_str": "argument_list|( literal|0 argument_list|) operator|.",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 695,
        "line_str": "block|{ name|List argument_list|< name|DiGraphEdge",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 778,
        "line_str": "block|{ return|return name|tryRemoveUnconditionalBranching argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 706)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 712,
        "line_str": "if|if condition|( name|outEdges operator|.",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 679,
        "line_str": "name|n return|; block|} comment",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 894,
        "line_str": "argument_list|( name|n argument_list|) argument_list|)",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(809, 812)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 762,
        "line_str": "name|Node name|first init|= name|n",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 706)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 729,
        "line_str": "literal|0 argument_list|) operator|. name|getDestination",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 696,
        "line_str": "name|List argument_list|< name|DiGraphEdge argument_list|<",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 779,
        "line_str": "return|return name|tryRemoveUnconditionalBranching argument_list|( name|ControlFlowAnalysis",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 706)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 713,
        "line_str": "condition|( name|outEdges operator|. name|size",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 680,
        "line_str": "return|; block|} comment comment",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 714,
        "line_str": "operator|+ literal|\"  switch (a) { case 'a':return; case 'b':return; case 'c':return }}\" argument_list|, literal|\"function foo() { switch (a) { case 'a': case 'b': case 'c': }}\"",
        "file_path": "test/com/google/javascript/jscomp/UnreachableCodeEliminationTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/UnreachableCodeEliminationTest.java",
        "input_line_num": "range(712, 714)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 895,
        "line_str": "name|n argument_list|) argument_list|) decl_stmt|;",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(809, 812)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 763,
        "line_str": "name|first init|= name|n operator|.",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 706)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 730,
        "line_str": "argument_list|) operator|. name|getDestination argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 697,
        "line_str": "argument_list|< name|DiGraphEdge argument_list|< name|Node",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 780,
        "line_str": "name|tryRemoveUnconditionalBranching argument_list|( name|ControlFlowAnalysis operator|.",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 706)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 714,
        "line_str": "name|outEdges operator|. name|size argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 681,
        "line_str": "block|} comment comment comment",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 715,
        "line_str": "literal|\"  switch (a) { case 'a':return; case 'b':return; case 'c':return }}\" argument_list|, literal|\"function foo() { switch (a) { case 'a': case 'b': case 'c': }}\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/UnreachableCodeEliminationTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/UnreachableCodeEliminationTest.java",
        "input_line_num": "range(712, 714)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 896,
        "line_str": "argument_list|) argument_list|) decl_stmt|; name|Node",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(809, 812)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 764,
        "line_str": "init|= name|n operator|. name|getFirstChild",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 706)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 731,
        "line_str": "operator|. name|getDestination argument_list|() operator|.",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 698,
        "line_str": "name|DiGraphEdge argument_list|< name|Node argument_list|,",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 781,
        "line_str": "argument_list|( name|ControlFlowAnalysis operator|. name|computeFollowNode",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 706)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 715,
        "line_str": "operator|. name|size argument_list|() operator|==",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 682,
        "line_str": "comment comment comment comment",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 765,
        "line_str": "name|n operator|. name|getFirstChild argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 706)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 732,
        "line_str": "name|getDestination argument_list|() operator|. name|getValue",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 699,
        "line_str": "argument_list|< name|Node argument_list|, name|Branch",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 782,
        "line_str": "name|ControlFlowAnalysis operator|. name|computeFollowNode argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 706)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 749,
        "line_str": "case|case name|Token operator|. name|BLOCK",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 706)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 716,
        "line_str": "name|size argument_list|() operator|== literal|1",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 683,
        "line_str": "comment comment comment if|if",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 766,
        "line_str": "operator|. name|getFirstChild argument_list|() decl_stmt|;",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 706)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 733,
        "line_str": "argument_list|() operator|. name|getValue argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 700,
        "line_str": "name|Node argument_list|, name|Branch argument_list|>",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 783,
        "line_str": "operator|. name|computeFollowNode argument_list|( name|n",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 706)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 750,
        "line_str": "name|Token operator|. name|BLOCK case|:",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 706)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 717,
        "line_str": "argument_list|() operator|== literal|1 condition|)",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 684,
        "line_str": "comment comment if|if condition|(",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 767,
        "line_str": "name|getFirstChild argument_list|() decl_stmt|; return|return",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 706)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 734,
        "line_str": "operator|. name|getValue argument_list|() argument_list|)",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 701,
        "line_str": "argument_list|, name|Branch argument_list|> argument_list|>",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 784,
        "line_str": "name|computeFollowNode argument_list|( name|n argument_list|)",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 706)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 751,
        "line_str": "operator|. name|BLOCK case|: if|if",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 706)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 718,
        "line_str": "operator|== literal|1 condition|) block|{",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 685,
        "line_str": "comment if|if condition|( name|n",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 768,
        "line_str": "argument_list|() decl_stmt|; return|return name|tryRemoveUnconditionalBranching",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 706)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 735,
        "line_str": "name|getValue argument_list|() argument_list|) return|;",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 702,
        "line_str": "name|Branch argument_list|> argument_list|> name|outEdges",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 785,
        "line_str": "argument_list|( name|n argument_list|) argument_list|)",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 706)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 752,
        "line_str": "name|BLOCK case|: if|if condition|(",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 706)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 719,
        "line_str": "literal|1 condition|) block|{ return|return",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 686,
        "line_str": "if|if condition|( name|n operator|.",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 769,
        "line_str": "decl_stmt|; return|return name|tryRemoveUnconditionalBranching argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 706)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 736,
        "line_str": "argument_list|() argument_list|) return|; block|}",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 703,
        "line_str": "argument_list|> argument_list|> name|outEdges init|=",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 786,
        "line_str": "name|n argument_list|) argument_list|) return|;",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 706)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 753,
        "line_str": "case|: if|if condition|( name|n",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 706)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 720,
        "line_str": "condition|) block|{ return|return name|tryRemoveUnconditionalBranching",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 687,
        "line_str": "condition|( name|n operator|. name|getParent",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 770,
        "line_str": "return|return name|tryRemoveUnconditionalBranching argument_list|( name|first",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 706)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 737,
        "line_str": "argument_list|) return|; block|} block|}",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 704,
        "line_str": "argument_list|> name|outEdges init|= name|gNode",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 705,
        "line_str": "argument_list|( literal|\"switch (a) { case 'a': break; case 'b': break; case 'c': break }\" argument_list|, literal|\"switch (a) { case 'a': case 'b': case 'c': }\"",
        "file_path": "test/com/google/javascript/jscomp/UnreachableCodeEliminationTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/UnreachableCodeEliminationTest.java",
        "input_line_num": "range(703, 705)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 886,
        "line_str": "name|Node name|fallThrough init|= name|tryRemoveUnconditionalBranching",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(801, 806)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 787,
        "line_str": "argument_list|) argument_list|) return|; block|}",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 706)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 754,
        "line_str": "if|if condition|( name|n operator|.",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 706)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 721,
        "line_str": "block|{ return|return name|tryRemoveUnconditionalBranching argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 688,
        "line_str": "name|n operator|. name|getParent argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 771,
        "line_str": "name|tryRemoveUnconditionalBranching argument_list|( name|first argument_list|)",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 706)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 738,
        "line_str": "return|; block|} block|} switch|switch",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 705,
        "line_str": "name|outEdges init|= name|gNode operator|.",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 706,
        "line_str": "literal|\"switch (a) { case 'a': break; case 'b': break; case 'c': break }\" argument_list|, literal|\"switch (a) { case 'a': case 'b': case 'c': }\" argument_list|)",
        "file_path": "test/com/google/javascript/jscomp/UnreachableCodeEliminationTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/UnreachableCodeEliminationTest.java",
        "input_line_num": "range(703, 705)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 887,
        "line_str": "name|fallThrough init|= name|tryRemoveUnconditionalBranching argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(801, 806)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 788,
        "line_str": "argument_list|) return|; block|} case|case",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 706)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 755,
        "line_str": "condition|( name|n operator|. name|hasChildren",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 706)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 722,
        "line_str": "return|return name|tryRemoveUnconditionalBranching argument_list|( name|outEdges",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 689,
        "line_str": "operator|. name|getParent argument_list|() operator|==",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 772,
        "line_str": "argument_list|( name|first argument_list|) return|;",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 706)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 739,
        "line_str": "block|} block|} switch|switch condition|(",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 706,
        "line_str": "init|= name|gNode operator|. name|getOutEdges",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 888,
        "line_str": "init|= name|tryRemoveUnconditionalBranching argument_list|( name|ControlFlowAnalysis",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(801, 806)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 789,
        "line_str": "return|; block|} case|case name|Token",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 706)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 756,
        "line_str": "name|n operator|. name|hasChildren argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 706)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 723,
        "line_str": "name|tryRemoveUnconditionalBranching argument_list|( name|outEdges operator|.",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 690,
        "line_str": "name|getParent argument_list|() operator|== literal|null",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 773,
        "line_str": "name|first argument_list|) return|; block|}",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 706)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 707,
        "line_str": "name|gNode operator|. name|getOutEdges argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 889,
        "line_str": "name|tryRemoveUnconditionalBranching argument_list|( name|ControlFlowAnalysis operator|.",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(801, 806)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 790,
        "line_str": "block|} case|case name|Token operator|.",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 706)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 757,
        "line_str": "operator|. name|hasChildren argument_list|() condition|)",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(664, 706)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 724,
        "line_str": "argument_list|( name|outEdges operator|. name|get",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 691,
        "line_str": "argument_list|() operator|== literal|null condition|)",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(594, 655)"
      }
    ]
  },
  {
    "id": 10034,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["82a9956c6337d2f5d4a94ebe624d64faa54d9182"],
    "fix_commit_hash": "7eb2d84de101a125d41d3a1157f4eed789ca4a0d",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 215,
        "line_str": "return|; block|} block|} if|if",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(286, 287)"
      }
    ]
  },
  {
    "id": 10035,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["5a3b4cb6b7e816aacd0ffd4c71e23da949fe360d"],
    "fix_commit_hash": "8980b60033b1c6853cbca593ec89d3d332adf7dc",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "5a3b4cb6b7e816aacd0ffd4c71e23da949fe360d",
        "line_num": 3590,
        "line_str": "name|indexOf argument_list|( literal|'.' argument_list|)",
        "file_path": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
        "input_file_path": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
        "input_line_num": "range(3587, 3591)"
      },
      {
        "commit_hash": "5a3b4cb6b7e816aacd0ffd4c71e23da949fe360d",
        "line_num": 3589,
        "line_str": "operator|. name|indexOf argument_list|( literal|'.'",
        "file_path": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
        "input_file_path": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
        "input_line_num": "range(3587, 3591)"
      },
      {
        "commit_hash": "5a3b4cb6b7e816aacd0ffd4c71e23da949fe360d",
        "line_num": 3588,
        "line_str": "name|namespace operator|. name|indexOf argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
        "input_file_path": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
        "input_line_num": "range(3587, 3591)"
      },
      {
        "commit_hash": "5a3b4cb6b7e816aacd0ffd4c71e23da949fe360d",
        "line_num": 3587,
        "line_str": "init|= name|namespace operator|. name|indexOf",
        "file_path": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
        "input_file_path": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
        "input_line_num": "range(3587, 3591)"
      }
    ]
  },
  {
    "id": 10036,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": ["6d00ac1a68612aade8a19d7ecc9b180f00ae5234"],
    "fix_commit_hash": "8aa879a4eeb18cfc8d13e6c843a32b7f41ccd516",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "0f655dc72070acbdcc5fe3a1aecf91c11955c37b",
        "line_num": 5412,
        "line_str": "annotation|@ name|Override specifier|protected name|Object",
        "file_path": "gen/com/google/javascript/jscomp/FunctionInformationMap.java",
        "input_file_path": "gen/com/google/javascript/jscomp/FunctionInformationMap.java",
        "input_line_num": "range(5410, 5413)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 326,
        "line_str": "argument_list|( literal|\".prototype.\" argument_list|) condition|)",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(368, 380)"
      },
      {
        "commit_hash": "0f655dc72070acbdcc5fe3a1aecf91c11955c37b",
        "line_num": 3422,
        "line_str": "return|; block|} annotation|@ name|Override",
        "file_path": "gen/com/google/javascript/jscomp/FunctionInformationMap.java",
        "input_file_path": "gen/com/google/javascript/jscomp/FunctionInformationMap.java",
        "input_line_num": "range(3422, 3425)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 322,
        "line_str": "operator|&& name|leftName operator|. name|contains",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(368, 380)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 289,
        "line_str": "if|if condition|( name|lhs operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(336, 343)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 318,
        "line_str": "condition|( name|leftName operator|!= literal|null",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(368, 380)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 285,
        "line_str": "operator|. name|GETPROP condition|) block|{",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(336, 343)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 314,
        "line_str": "name|getQualifiedName argument_list|() decl_stmt|; if|if",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(358, 367)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 310,
        "line_str": "name|leftName init|= name|lhs operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(358, 367)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 306,
        "line_str": "literal|false return|; block|} name|String",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(358, 367)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 327,
        "line_str": "literal|\".prototype.\" argument_list|) condition|) block|{",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(368, 380)"
      },
      {
        "commit_hash": "0f655dc72070acbdcc5fe3a1aecf91c11955c37b",
        "line_num": 3423,
        "line_str": "block|} annotation|@ name|Override specifier|protected",
        "file_path": "gen/com/google/javascript/jscomp/FunctionInformationMap.java",
        "input_file_path": "gen/com/google/javascript/jscomp/FunctionInformationMap.java",
        "input_line_num": "range(3422, 3425)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 323,
        "line_str": "name|leftName operator|. name|contains argument_list|(",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(368, 380)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 290,
        "line_str": "condition|( name|lhs operator|. name|getLastChild",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(336, 343)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 319,
        "line_str": "name|leftName operator|!= literal|null operator|&&",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(368, 380)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 286,
        "line_str": "name|GETPROP condition|) block|{ if|if",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(336, 343)"
      },
      {
        "commit_hash": "0f655dc72070acbdcc5fe3a1aecf91c11955c37b",
        "line_num": 979,
        "line_str": "return|; block|} annotation|@ name|Override",
        "file_path": "gen/com/google/javascript/jscomp/FunctionInformationMap.java",
        "input_file_path": "gen/com/google/javascript/jscomp/FunctionInformationMap.java",
        "input_line_num": "range(979, 982)"
      },
      {
        "commit_hash": "0f655dc72070acbdcc5fe3a1aecf91c11955c37b",
        "line_num": 892,
        "line_str": "return|; block|} annotation|@ name|Override",
        "file_path": "gen/com/google/javascript/jscomp/Instrumentation.java",
        "input_file_path": "gen/com/google/javascript/jscomp/Instrumentation.java",
        "input_line_num": "range(892, 895)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 311,
        "line_str": "init|= name|lhs operator|. name|getQualifiedName",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(358, 367)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 307,
        "line_str": "return|; block|} name|String name|leftName",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(358, 367)"
      },
      {
        "commit_hash": "0f655dc72070acbdcc5fe3a1aecf91c11955c37b",
        "line_num": 5410,
        "line_str": "return|; block|} annotation|@ name|Override",
        "file_path": "gen/com/google/javascript/jscomp/FunctionInformationMap.java",
        "input_file_path": "gen/com/google/javascript/jscomp/FunctionInformationMap.java",
        "input_line_num": "range(5410, 5413)"
      },
      {
        "commit_hash": "0f655dc72070acbdcc5fe3a1aecf91c11955c37b",
        "line_num": 3424,
        "line_str": "annotation|@ name|Override specifier|protected name|Object",
        "file_path": "gen/com/google/javascript/jscomp/FunctionInformationMap.java",
        "input_file_path": "gen/com/google/javascript/jscomp/FunctionInformationMap.java",
        "input_line_num": "range(3422, 3425)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 324,
        "line_str": "operator|. name|contains argument_list|( literal|\".prototype.\"",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(368, 380)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 320,
        "line_str": "operator|!= literal|null operator|&& name|leftName",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(368, 380)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 287,
        "line_str": "condition|) block|{ if|if condition|(",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(336, 343)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 316,
        "line_str": "decl_stmt|; if|if condition|( name|leftName",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(368, 380)"
      },
      {
        "commit_hash": "0f655dc72070acbdcc5fe3a1aecf91c11955c37b",
        "line_num": 980,
        "line_str": "block|} annotation|@ name|Override specifier|protected",
        "file_path": "gen/com/google/javascript/jscomp/FunctionInformationMap.java",
        "input_file_path": "gen/com/google/javascript/jscomp/FunctionInformationMap.java",
        "input_line_num": "range(979, 982)"
      },
      {
        "commit_hash": "0f655dc72070acbdcc5fe3a1aecf91c11955c37b",
        "line_num": 893,
        "line_str": "block|} annotation|@ name|Override specifier|protected",
        "file_path": "gen/com/google/javascript/jscomp/Instrumentation.java",
        "input_file_path": "gen/com/google/javascript/jscomp/Instrumentation.java",
        "input_line_num": "range(892, 895)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 312,
        "line_str": "name|lhs operator|. name|getQualifiedName argument_list|()",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(358, 367)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 308,
        "line_str": "block|} name|String name|leftName init|=",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(358, 367)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 313,
        "line_str": "operator|. name|getQualifiedName argument_list|() decl_stmt|;",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(358, 367)"
      },
      {
        "commit_hash": "0f655dc72070acbdcc5fe3a1aecf91c11955c37b",
        "line_num": 5411,
        "line_str": "block|} annotation|@ name|Override specifier|protected",
        "file_path": "gen/com/google/javascript/jscomp/FunctionInformationMap.java",
        "input_file_path": "gen/com/google/javascript/jscomp/FunctionInformationMap.java",
        "input_line_num": "range(5410, 5413)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 325,
        "line_str": "name|contains argument_list|( literal|\".prototype.\" argument_list|)",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(368, 380)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 321,
        "line_str": "literal|null operator|&& name|leftName operator|.",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(368, 380)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 288,
        "line_str": "block|{ if|if condition|( name|lhs",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(336, 343)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 317,
        "line_str": "if|if condition|( name|leftName operator|!=",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(368, 380)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 284,
        "line_str": "name|Token operator|. name|GETPROP condition|)",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(336, 343)"
      },
      {
        "commit_hash": "0f655dc72070acbdcc5fe3a1aecf91c11955c37b",
        "line_num": 981,
        "line_str": "annotation|@ name|Override specifier|protected name|Object",
        "file_path": "gen/com/google/javascript/jscomp/FunctionInformationMap.java",
        "input_file_path": "gen/com/google/javascript/jscomp/FunctionInformationMap.java",
        "input_line_num": "range(979, 982)"
      },
      {
        "commit_hash": "0f655dc72070acbdcc5fe3a1aecf91c11955c37b",
        "line_num": 894,
        "line_str": "annotation|@ name|Override specifier|protected name|Object",
        "file_path": "gen/com/google/javascript/jscomp/Instrumentation.java",
        "input_file_path": "gen/com/google/javascript/jscomp/Instrumentation.java",
        "input_line_num": "range(892, 895)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 309,
        "line_str": "name|String name|leftName init|= name|lhs",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(358, 367)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 276,
        "line_str": "comment if|if condition|( name|lhs",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(328, 329)"
      }
    ]
  },
  {
    "id": 10037,
    "repo_name": "apache/commons-codec",
    "bug_commit_hash": ["7882213ce2fde3ef9b990c494f47aeae7b6f6946"],
    "fix_commit_hash": "41c68e9ef470696009d72133c7f05a20e2728e34",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 520,
        "line_str": "block|, literal|\"Toddy\" block|, literal|\"Torto\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 487,
        "line_str": "literal|\"Teodoor\" block|, literal|\"Teodor\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 454,
        "line_str": "block|, literal|\"Dowdell\" block|, literal|\"Duthie\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 421,
        "line_str": "literal|\"Dierdre\" block|, literal|\"Dieter\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 388,
        "line_str": "block|{ name|this operator|. name|checkEncodingVariations",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 537,
        "line_str": "block|} comment specifier|public name|void",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 504,
        "line_str": "block|, literal|\"Tilda\" block|, literal|\"Tildi\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 471,
        "line_str": "literal|\"Tedda\" block|, literal|\"Tedder\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 438,
        "line_str": "block|, literal|\"Dorthy\" block|, literal|\"Doti\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 405,
        "line_str": "literal|\"Deedee\" block|, literal|\"Deerdre\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 521,
        "line_str": "literal|\"Toddy\" block|, literal|\"Torto\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 488,
        "line_str": "block|, literal|\"Teodor\" block|, literal|\"Terti\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 455,
        "line_str": "literal|\"Dowdell\" block|, literal|\"Duthie\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 422,
        "line_str": "block|, literal|\"Dieter\" block|, literal|\"Dita\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 389,
        "line_str": "name|this operator|. name|checkEncodingVariations argument_list|(",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 505,
        "line_str": "literal|\"Tilda\" block|, literal|\"Tildi\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 472,
        "line_str": "block|, literal|\"Tedder\" block|, literal|\"Teddi\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 439,
        "line_str": "literal|\"Dorthy\" block|, literal|\"Doti\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 406,
        "line_str": "block|, literal|\"Deerdre\" block|, literal|\"Deidre\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 522,
        "line_str": "block|, literal|\"Torto\" block|, literal|\"Tuddor\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 489,
        "line_str": "literal|\"Teodor\" block|, literal|\"Terti\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 456,
        "line_str": "block|, literal|\"Duthie\" block|, literal|\"Tada\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 423,
        "line_str": "literal|\"Dieter\" block|, literal|\"Dita\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 390,
        "line_str": "operator|. name|checkEncodingVariations argument_list|( literal|\"TTA1111111\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 506,
        "line_str": "block|, literal|\"Tildi\" block|, literal|\"Tildie\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 473,
        "line_str": "literal|\"Tedder\" block|, literal|\"Teddi\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 440,
        "line_str": "block|, literal|\"Doti\" block|, literal|\"Dotti\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 407,
        "line_str": "literal|\"Deerdre\" block|, literal|\"Deidre\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 523,
        "line_str": "literal|\"Torto\" block|, literal|\"Tuddor\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 490,
        "line_str": "block|, literal|\"Terti\" block|, literal|\"Theda\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 457,
        "line_str": "literal|\"Duthie\" block|, literal|\"Tada\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 424,
        "line_str": "block|, literal|\"Dita\" block|, literal|\"Ditter\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 391,
        "line_str": "name|checkEncodingVariations argument_list|( literal|\"TTA1111111\" argument_list|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "66555de56715ccb185dee4dd2b25b1e93cc5c73e",
        "line_num": 199,
        "line_str": "literal|\"2n\" argument_list|) expr_stmt|; name|txt",
        "file_path": "src/java/org/apache/commons/codec/language/Caverphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/Caverphone.java",
        "input_line_num": "range(207, 210)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 507,
        "line_str": "literal|\"Tildi\" block|, literal|\"Tildie\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 474,
        "line_str": "block|, literal|\"Teddi\" block|, literal|\"Teddie\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 441,
        "line_str": "literal|\"Doti\" block|, literal|\"Dotti\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 408,
        "line_str": "block|, literal|\"Deidre\" block|, literal|\"Deirdre\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 524,
        "line_str": "block|, literal|\"Tuddor\" block|, literal|\"Tudor\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 491,
        "line_str": "literal|\"Terti\" block|, literal|\"Theda\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 458,
        "line_str": "block|, literal|\"Tada\" block|, literal|\"Taddeo\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 425,
        "line_str": "literal|\"Dita\" block|, literal|\"Ditter\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 392,
        "line_str": "argument_list|( literal|\"TTA1111111\" argument_list|, operator|new",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "66555de56715ccb185dee4dd2b25b1e93cc5c73e",
        "line_num": 200,
        "line_str": "argument_list|) expr_stmt|; name|txt operator|=",
        "file_path": "src/java/org/apache/commons/codec/language/Caverphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/Caverphone.java",
        "input_line_num": "range(207, 210)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 508,
        "line_str": "block|, literal|\"Tildie\" block|, literal|\"Tildy\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 475,
        "line_str": "literal|\"Teddi\" block|, literal|\"Teddie\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 442,
        "line_str": "block|, literal|\"Dotti\" block|, literal|\"Dottie\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 409,
        "line_str": "literal|\"Deidre\" block|, literal|\"Deirdre\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 525,
        "line_str": "literal|\"Tuddor\" block|, literal|\"Tudor\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 492,
        "line_str": "block|, literal|\"Theda\" block|, literal|\"Theodor\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 459,
        "line_str": "literal|\"Tada\" block|, literal|\"Taddeo\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 426,
        "line_str": "block|, literal|\"Ditter\" block|, literal|\"Dodi\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 393,
        "line_str": "literal|\"TTA1111111\" argument_list|, operator|new name|String",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "66555de56715ccb185dee4dd2b25b1e93cc5c73e",
        "line_num": 201,
        "line_str": "expr_stmt|; name|txt operator|= name|txt",
        "file_path": "src/java/org/apache/commons/codec/language/Caverphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/Caverphone.java",
        "input_line_num": "range(207, 210)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 509,
        "line_str": "literal|\"Tildie\" block|, literal|\"Tildy\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 476,
        "line_str": "block|, literal|\"Teddie\" block|, literal|\"Teddy\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 443,
        "line_str": "literal|\"Dotti\" block|, literal|\"Dottie\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 410,
        "line_str": "block|, literal|\"Deirdre\" block|, literal|\"Detta\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 526,
        "line_str": "block|, literal|\"Tudor\" block|, literal|\"Turtle\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 493,
        "line_str": "literal|\"Theda\" block|, literal|\"Theodor\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 460,
        "line_str": "block|, literal|\"Taddeo\" block|, literal|\"Tadeo\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 427,
        "line_str": "literal|\"Ditter\" block|, literal|\"Dodi\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 394,
        "line_str": "argument_list|, operator|new name|String index|[]",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 510,
        "line_str": "block|, literal|\"Tildy\" block|, literal|\"Tita\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 477,
        "line_str": "literal|\"Teddie\" block|, literal|\"Teddy\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 444,
        "line_str": "block|, literal|\"Dottie\" block|, literal|\"Dotty\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 411,
        "line_str": "literal|\"Deirdre\" block|, literal|\"Detta\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 527,
        "line_str": "literal|\"Tudor\" block|, literal|\"Turtle\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 494,
        "line_str": "block|, literal|\"Theodor\" block|, literal|\"Theodore\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 461,
        "line_str": "literal|\"Taddeo\" block|, literal|\"Tadeo\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 428,
        "line_str": "block|, literal|\"Dodi\" block|, literal|\"Dodie\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 395,
        "line_str": "operator|new name|String index|[] block|{",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 511,
        "line_str": "literal|\"Tildy\" block|, literal|\"Tita\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 478,
        "line_str": "block|, literal|\"Teddy\" block|, literal|\"Tedi\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 445,
        "line_str": "literal|\"Dottie\" block|, literal|\"Dotty\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 412,
        "line_str": "block|, literal|\"Detta\" block|, literal|\"Didi\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 528,
        "line_str": "block|, literal|\"Turtle\" block|, literal|\"Tuttle\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 495,
        "line_str": "literal|\"Theodor\" block|, literal|\"Theodore\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 462,
        "line_str": "block|, literal|\"Tadeo\" block|, literal|\"Tadio\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 429,
        "line_str": "literal|\"Dodi\" block|, literal|\"Dodie\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 396,
        "line_str": "name|String index|[] block|{ literal|\"Darda\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 512,
        "line_str": "block|, literal|\"Tita\" block|, literal|\"Tito\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 479,
        "line_str": "literal|\"Teddy\" block|, literal|\"Tedi\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 446,
        "line_str": "block|, literal|\"Dotty\" block|, literal|\"Doty\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 413,
        "line_str": "literal|\"Detta\" block|, literal|\"Didi\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 529,
        "line_str": "literal|\"Turtle\" block|, literal|\"Tuttle\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 496,
        "line_str": "block|, literal|\"Theodore\" block|, literal|\"Theta\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 463,
        "line_str": "literal|\"Tadeo\" block|, literal|\"Tadio\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 430,
        "line_str": "block|, literal|\"Dodie\" block|, literal|\"Dody\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 397,
        "line_str": "index|[] block|{ literal|\"Darda\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "7882213ce2fde3ef9b990c494f47aeae7b6f6946",
        "line_num": 205,
        "line_str": "operator|. name|replaceAll argument_list|( literal|\"^mb\"",
        "file_path": "src/java/org/apache/commons/codec/language/Caverphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/Caverphone.java",
        "input_line_num": "range(213, 215)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 513,
        "line_str": "literal|\"Tita\" block|, literal|\"Tito\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 480,
        "line_str": "block|, literal|\"Tedi\" block|, literal|\"Tedie\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 447,
        "line_str": "literal|\"Dotty\" block|, literal|\"Doty\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 414,
        "line_str": "block|, literal|\"Didi\" block|, literal|\"Didier\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 381,
        "line_str": "comment specifier|public name|void name|testDavidHoodRevisitedRandomNameTTA1111111",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 530,
        "line_str": "block|, literal|\"Tuttle\" block|, literal|\"Tutto\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 497,
        "line_str": "literal|\"Theodore\" block|, literal|\"Theta\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 464,
        "line_str": "block|, literal|\"Tadio\" block|, literal|\"Tati\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 431,
        "line_str": "literal|\"Dodie\" block|, literal|\"Dody\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 398,
        "line_str": "block|{ literal|\"Darda\" block|, literal|\"Datha\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "7882213ce2fde3ef9b990c494f47aeae7b6f6946",
        "line_num": 206,
        "line_str": "name|replaceAll argument_list|( literal|\"^mb\" argument_list|,",
        "file_path": "src/java/org/apache/commons/codec/language/Caverphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/Caverphone.java",
        "input_line_num": "range(213, 215)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 514,
        "line_str": "block|, literal|\"Tito\" block|, literal|\"Tjader\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 481,
        "line_str": "literal|\"Tedi\" block|, literal|\"Tedie\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 448,
        "line_str": "block|, literal|\"Doty\" block|, literal|\"Doughty\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 415,
        "line_str": "literal|\"Didi\" block|, literal|\"Didier\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 382,
        "line_str": "specifier|public name|void name|testDavidHoodRevisitedRandomNameTTA1111111 parameter_list|()",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 531,
        "line_str": "literal|\"Tuttle\" block|, literal|\"Tutto\" block|}",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 498,
        "line_str": "block|, literal|\"Theta\" block|, literal|\"Thilda\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 465,
        "line_str": "literal|\"Tadio\" block|, literal|\"Tati\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 432,
        "line_str": "block|, literal|\"Dody\" block|, literal|\"Doherty\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 399,
        "line_str": "literal|\"Darda\" block|, literal|\"Datha\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "66555de56715ccb185dee4dd2b25b1e93cc5c73e",
        "line_num": 207,
        "line_str": "argument_list|( literal|\"^mb\" argument_list|, literal|\"m2\"",
        "file_path": "src/java/org/apache/commons/codec/language/Caverphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/Caverphone.java",
        "input_line_num": "range(215, 217)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 515,
        "line_str": "literal|\"Tito\" block|, literal|\"Tjader\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 482,
        "line_str": "block|, literal|\"Tedie\" block|, literal|\"Teeter\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 449,
        "line_str": "literal|\"Doty\" block|, literal|\"Doughty\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 416,
        "line_str": "block|, literal|\"Didier\" block|, literal|\"Dido\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 383,
        "line_str": "name|void name|testDavidHoodRevisitedRandomNameTTA1111111 parameter_list|() throws|throws",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 532,
        "line_str": "block|, literal|\"Tutto\" block|} argument_list|)",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 499,
        "line_str": "literal|\"Theta\" block|, literal|\"Thilda\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 466,
        "line_str": "block|, literal|\"Tati\" block|, literal|\"Teador\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 433,
        "line_str": "literal|\"Dody\" block|, literal|\"Doherty\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 400,
        "line_str": "block|, literal|\"Datha\" block|, literal|\"Dedie\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "66555de56715ccb185dee4dd2b25b1e93cc5c73e",
        "line_num": 208,
        "line_str": "literal|\"^mb\" argument_list|, literal|\"m2\" argument_list|)",
        "file_path": "src/java/org/apache/commons/codec/language/Caverphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/Caverphone.java",
        "input_line_num": "range(215, 217)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 516,
        "line_str": "block|, literal|\"Tjader\" block|, literal|\"Toddie\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 483,
        "line_str": "literal|\"Tedie\" block|, literal|\"Teeter\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 450,
        "line_str": "block|, literal|\"Doughty\" block|, literal|\"Douty\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 417,
        "line_str": "literal|\"Didier\" block|, literal|\"Dido\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 384,
        "line_str": "name|testDavidHoodRevisitedRandomNameTTA1111111 parameter_list|() throws|throws name|EncoderException",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 533,
        "line_str": "literal|\"Tutto\" block|} argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 500,
        "line_str": "block|, literal|\"Thilda\" block|, literal|\"Thordia\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 467,
        "line_str": "literal|\"Tati\" block|, literal|\"Teador\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 434,
        "line_str": "block|, literal|\"Doherty\" block|, literal|\"Dorthea\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 401,
        "line_str": "literal|\"Datha\" block|, literal|\"Dedie\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 517,
        "line_str": "literal|\"Tjader\" block|, literal|\"Toddie\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 484,
        "line_str": "block|, literal|\"Teeter\" block|, literal|\"Teodoor\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 451,
        "line_str": "literal|\"Doughty\" block|, literal|\"Douty\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 418,
        "line_str": "block|, literal|\"Dido\" block|, literal|\"Dierdre\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 385,
        "line_str": "parameter_list|() throws|throws name|EncoderException block|{",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 534,
        "line_str": "block|} argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 501,
        "line_str": "literal|\"Thilda\" block|, literal|\"Thordia\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 468,
        "line_str": "block|, literal|\"Teador\" block|, literal|\"Tedda\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 435,
        "line_str": "literal|\"Doherty\" block|, literal|\"Dorthea\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 402,
        "line_str": "block|, literal|\"Dedie\" block|, literal|\"Deedee\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 518,
        "line_str": "block|, literal|\"Toddie\" block|, literal|\"Toddy\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 485,
        "line_str": "literal|\"Teeter\" block|, literal|\"Teodoor\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 452,
        "line_str": "block|, literal|\"Douty\" block|, literal|\"Dowdell\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 419,
        "line_str": "literal|\"Dido\" block|, literal|\"Dierdre\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 386,
        "line_str": "throws|throws name|EncoderException block|{ name|this",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 535,
        "line_str": "argument_list|) expr_stmt|; block|} comment",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 502,
        "line_str": "block|, literal|\"Thordia\" block|, literal|\"Tilda\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 469,
        "line_str": "literal|\"Teador\" block|, literal|\"Tedda\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 436,
        "line_str": "block|, literal|\"Dorthea\" block|, literal|\"Dorthy\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 403,
        "line_str": "literal|\"Dedie\" block|, literal|\"Deedee\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 519,
        "line_str": "literal|\"Toddie\" block|, literal|\"Toddy\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 486,
        "line_str": "block|, literal|\"Teodoor\" block|, literal|\"Teodor\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 453,
        "line_str": "literal|\"Douty\" block|, literal|\"Dowdell\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 420,
        "line_str": "block|, literal|\"Dierdre\" block|, literal|\"Dieter\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 387,
        "line_str": "name|EncoderException block|{ name|this operator|.",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 536,
        "line_str": "expr_stmt|; block|} comment specifier|public",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 503,
        "line_str": "literal|\"Thordia\" block|, literal|\"Tilda\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 470,
        "line_str": "block|, literal|\"Tedda\" block|, literal|\"Tedder\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 437,
        "line_str": "literal|\"Dorthea\" block|, literal|\"Dorthy\" block|,",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 404,
        "line_str": "block|, literal|\"Deedee\" block|, literal|\"Deerdre\"",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(381, 538)"
      }
    ]
  },
  {
    "id": 10038,
    "repo_name": "apache/commons-codec",
    "bug_commit_hash": ["37ba197e62d6b60037d18afc33801e6221f1b8c6"],
    "fix_commit_hash": "5ef5bd199a4e3df74479b4b363fa29b0b3092547",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "37ba197e62d6b60037d18afc33801e6221f1b8c6",
        "line_num": 143,
        "line_str": "return|return name|CharSequenceUtils operator|. name|regionMatches",
        "file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_line_num": "range(151, 154)"
      },
      {
        "commit_hash": "37ba197e62d6b60037d18afc33801e6221f1b8c6",
        "line_num": 142,
        "line_str": "block|} return|return name|CharSequenceUtils operator|.",
        "file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_line_num": "range(151, 154)"
      },
      {
        "commit_hash": "37ba197e62d6b60037d18afc33801e6221f1b8c6",
        "line_num": 141,
        "line_str": "return|; block|} return|return name|CharSequenceUtils",
        "file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_line_num": "range(151, 154)"
      },
      {
        "commit_hash": "37ba197e62d6b60037d18afc33801e6221f1b8c6",
        "line_num": 171,
        "line_str": "argument_list|) argument_list|) return|; block|}",
        "file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_line_num": "range(179, 182)"
      },
      {
        "commit_hash": "37ba197e62d6b60037d18afc33801e6221f1b8c6",
        "line_num": 170,
        "line_str": "argument_list|() argument_list|) argument_list|) return|;",
        "file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_line_num": "range(179, 182)"
      },
      {
        "commit_hash": "37ba197e62d6b60037d18afc33801e6221f1b8c6",
        "line_num": 169,
        "line_str": "name|length argument_list|() argument_list|) argument_list|)",
        "file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_line_num": "range(179, 182)"
      },
      {
        "commit_hash": "37ba197e62d6b60037d18afc33801e6221f1b8c6",
        "line_num": 167,
        "line_str": "name|cs2 operator|. name|length argument_list|()",
        "file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_line_num": "range(173, 178)"
      },
      {
        "commit_hash": "37ba197e62d6b60037d18afc33801e6221f1b8c6",
        "line_num": 166,
        "line_str": "argument_list|, name|cs2 operator|. name|length",
        "file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_line_num": "range(173, 178)"
      },
      {
        "commit_hash": "37ba197e62d6b60037d18afc33801e6221f1b8c6",
        "line_num": 165,
        "line_str": "argument_list|() argument_list|, name|cs2 operator|.",
        "file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_line_num": "range(173, 178)"
      },
      {
        "commit_hash": "37ba197e62d6b60037d18afc33801e6221f1b8c6",
        "line_num": 164,
        "line_str": "name|length argument_list|() argument_list|, name|cs2",
        "file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_line_num": "range(173, 178)"
      },
      {
        "commit_hash": "37ba197e62d6b60037d18afc33801e6221f1b8c6",
        "line_num": 163,
        "line_str": "operator|. name|length argument_list|() argument_list|,",
        "file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_line_num": "range(173, 178)"
      },
      {
        "commit_hash": "37ba197e62d6b60037d18afc33801e6221f1b8c6",
        "line_num": 161,
        "line_str": "argument_list|( name|cs1 operator|. name|length",
        "file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_line_num": "range(165, 172)"
      },
      {
        "commit_hash": "37ba197e62d6b60037d18afc33801e6221f1b8c6",
        "line_num": 160,
        "line_str": "name|max argument_list|( name|cs1 operator|.",
        "file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_line_num": "range(165, 172)"
      },
      {
        "commit_hash": "37ba197e62d6b60037d18afc33801e6221f1b8c6",
        "line_num": 159,
        "line_str": "operator|. name|max argument_list|( name|cs1",
        "file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_line_num": "range(165, 172)"
      },
      {
        "commit_hash": "37ba197e62d6b60037d18afc33801e6221f1b8c6",
        "line_num": 158,
        "line_str": "name|Math operator|. name|max argument_list|(",
        "file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_line_num": "range(165, 172)"
      },
      {
        "commit_hash": "37ba197e62d6b60037d18afc33801e6221f1b8c6",
        "line_num": 157,
        "line_str": "argument_list|, name|Math operator|. name|max",
        "file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_line_num": "range(165, 172)"
      },
      {
        "commit_hash": "37ba197e62d6b60037d18afc33801e6221f1b8c6",
        "line_num": 156,
        "line_str": "literal|0 argument_list|, name|Math operator|.",
        "file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_line_num": "range(165, 172)"
      },
      {
        "commit_hash": "37ba197e62d6b60037d18afc33801e6221f1b8c6",
        "line_num": 155,
        "line_str": "argument_list|, literal|0 argument_list|, name|Math",
        "file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_line_num": "range(165, 172)"
      }
    ]
  },
  {
    "id": 10039,
    "repo_name": "apache/commons-codec",
    "bug_commit_hash": ["727432fe12821b9e25e2c5a1758076ad83b098eb"],
    "fix_commit_hash": "a5dfe5cbc95d7f3ce0b4829756690c2cb8439f4c",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "3b8cd11d086e4e09e801deb114d34abb80175ac0",
        "line_num": 500,
        "line_str": "block|, comment operator|new name|String",
        "file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_line_num": "range(498, 502)"
      },
      {
        "commit_hash": "727432fe12821b9e25e2c5a1758076ad83b098eb",
        "line_num": 2944,
        "line_str": "name|index operator|++ expr_stmt|; block|}",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(2941, 2943)"
      },
      {
        "commit_hash": "3b8cd11d086e4e09e801deb114d34abb80175ac0",
        "line_num": 13296,
        "line_str": "block|, comment operator|new name|String",
        "file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_line_num": "range(13294, 13298)"
      },
      {
        "commit_hash": "3b8cd11d086e4e09e801deb114d34abb80175ac0",
        "line_num": 12875,
        "line_str": "block|} block|, comment operator|new",
        "file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_line_num": "range(12874, 12878)"
      },
      {
        "commit_hash": "727432fe12821b9e25e2c5a1758076ad83b098eb",
        "line_num": 2903,
        "line_str": "argument_list|) expr_stmt|; if|if condition|(",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(2892, 2902)"
      },
      {
        "commit_hash": "727432fe12821b9e25e2c5a1758076ad83b098eb",
        "line_num": 2197,
        "line_str": "literal|1 argument_list|, literal|4 argument_list|,",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(2193, 2197)"
      },
      {
        "commit_hash": "727432fe12821b9e25e2c5a1758076ad83b098eb",
        "line_num": 2932,
        "line_str": "argument_list|( literal|' ' argument_list|) expr_stmt|;",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(2925, 2931)"
      },
      {
        "commit_hash": "727432fe12821b9e25e2c5a1758076ad83b098eb",
        "line_num": 2899,
        "line_str": "operator|. name|append argument_list|( literal|'L'",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(2892, 2902)"
      },
      {
        "commit_hash": "727432fe12821b9e25e2c5a1758076ad83b098eb",
        "line_num": 4786,
        "line_str": "argument_list|, name|index operator|- literal|1",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(4771, 4777)"
      },
      {
        "commit_hash": "727432fe12821b9e25e2c5a1758076ad83b098eb",
        "line_num": 2928,
        "line_str": "block|{ name|result operator|. name|appendAlternate",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(2925, 2931)"
      },
      {
        "commit_hash": "727432fe12821b9e25e2c5a1758076ad83b098eb",
        "line_num": 2895,
        "line_str": "name|index parameter_list|) block|{ name|result",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(2892, 2902)"
      },
      {
        "commit_hash": "3b8cd11d086e4e09e801deb114d34abb80175ac0",
        "line_num": 13053,
        "line_str": "block|, comment operator|new name|String",
        "file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_line_num": "range(13051, 13055)"
      },
      {
        "commit_hash": "3b8cd11d086e4e09e801deb114d34abb80175ac0",
        "line_num": 501,
        "line_str": "comment operator|new name|String index|[]",
        "file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_line_num": "range(498, 502)"
      },
      {
        "commit_hash": "727432fe12821b9e25e2c5a1758076ad83b098eb",
        "line_num": 2945,
        "line_str": "operator|++ expr_stmt|; block|} return|return",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(2941, 2943)"
      },
      {
        "commit_hash": "3b8cd11d086e4e09e801deb114d34abb80175ac0",
        "line_num": 13297,
        "line_str": "comment operator|new name|String index|[]",
        "file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_line_num": "range(13294, 13298)"
      },
      {
        "commit_hash": "3b8cd11d086e4e09e801deb114d34abb80175ac0",
        "line_num": 12876,
        "line_str": "block|, comment operator|new name|String",
        "file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_line_num": "range(12874, 12878)"
      },
      {
        "commit_hash": "727432fe12821b9e25e2c5a1758076ad83b098eb",
        "line_num": 2904,
        "line_str": "expr_stmt|; if|if condition|( name|charAt",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(2892, 2902)"
      },
      {
        "commit_hash": "727432fe12821b9e25e2c5a1758076ad83b098eb",
        "line_num": 2198,
        "line_str": "argument_list|, literal|4 argument_list|, literal|\"IER\"",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(2193, 2197)"
      },
      {
        "commit_hash": "727432fe12821b9e25e2c5a1758076ad83b098eb",
        "line_num": 2933,
        "line_str": "literal|' ' argument_list|) expr_stmt|; block|}",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(2925, 2931)"
      },
      {
        "commit_hash": "727432fe12821b9e25e2c5a1758076ad83b098eb",
        "line_num": 2900,
        "line_str": "name|append argument_list|( literal|'L' argument_list|)",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(2892, 2902)"
      },
      {
        "commit_hash": "727432fe12821b9e25e2c5a1758076ad83b098eb",
        "line_num": 4787,
        "line_str": "name|index operator|- literal|1 argument_list|,",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(4771, 4777)"
      },
      {
        "commit_hash": "727432fe12821b9e25e2c5a1758076ad83b098eb",
        "line_num": 2929,
        "line_str": "name|result operator|. name|appendAlternate argument_list|(",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(2925, 2931)"
      },
      {
        "commit_hash": "727432fe12821b9e25e2c5a1758076ad83b098eb",
        "line_num": 2896,
        "line_str": "parameter_list|) block|{ name|result operator|.",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(2892, 2902)"
      },
      {
        "commit_hash": "3b8cd11d086e4e09e801deb114d34abb80175ac0",
        "line_num": 13054,
        "line_str": "comment operator|new name|String index|[]",
        "file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_line_num": "range(13051, 13055)"
      },
      {
        "commit_hash": "3b8cd11d086e4e09e801deb114d34abb80175ac0",
        "line_num": 498,
        "line_str": "literal|\"ANTR\" block|} block|, comment",
        "file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_line_num": "range(498, 502)"
      },
      {
        "commit_hash": "3b8cd11d086e4e09e801deb114d34abb80175ac0",
        "line_num": 13294,
        "line_str": "literal|\"RSNS\" block|} block|, comment",
        "file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_line_num": "range(13294, 13298)"
      },
      {
        "commit_hash": "3b8cd11d086e4e09e801deb114d34abb80175ac0",
        "line_num": 12877,
        "line_str": "comment operator|new name|String index|[]",
        "file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_line_num": "range(12874, 12878)"
      },
      {
        "commit_hash": "727432fe12821b9e25e2c5a1758076ad83b098eb",
        "line_num": 2199,
        "line_str": "literal|4 argument_list|, literal|\"IER\" argument_list|)",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(2193, 2197)"
      },
      {
        "commit_hash": "727432fe12821b9e25e2c5a1758076ad83b098eb",
        "line_num": 2901,
        "line_str": "argument_list|( literal|'L' argument_list|) expr_stmt|;",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(2892, 2902)"
      },
      {
        "commit_hash": "727432fe12821b9e25e2c5a1758076ad83b098eb",
        "line_num": 4788,
        "line_str": "operator|- literal|1 argument_list|, literal|2",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(4771, 4777)"
      },
      {
        "commit_hash": "727432fe12821b9e25e2c5a1758076ad83b098eb",
        "line_num": 2930,
        "line_str": "operator|. name|appendAlternate argument_list|( literal|' '",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(2925, 2931)"
      },
      {
        "commit_hash": "727432fe12821b9e25e2c5a1758076ad83b098eb",
        "line_num": 2897,
        "line_str": "block|{ name|result operator|. name|append",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(2892, 2902)"
      },
      {
        "commit_hash": "727432fe12821b9e25e2c5a1758076ad83b098eb",
        "line_num": 4784,
        "line_str": "argument_list|( name|value argument_list|, name|index",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(4771, 4777)"
      },
      {
        "commit_hash": "3b8cd11d086e4e09e801deb114d34abb80175ac0",
        "line_num": 13051,
        "line_str": "literal|\"FKX\" block|} block|, comment",
        "file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_line_num": "range(13051, 13055)"
      },
      {
        "commit_hash": "3b8cd11d086e4e09e801deb114d34abb80175ac0",
        "line_num": 499,
        "line_str": "block|} block|, comment operator|new",
        "file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_line_num": "range(498, 502)"
      },
      {
        "commit_hash": "3b8cd11d086e4e09e801deb114d34abb80175ac0",
        "line_num": 13295,
        "line_str": "block|} block|, comment operator|new",
        "file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_line_num": "range(13294, 13298)"
      },
      {
        "commit_hash": "3b8cd11d086e4e09e801deb114d34abb80175ac0",
        "line_num": 12874,
        "line_str": "literal|\"PRTN\" block|} block|, comment",
        "file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_line_num": "range(12874, 12878)"
      },
      {
        "commit_hash": "727432fe12821b9e25e2c5a1758076ad83b098eb",
        "line_num": 2902,
        "line_str": "literal|'L' argument_list|) expr_stmt|; if|if",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(2892, 2902)"
      },
      {
        "commit_hash": "727432fe12821b9e25e2c5a1758076ad83b098eb",
        "line_num": 4789,
        "line_str": "literal|1 argument_list|, literal|2 argument_list|,",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(4771, 4777)"
      },
      {
        "commit_hash": "727432fe12821b9e25e2c5a1758076ad83b098eb",
        "line_num": 2196,
        "line_str": "operator|+ literal|1 argument_list|, literal|4",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(2193, 2197)"
      },
      {
        "commit_hash": "727432fe12821b9e25e2c5a1758076ad83b098eb",
        "line_num": 2931,
        "line_str": "name|appendAlternate argument_list|( literal|' ' argument_list|)",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(2925, 2931)"
      },
      {
        "commit_hash": "727432fe12821b9e25e2c5a1758076ad83b098eb",
        "line_num": 2898,
        "line_str": "name|result operator|. name|append argument_list|(",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(2892, 2902)"
      },
      {
        "commit_hash": "727432fe12821b9e25e2c5a1758076ad83b098eb",
        "line_num": 4785,
        "line_str": "name|value argument_list|, name|index operator|-",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(4771, 4777)"
      },
      {
        "commit_hash": "3b8cd11d086e4e09e801deb114d34abb80175ac0",
        "line_num": 13052,
        "line_str": "block|} block|, comment operator|new",
        "file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
        "input_line_num": "range(13051, 13055)"
      }
    ]
  },
  {
    "id": 10040,
    "repo_name": "apache/commons-compress",
    "bug_commit_hash": ["a671a703fe86b69adb8c61495a915065c186362d"],
    "fix_commit_hash": "557800a53cedad99afc951032a11931f3e39bf13",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "ad3908ee8ec691b619b84a4abaf9bb2c7c2e8233",
        "line_num": 80,
        "line_str": "name|output argument_list|, literal|8024 argument_list|)",
        "file_path": "src/main/java/org/apache/commons/compress/utils/IOUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/utils/IOUtils.java",
        "input_line_num": "range(110, 112)"
      },
      {
        "commit_hash": "ad3908ee8ec691b619b84a4abaf9bb2c7c2e8233",
        "line_num": 79,
        "line_str": "argument_list|, name|output argument_list|, literal|8024",
        "file_path": "src/main/java/org/apache/commons/compress/utils/IOUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/utils/IOUtils.java",
        "input_line_num": "range(110, 112)"
      },
      {
        "commit_hash": "8a2f04c551c6da91e95e20d6a9e95d9468755d32",
        "line_num": 234,
        "line_str": "expr_stmt|; block|} return|return name|available",
        "file_path": "src/main/java/org/apache/commons/compress/utils/IOUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/utils/IOUtils.java",
        "input_line_num": "range(244, 245)"
      },
      {
        "commit_hash": "a671a703fe86b69adb8c61495a915065c186362d",
        "line_num": 233,
        "line_str": "name|skipped expr_stmt|; block|} return|return",
        "file_path": "src/main/java/org/apache/commons/compress/utils/IOUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/utils/IOUtils.java",
        "input_line_num": "range(243, 244)"
      },
      {
        "commit_hash": "187288561476ed8574aca79debde80c01afd56cd",
        "line_num": 62,
        "line_str": "block|{ comment specifier|private name|IOUtils",
        "file_path": "src/main/java/org/apache/commons/compress/utils/IOUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/utils/IOUtils.java",
        "input_line_num": "range(81, 83)"
      },
      {
        "commit_hash": "187288561476ed8574aca79debde80c01afd56cd",
        "line_num": 61,
        "line_str": "name|IOUtils block|{ comment specifier|private",
        "file_path": "src/main/java/org/apache/commons/compress/utils/IOUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/utils/IOUtils.java",
        "input_line_num": "range(81, 83)"
      },
      {
        "commit_hash": "ca16539029cd63e0ab5c9e3cba354a539f94e316",
        "line_num": 56,
        "line_str": "class|class name|IOUtils block|{ comment",
        "file_path": "src/main/java/org/apache/commons/compress/utils/IOUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/utils/IOUtils.java",
        "input_line_num": "range(80, 81)"
      },
      {
        "commit_hash": "3503121a0a9fd31efce4803cb2bcbb47310f6f77",
        "line_num": 87,
        "line_str": "literal|8024 argument_list|) return|; block|}",
        "file_path": "src/main/java/org/apache/commons/compress/utils/IOUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/utils/IOUtils.java",
        "input_line_num": "range(112, 114)"
      },
      {
        "commit_hash": "3503121a0a9fd31efce4803cb2bcbb47310f6f77",
        "line_num": 86,
        "line_str": "argument_list|, literal|8024 argument_list|) return|;",
        "file_path": "src/main/java/org/apache/commons/compress/utils/IOUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/utils/IOUtils.java",
        "input_line_num": "range(112, 114)"
      }
    ]
  },
  {
    "id": 10041,
    "repo_name": "apache/commons-compress",
    "bug_commit_hash": ["318de9ae84f1731fda8ce0785ae537f149ea5fcf"],
    "fix_commit_hash": "11840dfde044fec90b0cb4a715ce9d213acea3ca",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "318de9ae84f1731fda8ce0785ae537f149ea5fcf",
        "line_num": 867,
        "line_str": "decl_stmt|; specifier|final name|int name|len",
        "file_path": "src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java",
        "input_line_num": "range(866, 868)"
      },
      {
        "commit_hash": "318de9ae84f1731fda8ce0785ae537f149ea5fcf",
        "line_num": 866,
        "line_str": "argument_list|() decl_stmt|; specifier|final name|int",
        "file_path": "src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java",
        "input_line_num": "range(866, 868)"
      },
      {
        "commit_hash": "318de9ae84f1731fda8ce0785ae537f149ea5fcf",
        "line_num": 861,
        "line_str": "name|chars init|= name|s operator|.",
        "file_path": "src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java",
        "input_line_num": "range(858, 862)"
      },
      {
        "commit_hash": "318de9ae84f1731fda8ce0785ae537f149ea5fcf",
        "line_num": 860,
        "line_str": "index|[] name|chars init|= name|s",
        "file_path": "src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java",
        "input_line_num": "range(858, 862)"
      },
      {
        "commit_hash": "318de9ae84f1731fda8ce0785ae537f149ea5fcf",
        "line_num": 859,
        "line_str": "name|char index|[] name|chars init|=",
        "file_path": "src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java",
        "input_line_num": "range(858, 862)"
      },
      {
        "commit_hash": "318de9ae84f1731fda8ce0785ae537f149ea5fcf",
        "line_num": 858,
        "line_str": "specifier|final name|char index|[] name|chars",
        "file_path": "src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java",
        "input_line_num": "range(858, 862)"
      },
      {
        "commit_hash": "187288561476ed8574aca79debde80c01afd56cd",
        "line_num": 57,
        "line_str": "block|{ comment specifier|private name|ArchiveUtils",
        "file_path": "src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java",
        "input_line_num": "range(56, 58)"
      },
      {
        "commit_hash": "187288561476ed8574aca79debde80c01afd56cd",
        "line_num": 56,
        "line_str": "name|ArchiveUtils block|{ comment specifier|private",
        "file_path": "src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java",
        "input_line_num": "range(56, 58)"
      },
      {
        "commit_hash": "7e4a034580de41c47344c80d424e8e3dcf587d60",
        "line_num": 45,
        "line_str": "class|class name|ArchiveUtils block|{ comment",
        "file_path": "src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java",
        "input_line_num": "range(55, 56)"
      }
    ]
  },
  {
    "id": 10042,
    "repo_name": "apache/commons-compress",
    "bug_commit_hash": ["982ce0eca9935e65915278ae07febd3a1d52273d"],
    "fix_commit_hash": "6f379134ae1807cd404ed6c9579707e5dc6a6df0",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "982ce0eca9935e65915278ae07febd3a1d52273d",
        "line_num": 97,
        "line_str": "block|{ name|this operator|. name|checksum",
        "file_path": "src/main/java/org/apache/commons/compress/utils/ChecksumCalculatingInputStream.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/utils/ChecksumCalculatingInputStream.java",
        "input_line_num": "range(85, 88)"
      },
      {
        "commit_hash": "982ce0eca9935e65915278ae07febd3a1d52273d",
        "line_num": 96,
        "line_str": "parameter_list|) block|{ name|this operator|.",
        "file_path": "src/main/java/org/apache/commons/compress/utils/ChecksumCalculatingInputStream.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/utils/ChecksumCalculatingInputStream.java",
        "input_line_num": "range(85, 88)"
      },
      {
        "commit_hash": "982ce0eca9935e65915278ae07febd3a1d52273d",
        "line_num": 95,
        "line_str": "name|in parameter_list|) block|{ name|this",
        "file_path": "src/main/java/org/apache/commons/compress/utils/ChecksumCalculatingInputStream.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/utils/ChecksumCalculatingInputStream.java",
        "input_line_num": "range(85, 88)"
      },
      {
        "commit_hash": "b861b4f0e45135e737e1ec2a514d3051157c3c7b",
        "line_num": 475,
        "line_str": "argument_list|) expr_stmt|; block|} block|}",
        "file_path": "src/test/java/org/apache/commons/compress/utils/ChecksumCalculatingInputStreamTest.java",
        "input_file_path": "src/test/java/org/apache/commons/compress/utils/ChecksumCalculatingInputStreamTest.java",
        "input_line_num": "range(443, 445)"
      },
      {
        "commit_hash": "b861b4f0e45135e737e1ec2a514d3051157c3c7b",
        "line_num": 476,
        "line_str": "expr_stmt|; block|} block|} end_class",
        "file_path": "src/test/java/org/apache/commons/compress/utils/ChecksumCalculatingInputStreamTest.java",
        "input_file_path": "src/test/java/org/apache/commons/compress/utils/ChecksumCalculatingInputStreamTest.java",
        "input_line_num": "range(443, 445)"
      }
    ]
  },
  {
    "id": 10043,
    "repo_name": "apache/commons-compress",
    "bug_commit_hash": ["46ad24db76c6f65480736006c2da8b8e5bf8ee25"],
    "fix_commit_hash": "2d858d5c7cc30313c9c3c8ef4a5e8d34d67a395e",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "1d5567004306b3c6019b4e828f811220fc3fe990",
        "line_num": 803,
        "line_str": "block|} block|} block|} end_class",
        "file_path": "src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java",
        "input_file_path": "src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java",
        "input_line_num": "range(808, 810)"
      },
      {
        "commit_hash": "1d5567004306b3c6019b4e828f811220fc3fe990",
        "line_num": 802,
        "line_str": "block|{ block|} block|} block|}",
        "file_path": "src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java",
        "input_file_path": "src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java",
        "input_line_num": "range(808, 810)"
      },
      {
        "commit_hash": "ae3c158e05af20843fb5ea72deb5b7fb1fefbd54",
        "line_num": 231,
        "line_str": "condition|( name|buffer index|[ name|i",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(268, 271)"
      },
      {
        "commit_hash": "ae3c158e05af20843fb5ea72deb5b7fb1fefbd54",
        "line_num": 230,
        "line_str": "if|if condition|( name|buffer index|[",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(268, 271)"
      },
      {
        "commit_hash": "ae3c158e05af20843fb5ea72deb5b7fb1fefbd54",
        "line_num": 229,
        "line_str": "block|{ if|if condition|( name|buffer",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(268, 271)"
      },
      {
        "commit_hash": "46ad24db76c6f65480736006c2da8b8e5bf8ee25",
        "line_num": 224,
        "line_str": "control|) block|{ if|if condition|(",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(266, 268)"
      },
      {
        "commit_hash": "46ad24db76c6f65480736006c2da8b8e5bf8ee25",
        "line_num": 223,
        "line_str": "name|i control|) block|{ if|if",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(266, 268)"
      },
      {
        "commit_hash": "ae3c158e05af20843fb5ea72deb5b7fb1fefbd54",
        "line_num": 250,
        "line_str": "name|buffer index|[ name|i index|]",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(286, 290)"
      },
      {
        "commit_hash": "ae3c158e05af20843fb5ea72deb5b7fb1fefbd54",
        "line_num": 249,
        "line_str": "operator|) name|buffer index|[ name|i",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(286, 290)"
      },
      {
        "commit_hash": "ae3c158e05af20843fb5ea72deb5b7fb1fefbd54",
        "line_num": 248,
        "line_str": "name|char operator|) name|buffer index|[",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(286, 290)"
      },
      {
        "commit_hash": "ae3c158e05af20843fb5ea72deb5b7fb1fefbd54",
        "line_num": 247,
        "line_str": "operator|( name|char operator|) name|buffer",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(286, 290)"
      },
      {
        "commit_hash": "46ad24db76c6f65480736006c2da8b8e5bf8ee25",
        "line_num": 246,
        "line_str": "index|[ name|i index|] argument_list|)",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(290, 295)"
      }
    ]
  },
  {
    "id": 10044,
    "repo_name": "apache/commons-compress",
    "bug_commit_hash": ["46ad24db76c6f65480736006c2da8b8e5bf8ee25"],
    "fix_commit_hash": "35e4e4fb6848ddfa3878270523f3f9336ae7f9b8",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "46ad24db76c6f65480736006c2da8b8e5bf8ee25",
        "line_num": 101,
        "line_str": "operator|== literal|0 condition|) block|{",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(115, 116)"
      },
      {
        "commit_hash": "46ad24db76c6f65480736006c2da8b8e5bf8ee25",
        "line_num": 68,
        "line_str": "name|boolean name|stillPadding init|= literal|true",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(73, 80)"
      },
      {
        "commit_hash": "1d5567004306b3c6019b4e828f811220fc3fe990",
        "line_num": 184,
        "line_str": "argument_list|, name|length argument_list|) operator|+",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(189, 195)"
      },
      {
        "commit_hash": "46ad24db76c6f65480736006c2da8b8e5bf8ee25",
        "line_num": 151,
        "line_str": "operator|= literal|false expr_stmt|; comment",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(155, 160)"
      },
      {
        "commit_hash": "1d5567004306b3c6019b4e828f811220fc3fe990",
        "line_num": 118,
        "line_str": "condition|( name|currentByte operator|== operator|(",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(122, 126)"
      },
      {
        "commit_hash": "46ad24db76c6f65480736006c2da8b8e5bf8ee25",
        "line_num": 85,
        "line_str": "name|offset init|; name|i operator|<",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(90, 94)"
      },
      {
        "commit_hash": "1d5567004306b3c6019b4e828f811220fc3fe990",
        "line_num": 102,
        "line_str": "index|[ name|i index|] decl_stmt|;",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(108, 115)"
      },
      {
        "commit_hash": "46ad24db76c6f65480736006c2da8b8e5bf8ee25",
        "line_num": 69,
        "line_str": "name|stillPadding init|= literal|true decl_stmt|;",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(73, 80)"
      },
      {
        "commit_hash": "1d5567004306b3c6019b4e828f811220fc3fe990",
        "line_num": 185,
        "line_str": "name|length argument_list|) operator|+ literal|\"'\"",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(189, 195)"
      },
      {
        "commit_hash": "1d5567004306b3c6019b4e828f811220fc3fe990",
        "line_num": 119,
        "line_str": "name|currentByte operator|== operator|( name|byte",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(122, 126)"
      },
      {
        "commit_hash": "1d5567004306b3c6019b4e828f811220fc3fe990",
        "line_num": 169,
        "line_str": "operator|new name|IllegalArgumentException argument_list|( literal|\"Invalid octal digit at position \"",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(175, 186)"
      },
      {
        "commit_hash": "1d5567004306b3c6019b4e828f811220fc3fe990",
        "line_num": 103,
        "line_str": "name|i index|] decl_stmt|; if|if",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(108, 115)"
      },
      {
        "commit_hash": "46ad24db76c6f65480736006c2da8b8e5bf8ee25",
        "line_num": 70,
        "line_str": "init|= literal|true decl_stmt|; name|int",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(73, 80)"
      },
      {
        "commit_hash": "1d5567004306b3c6019b4e828f811220fc3fe990",
        "line_num": 186,
        "line_str": "argument_list|) operator|+ literal|\"'\" argument_list|)",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(189, 195)"
      },
      {
        "commit_hash": "d7398f46ccd552eb315d94bf652cc264ea21799a",
        "line_num": 294,
        "line_str": "expr_stmt|; name|buffer operator|= literal|\"abcdef \"",
        "file_path": "src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java",
        "input_file_path": "src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java",
        "input_line_num": "range(294, 295)"
      },
      {
        "commit_hash": "1d5567004306b3c6019b4e828f811220fc3fe990",
        "line_num": 170,
        "line_str": "name|IllegalArgumentException argument_list|( literal|\"Invalid octal digit at position \" operator|+",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(175, 186)"
      },
      {
        "commit_hash": "1d5567004306b3c6019b4e828f811220fc3fe990",
        "line_num": 137,
        "line_str": "block|} if|if condition|( name|currentByte",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(143, 147)"
      },
      {
        "commit_hash": "1d5567004306b3c6019b4e828f811220fc3fe990",
        "line_num": 104,
        "line_str": "index|] decl_stmt|; if|if condition|(",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(108, 115)"
      },
      {
        "commit_hash": "46ad24db76c6f65480736006c2da8b8e5bf8ee25",
        "line_num": 71,
        "line_str": "literal|true decl_stmt|; name|int name|end",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(73, 80)"
      },
      {
        "commit_hash": "1d5567004306b3c6019b4e828f811220fc3fe990",
        "line_num": 187,
        "line_str": "operator|+ literal|\"'\" argument_list|) throw|;",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(189, 195)"
      },
      {
        "commit_hash": "1d5567004306b3c6019b4e828f811220fc3fe990",
        "line_num": 154,
        "line_str": "literal|false expr_stmt|; comment if|if",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(160, 162)"
      },
      {
        "commit_hash": "46ad24db76c6f65480736006c2da8b8e5bf8ee25",
        "line_num": 88,
        "line_str": "operator|< name|end condition|; operator|++",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(96, 100)"
      },
      {
        "commit_hash": "1d5567004306b3c6019b4e828f811220fc3fe990",
        "line_num": 171,
        "line_str": "argument_list|( literal|\"Invalid octal digit at position \" operator|+ name|i",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(175, 186)"
      },
      {
        "commit_hash": "1d5567004306b3c6019b4e828f811220fc3fe990",
        "line_num": 138,
        "line_str": "if|if condition|( name|currentByte operator|==",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(143, 147)"
      },
      {
        "commit_hash": "1d5567004306b3c6019b4e828f811220fc3fe990",
        "line_num": 105,
        "line_str": "decl_stmt|; if|if condition|( name|currentByte",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(108, 115)"
      },
      {
        "commit_hash": "1d5567004306b3c6019b4e828f811220fc3fe990",
        "line_num": 188,
        "line_str": "literal|\"'\" argument_list|) throw|; block|}",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(189, 195)"
      },
      {
        "commit_hash": "1d5567004306b3c6019b4e828f811220fc3fe990",
        "line_num": 155,
        "line_str": "expr_stmt|; comment if|if condition|(",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(160, 162)"
      },
      {
        "commit_hash": "46ad24db76c6f65480736006c2da8b8e5bf8ee25",
        "line_num": 89,
        "line_str": "name|end condition|; operator|++ name|i",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(96, 100)"
      },
      {
        "commit_hash": "1d5567004306b3c6019b4e828f811220fc3fe990",
        "line_num": 172,
        "line_str": "literal|\"Invalid octal digit at position \" operator|+ name|i operator|+",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(175, 186)"
      },
      {
        "commit_hash": "1d5567004306b3c6019b4e828f811220fc3fe990",
        "line_num": 139,
        "line_str": "condition|( name|currentByte operator|== operator|(",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(143, 147)"
      },
      {
        "commit_hash": "1d5567004306b3c6019b4e828f811220fc3fe990",
        "line_num": 106,
        "line_str": "if|if condition|( name|currentByte operator|==",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(108, 115)"
      },
      {
        "commit_hash": "1d5567004306b3c6019b4e828f811220fc3fe990",
        "line_num": 412,
        "line_str": "expr_stmt|; name|fail argument_list|( literal|\"Expected IllegalArgumentException\"",
        "file_path": "src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java",
        "input_file_path": "src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java",
        "input_line_num": "range(357, 361)"
      },
      {
        "commit_hash": "1d5567004306b3c6019b4e828f811220fc3fe990",
        "line_num": 123,
        "line_str": "operator|) literal|' ' operator||| name|currentByte",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(129, 133)"
      },
      {
        "commit_hash": "46ad24db76c6f65480736006c2da8b8e5bf8ee25",
        "line_num": 90,
        "line_str": "condition|; operator|++ name|i control|)",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(96, 100)"
      },
      {
        "commit_hash": "1d5567004306b3c6019b4e828f811220fc3fe990",
        "line_num": 173,
        "line_str": "operator|+ name|i operator|+ literal|\" in '\"",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(175, 186)"
      },
      {
        "commit_hash": "1d5567004306b3c6019b4e828f811220fc3fe990",
        "line_num": 140,
        "line_str": "name|currentByte operator|== operator|( name|byte",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(143, 147)"
      },
      {
        "commit_hash": "1d5567004306b3c6019b4e828f811220fc3fe990",
        "line_num": 107,
        "line_str": "condition|( name|currentByte operator|== literal|0",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(108, 115)"
      },
      {
        "commit_hash": "1d5567004306b3c6019b4e828f811220fc3fe990",
        "line_num": 413,
        "line_str": "name|fail argument_list|( literal|\"Expected IllegalArgumentException\" argument_list|)",
        "file_path": "src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java",
        "input_file_path": "src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java",
        "input_line_num": "range(357, 361)"
      },
      {
        "commit_hash": "1d5567004306b3c6019b4e828f811220fc3fe990",
        "line_num": 124,
        "line_str": "literal|' ' operator||| name|currentByte operator|==",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(129, 133)"
      },
      {
        "commit_hash": "46ad24db76c6f65480736006c2da8b8e5bf8ee25",
        "line_num": 91,
        "line_str": "operator|++ name|i control|) block|{",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(96, 100)"
      },
      {
        "commit_hash": "1d5567004306b3c6019b4e828f811220fc3fe990",
        "line_num": 174,
        "line_str": "name|i operator|+ literal|\" in '\" operator|+",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(175, 186)"
      },
      {
        "commit_hash": "46ad24db76c6f65480736006c2da8b8e5bf8ee25",
        "line_num": 141,
        "line_str": "operator|( name|byte operator|) literal|' '",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(147, 151)"
      },
      {
        "commit_hash": "1d5567004306b3c6019b4e828f811220fc3fe990",
        "line_num": 108,
        "line_str": "name|currentByte operator|== literal|0 condition|)",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(108, 115)"
      },
      {
        "commit_hash": "1d5567004306b3c6019b4e828f811220fc3fe990",
        "line_num": 414,
        "line_str": "argument_list|( literal|\"Expected IllegalArgumentException\" argument_list|) expr_stmt|;",
        "file_path": "src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java",
        "input_file_path": "src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java",
        "input_line_num": "range(357, 361)"
      },
      {
        "commit_hash": "1d5567004306b3c6019b4e828f811220fc3fe990",
        "line_num": 125,
        "line_str": "operator||| name|currentByte operator|== literal|'0'",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(129, 133)"
      },
      {
        "commit_hash": "1d5567004306b3c6019b4e828f811220fc3fe990",
        "line_num": 175,
        "line_str": "operator|+ literal|\" in '\" operator|+ operator|new",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(175, 186)"
      },
      {
        "commit_hash": "46ad24db76c6f65480736006c2da8b8e5bf8ee25",
        "line_num": 142,
        "line_str": "name|byte operator|) literal|' ' condition|)",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(147, 151)"
      },
      {
        "commit_hash": "1d5567004306b3c6019b4e828f811220fc3fe990",
        "line_num": 415,
        "line_str": "literal|\"Expected IllegalArgumentException\" argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java",
        "input_file_path": "src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java",
        "input_line_num": "range(357, 361)"
      },
      {
        "commit_hash": "1d5567004306b3c6019b4e828f811220fc3fe990",
        "line_num": 126,
        "line_str": "name|currentByte operator|== literal|'0' condition|)",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(129, 133)"
      },
      {
        "commit_hash": "1d5567004306b3c6019b4e828f811220fc3fe990",
        "line_num": 176,
        "line_str": "literal|\" in '\" operator|+ operator|new name|String",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(175, 186)"
      },
      {
        "commit_hash": "46ad24db76c6f65480736006c2da8b8e5bf8ee25",
        "line_num": 143,
        "line_str": "operator|) literal|' ' condition|) block|{",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(147, 151)"
      },
      {
        "commit_hash": "46ad24db76c6f65480736006c2da8b8e5bf8ee25",
        "line_num": 77,
        "line_str": "operator|+ name|length decl_stmt|; for|for",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(85, 87)"
      },
      {
        "commit_hash": "46ad24db76c6f65480736006c2da8b8e5bf8ee25",
        "line_num": 127,
        "line_str": "if|if condition|( name|stillPadding condition|)",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(133, 143)"
      },
      {
        "commit_hash": "1d5567004306b3c6019b4e828f811220fc3fe990",
        "line_num": 94,
        "line_str": "name|i control|) block|{ specifier|final",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(100, 101)"
      },
      {
        "commit_hash": "1d5567004306b3c6019b4e828f811220fc3fe990",
        "line_num": 177,
        "line_str": "operator|+ operator|new name|String argument_list|(",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(175, 186)"
      },
      {
        "commit_hash": "46ad24db76c6f65480736006c2da8b8e5bf8ee25",
        "line_num": 78,
        "line_str": "name|length decl_stmt|; for|for control|(",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(85, 87)"
      },
      {
        "commit_hash": "46ad24db76c6f65480736006c2da8b8e5bf8ee25",
        "line_num": 128,
        "line_str": "condition|( name|stillPadding condition|) block|{",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(133, 143)"
      },
      {
        "commit_hash": "1d5567004306b3c6019b4e828f811220fc3fe990",
        "line_num": 178,
        "line_str": "operator|new name|String argument_list|( name|buffer",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(175, 186)"
      },
      {
        "commit_hash": "46ad24db76c6f65480736006c2da8b8e5bf8ee25",
        "line_num": 129,
        "line_str": "name|stillPadding condition|) block|{ continue|continue;",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(133, 143)"
      },
      {
        "commit_hash": "1d5567004306b3c6019b4e828f811220fc3fe990",
        "line_num": 179,
        "line_str": "name|String argument_list|( name|buffer argument_list|,",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(175, 186)"
      },
      {
        "commit_hash": "ae3c158e05af20843fb5ea72deb5b7fb1fefbd54",
        "line_num": 146,
        "line_str": "literal|' ' condition|) block|{ comment",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(151, 155)"
      },
      {
        "commit_hash": "46ad24db76c6f65480736006c2da8b8e5bf8ee25",
        "line_num": 113,
        "line_str": "operator|== operator|( name|byte operator|)",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(126, 127)"
      },
      {
        "commit_hash": "46ad24db76c6f65480736006c2da8b8e5bf8ee25",
        "line_num": 130,
        "line_str": "condition|) block|{ continue|continue; block|}",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(133, 143)"
      },
      {
        "commit_hash": "ae3c158e05af20843fb5ea72deb5b7fb1fefbd54",
        "line_num": 97,
        "line_str": "name|buffer index|[ name|i index|]",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(107, 108)"
      },
      {
        "commit_hash": "ae3c158e05af20843fb5ea72deb5b7fb1fefbd54",
        "line_num": 147,
        "line_str": "condition|) block|{ comment break|break;",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(151, 155)"
      },
      {
        "commit_hash": "46ad24db76c6f65480736006c2da8b8e5bf8ee25",
        "line_num": 131,
        "line_str": "block|{ continue|continue; block|} if|if",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(133, 143)"
      },
      {
        "commit_hash": "46ad24db76c6f65480736006c2da8b8e5bf8ee25",
        "line_num": 65,
        "line_str": "init|= literal|0 decl_stmt|; name|boolean",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(73, 80)"
      },
      {
        "commit_hash": "ae3c158e05af20843fb5ea72deb5b7fb1fefbd54",
        "line_num": 148,
        "line_str": "block|{ comment break|break; block|}",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(151, 155)"
      },
      {
        "commit_hash": "46ad24db76c6f65480736006c2da8b8e5bf8ee25",
        "line_num": 115,
        "line_str": "name|byte operator|) literal|' ' operator|||",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(128, 129)"
      },
      {
        "commit_hash": "46ad24db76c6f65480736006c2da8b8e5bf8ee25",
        "line_num": 82,
        "line_str": "name|int name|i init|= name|offset",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(90, 94)"
      },
      {
        "commit_hash": "46ad24db76c6f65480736006c2da8b8e5bf8ee25",
        "line_num": 49,
        "line_str": "name|long name|parseOctal parameter_list|( name|byte",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(55, 57)"
      },
      {
        "commit_hash": "46ad24db76c6f65480736006c2da8b8e5bf8ee25",
        "line_num": 132,
        "line_str": "continue|continue; block|} if|if condition|(",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(133, 143)"
      },
      {
        "commit_hash": "46ad24db76c6f65480736006c2da8b8e5bf8ee25",
        "line_num": 66,
        "line_str": "literal|0 decl_stmt|; name|boolean name|stillPadding",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(73, 80)"
      },
      {
        "commit_hash": "ae3c158e05af20843fb5ea72deb5b7fb1fefbd54",
        "line_num": 149,
        "line_str": "comment break|break; block|} block|}",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(151, 155)"
      },
      {
        "commit_hash": "1d5567004306b3c6019b4e828f811220fc3fe990",
        "line_num": 116,
        "line_str": "comment if|if condition|( name|currentByte",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(122, 126)"
      },
      {
        "commit_hash": "46ad24db76c6f65480736006c2da8b8e5bf8ee25",
        "line_num": 83,
        "line_str": "name|i init|= name|offset init|;",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(90, 94)"
      },
      {
        "commit_hash": "46ad24db76c6f65480736006c2da8b8e5bf8ee25",
        "line_num": 50,
        "line_str": "name|parseOctal parameter_list|( name|byte index|[]",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(55, 57)"
      },
      {
        "commit_hash": "1d5567004306b3c6019b4e828f811220fc3fe990",
        "line_num": 100,
        "line_str": "init|= name|buffer index|[ name|i",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(106, 107)"
      },
      {
        "commit_hash": "46ad24db76c6f65480736006c2da8b8e5bf8ee25",
        "line_num": 67,
        "line_str": "decl_stmt|; name|boolean name|stillPadding init|=",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(73, 80)"
      },
      {
        "commit_hash": "1d5567004306b3c6019b4e828f811220fc3fe990",
        "line_num": 183,
        "line_str": "name|offset argument_list|, name|length argument_list|)",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(189, 195)"
      },
      {
        "commit_hash": "46ad24db76c6f65480736006c2da8b8e5bf8ee25",
        "line_num": 150,
        "line_str": "name|stillPadding operator|= literal|false expr_stmt|;",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(155, 160)"
      },
      {
        "commit_hash": "1d5567004306b3c6019b4e828f811220fc3fe990",
        "line_num": 117,
        "line_str": "if|if condition|( name|currentByte operator|==",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(122, 126)"
      },
      {
        "commit_hash": "46ad24db76c6f65480736006c2da8b8e5bf8ee25",
        "line_num": 84,
        "line_str": "init|= name|offset init|; name|i",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(90, 94)"
      },
      {
        "commit_hash": "ae3c158e05af20843fb5ea72deb5b7fb1fefbd54",
        "line_num": 51,
        "line_str": "parameter_list|( name|byte index|[] name|buffer",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(57, 58)"
      }
    ]
  },
  {
    "id": 10045,
    "repo_name": "google/gson",
    "bug_commit_hash": ["765a9f1ecdfaf96f3587f488385111c9d6a4927e"],
    "fix_commit_hash": "ada597e69a78b8b99f79f79493cbf51e16045202",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "765a9f1ecdfaf96f3587f488385111c9d6a4927e",
        "line_num": 600,
        "line_str": "name|value argument_list|) condition|) block|{",
        "file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_line_num": "range(1177, 1180)"
      },
      {
        "commit_hash": "2c8bec27d48d0d9ba9d99ff5fb7a9bae36906c48",
        "line_num": 58,
        "line_str": "import|; end_import  begin_import",
        "file_path": "gson/src/test/java/com/google/gson/stream/JsonWriterTest.java",
        "input_file_path": "gson/src/test/java/com/google/gson/stream/JsonWriterTest.java",
        "input_line_num": "range(58, 68)"
      },
      {
        "commit_hash": "765a9f1ecdfaf96f3587f488385111c9d6a4927e",
        "line_num": 588,
        "line_str": "condition|( name|Double operator|. name|isNaN",
        "file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_line_num": "range(1162, 1167)"
      },
      {
        "commit_hash": "bb7f0b6bb01b0e98e32229cb528772a66a9d6075",
        "line_num": 811,
        "line_str": "name|writeDeferredName argument_list|() expr_stmt|; name|beforeValue",
        "file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_line_num": "range(1189, 1193)"
      },
      {
        "commit_hash": "765a9f1ecdfaf96f3587f488385111c9d6a4927e",
        "line_num": 584,
        "line_str": "throws|throws name|IOException block|{ if|if",
        "file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_line_num": "range(1162, 1167)"
      },
      {
        "commit_hash": "2c8bec27d48d0d9ba9d99ff5fb7a9bae36906c48",
        "line_num": 67,
        "line_str": "name|TestCase import|; end_import",
        "file_path": "gson/src/test/java/com/google/gson/stream/JsonWriterTest.java",
        "input_file_path": "gson/src/test/java/com/google/gson/stream/JsonWriterTest.java",
        "input_line_num": "range(58, 68)"
      },
      {
        "commit_hash": "c8627c8ab831dec86eeb52fc02600b22c81ba858",
        "line_num": 1150,
        "line_str": "expr_stmt|; name|beforeValue argument_list|() expr_stmt|;",
        "file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_line_num": "range(1193, 1195)"
      },
      {
        "commit_hash": "2c8bec27d48d0d9ba9d99ff5fb7a9bae36906c48",
        "line_num": 63,
        "line_str": "name|junit operator|. name|framework operator|.",
        "file_path": "gson/src/test/java/com/google/gson/stream/JsonWriterTest.java",
        "input_file_path": "gson/src/test/java/com/google/gson/stream/JsonWriterTest.java",
        "input_line_num": "range(58, 68)"
      },
      {
        "commit_hash": "765a9f1ecdfaf96f3587f488385111c9d6a4927e",
        "line_num": 601,
        "line_str": "argument_list|) condition|) block|{ throw|throw",
        "file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_line_num": "range(1177, 1180)"
      },
      {
        "commit_hash": "2c8bec27d48d0d9ba9d99ff5fb7a9bae36906c48",
        "line_num": 59,
        "line_str": "end_import  begin_import import|import",
        "file_path": "gson/src/test/java/com/google/gson/stream/JsonWriterTest.java",
        "input_file_path": "gson/src/test/java/com/google/gson/stream/JsonWriterTest.java",
        "input_line_num": "range(58, 68)"
      },
      {
        "commit_hash": "765a9f1ecdfaf96f3587f488385111c9d6a4927e",
        "line_num": 585,
        "line_str": "name|IOException block|{ if|if condition|(",
        "file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_line_num": "range(1162, 1167)"
      },
      {
        "commit_hash": "bb7f0b6bb01b0e98e32229cb528772a66a9d6075",
        "line_num": 808,
        "line_str": "argument_list|) throw|; block|} name|writeDeferredName",
        "file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_line_num": "range(1189, 1193)"
      },
      {
        "commit_hash": "2c8bec27d48d0d9ba9d99ff5fb7a9bae36906c48",
        "line_num": 64,
        "line_str": "operator|. name|framework operator|. name|TestCase",
        "file_path": "gson/src/test/java/com/google/gson/stream/JsonWriterTest.java",
        "input_file_path": "gson/src/test/java/com/google/gson/stream/JsonWriterTest.java",
        "input_line_num": "range(58, 68)"
      },
      {
        "commit_hash": "2c8bec27d48d0d9ba9d99ff5fb7a9bae36906c48",
        "line_num": 60,
        "line_str": "begin_import import|import name|junit",
        "file_path": "gson/src/test/java/com/google/gson/stream/JsonWriterTest.java",
        "input_file_path": "gson/src/test/java/com/google/gson/stream/JsonWriterTest.java",
        "input_line_num": "range(58, 68)"
      },
      {
        "commit_hash": "765a9f1ecdfaf96f3587f488385111c9d6a4927e",
        "line_num": 586,
        "line_str": "block|{ if|if condition|( name|Double",
        "file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_line_num": "range(1162, 1167)"
      },
      {
        "commit_hash": "bb7f0b6bb01b0e98e32229cb528772a66a9d6075",
        "line_num": 809,
        "line_str": "throw|; block|} name|writeDeferredName argument_list|()",
        "file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_line_num": "range(1189, 1193)"
      },
      {
        "commit_hash": "2c8bec27d48d0d9ba9d99ff5fb7a9bae36906c48",
        "line_num": 65,
        "line_str": "name|framework operator|. name|TestCase import|;",
        "file_path": "gson/src/test/java/com/google/gson/stream/JsonWriterTest.java",
        "input_file_path": "gson/src/test/java/com/google/gson/stream/JsonWriterTest.java",
        "input_line_num": "range(58, 68)"
      },
      {
        "commit_hash": "2c8bec27d48d0d9ba9d99ff5fb7a9bae36906c48",
        "line_num": 61,
        "line_str": "begin_import import|import name|junit operator|.",
        "file_path": "gson/src/test/java/com/google/gson/stream/JsonWriterTest.java",
        "input_file_path": "gson/src/test/java/com/google/gson/stream/JsonWriterTest.java",
        "input_line_num": "range(58, 68)"
      },
      {
        "commit_hash": "765a9f1ecdfaf96f3587f488385111c9d6a4927e",
        "line_num": 599,
        "line_str": "argument_list|( name|value argument_list|) condition|)",
        "file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_line_num": "range(1177, 1180)"
      },
      {
        "commit_hash": "765a9f1ecdfaf96f3587f488385111c9d6a4927e",
        "line_num": 587,
        "line_str": "if|if condition|( name|Double operator|.",
        "file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_line_num": "range(1162, 1167)"
      },
      {
        "commit_hash": "bb7f0b6bb01b0e98e32229cb528772a66a9d6075",
        "line_num": 810,
        "line_str": "block|} name|writeDeferredName argument_list|() expr_stmt|;",
        "file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_line_num": "range(1189, 1193)"
      },
      {
        "commit_hash": "2c8bec27d48d0d9ba9d99ff5fb7a9bae36906c48",
        "line_num": 66,
        "line_str": "operator|. name|TestCase import|; end_import",
        "file_path": "gson/src/test/java/com/google/gson/stream/JsonWriterTest.java",
        "input_file_path": "gson/src/test/java/com/google/gson/stream/JsonWriterTest.java",
        "input_line_num": "range(58, 68)"
      },
      {
        "commit_hash": "c8627c8ab831dec86eeb52fc02600b22c81ba858",
        "line_num": 1149,
        "line_str": "argument_list|() expr_stmt|; name|beforeValue argument_list|()",
        "file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_line_num": "range(1193, 1195)"
      },
      {
        "commit_hash": "2c8bec27d48d0d9ba9d99ff5fb7a9bae36906c48",
        "line_num": 62,
        "line_str": "import|import name|junit operator|. name|framework",
        "file_path": "gson/src/test/java/com/google/gson/stream/JsonWriterTest.java",
        "input_file_path": "gson/src/test/java/com/google/gson/stream/JsonWriterTest.java",
        "input_line_num": "range(58, 68)"
      }
    ]
  },
  {
    "id": 10046,
    "repo_name": "FasterXML/jackson-core",
    "bug_commit_hash": ["288b1f323ecaa19345474d78d8263cc443eac3d3"],
    "fix_commit_hash": "3c2c9610b6c76e2b348eb057d0a8268681d573a6",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "2343927df4929441e817e356fec2a3624a0c5b1c",
        "line_num": 707,
        "line_str": "operator|new name|IllegalArgumentException argument_list|( literal|\"Trying to release buffer not owned by the context\"",
        "file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_line_num": "range(849, 851)"
      },
      {
        "commit_hash": "288b1f323ecaa19345474d78d8263cc443eac3d3",
        "line_num": 790,
        "line_str": "operator|<= name|src operator|. name|length",
        "file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_line_num": "range(827, 831)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 412,
        "line_str": "argument_list|( name|e argument_list|, literal|\"not owned\"",
        "file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_line_num": "range(412, 416)"
      },
      {
        "commit_hash": "288b1f323ecaa19345474d78d8263cc443eac3d3",
        "line_num": 749,
        "line_str": "name|toRelease operator|. name|length operator|<=",
        "file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_line_num": "range(788, 792)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 342,
        "line_str": "argument_list|( name|e argument_list|, literal|\"not owned\"",
        "file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_line_num": "range(342, 346)"
      },
      {
        "commit_hash": "288b1f323ecaa19345474d78d8263cc443eac3d3",
        "line_num": 811,
        "line_str": "argument_list|( literal|\"Trying to release buffer not owned by the context\" argument_list|) return|;",
        "file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_line_num": "range(851, 853)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 276,
        "line_str": "argument_list|( name|e argument_list|, literal|\"not owned\"",
        "file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_line_num": "range(276, 280)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 210,
        "line_str": "argument_list|( name|e argument_list|, literal|\"not owned\"",
        "file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_line_num": "range(210, 214)"
      },
      {
        "commit_hash": "288b1f323ecaa19345474d78d8263cc443eac3d3",
        "line_num": 807,
        "line_str": "block|{ return|return operator|new name|IllegalArgumentException",
        "file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_line_num": "range(845, 848)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 144,
        "line_str": "name|e argument_list|, literal|\"not owned\" argument_list|)",
        "file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_line_num": "range(143, 147)"
      },
      {
        "commit_hash": "2343927df4929441e817e356fec2a3624a0c5b1c",
        "line_num": 708,
        "line_str": "name|IllegalArgumentException argument_list|( literal|\"Trying to release buffer not owned by the context\" argument_list|)",
        "file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_line_num": "range(849, 851)"
      },
      {
        "commit_hash": "2343927df4929441e817e356fec2a3624a0c5b1c",
        "line_num": 696,
        "line_str": "name|src parameter_list|) block|{ if|if",
        "file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_line_num": "range(776, 778)"
      },
      {
        "commit_hash": "288b1f323ecaa19345474d78d8263cc443eac3d3",
        "line_num": 787,
        "line_str": "name|toRelease operator|. name|length operator|<=",
        "file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_line_num": "range(827, 831)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 413,
        "line_str": "name|e argument_list|, literal|\"not owned\" argument_list|)",
        "file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_line_num": "range(412, 416)"
      },
      {
        "commit_hash": "288b1f323ecaa19345474d78d8263cc443eac3d3",
        "line_num": 750,
        "line_str": "operator|. name|length operator|<= name|src",
        "file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_line_num": "range(788, 792)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 343,
        "line_str": "name|e argument_list|, literal|\"not owned\" argument_list|)",
        "file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_line_num": "range(342, 346)"
      },
      {
        "commit_hash": "288b1f323ecaa19345474d78d8263cc443eac3d3",
        "line_num": 812,
        "line_str": "literal|\"Trying to release buffer not owned by the context\" argument_list|) return|; block|}",
        "file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_line_num": "range(851, 853)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 277,
        "line_str": "name|e argument_list|, literal|\"not owned\" argument_list|)",
        "file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_line_num": "range(276, 280)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 211,
        "line_str": "name|e argument_list|, literal|\"not owned\" argument_list|)",
        "file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_line_num": "range(210, 214)"
      },
      {
        "commit_hash": "288b1f323ecaa19345474d78d8263cc443eac3d3",
        "line_num": 775,
        "line_str": "name|src parameter_list|) block|{ if|if",
        "file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_line_num": "range(815, 818)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 145,
        "line_str": "argument_list|, literal|\"not owned\" argument_list|) expr_stmt|;",
        "file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_line_num": "range(143, 147)"
      },
      {
        "commit_hash": "2343927df4929441e817e356fec2a3624a0c5b1c",
        "line_num": 697,
        "line_str": "parameter_list|) block|{ if|if condition|(",
        "file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_line_num": "range(776, 778)"
      },
      {
        "commit_hash": "288b1f323ecaa19345474d78d8263cc443eac3d3",
        "line_num": 788,
        "line_str": "operator|. name|length operator|<= name|src",
        "file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_line_num": "range(827, 831)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 414,
        "line_str": "argument_list|, literal|\"not owned\" argument_list|) expr_stmt|;",
        "file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_line_num": "range(412, 416)"
      },
      {
        "commit_hash": "288b1f323ecaa19345474d78d8263cc443eac3d3",
        "line_num": 751,
        "line_str": "name|length operator|<= name|src operator|.",
        "file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_line_num": "range(788, 792)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 344,
        "line_str": "argument_list|, literal|\"not owned\" argument_list|) expr_stmt|;",
        "file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_line_num": "range(342, 346)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 278,
        "line_str": "argument_list|, literal|\"not owned\" argument_list|) expr_stmt|;",
        "file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_line_num": "range(276, 280)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 212,
        "line_str": "argument_list|, literal|\"not owned\" argument_list|) expr_stmt|;",
        "file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_line_num": "range(210, 214)"
      },
      {
        "commit_hash": "288b1f323ecaa19345474d78d8263cc443eac3d3",
        "line_num": 776,
        "line_str": "parameter_list|) block|{ if|if condition|(",
        "file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_line_num": "range(815, 818)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 146,
        "line_str": "literal|\"not owned\" argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_line_num": "range(143, 147)"
      },
      {
        "commit_hash": "288b1f323ecaa19345474d78d8263cc443eac3d3",
        "line_num": 805,
        "line_str": "name|wrongBuf parameter_list|() block|{ return|return",
        "file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_line_num": "range(845, 848)"
      },
      {
        "commit_hash": "288b1f323ecaa19345474d78d8263cc443eac3d3",
        "line_num": 739,
        "line_str": "block|{ if|if condition|( operator|(",
        "file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_line_num": "range(778, 779)"
      },
      {
        "commit_hash": "288b1f323ecaa19345474d78d8263cc443eac3d3",
        "line_num": 789,
        "line_str": "name|length operator|<= name|src operator|.",
        "file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_line_num": "range(827, 831)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 415,
        "line_str": "literal|\"not owned\" argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_line_num": "range(412, 416)"
      },
      {
        "commit_hash": "288b1f323ecaa19345474d78d8263cc443eac3d3",
        "line_num": 752,
        "line_str": "operator|<= name|src operator|. name|length",
        "file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_line_num": "range(788, 792)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 345,
        "line_str": "literal|\"not owned\" argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_line_num": "range(342, 346)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 279,
        "line_str": "literal|\"not owned\" argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_line_num": "range(276, 280)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 213,
        "line_str": "literal|\"not owned\" argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_line_num": "range(210, 214)"
      },
      {
        "commit_hash": "288b1f323ecaa19345474d78d8263cc443eac3d3",
        "line_num": 777,
        "line_str": "block|{ if|if condition|( operator|(",
        "file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_line_num": "range(815, 818)"
      },
      {
        "commit_hash": "288b1f323ecaa19345474d78d8263cc443eac3d3",
        "line_num": 806,
        "line_str": "parameter_list|() block|{ return|return operator|new",
        "file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/io/IOContext.java",
        "input_line_num": "range(845, 848)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 143,
        "line_str": "argument_list|( name|e argument_list|, literal|\"not owned\"",
        "file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_line_num": "range(143, 147)"
      }
    ]
  },
  {
    "id": 10047,
    "repo_name": "FasterXML/jackson-core",
    "bug_commit_hash": ["f15531c04f87f9e4e4724772426603a909eabe2c"],
    "fix_commit_hash": "3baa7d6742f7460bfb0af8edf48bf1575658109a",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "f15531c04f87f9e4e4724772426603a909eabe2c",
        "line_num": 1672,
        "line_str": "argument_list|( name|MAX_SEGMENT_LEN argument_list|, name|len",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1742, 1767)"
      },
      {
        "commit_hash": "f15531c04f87f9e4e4724772426603a909eabe2c",
        "line_num": 1668,
        "line_str": "else|: name|Math operator|. name|min",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1742, 1767)"
      },
      {
        "commit_hash": "f15531c04f87f9e4e4724772426603a909eabe2c",
        "line_num": 1664,
        "line_str": "name|MAX_SEGMENT_LEN operator|+ literal|1 operator|)",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1742, 1767)"
      },
      {
        "commit_hash": "f15531c04f87f9e4e4724772426603a909eabe2c",
        "line_num": 1660,
        "line_str": "name|MAX_SEGMENT_LEN operator|) condition|? operator|(",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1742, 1767)"
      },
      {
        "commit_hash": "f15531c04f87f9e4e4724772426603a909eabe2c",
        "line_num": 1656,
        "line_str": "init|= operator|( name|len operator|==",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1742, 1767)"
      },
      {
        "commit_hash": "60cb7bd0bd6f642212051e0e341b3b6e1e3e2a65",
        "line_num": 1751,
        "line_str": "argument_list|) decl_stmt|; return|return operator|(",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1773, 1776)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 251,
        "line_str": "expr_stmt|; block|} block|} end_class",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(440, 441)"
      },
      {
        "commit_hash": "f15531c04f87f9e4e4724772426603a909eabe2c",
        "line_num": 1652,
        "line_str": "decl_stmt|; comment name|int name|newLen",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1742, 1767)"
      },
      {
        "commit_hash": "f15531c04f87f9e4e4724772426603a909eabe2c",
        "line_num": 1673,
        "line_str": "name|MAX_SEGMENT_LEN argument_list|, name|len operator|+",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1742, 1767)"
      },
      {
        "commit_hash": "f15531c04f87f9e4e4724772426603a909eabe2c",
        "line_num": 1669,
        "line_str": "name|Math operator|. name|min argument_list|(",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1742, 1767)"
      },
      {
        "commit_hash": "f15531c04f87f9e4e4724772426603a909eabe2c",
        "line_num": 1665,
        "line_str": "operator|+ literal|1 operator|) else|:",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1742, 1767)"
      },
      {
        "commit_hash": "f15531c04f87f9e4e4724772426603a909eabe2c",
        "line_num": 1661,
        "line_str": "operator|) condition|? operator|( name|MAX_SEGMENT_LEN",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1742, 1767)"
      },
      {
        "commit_hash": "f15531c04f87f9e4e4724772426603a909eabe2c",
        "line_num": 1657,
        "line_str": "operator|( name|len operator|== name|MAX_SEGMENT_LEN",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1742, 1767)"
      },
      {
        "commit_hash": "60cb7bd0bd6f642212051e0e341b3b6e1e3e2a65",
        "line_num": 1752,
        "line_str": "decl_stmt|; return|return operator|( name|_currentSegment",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1773, 1776)"
      },
      {
        "commit_hash": "f15531c04f87f9e4e4724772426603a909eabe2c",
        "line_num": 1653,
        "line_str": "comment name|int name|newLen init|=",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1742, 1767)"
      },
      {
        "commit_hash": "f15531c04f87f9e4e4724772426603a909eabe2c",
        "line_num": 1674,
        "line_str": "argument_list|, name|len operator|+ operator|(",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1742, 1767)"
      },
      {
        "commit_hash": "f15531c04f87f9e4e4724772426603a909eabe2c",
        "line_num": 1670,
        "line_str": "operator|. name|min argument_list|( name|MAX_SEGMENT_LEN",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1742, 1767)"
      },
      {
        "commit_hash": "f15531c04f87f9e4e4724772426603a909eabe2c",
        "line_num": 1666,
        "line_str": "literal|1 operator|) else|: name|Math",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1742, 1767)"
      },
      {
        "commit_hash": "f15531c04f87f9e4e4724772426603a909eabe2c",
        "line_num": 1662,
        "line_str": "condition|? operator|( name|MAX_SEGMENT_LEN operator|+",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1742, 1767)"
      },
      {
        "commit_hash": "f15531c04f87f9e4e4724772426603a909eabe2c",
        "line_num": 1658,
        "line_str": "name|len operator|== name|MAX_SEGMENT_LEN operator|)",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1742, 1767)"
      },
      {
        "commit_hash": "f15531c04f87f9e4e4724772426603a909eabe2c",
        "line_num": 1654,
        "line_str": "name|int name|newLen init|= operator|(",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1742, 1767)"
      },
      {
        "commit_hash": "f15531c04f87f9e4e4724772426603a909eabe2c",
        "line_num": 1650,
        "line_str": "operator|. name|length decl_stmt|; comment",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1742, 1767)"
      },
      {
        "commit_hash": "f15531c04f87f9e4e4724772426603a909eabe2c",
        "line_num": 1679,
        "line_str": "operator|>> literal|1 operator|) argument_list|)",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1771, 1773)"
      },
      {
        "commit_hash": "f15531c04f87f9e4e4724772426603a909eabe2c",
        "line_num": 1671,
        "line_str": "name|min argument_list|( name|MAX_SEGMENT_LEN argument_list|,",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1742, 1767)"
      },
      {
        "commit_hash": "f15531c04f87f9e4e4724772426603a909eabe2c",
        "line_num": 1667,
        "line_str": "operator|) else|: name|Math operator|.",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1742, 1767)"
      },
      {
        "commit_hash": "f15531c04f87f9e4e4724772426603a909eabe2c",
        "line_num": 1663,
        "line_str": "operator|( name|MAX_SEGMENT_LEN operator|+ literal|1",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1742, 1767)"
      },
      {
        "commit_hash": "f15531c04f87f9e4e4724772426603a909eabe2c",
        "line_num": 1659,
        "line_str": "operator|== name|MAX_SEGMENT_LEN operator|) condition|?",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1742, 1767)"
      },
      {
        "commit_hash": "f15531c04f87f9e4e4724772426603a909eabe2c",
        "line_num": 1655,
        "line_str": "name|newLen init|= operator|( name|len",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1742, 1767)"
      },
      {
        "commit_hash": "60cb7bd0bd6f642212051e0e341b3b6e1e3e2a65",
        "line_num": 1750,
        "line_str": "operator|) argument_list|) decl_stmt|; return|return",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1773, 1776)"
      },
      {
        "commit_hash": "f15531c04f87f9e4e4724772426603a909eabe2c",
        "line_num": 1651,
        "line_str": "name|length decl_stmt|; comment name|int",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1742, 1767)"
      },
      {
        "commit_hash": "f15531c04f87f9e4e4724772426603a909eabe2c",
        "line_num": 1680,
        "line_str": "literal|1 operator|) argument_list|) decl_stmt|;",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(1771, 1773)"
      }
    ]
  },
  {
    "id": 10048,
    "repo_name": "FasterXML/jackson-core",
    "bug_commit_hash": ["bb639974b0928a338b4bf60b17b1f612d619e0db"],
    "fix_commit_hash": "0d9cd9fa434c0070638332b7f2243af0277461eb",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "bb639974b0928a338b4bf60b17b1f612d619e0db",
        "line_num": 457,
        "line_str": "operator|++ argument_list|) decl_stmt|; if|if",
        "file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_line_num": "range(485, 489)"
      },
      {
        "commit_hash": "bb639974b0928a338b4bf60b17b1f612d619e0db",
        "line_num": 456,
        "line_str": "name|i operator|++ argument_list|) decl_stmt|;",
        "file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_line_num": "range(485, 489)"
      },
      {
        "commit_hash": "bb639974b0928a338b4bf60b17b1f612d619e0db",
        "line_num": 455,
        "line_str": "argument_list|( name|i operator|++ argument_list|)",
        "file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_line_num": "range(485, 489)"
      },
      {
        "commit_hash": "bb639974b0928a338b4bf60b17b1f612d619e0db",
        "line_num": 454,
        "line_str": "name|charAt argument_list|( name|i operator|++",
        "file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_line_num": "range(485, 489)"
      }
    ]
  },
  {
    "id": 10049,
    "repo_name": "FasterXML/jackson-core",
    "bug_commit_hash": ["bb639974b0928a338b4bf60b17b1f612d619e0db"],
    "fix_commit_hash": "d99951470163764b3e01a119dab2822e5fd98204",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "bb639974b0928a338b4bf60b17b1f612d619e0db",
        "line_num": 458,
        "line_str": "argument_list|) decl_stmt|; if|if condition|(",
        "file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_line_num": "range(488, 490)"
      },
      {
        "commit_hash": "0d9cd9fa434c0070638332b7f2243af0277461eb",
        "line_num": 487,
        "line_str": "name|i argument_list|) decl_stmt|; if|if",
        "file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_line_num": "range(486, 488)"
      },
      {
        "commit_hash": "0d9cd9fa434c0070638332b7f2243af0277461eb",
        "line_num": 486,
        "line_str": "argument_list|( name|i argument_list|) decl_stmt|;",
        "file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_line_num": "range(486, 488)"
      },
      {
        "commit_hash": "bb639974b0928a338b4bf60b17b1f612d619e0db",
        "line_num": 451,
        "line_str": "init|= name|str operator|. name|charAt",
        "file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_line_num": "range(477, 483)"
      },
      {
        "commit_hash": "bb639974b0928a338b4bf60b17b1f612d619e0db",
        "line_num": 450,
        "line_str": "name|c init|= name|str operator|.",
        "file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_line_num": "range(477, 483)"
      },
      {
        "commit_hash": "bb639974b0928a338b4bf60b17b1f612d619e0db",
        "line_num": 449,
        "line_str": "name|char name|c init|= name|str",
        "file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_line_num": "range(477, 483)"
      },
      {
        "commit_hash": "bb639974b0928a338b4bf60b17b1f612d619e0db",
        "line_num": 448,
        "line_str": "block|{ name|char name|c init|=",
        "file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_line_num": "range(477, 483)"
      },
      {
        "commit_hash": "bb639974b0928a338b4bf60b17b1f612d619e0db",
        "line_num": 447,
        "line_str": "control|) block|{ name|char name|c",
        "file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_line_num": "range(477, 483)"
      },
      {
        "commit_hash": "bb639974b0928a338b4bf60b17b1f612d619e0db",
        "line_num": 446,
        "line_str": "name|i control|) block|{ name|char",
        "file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_line_num": "range(477, 483)"
      },
      {
        "commit_hash": "bb639974b0928a338b4bf60b17b1f612d619e0db",
        "line_num": 439,
        "line_str": "literal|0 init|; name|i operator|<",
        "file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_line_num": "range(467, 471)"
      },
      {
        "commit_hash": "bb639974b0928a338b4bf60b17b1f612d619e0db",
        "line_num": 438,
        "line_str": "init|= literal|0 init|; name|i",
        "file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_line_num": "range(467, 471)"
      },
      {
        "commit_hash": "bb639974b0928a338b4bf60b17b1f612d619e0db",
        "line_num": 437,
        "line_str": "name|i init|= literal|0 init|;",
        "file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_line_num": "range(467, 471)"
      },
      {
        "commit_hash": "bb639974b0928a338b4bf60b17b1f612d619e0db",
        "line_num": 436,
        "line_str": "name|int name|i init|= literal|0",
        "file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_line_num": "range(467, 471)"
      },
      {
        "commit_hash": "bb639974b0928a338b4bf60b17b1f612d619e0db",
        "line_num": 459,
        "line_str": "decl_stmt|; if|if condition|( name|c",
        "file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_line_num": "range(488, 490)"
      }
    ]
  },
  {
    "id": 10050,
    "repo_name": "FasterXML/jackson-core",
    "bug_commit_hash": ["f15531c04f87f9e4e4724772426603a909eabe2c"],
    "fix_commit_hash": "11f0b4090937b2aa998734aa2bf032ee8c428e84",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 19,
        "line_str": "begin_import import|import name|com operator|.",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 50)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 48,
        "line_str": "import|; end_import  begin_class",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 50)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 44,
        "line_str": "operator|. name|util operator|. name|TextBuffer",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 50)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 40,
        "line_str": "operator|. name|jackson operator|. name|core",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 50)"
      },
      {
        "commit_hash": "f15531c04f87f9e4e4724772426603a909eabe2c",
        "line_num": 673,
        "line_str": "condition|( operator|! name|_hasSegments condition|)",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(669, 670)"
      },
      {
        "commit_hash": "3baa7d6742f7460bfb0af8edf48bf1575658109a",
        "line_num": 519,
        "line_str": "block|} block|} block|} end_class",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(518, 520)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 36,
        "line_str": "import|import name|com operator|. name|fasterxml",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 50)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 32,
        "line_str": "import|; end_import  begin_import",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 50)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 28,
        "line_str": "operator|. name|util operator|. name|BufferRecycler",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 50)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 24,
        "line_str": "operator|. name|jackson operator|. name|core",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 50)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 20,
        "line_str": "import|import name|com operator|. name|fasterxml",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 50)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 49,
        "line_str": "end_import  begin_class specifier|public",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 50)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 16,
        "line_str": "package|; end_package  begin_import",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 50)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 45,
        "line_str": "name|util operator|. name|TextBuffer import|;",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 50)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 41,
        "line_str": "name|jackson operator|. name|core operator|.",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 50)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 37,
        "line_str": "name|com operator|. name|fasterxml operator|.",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 50)"
      },
      {
        "commit_hash": "0c8d86eab3670535dfcb5ad4d80f090f001aca14",
        "line_num": 670,
        "line_str": "operator|! name|_hasSegments condition|) return|return",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(670, 672)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 33,
        "line_str": "end_import  begin_import import|import",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 50)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 29,
        "line_str": "name|util operator|. name|BufferRecycler import|;",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 50)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 25,
        "line_str": "name|jackson operator|. name|core operator|.",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 50)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 21,
        "line_str": "name|com operator|. name|fasterxml operator|.",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 50)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 17,
        "line_str": "end_package  begin_import import|import",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 50)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 46,
        "line_str": "operator|. name|TextBuffer import|; end_import",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 50)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 42,
        "line_str": "operator|. name|core operator|. name|util",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 50)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 38,
        "line_str": "operator|. name|fasterxml operator|. name|jackson",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 50)"
      },
      {
        "commit_hash": "0c8d86eab3670535dfcb5ad4d80f090f001aca14",
        "line_num": 671,
        "line_str": "name|_hasSegments condition|) return|return name|_currentSegment",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(670, 672)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 34,
        "line_str": "begin_import import|import name|com",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 50)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 30,
        "line_str": "operator|. name|BufferRecycler import|; end_import",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 50)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 26,
        "line_str": "operator|. name|core operator|. name|util",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 50)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 22,
        "line_str": "operator|. name|fasterxml operator|. name|jackson",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 50)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 18,
        "line_str": "begin_import import|import name|com",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 50)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 47,
        "line_str": "name|TextBuffer import|; end_import",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 50)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 43,
        "line_str": "name|core operator|. name|util operator|.",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 50)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 39,
        "line_str": "name|fasterxml operator|. name|jackson operator|.",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 50)"
      },
      {
        "commit_hash": "3baa7d6742f7460bfb0af8edf48bf1575658109a",
        "line_num": 518,
        "line_str": "block|} block|} block|} block|}",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(518, 520)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 35,
        "line_str": "begin_import import|import name|com operator|.",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 50)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 31,
        "line_str": "name|BufferRecycler import|; end_import",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 50)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 27,
        "line_str": "name|core operator|. name|util operator|.",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 50)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 23,
        "line_str": "name|fasterxml operator|. name|jackson operator|.",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(16, 50)"
      }
    ]
  },
  {
    "id": 10051,
    "repo_name": "jhy/jsoup",
    "bug_commit_hash": ["7eeb74d133625c8819ba8da52e37f4e4db4b8a26"],
    "fix_commit_hash": "8963e2ac79a97e694c388622e935a0471267e9eb",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "561d12a9894210d9f5a8a41d655361732a39b6c8",
        "line_num": 706,
        "line_str": "argument_list|) return|; block|} return|return",
        "file_path": "src/main/java/org/jsoup/helper/DataUtil.java",
        "input_file_path": "src/main/java/org/jsoup/helper/DataUtil.java",
        "input_line_num": "range(704, 707)"
      },
      {
        "commit_hash": "cacbbfb9604fc5ce565b3547f4a7de77c037013f",
        "line_num": 118,
        "line_str": "argument_list|( literal|\"UTF-8\" argument_list|, name|DataUtil",
        "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java",
        "input_file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java",
        "input_line_num": "range(162, 166)"
      },
      {
        "commit_hash": "9c46f13fc4b17bfa6c3cb58945568ae8d8b191af",
        "line_num": 886,
        "line_str": "argument_list|) expr_stmt|; block|} block|}",
        "file_path": "src/test/java/org/jsoup/integration/UrlConnectTest.java",
        "input_file_path": "src/test/java/org/jsoup/integration/UrlConnectTest.java",
        "input_line_num": "range(1178, 1180)"
      },
      {
        "commit_hash": "7eeb74d133625c8819ba8da52e37f4e4db4b8a26",
        "line_num": 666,
        "line_str": "name|trim argument_list|() operator|. name|toUpperCase",
        "file_path": "src/main/java/org/jsoup/DataUtil.java",
        "input_file_path": "src/main/java/org/jsoup/helper/DataUtil.java",
        "input_line_num": "range(697, 699)"
      },
      {
        "commit_hash": "cacbbfb9604fc5ce565b3547f4a7de77c037013f",
        "line_num": 135,
        "line_str": "name|getCharsetFromContentType argument_list|( literal|\"text/html;charset=\\\"utf-8\\\"\" argument_list|)",
        "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java",
        "input_file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java",
        "input_line_num": "range(180, 184)"
      },
      {
        "commit_hash": "7eeb74d133625c8819ba8da52e37f4e4db4b8a26",
        "line_num": 49,
        "line_str": "literal|\"UTF-8\" argument_list|, name|DataUtil operator|.",
        "file_path": "src/test/java/org/jsoup/DataUtilTest.java",
        "input_file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java",
        "input_line_num": "range(94, 98)"
      },
      {
        "commit_hash": "7eeb74d133625c8819ba8da52e37f4e4db4b8a26",
        "line_num": 658,
        "line_str": "return|return name|m operator|. name|group",
        "file_path": "src/main/java/org/jsoup/DataUtil.java",
        "input_file_path": "src/main/java/org/jsoup/helper/DataUtil.java",
        "input_line_num": "range(687, 691)"
      },
      {
        "commit_hash": "cacbbfb9604fc5ce565b3547f4a7de77c037013f",
        "line_num": 119,
        "line_str": "literal|\"UTF-8\" argument_list|, name|DataUtil operator|.",
        "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java",
        "input_file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java",
        "input_line_num": "range(162, 166)"
      },
      {
        "commit_hash": "561d12a9894210d9f5a8a41d655361732a39b6c8",
        "line_num": 699,
        "line_str": "argument_list|() operator|. name|toUpperCase argument_list|(",
        "file_path": "src/main/java/org/jsoup/helper/DataUtil.java",
        "input_file_path": "src/main/java/org/jsoup/helper/DataUtil.java",
        "input_line_num": "range(699, 700)"
      },
      {
        "commit_hash": "9c46f13fc4b17bfa6c3cb58945568ae8d8b191af",
        "line_num": 887,
        "line_str": "expr_stmt|; block|} block|} end_class",
        "file_path": "src/test/java/org/jsoup/integration/UrlConnectTest.java",
        "input_file_path": "src/test/java/org/jsoup/integration/UrlConnectTest.java",
        "input_line_num": "range(1178, 1180)"
      },
      {
        "commit_hash": "cacbbfb9604fc5ce565b3547f4a7de77c037013f",
        "line_num": 136,
        "line_str": "argument_list|( literal|\"text/html;charset=\\\"utf-8\\\"\" argument_list|) argument_list|)",
        "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java",
        "input_file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java",
        "input_line_num": "range(180, 184)"
      },
      {
        "commit_hash": "7eeb74d133625c8819ba8da52e37f4e4db4b8a26",
        "line_num": 46,
        "line_str": "block|{ name|assertEquals argument_list|( literal|\"UTF-8\"",
        "file_path": "src/test/java/org/jsoup/DataUtilTest.java",
        "input_file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java",
        "input_line_num": "range(94, 98)"
      },
      {
        "commit_hash": "7eeb74d133625c8819ba8da52e37f4e4db4b8a26",
        "line_num": 655,
        "line_str": "argument_list|() condition|) block|{ return|return",
        "file_path": "src/main/java/org/jsoup/DataUtil.java",
        "input_file_path": "src/main/java/org/jsoup/helper/DataUtil.java",
        "input_line_num": "range(687, 691)"
      },
      {
        "commit_hash": "561d12a9894210d9f5a8a41d655361732a39b6c8",
        "line_num": 704,
        "line_str": "operator|. name|ENGLISH argument_list|) return|;",
        "file_path": "src/main/java/org/jsoup/helper/DataUtil.java",
        "input_file_path": "src/main/java/org/jsoup/helper/DataUtil.java",
        "input_line_num": "range(704, 707)"
      },
      {
        "commit_hash": "cacbbfb9604fc5ce565b3547f4a7de77c037013f",
        "line_num": 116,
        "line_str": "block|{ name|assertEquals argument_list|( literal|\"UTF-8\"",
        "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java",
        "input_file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java",
        "input_line_num": "range(162, 166)"
      },
      {
        "commit_hash": "cacbbfb9604fc5ce565b3547f4a7de77c037013f",
        "line_num": 137,
        "line_str": "literal|\"text/html;charset=\\\"utf-8\\\"\" argument_list|) argument_list|) expr_stmt|;",
        "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java",
        "input_file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java",
        "input_line_num": "range(180, 184)"
      },
      {
        "commit_hash": "7eeb74d133625c8819ba8da52e37f4e4db4b8a26",
        "line_num": 47,
        "line_str": "name|assertEquals argument_list|( literal|\"UTF-8\" argument_list|,",
        "file_path": "src/test/java/org/jsoup/DataUtilTest.java",
        "input_file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java",
        "input_line_num": "range(94, 98)"
      },
      {
        "commit_hash": "7eeb74d133625c8819ba8da52e37f4e4db4b8a26",
        "line_num": 656,
        "line_str": "condition|) block|{ return|return name|m",
        "file_path": "src/main/java/org/jsoup/DataUtil.java",
        "input_file_path": "src/main/java/org/jsoup/helper/DataUtil.java",
        "input_line_num": "range(687, 691)"
      },
      {
        "commit_hash": "561d12a9894210d9f5a8a41d655361732a39b6c8",
        "line_num": 705,
        "line_str": "name|ENGLISH argument_list|) return|; block|}",
        "file_path": "src/main/java/org/jsoup/helper/DataUtil.java",
        "input_file_path": "src/main/java/org/jsoup/helper/DataUtil.java",
        "input_line_num": "range(704, 707)"
      },
      {
        "commit_hash": "cacbbfb9604fc5ce565b3547f4a7de77c037013f",
        "line_num": 117,
        "line_str": "name|assertEquals argument_list|( literal|\"UTF-8\" argument_list|,",
        "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java",
        "input_file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java",
        "input_line_num": "range(162, 166)"
      },
      {
        "commit_hash": "7eeb74d133625c8819ba8da52e37f4e4db4b8a26",
        "line_num": 665,
        "line_str": "operator|. name|trim argument_list|() operator|.",
        "file_path": "src/main/java/org/jsoup/DataUtil.java",
        "input_file_path": "src/main/java/org/jsoup/helper/DataUtil.java",
        "input_line_num": "range(697, 699)"
      },
      {
        "commit_hash": "cacbbfb9604fc5ce565b3547f4a7de77c037013f",
        "line_num": 134,
        "line_str": "operator|. name|getCharsetFromContentType argument_list|( literal|\"text/html;charset=\\\"utf-8\\\"\"",
        "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java",
        "input_file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java",
        "input_line_num": "range(180, 184)"
      },
      {
        "commit_hash": "7eeb74d133625c8819ba8da52e37f4e4db4b8a26",
        "line_num": 48,
        "line_str": "argument_list|( literal|\"UTF-8\" argument_list|, name|DataUtil",
        "file_path": "src/test/java/org/jsoup/DataUtilTest.java",
        "input_file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java",
        "input_line_num": "range(94, 98)"
      },
      {
        "commit_hash": "7eeb74d133625c8819ba8da52e37f4e4db4b8a26",
        "line_num": 657,
        "line_str": "block|{ return|return name|m operator|.",
        "file_path": "src/main/java/org/jsoup/DataUtil.java",
        "input_file_path": "src/main/java/org/jsoup/helper/DataUtil.java",
        "input_line_num": "range(687, 691)"
      }
    ]
  },
  {
    "id": 10052,
    "repo_name": "jhy/jsoup",
    "bug_commit_hash": ["f8841edabba28d6125dd87ed72f557e85570066b"],
    "fix_commit_hash": "5e52f1b266173593fab32fe9d8a4963066b2f2fe",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "935cab0e00f289ce5369f4c217b5eb3a3d9e33e7",
        "line_num": 423,
        "line_str": "argument_list|() decl_stmt|; if|if condition|(",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(452, 458)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 13636,
        "line_str": "operator|. name|toLowerCase argument_list|() argument_list|)",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13590, 13596)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 93,
        "line_str": "argument_list|, name|Character argument_list|> name|base",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(94, 100)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 163,
        "line_str": "name|assertEquals argument_list|( literal|\"Hello&amp;&lt;&gt;&angst;&pi;&#26032; there\" argument_list|,",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(162, 166)"
      },
      {
        "commit_hash": "17486e2fa5b542b1f68b9b60efbefecd216a4a48",
        "line_num": 13148,
        "line_str": "operator|. name|put argument_list|( operator|(",
        "file_path": "src/main/java/org/jsoup/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13494, 13496)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 13637,
        "line_str": "name|toLowerCase argument_list|() argument_list|) expr_stmt|;",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13590, 13596)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 94,
        "line_str": "name|Character argument_list|> name|base decl_stmt|;",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(94, 100)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 164,
        "line_str": "argument_list|( literal|\"Hello&amp;&lt;&gt;&angst;&pi;&#26032; there\" argument_list|, name|escapedAsciiFull",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(162, 166)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 13638,
        "line_str": "argument_list|() argument_list|) expr_stmt|; block|}",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13590, 13596)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 13539,
        "line_str": "name|put argument_list|( operator|( name|String",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13496, 13509)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 95,
        "line_str": "argument_list|> name|base decl_stmt|; specifier|private",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(94, 100)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 165,
        "line_str": "literal|\"Hello&amp;&lt;&gt;&angst;&pi;&#26032; there\" argument_list|, name|escapedAsciiFull argument_list|)",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(162, 166)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 13540,
        "line_str": "argument_list|( operator|( name|String operator|)",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13496, 13509)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 96,
        "line_str": "name|base decl_stmt|; specifier|private specifier|static",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(94, 100)"
      },
      {
        "commit_hash": "17486e2fa5b542b1f68b9b60efbefecd216a4a48",
        "line_num": 13102,
        "line_str": "argument_list|> argument_list|( name|baseArray operator|.",
        "file_path": "src/main/java/org/jsoup/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13409, 13416)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 13541,
        "line_str": "operator|( name|String operator|) name|entity",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13496, 13509)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 97,
        "line_str": "decl_stmt|; specifier|private specifier|static specifier|final",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(94, 100)"
      },
      {
        "commit_hash": "17486e2fa5b542b1f68b9b60efbefecd216a4a48",
        "line_num": 13103,
        "line_str": "argument_list|( name|baseArray operator|. name|length",
        "file_path": "src/main/java/org/jsoup/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13409, 13416)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 13542,
        "line_str": "name|String operator|) name|entity index|[",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13496, 13509)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 98,
        "line_str": "specifier|private specifier|static specifier|final name|Map",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(94, 100)"
      },
      {
        "commit_hash": "17486e2fa5b542b1f68b9b60efbefecd216a4a48",
        "line_num": 13104,
        "line_str": "name|baseArray operator|. name|length argument_list|)",
        "file_path": "src/main/java/org/jsoup/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13409, 13416)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 13543,
        "line_str": "operator|) name|entity index|[ literal|0",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13496, 13509)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 169,
        "line_str": "expr_stmt|; name|assertEquals argument_list|( literal|\"Hello&amp;&lt;&gt;&aring; Ï æ° there\"",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(169, 173)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 186,
        "line_str": "name|String name|text init|= literal|\"Hello&amp;&LT&gt;&ANGST&#960;&#960&#x65B0; there&!\"",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(186, 190)"
      },
      {
        "commit_hash": "17486e2fa5b542b1f68b9b60efbefecd216a4a48",
        "line_num": 13105,
        "line_str": "operator|. name|length argument_list|) expr_stmt|;",
        "file_path": "src/main/java/org/jsoup/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13409, 13416)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 13544,
        "line_str": "name|entity index|[ literal|0 index|]",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13496, 13509)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 170,
        "line_str": "name|assertEquals argument_list|( literal|\"Hello&amp;&lt;&gt;&aring; Ï æ° there\" argument_list|,",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(169, 173)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 187,
        "line_str": "name|text init|= literal|\"Hello&amp;&LT&gt;&ANGST&#960;&#960&#x65B0; there&!\" decl_stmt|;",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(186, 190)"
      },
      {
        "commit_hash": "17486e2fa5b542b1f68b9b60efbefecd216a4a48",
        "line_num": 13106,
        "line_str": "name|length argument_list|) expr_stmt|; name|full",
        "file_path": "src/main/java/org/jsoup/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13409, 13416)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 13545,
        "line_str": "index|[ literal|0 index|] argument_list|,",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13496, 13509)"
      },
      {
        "commit_hash": "17486e2fa5b542b1f68b9b60efbefecd216a4a48",
        "line_num": 75,
        "line_str": "specifier|static specifier|final name|Map argument_list|<",
        "file_path": "src/main/java/org/jsoup/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(100, 103)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 171,
        "line_str": "argument_list|( literal|\"Hello&amp;&lt;&gt;&aring; Ï æ° there\" argument_list|, name|escapedUtf",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(169, 173)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 188,
        "line_str": "init|= literal|\"Hello&amp;&LT&gt;&ANGST&#960;&#960&#x65B0; there&!\" decl_stmt|; name|assertEquals",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(186, 190)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 155,
        "line_str": "decl_stmt|; name|assertEquals argument_list|( literal|\"Hello&amp;&lt;&gt;&aring;&#960;&#26032; there\"",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(155, 159)"
      },
      {
        "commit_hash": "17486e2fa5b542b1f68b9b60efbefecd216a4a48",
        "line_num": 13107,
        "line_str": "argument_list|) expr_stmt|; name|full operator|=",
        "file_path": "src/main/java/org/jsoup/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13409, 13416)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 13546,
        "line_str": "literal|0 index|] argument_list|, name|c",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13496, 13509)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 102,
        "line_str": "argument_list|< name|String argument_list|, name|Character",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(103, 105)"
      },
      {
        "commit_hash": "17486e2fa5b542b1f68b9b60efbefecd216a4a48",
        "line_num": 76,
        "line_str": "specifier|final name|Map argument_list|< name|String",
        "file_path": "src/main/java/org/jsoup/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(100, 103)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 172,
        "line_str": "literal|\"Hello&amp;&lt;&gt;&aring; Ï æ° there\" argument_list|, name|escapedUtf argument_list|)",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(169, 173)"
      },
      {
        "commit_hash": "17486e2fa5b542b1f68b9b60efbefecd216a4a48",
        "line_num": 13157,
        "line_str": "literal|0 index|] operator|) operator|.",
        "file_path": "src/main/java/org/jsoup/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13521, 13524)"
      },
      {
        "commit_hash": "17486e2fa5b542b1f68b9b60efbefecd216a4a48",
        "line_num": 13091,
        "line_str": "decl_stmt|; static|static block|{ name|base",
        "file_path": "src/main/java/org/jsoup/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13398, 13405)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 73,
        "line_str": "name|String name|text init|= literal|\"Hello&<> Ã Ï æ° there\"",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(73, 77)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 189,
        "line_str": "literal|\"Hello&amp;&LT&gt;&ANGST&#960;&#960&#x65B0; there&!\" decl_stmt|; name|assertEquals argument_list|(",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(186, 190)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 156,
        "line_str": "name|assertEquals argument_list|( literal|\"Hello&amp;&lt;&gt;&aring;&#960;&#26032; there\" argument_list|,",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(155, 159)"
      },
      {
        "commit_hash": "17486e2fa5b542b1f68b9b60efbefecd216a4a48",
        "line_num": 13108,
        "line_str": "expr_stmt|; name|full operator|= operator|new",
        "file_path": "src/main/java/org/jsoup/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13409, 13416)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 13547,
        "line_str": "index|] argument_list|, name|c argument_list|)",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13496, 13509)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 13448,
        "line_str": "argument_list|< name|String argument_list|, name|Character",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13405, 13409)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 103,
        "line_str": "name|String argument_list|, name|Character argument_list|>",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(103, 105)"
      },
      {
        "commit_hash": "17486e2fa5b542b1f68b9b60efbefecd216a4a48",
        "line_num": 77,
        "line_str": "name|Map argument_list|< name|String argument_list|,",
        "file_path": "src/main/java/org/jsoup/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(100, 103)"
      },
      {
        "commit_hash": "17486e2fa5b542b1f68b9b60efbefecd216a4a48",
        "line_num": 13158,
        "line_str": "index|] operator|) operator|. name|toLowerCase",
        "file_path": "src/main/java/org/jsoup/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13521, 13524)"
      },
      {
        "commit_hash": "17486e2fa5b542b1f68b9b60efbefecd216a4a48",
        "line_num": 13092,
        "line_str": "static|static block|{ name|base operator|=",
        "file_path": "src/main/java/org/jsoup/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13398, 13405)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 74,
        "line_str": "name|text init|= literal|\"Hello&<> Ã Ï æ° there\" decl_stmt|;",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(73, 77)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 157,
        "line_str": "argument_list|( literal|\"Hello&amp;&lt;&gt;&aring;&#960;&#26032; there\" argument_list|, name|escapedAscii",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(155, 159)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 13548,
        "line_str": "argument_list|, name|c argument_list|) expr_stmt|;",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13496, 13509)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 13449,
        "line_str": "name|String argument_list|, name|Character argument_list|>",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13405, 13409)"
      },
      {
        "commit_hash": "935cab0e00f289ce5369f4c217b5eb3a3d9e33e7",
        "line_num": 418,
        "line_str": "argument_list|( literal|1 argument_list|) operator|.",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(452, 458)"
      },
      {
        "commit_hash": "17486e2fa5b542b1f68b9b60efbefecd216a4a48",
        "line_num": 13159,
        "line_str": "operator|) operator|. name|toLowerCase argument_list|()",
        "file_path": "src/main/java/org/jsoup/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13521, 13524)"
      },
      {
        "commit_hash": "17486e2fa5b542b1f68b9b60efbefecd216a4a48",
        "line_num": 13093,
        "line_str": "block|{ name|base operator|= operator|new",
        "file_path": "src/main/java/org/jsoup/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13398, 13405)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 75,
        "line_str": "init|= literal|\"Hello&<> Ã Ï æ° there\" decl_stmt|; name|String",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(73, 77)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 158,
        "line_str": "literal|\"Hello&amp;&lt;&gt;&aring;&#960;&#26032; there\" argument_list|, name|escapedAscii argument_list|)",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(155, 159)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 13549,
        "line_str": "name|c argument_list|) expr_stmt|; name|baseByVal",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13496, 13509)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 13450,
        "line_str": "argument_list|, name|Character argument_list|> argument_list|(",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13405, 13409)"
      },
      {
        "commit_hash": "935cab0e00f289ce5369f4c217b5eb3a3d9e33e7",
        "line_num": 419,
        "line_str": "literal|1 argument_list|) operator|. name|toLowerCase",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(452, 458)"
      },
      {
        "commit_hash": "17486e2fa5b542b1f68b9b60efbefecd216a4a48",
        "line_num": 13094,
        "line_str": "name|base operator|= operator|new name|HashMap",
        "file_path": "src/main/java/org/jsoup/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13398, 13405)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 76,
        "line_str": "literal|\"Hello&<> Ã Ï æ° there\" decl_stmt|; name|String name|escapedAscii",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(73, 77)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 13550,
        "line_str": "argument_list|) expr_stmt|; name|baseByVal operator|.",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13496, 13509)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 13451,
        "line_str": "name|Character argument_list|> argument_list|( name|baseArray",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13405, 13409)"
      },
      {
        "commit_hash": "935cab0e00f289ce5369f4c217b5eb3a3d9e33e7",
        "line_num": 420,
        "line_str": "argument_list|) operator|. name|toLowerCase argument_list|()",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(452, 458)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 13633,
        "line_str": "literal|0 index|] operator|) operator|.",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13590, 13596)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 13567,
        "line_str": "operator|. name|toLowerCase argument_list|() argument_list|)",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13524, 13527)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 13534,
        "line_str": "argument_list|() argument_list|) decl_stmt|; name|base",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13491, 13494)"
      },
      {
        "commit_hash": "17486e2fa5b542b1f68b9b60efbefecd216a4a48",
        "line_num": 13095,
        "line_str": "operator|= operator|new name|HashMap argument_list|<",
        "file_path": "src/main/java/org/jsoup/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13398, 13405)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 13551,
        "line_str": "expr_stmt|; name|baseByVal operator|. name|put",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13496, 13509)"
      },
      {
        "commit_hash": "935cab0e00f289ce5369f4c217b5eb3a3d9e33e7",
        "line_num": 421,
        "line_str": "operator|. name|toLowerCase argument_list|() decl_stmt|;",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(452, 458)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 13634,
        "line_str": "index|] operator|) operator|. name|toLowerCase",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13590, 13596)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 13568,
        "line_str": "name|toLowerCase argument_list|() argument_list|) expr_stmt|;",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13524, 13527)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 13535,
        "line_str": "argument_list|) decl_stmt|; name|base operator|.",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13491, 13494)"
      },
      {
        "commit_hash": "17486e2fa5b542b1f68b9b60efbefecd216a4a48",
        "line_num": 13096,
        "line_str": "operator|new name|HashMap argument_list|< name|String",
        "file_path": "src/main/java/org/jsoup/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13398, 13405)"
      },
      {
        "commit_hash": "935cab0e00f289ce5369f4c217b5eb3a3d9e33e7",
        "line_num": 422,
        "line_str": "name|toLowerCase argument_list|() decl_stmt|; if|if",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(452, 458)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 13635,
        "line_str": "operator|) operator|. name|toLowerCase argument_list|()",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13590, 13596)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 13569,
        "line_str": "argument_list|() argument_list|) expr_stmt|; block|}",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13524, 13527)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 13536,
        "line_str": "decl_stmt|; name|base operator|. name|put",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13491, 13494)"
      },
      {
        "commit_hash": "17486e2fa5b542b1f68b9b60efbefecd216a4a48",
        "line_num": 13097,
        "line_str": "name|HashMap argument_list|< name|String argument_list|,",
        "file_path": "src/main/java/org/jsoup/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13398, 13405)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 162,
        "line_str": "expr_stmt|; name|assertEquals argument_list|( literal|\"Hello&amp;&lt;&gt;&angst;&pi;&#26032; there\"",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(162, 166)"
      },
      {
        "commit_hash": "17486e2fa5b542b1f68b9b60efbefecd216a4a48",
        "line_num": 13147,
        "line_str": "name|base operator|. name|put argument_list|(",
        "file_path": "src/main/java/org/jsoup/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(13494, 13496)"
      }
    ]
  },
  {
    "id": 10053,
    "repo_name": "jhy/jsoup",
    "bug_commit_hash": ["a623db776696c0e03f68e849147f6a0c57063c02"],
    "fix_commit_hash": "25ba713e1d1a97ebfee38c0df3e7e6d4d9615f97",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "ea1fb65e9ff8eee82c4e379dc3236d09a5ab02e1",
        "line_num": 207,
        "line_str": "name|key argument_list|) expr_stmt|; name|this",
        "file_path": "src/main/java/org/jsoup/nodes/Attribute.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Attribute.java",
        "input_line_num": "range(219, 220)"
      },
      {
        "commit_hash": "a29e8b5374c7ba0828752fe78b3cc3471532121b",
        "line_num": 71,
        "line_str": "operator|. name|key operator|= name|key",
        "file_path": "src/main/java/org/jsoup/nodes/Attribute.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Attribute.java",
        "input_line_num": "range(220, 224)"
      },
      {
        "commit_hash": "a29e8b5374c7ba0828752fe78b3cc3471532121b",
        "line_num": 70,
        "line_str": "name|this operator|. name|key operator|=",
        "file_path": "src/main/java/org/jsoup/nodes/Attribute.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Attribute.java",
        "input_line_num": "range(220, 224)"
      },
      {
        "commit_hash": "a29e8b5374c7ba0828752fe78b3cc3471532121b",
        "line_num": 69,
        "line_str": "expr_stmt|; name|this operator|. name|key",
        "file_path": "src/main/java/org/jsoup/nodes/Attribute.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Attribute.java",
        "input_line_num": "range(220, 224)"
      },
      {
        "commit_hash": "a29e8b5374c7ba0828752fe78b3cc3471532121b",
        "line_num": 68,
        "line_str": "argument_list|) expr_stmt|; name|this operator|.",
        "file_path": "src/main/java/org/jsoup/nodes/Attribute.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Attribute.java",
        "input_line_num": "range(220, 224)"
      },
      {
        "commit_hash": "ea1fb65e9ff8eee82c4e379dc3236d09a5ab02e1",
        "line_num": 226,
        "line_str": "comment name|this operator|. name|val",
        "file_path": "src/main/java/org/jsoup/nodes/Attribute.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Attribute.java",
        "input_line_num": "range(238, 239)"
      }
    ]
  },
  {
    "id": 10054,
    "repo_name": "jhy/jsoup",
    "bug_commit_hash": ["935cab0e00f289ce5369f4c217b5eb3a3d9e33e7"],
    "fix_commit_hash": "2e4969497c5734d90d394103728bb517644f9157",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "5e52f1b266173593fab32fe9d8a4963066b2f2fe",
        "line_num": 76,
        "line_str": "literal|\"Hello&<> Ã Ã¥ Ï æ° there\" decl_stmt|; name|String name|escapedAscii",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(73, 77)"
      },
      {
        "commit_hash": "5e52f1b266173593fab32fe9d8a4963066b2f2fe",
        "line_num": 171,
        "line_str": "argument_list|( literal|\"Hello&amp;&lt;&gt;&Aring;&aring; Ï æ° there\" argument_list|, name|escapedUtf",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(202, 206)"
      },
      {
        "commit_hash": "528b793d86be485f7b4fff51f97e67708eb632da",
        "line_num": 196,
        "line_str": "name|assertEquals argument_list|( literal|\"Hello&amp;&lt;&gt;&#197;&#229;&#960;&#26032; there\" argument_list|,",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(195, 199)"
      },
      {
        "commit_hash": "5e52f1b266173593fab32fe9d8a4963066b2f2fe",
        "line_num": 163,
        "line_str": "name|assertEquals argument_list|( literal|\"Hello&amp;&lt;&gt;&angst;&aring;&pi;&#26032; there\" argument_list|,",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(188, 192)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 192,
        "line_str": "argument_list|( literal|\"Hello&<> Ã Ï Ï æ° there&!\" argument_list|, name|Entities",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(223, 227)"
      },
      {
        "commit_hash": "5e52f1b266173593fab32fe9d8a4963066b2f2fe",
        "line_num": 188,
        "line_str": "init|= literal|\"Hello&amp;&LT&gt;&angst&#960;&#960&#x65B0; there&!\" decl_stmt|; name|assertEquals",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(219, 223)"
      },
      {
        "commit_hash": "5e52f1b266173593fab32fe9d8a4963066b2f2fe",
        "line_num": 155,
        "line_str": "decl_stmt|; name|assertEquals argument_list|( literal|\"Hello&amp;&lt;&gt;&Aring;&aring;&#960;&#26032; there\"",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(181, 185)"
      },
      {
        "commit_hash": "935cab0e00f289ce5369f4c217b5eb3a3d9e33e7",
        "line_num": 139,
        "line_str": "name|compile argument_list|( literal|\"&(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?\" argument_list|)",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(195, 199)"
      },
      {
        "commit_hash": "5e52f1b266173593fab32fe9d8a4963066b2f2fe",
        "line_num": 172,
        "line_str": "literal|\"Hello&amp;&lt;&gt;&Aring;&aring; Ï æ° there\" argument_list|, name|escapedUtf argument_list|)",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(202, 206)"
      },
      {
        "commit_hash": "5e52f1b266173593fab32fe9d8a4963066b2f2fe",
        "line_num": 73,
        "line_str": "name|String name|text init|= literal|\"Hello&<> Ã Ã¥ Ï æ° there\"",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(73, 77)"
      },
      {
        "commit_hash": "528b793d86be485f7b4fff51f97e67708eb632da",
        "line_num": 197,
        "line_str": "argument_list|( literal|\"Hello&amp;&lt;&gt;&#197;&#229;&#960;&#26032; there\" argument_list|, name|escapedAsciiXhtml",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(195, 199)"
      },
      {
        "commit_hash": "5e52f1b266173593fab32fe9d8a4963066b2f2fe",
        "line_num": 164,
        "line_str": "argument_list|( literal|\"Hello&amp;&lt;&gt;&angst;&aring;&pi;&#26032; there\" argument_list|, name|escapedAsciiFull",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(188, 192)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 193,
        "line_str": "literal|\"Hello&<> Ã Ï Ï æ° there&!\" argument_list|, name|Entities operator|.",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(223, 227)"
      },
      {
        "commit_hash": "5e52f1b266173593fab32fe9d8a4963066b2f2fe",
        "line_num": 189,
        "line_str": "literal|\"Hello&amp;&LT&gt;&angst&#960;&#960&#x65B0; there&!\" decl_stmt|; name|assertEquals argument_list|(",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(219, 223)"
      },
      {
        "commit_hash": "5e52f1b266173593fab32fe9d8a4963066b2f2fe",
        "line_num": 156,
        "line_str": "name|assertEquals argument_list|( literal|\"Hello&amp;&lt;&gt;&Aring;&aring;&#960;&#26032; there\" argument_list|,",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(181, 185)"
      },
      {
        "commit_hash": "935cab0e00f289ce5369f4c217b5eb3a3d9e33e7",
        "line_num": 140,
        "line_str": "argument_list|( literal|\"&(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?\" argument_list|) decl_stmt|;",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(195, 199)"
      },
      {
        "commit_hash": "5e52f1b266173593fab32fe9d8a4963066b2f2fe",
        "line_num": 74,
        "line_str": "name|text init|= literal|\"Hello&<> Ã Ã¥ Ï æ° there\" decl_stmt|;",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(73, 77)"
      },
      {
        "commit_hash": "5e52f1b266173593fab32fe9d8a4963066b2f2fe",
        "line_num": 169,
        "line_str": "expr_stmt|; name|assertEquals argument_list|( literal|\"Hello&amp;&lt;&gt;&Aring;&aring; Ï æ° there\"",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(202, 206)"
      },
      {
        "commit_hash": "528b793d86be485f7b4fff51f97e67708eb632da",
        "line_num": 198,
        "line_str": "literal|\"Hello&amp;&lt;&gt;&#197;&#229;&#960;&#26032; there\" argument_list|, name|escapedAsciiXhtml argument_list|)",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(195, 199)"
      },
      {
        "commit_hash": "5e52f1b266173593fab32fe9d8a4963066b2f2fe",
        "line_num": 165,
        "line_str": "literal|\"Hello&amp;&lt;&gt;&angst;&aring;&pi;&#26032; there\" argument_list|, name|escapedAsciiFull argument_list|)",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(188, 192)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 190,
        "line_str": "decl_stmt|; name|assertEquals argument_list|( literal|\"Hello&<> Ã Ï Ï æ° there&!\"",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(223, 227)"
      },
      {
        "commit_hash": "5e52f1b266173593fab32fe9d8a4963066b2f2fe",
        "line_num": 157,
        "line_str": "argument_list|( literal|\"Hello&amp;&lt;&gt;&Aring;&aring;&#960;&#26032; there\" argument_list|, name|escapedAscii",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(181, 185)"
      },
      {
        "commit_hash": "935cab0e00f289ce5369f4c217b5eb3a3d9e33e7",
        "line_num": 141,
        "line_str": "literal|\"&(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?\" argument_list|) decl_stmt|; specifier|static",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(195, 199)"
      },
      {
        "commit_hash": "5e52f1b266173593fab32fe9d8a4963066b2f2fe",
        "line_num": 186,
        "line_str": "name|String name|text init|= literal|\"Hello&amp;&LT&gt;&angst&#960;&#960&#x65B0; there&!\"",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(219, 223)"
      },
      {
        "commit_hash": "5e52f1b266173593fab32fe9d8a4963066b2f2fe",
        "line_num": 75,
        "line_str": "init|= literal|\"Hello&<> Ã Ã¥ Ï æ° there\" decl_stmt|; name|String",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(73, 77)"
      },
      {
        "commit_hash": "5e52f1b266173593fab32fe9d8a4963066b2f2fe",
        "line_num": 170,
        "line_str": "name|assertEquals argument_list|( literal|\"Hello&amp;&lt;&gt;&Aring;&aring; Ï æ° there\" argument_list|,",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(202, 206)"
      },
      {
        "commit_hash": "528b793d86be485f7b4fff51f97e67708eb632da",
        "line_num": 195,
        "line_str": "expr_stmt|; name|assertEquals argument_list|( literal|\"Hello&amp;&lt;&gt;&#197;&#229;&#960;&#26032; there\"",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(195, 199)"
      },
      {
        "commit_hash": "5e52f1b266173593fab32fe9d8a4963066b2f2fe",
        "line_num": 162,
        "line_str": "expr_stmt|; name|assertEquals argument_list|( literal|\"Hello&amp;&lt;&gt;&angst;&aring;&pi;&#26032; there\"",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(188, 192)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 191,
        "line_str": "name|assertEquals argument_list|( literal|\"Hello&<> Ã Ï Ï æ° there&!\" argument_list|,",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(223, 227)"
      },
      {
        "commit_hash": "5e52f1b266173593fab32fe9d8a4963066b2f2fe",
        "line_num": 158,
        "line_str": "literal|\"Hello&amp;&lt;&gt;&Aring;&aring;&#960;&#26032; there\" argument_list|, name|escapedAscii argument_list|)",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(181, 185)"
      },
      {
        "commit_hash": "5e52f1b266173593fab32fe9d8a4963066b2f2fe",
        "line_num": 187,
        "line_str": "name|text init|= literal|\"Hello&amp;&LT&gt;&angst&#960;&#960&#x65B0; there&!\" decl_stmt|;",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(219, 223)"
      },
      {
        "commit_hash": "935cab0e00f289ce5369f4c217b5eb3a3d9e33e7",
        "line_num": 138,
        "line_str": "operator|. name|compile argument_list|( literal|\"&(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?\"",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(195, 199)"
      }
    ]
  },
  {
    "id": 10055,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": ["01ab63a0f1d4b8d17d86dc4be56cbc7b92154a48"],
    "fix_commit_hash": "bd59a1908a1df3364918be7b07782500616b15ac",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "01ab63a0f1d4b8d17d86dc4be56cbc7b92154a48",
        "line_num": 639,
        "line_str": "parameter_list|) block|{ return|return name|Class",
        "file_path": "src/main/java/org/apache/commons/lang3/SerializationUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/SerializationUtils.java",
        "input_line_num": "range(649, 651)"
      },
      {
        "commit_hash": "01ab63a0f1d4b8d17d86dc4be56cbc7b92154a48",
        "line_num": 638,
        "line_str": "name|ex parameter_list|) block|{ return|return",
        "file_path": "src/main/java/org/apache/commons/lang3/SerializationUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/SerializationUtils.java",
        "input_line_num": "range(649, 651)"
      },
      {
        "commit_hash": "01ab63a0f1d4b8d17d86dc4be56cbc7b92154a48",
        "line_num": 564,
        "line_str": "block|{ specifier|private name|ClassLoader name|classLoader",
        "file_path": "src/main/java/org/apache/commons/lang3/SerializationUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/SerializationUtils.java",
        "input_line_num": "range(574, 576)"
      },
      {
        "commit_hash": "01ab63a0f1d4b8d17d86dc4be56cbc7b92154a48",
        "line_num": 563,
        "line_str": "name|ObjectInputStream block|{ specifier|private name|ClassLoader",
        "file_path": "src/main/java/org/apache/commons/lang3/SerializationUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/SerializationUtils.java",
        "input_line_num": "range(574, 576)"
      },
      {
        "commit_hash": "01ab63a0f1d4b8d17d86dc4be56cbc7b92154a48",
        "line_num": 658,
        "line_str": "return|; block|} block|} block|}",
        "file_path": "src/main/java/org/apache/commons/lang3/SerializationUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/SerializationUtils.java",
        "input_line_num": "range(669, 670)"
      },
      {
        "commit_hash": "01ab63a0f1d4b8d17d86dc4be56cbc7b92154a48",
        "line_num": 591,
        "line_str": "name|classLoader expr_stmt|; block|} comment",
        "file_path": "src/main/java/org/apache/commons/lang3/SerializationUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/SerializationUtils.java",
        "input_line_num": "range(601, 603)"
      },
      {
        "commit_hash": "01ab63a0f1d4b8d17d86dc4be56cbc7b92154a48",
        "line_num": 590,
        "line_str": "operator|= name|classLoader expr_stmt|; block|}",
        "file_path": "src/main/java/org/apache/commons/lang3/SerializationUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/SerializationUtils.java",
        "input_line_num": "range(601, 603)"
      },
      {
        "commit_hash": "d23b22c78078ee7468e797e80188ae9508c0eee0",
        "line_num": 363,
        "line_str": "argument_list|) return|; block|} block|}",
        "file_path": "src/java/org/apache/commons/lang/SerializationUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/SerializationUtils.java",
        "input_line_num": "range(668, 669)"
      },
      {
        "commit_hash": "d23b22c78078ee7468e797e80188ae9508c0eee0",
        "line_num": 1576,
        "line_str": "expr_stmt|; block|} block|} end_class",
        "file_path": "src/test/org/apache/commons/lang/SerializationUtilsTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/SerializationUtilsTest.java",
        "input_line_num": "range(1987, 1989)"
      },
      {
        "commit_hash": "d23b22c78078ee7468e797e80188ae9508c0eee0",
        "line_num": 1575,
        "line_str": "argument_list|() expr_stmt|; block|} block|}",
        "file_path": "src/test/org/apache/commons/lang/SerializationUtilsTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/SerializationUtilsTest.java",
        "input_line_num": "range(1987, 1989)"
      }
    ]
  },
  {
    "id": 10056,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": ["cf2e48a05c250feb636dd337dae1ffb7a1d9d411"],
    "fix_commit_hash": "cf7211f9d7d70d56501d8c4c827bf9ce3cac5f0b",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "19b6372018c6b800f8e2bf1b85e15ef4cbd500da",
        "line_num": 3670,
        "line_str": "argument_list|, name|StringUtils operator|. name|equals",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3734, 3735)"
      },
      {
        "commit_hash": "704f45e9346848b19560b08ed62b896dd4d0df44",
        "line_num": 1858,
        "line_str": "argument_list|) argument_list|) expr_stmt|; name|assertEquals",
        "file_path": "src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3756, 3760)"
      },
      {
        "commit_hash": "251a47618ed658d9ffb9c8522248b76ee345a98c",
        "line_num": 1726,
        "line_str": "argument_list|( literal|false argument_list|, name|StringUtils",
        "file_path": "src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3728, 3734)"
      },
      {
        "commit_hash": "19b6372018c6b800f8e2bf1b85e15ef4cbd500da",
        "line_num": 3600,
        "line_str": "argument_list|( literal|true argument_list|, name|StringUtils",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3662, 3667)"
      },
      {
        "commit_hash": "cf2e48a05c250feb636dd337dae1ffb7a1d9d411",
        "line_num": 1186,
        "line_str": "else|: name|cs1 operator|. name|equals",
        "file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(1522, 1534)"
      },
      {
        "commit_hash": "251a47618ed658d9ffb9c8522248b76ee345a98c",
        "line_num": 1722,
        "line_str": "argument_list|) argument_list|) expr_stmt|; name|assertEquals",
        "file_path": "src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3728, 3734)"
      },
      {
        "commit_hash": "cf2e48a05c250feb636dd337dae1ffb7a1d9d411",
        "line_num": 1182,
        "line_str": "condition|? name|cs2 operator|== literal|null",
        "file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(1522, 1534)"
      },
      {
        "commit_hash": "704f45e9346848b19560b08ed62b896dd4d0df44",
        "line_num": 1846,
        "line_str": "expr_stmt|; name|assertEquals argument_list|( literal|false",
        "file_path": "src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3744, 3748)"
      },
      {
        "commit_hash": "cf2e48a05c250feb636dd337dae1ffb7a1d9d411",
        "line_num": 1178,
        "line_str": "return|return name|cs1 operator|== literal|null",
        "file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(1522, 1534)"
      },
      {
        "commit_hash": "19b6372018c6b800f8e2bf1b85e15ef4cbd500da",
        "line_num": 3588,
        "line_str": "argument_list|, name|StringUtils operator|. name|equals",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3646, 3653)"
      },
      {
        "commit_hash": "19b6372018c6b800f8e2bf1b85e15ef4cbd500da",
        "line_num": 3584,
        "line_str": "block|{ name|assertEquals argument_list|( literal|true",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3646, 3653)"
      },
      {
        "commit_hash": "19b6372018c6b800f8e2bf1b85e15ef4cbd500da",
        "line_num": 3613,
        "line_str": "name|assertEquals argument_list|( literal|true argument_list|,",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3676, 3681)"
      },
      {
        "commit_hash": "704f45e9346848b19560b08ed62b896dd4d0df44",
        "line_num": 1859,
        "line_str": "argument_list|) expr_stmt|; name|assertEquals argument_list|(",
        "file_path": "src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3756, 3760)"
      },
      {
        "commit_hash": "19b6372018c6b800f8e2bf1b85e15ef4cbd500da",
        "line_num": 3601,
        "line_str": "literal|true argument_list|, name|StringUtils operator|.",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3662, 3667)"
      },
      {
        "commit_hash": "19b6372018c6b800f8e2bf1b85e15ef4cbd500da",
        "line_num": 3696,
        "line_str": "argument_list|( literal|false argument_list|, name|StringUtils",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3760, 3763)"
      },
      {
        "commit_hash": "251a47618ed658d9ffb9c8522248b76ee345a98c",
        "line_num": 1727,
        "line_str": "literal|false argument_list|, name|StringUtils operator|.",
        "file_path": "src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3728, 3734)"
      },
      {
        "commit_hash": "251a47618ed658d9ffb9c8522248b76ee345a98c",
        "line_num": 1723,
        "line_str": "argument_list|) expr_stmt|; name|assertEquals argument_list|(",
        "file_path": "src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3728, 3734)"
      },
      {
        "commit_hash": "cf2e48a05c250feb636dd337dae1ffb7a1d9d411",
        "line_num": 1183,
        "line_str": "name|cs2 operator|== literal|null else|:",
        "file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(1522, 1534)"
      },
      {
        "commit_hash": "704f45e9346848b19560b08ed62b896dd4d0df44",
        "line_num": 1847,
        "line_str": "name|assertEquals argument_list|( literal|false argument_list|,",
        "file_path": "src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3744, 3748)"
      },
      {
        "commit_hash": "cf2e48a05c250feb636dd337dae1ffb7a1d9d411",
        "line_num": 1179,
        "line_str": "name|cs1 operator|== literal|null condition|?",
        "file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(1522, 1534)"
      },
      {
        "commit_hash": "19b6372018c6b800f8e2bf1b85e15ef4cbd500da",
        "line_num": 3583,
        "line_str": "parameter_list|() block|{ name|assertEquals argument_list|(",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3646, 3653)"
      },
      {
        "commit_hash": "cf2e48a05c250feb636dd337dae1ffb7a1d9d411",
        "line_num": 1175,
        "line_str": "name|cs2 parameter_list|) block|{ return|return",
        "file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(1522, 1534)"
      },
      {
        "commit_hash": "19b6372018c6b800f8e2bf1b85e15ef4cbd500da",
        "line_num": 3684,
        "line_str": "argument_list|, name|StringUtils operator|. name|equals",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3748, 3749)"
      },
      {
        "commit_hash": "19b6372018c6b800f8e2bf1b85e15ef4cbd500da",
        "line_num": 3585,
        "line_str": "name|assertEquals argument_list|( literal|true argument_list|,",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3646, 3653)"
      },
      {
        "commit_hash": "251a47618ed658d9ffb9c8522248b76ee345a98c",
        "line_num": 1711,
        "line_str": "name|assertEquals argument_list|( literal|false argument_list|,",
        "file_path": "src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3704, 3707)"
      },
      {
        "commit_hash": "19b6372018c6b800f8e2bf1b85e15ef4cbd500da",
        "line_num": 3614,
        "line_str": "argument_list|( literal|true argument_list|, name|StringUtils",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3676, 3681)"
      },
      {
        "commit_hash": "19b6372018c6b800f8e2bf1b85e15ef4cbd500da",
        "line_num": 3643,
        "line_str": "argument_list|, name|StringUtils operator|. name|equals",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3707, 3708)"
      },
      {
        "commit_hash": "251a47618ed658d9ffb9c8522248b76ee345a98c",
        "line_num": 1736,
        "line_str": "argument_list|) argument_list|) expr_stmt|; name|assertEquals",
        "file_path": "src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3742, 3744)"
      },
      {
        "commit_hash": "19b6372018c6b800f8e2bf1b85e15ef4cbd500da",
        "line_num": 3639,
        "line_str": "expr_stmt|; name|assertEquals argument_list|( literal|false",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3703, 3704)"
      },
      {
        "commit_hash": "704f45e9346848b19560b08ed62b896dd4d0df44",
        "line_num": 1860,
        "line_str": "expr_stmt|; name|assertEquals argument_list|( literal|false",
        "file_path": "src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3756, 3760)"
      },
      {
        "commit_hash": "19b6372018c6b800f8e2bf1b85e15ef4cbd500da",
        "line_num": 3602,
        "line_str": "argument_list|, name|StringUtils operator|. name|equals",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3662, 3667)"
      },
      {
        "commit_hash": "19b6372018c6b800f8e2bf1b85e15ef4cbd500da",
        "line_num": 3697,
        "line_str": "literal|false argument_list|, name|StringUtils operator|.",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3760, 3763)"
      },
      {
        "commit_hash": "19b6372018c6b800f8e2bf1b85e15ef4cbd500da",
        "line_num": 3598,
        "line_str": "expr_stmt|; name|assertEquals argument_list|( literal|true",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3662, 3667)"
      },
      {
        "commit_hash": "cf2e48a05c250feb636dd337dae1ffb7a1d9d411",
        "line_num": 1184,
        "line_str": "operator|== literal|null else|: name|cs1",
        "file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(1522, 1534)"
      },
      {
        "commit_hash": "e28c95ac2ce95852add84bdf3d2d9c00ac98f5de",
        "line_num": 3860,
        "line_str": "argument_list|) argument_list|) expr_stmt|; name|assertEquals",
        "file_path": "src/test/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3660, 3662)"
      },
      {
        "commit_hash": "e28c95ac2ce95852add84bdf3d2d9c00ac98f5de",
        "line_num": 3893,
        "line_str": "argument_list|) argument_list|) expr_stmt|; name|assertEquals",
        "file_path": "src/test/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3701, 3703)"
      },
      {
        "commit_hash": "251a47618ed658d9ffb9c8522248b76ee345a98c",
        "line_num": 1724,
        "line_str": "expr_stmt|; name|assertEquals argument_list|( literal|false",
        "file_path": "src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3728, 3734)"
      },
      {
        "commit_hash": "cf2e48a05c250feb636dd337dae1ffb7a1d9d411",
        "line_num": 1180,
        "line_str": "operator|== literal|null condition|? name|cs2",
        "file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(1522, 1534)"
      },
      {
        "commit_hash": "704f45e9346848b19560b08ed62b896dd4d0df44",
        "line_num": 1848,
        "line_str": "argument_list|( literal|false argument_list|, name|StringUtils",
        "file_path": "src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3744, 3748)"
      },
      {
        "commit_hash": "cf2e48a05c250feb636dd337dae1ffb7a1d9d411",
        "line_num": 1176,
        "line_str": "parameter_list|) block|{ return|return name|cs1",
        "file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(1522, 1534)"
      },
      {
        "commit_hash": "19b6372018c6b800f8e2bf1b85e15ef4cbd500da",
        "line_num": 3586,
        "line_str": "argument_list|( literal|true argument_list|, name|StringUtils",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3646, 3653)"
      },
      {
        "commit_hash": "251a47618ed658d9ffb9c8522248b76ee345a98c",
        "line_num": 1712,
        "line_str": "argument_list|( literal|false argument_list|, name|StringUtils",
        "file_path": "src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3704, 3707)"
      },
      {
        "commit_hash": "19b6372018c6b800f8e2bf1b85e15ef4cbd500da",
        "line_num": 3615,
        "line_str": "literal|true argument_list|, name|StringUtils operator|.",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3676, 3681)"
      },
      {
        "commit_hash": "19b6372018c6b800f8e2bf1b85e15ef4cbd500da",
        "line_num": 3582,
        "line_str": "name|testEquals parameter_list|() block|{ name|assertEquals",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3646, 3653)"
      },
      {
        "commit_hash": "e28c95ac2ce95852add84bdf3d2d9c00ac98f5de",
        "line_num": 3877,
        "line_str": "argument_list|) argument_list|) expr_stmt|; name|assertEquals",
        "file_path": "src/test/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3674, 3676)"
      },
      {
        "commit_hash": "251a47618ed658d9ffb9c8522248b76ee345a98c",
        "line_num": 1737,
        "line_str": "argument_list|) expr_stmt|; name|assertEquals argument_list|(",
        "file_path": "src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3742, 3744)"
      },
      {
        "commit_hash": "704f45e9346848b19560b08ed62b896dd4d0df44",
        "line_num": 1861,
        "line_str": "name|assertEquals argument_list|( literal|false argument_list|,",
        "file_path": "src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3756, 3760)"
      },
      {
        "commit_hash": "19b6372018c6b800f8e2bf1b85e15ef4cbd500da",
        "line_num": 3698,
        "line_str": "argument_list|, name|StringUtils operator|. name|equals",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3760, 3763)"
      },
      {
        "commit_hash": "19b6372018c6b800f8e2bf1b85e15ef4cbd500da",
        "line_num": 3599,
        "line_str": "name|assertEquals argument_list|( literal|true argument_list|,",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3662, 3667)"
      },
      {
        "commit_hash": "cf2e48a05c250feb636dd337dae1ffb7a1d9d411",
        "line_num": 1185,
        "line_str": "literal|null else|: name|cs1 operator|.",
        "file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(1522, 1534)"
      },
      {
        "commit_hash": "e28c95ac2ce95852add84bdf3d2d9c00ac98f5de",
        "line_num": 3861,
        "line_str": "argument_list|) expr_stmt|; name|assertEquals argument_list|(",
        "file_path": "src/test/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3660, 3662)"
      },
      {
        "commit_hash": "e28c95ac2ce95852add84bdf3d2d9c00ac98f5de",
        "line_num": 3894,
        "line_str": "argument_list|) expr_stmt|; name|assertEquals argument_list|(",
        "file_path": "src/test/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3701, 3703)"
      },
      {
        "commit_hash": "251a47618ed658d9ffb9c8522248b76ee345a98c",
        "line_num": 1725,
        "line_str": "name|assertEquals argument_list|( literal|false argument_list|,",
        "file_path": "src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3728, 3734)"
      },
      {
        "commit_hash": "cf2e48a05c250feb636dd337dae1ffb7a1d9d411",
        "line_num": 1181,
        "line_str": "literal|null condition|? name|cs2 operator|==",
        "file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(1522, 1534)"
      },
      {
        "commit_hash": "704f45e9346848b19560b08ed62b896dd4d0df44",
        "line_num": 1849,
        "line_str": "literal|false argument_list|, name|StringUtils operator|.",
        "file_path": "src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3744, 3748)"
      },
      {
        "commit_hash": "cf2e48a05c250feb636dd337dae1ffb7a1d9d411",
        "line_num": 1177,
        "line_str": "block|{ return|return name|cs1 operator|==",
        "file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(1522, 1534)"
      },
      {
        "commit_hash": "19b6372018c6b800f8e2bf1b85e15ef4cbd500da",
        "line_num": 3587,
        "line_str": "literal|true argument_list|, name|StringUtils operator|.",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3646, 3653)"
      },
      {
        "commit_hash": "251a47618ed658d9ffb9c8522248b76ee345a98c",
        "line_num": 1713,
        "line_str": "literal|false argument_list|, name|StringUtils operator|.",
        "file_path": "src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3704, 3707)"
      },
      {
        "commit_hash": "19b6372018c6b800f8e2bf1b85e15ef4cbd500da",
        "line_num": 3616,
        "line_str": "argument_list|, name|StringUtils operator|. name|equals",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3676, 3681)"
      },
      {
        "commit_hash": "e28c95ac2ce95852add84bdf3d2d9c00ac98f5de",
        "line_num": 3878,
        "line_str": "argument_list|) expr_stmt|; name|assertEquals argument_list|(",
        "file_path": "src/test/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3674, 3676)"
      },
      {
        "commit_hash": "19b6372018c6b800f8e2bf1b85e15ef4cbd500da",
        "line_num": 3612,
        "line_str": "expr_stmt|; name|assertEquals argument_list|( literal|true",
        "file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3676, 3681)"
      }
    ]
  },
  {
    "id": 10057,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": ["a2447673d9ca590a3ed967e7a30b1f9cd18e78d1"],
    "fix_commit_hash": "0b3a8a3128890f710700d04e38df48b883d11d91",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 248,
        "line_str": "literal|0 operator|) operator|+ literal|1",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(301, 305)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 149,
        "line_str": "name|end argument_list|) operator|!= literal|';'",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(160, 165)"
      },
      {
        "commit_hash": "8bbab3898bb91f1efa442b3997f92be8ce191d02",
        "line_num": 121,
        "line_str": "argument_list|( literal|\"Failed to ignore when last character is&\" argument_list|, name|expected",
        "file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_line_num": "range(119, 123)"
      },
      {
        "commit_hash": "8bbab3898bb91f1efa442b3997f92be8ce191d02",
        "line_num": 72,
        "line_str": "throws|throws name|IOException block|{ if|if",
        "file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(72, 75)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 141,
        "line_str": "name|start decl_stmt|; while|while condition|(",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(152, 157)"
      },
      {
        "commit_hash": "8bbab3898bb91f1efa442b3997f92be8ce191d02",
        "line_num": 93,
        "line_str": "operator|- literal|1 operator|) operator|&&",
        "file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(85, 96)"
      },
      {
        "commit_hash": "8bbab3898bb91f1efa442b3997f92be8ce191d02",
        "line_num": 105,
        "line_str": "name|String name|expected init|= name|input",
        "file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_line_num": "range(105, 109)"
      },
      {
        "commit_hash": "8bbab3898bb91f1efa442b3997f92be8ce191d02",
        "line_num": 89,
        "line_str": "name|input operator|. name|length argument_list|()",
        "file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(85, 96)"
      },
      {
        "commit_hash": "8bbab3898bb91f1efa442b3997f92be8ce191d02",
        "line_num": 101,
        "line_str": "name|input init|= literal|\"Test&\" decl_stmt|;",
        "file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_line_num": "range(100, 104)"
      },
      {
        "commit_hash": "8bbab3898bb91f1efa442b3997f92be8ce191d02",
        "line_num": 85,
        "line_str": "operator|&& name|index operator|< operator|(",
        "file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(85, 96)"
      },
      {
        "commit_hash": "3e1afecc200d7e3be9537c95b7cf52a7c5031300",
        "line_num": 275,
        "line_str": "expr_stmt|; block|} return|return literal|2",
        "file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(284, 287)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 220,
        "line_str": "parameter_list|) block|{ return|return literal|0",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(231, 234)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 249,
        "line_str": "operator|) operator|+ literal|1 return|;",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(301, 305)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 150,
        "line_str": "argument_list|) operator|!= literal|';' condition|)",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(160, 165)"
      },
      {
        "commit_hash": "8bbab3898bb91f1efa442b3997f92be8ce191d02",
        "line_num": 122,
        "line_str": "literal|\"Failed to ignore when last character is&\" argument_list|, name|expected argument_list|,",
        "file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_line_num": "range(119, 123)"
      },
      {
        "commit_hash": "8bbab3898bb91f1efa442b3997f92be8ce191d02",
        "line_num": 73,
        "line_str": "name|IOException block|{ if|if condition|(",
        "file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(72, 75)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 142,
        "line_str": "decl_stmt|; while|while condition|( name|input",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(152, 157)"
      },
      {
        "commit_hash": "8bbab3898bb91f1efa442b3997f92be8ce191d02",
        "line_num": 94,
        "line_str": "literal|1 operator|) operator|&& name|input",
        "file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(85, 96)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 134,
        "line_str": "operator|= literal|true expr_stmt|; block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(146, 149)"
      },
      {
        "commit_hash": "8bbab3898bb91f1efa442b3997f92be8ce191d02",
        "line_num": 90,
        "line_str": "operator|. name|length argument_list|() operator|-",
        "file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(85, 96)"
      },
      {
        "commit_hash": "8bbab3898bb91f1efa442b3997f92be8ce191d02",
        "line_num": 106,
        "line_str": "name|expected init|= name|input decl_stmt|;",
        "file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_line_num": "range(105, 109)"
      },
      {
        "commit_hash": "8bbab3898bb91f1efa442b3997f92be8ce191d02",
        "line_num": 102,
        "line_str": "init|= literal|\"Test&\" decl_stmt|; name|String",
        "file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_line_num": "range(100, 104)"
      },
      {
        "commit_hash": "8bbab3898bb91f1efa442b3997f92be8ce191d02",
        "line_num": 86,
        "line_str": "name|index operator|< operator|( name|input",
        "file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(85, 96)"
      },
      {
        "commit_hash": "3e1afecc200d7e3be9537c95b7cf52a7c5031300",
        "line_num": 276,
        "line_str": "block|} return|return literal|2 operator|+",
        "file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(284, 287)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 221,
        "line_str": "block|{ return|return literal|0 return|;",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(231, 234)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 250,
        "line_str": "operator|+ literal|1 return|; block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(301, 305)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 151,
        "line_str": "operator|!= literal|';' condition|) block|{",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(160, 165)"
      },
      {
        "commit_hash": "8bbab3898bb91f1efa442b3997f92be8ce191d02",
        "line_num": 74,
        "line_str": "block|{ if|if condition|( name|input",
        "file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(72, 75)"
      },
      {
        "commit_hash": "8bbab3898bb91f1efa442b3997f92be8ce191d02",
        "line_num": 119,
        "line_str": "decl_stmt|; name|assertEquals argument_list|( literal|\"Failed to ignore when last character is&\"",
        "file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_line_num": "range(119, 123)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 143,
        "line_str": "while|while condition|( name|input operator|.",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(152, 157)"
      },
      {
        "commit_hash": "8bbab3898bb91f1efa442b3997f92be8ce191d02",
        "line_num": 95,
        "line_str": "operator|) operator|&& name|input operator|.",
        "file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(85, 96)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 135,
        "line_str": "literal|true expr_stmt|; block|} name|int",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(146, 149)"
      },
      {
        "commit_hash": "8bbab3898bb91f1efa442b3997f92be8ce191d02",
        "line_num": 91,
        "line_str": "name|length argument_list|() operator|- literal|1",
        "file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(85, 96)"
      },
      {
        "commit_hash": "8bbab3898bb91f1efa442b3997f92be8ce191d02",
        "line_num": 107,
        "line_str": "init|= name|input decl_stmt|; name|String",
        "file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_line_num": "range(105, 109)"
      },
      {
        "commit_hash": "8bbab3898bb91f1efa442b3997f92be8ce191d02",
        "line_num": 103,
        "line_str": "literal|\"Test&\" decl_stmt|; name|String name|expected",
        "file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_line_num": "range(100, 104)"
      },
      {
        "commit_hash": "8bbab3898bb91f1efa442b3997f92be8ce191d02",
        "line_num": 87,
        "line_str": "operator|< operator|( name|input operator|.",
        "file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(85, 96)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 251,
        "line_str": "literal|1 return|; block|} return|return",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(301, 305)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 152,
        "line_str": "literal|';' condition|) block|{ name|end",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(160, 165)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 148,
        "line_str": "argument_list|( name|end argument_list|) operator|!=",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(160, 165)"
      },
      {
        "commit_hash": "8bbab3898bb91f1efa442b3997f92be8ce191d02",
        "line_num": 120,
        "line_str": "name|assertEquals argument_list|( literal|\"Failed to ignore when last character is&\" argument_list|,",
        "file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_line_num": "range(119, 123)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 144,
        "line_str": "condition|( name|input operator|. name|charAt",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(152, 157)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 140,
        "line_str": "init|= name|start decl_stmt|; while|while",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(152, 157)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 136,
        "line_str": "expr_stmt|; block|} name|int name|end",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(146, 149)"
      },
      {
        "commit_hash": "8bbab3898bb91f1efa442b3997f92be8ce191d02",
        "line_num": 92,
        "line_str": "argument_list|() operator|- literal|1 operator|)",
        "file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(85, 96)"
      },
      {
        "commit_hash": "8bbab3898bb91f1efa442b3997f92be8ce191d02",
        "line_num": 108,
        "line_str": "name|input decl_stmt|; name|String name|result",
        "file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_line_num": "range(105, 109)"
      },
      {
        "commit_hash": "8bbab3898bb91f1efa442b3997f92be8ce191d02",
        "line_num": 88,
        "line_str": "operator|( name|input operator|. name|length",
        "file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(85, 96)"
      },
      {
        "commit_hash": "8bbab3898bb91f1efa442b3997f92be8ce191d02",
        "line_num": 100,
        "line_str": "name|String name|input init|= literal|\"Test&\"",
        "file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_line_num": "range(100, 104)"
      },
      {
        "commit_hash": "3e1afecc200d7e3be9537c95b7cf52a7c5031300",
        "line_num": 274,
        "line_str": "argument_list|) expr_stmt|; block|} return|return",
        "file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(284, 287)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 219,
        "line_str": "name|nfe parameter_list|) block|{ return|return",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(231, 234)"
      }
    ]
  },
  {
    "id": 10058,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": ["2a41c12c95bb41f7b07a270927b27f3bc5098621"],
    "fix_commit_hash": "55f642725742513824975af0e5e91cb1920b6d72",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "2a41c12c95bb41f7b07a270927b27f3bc5098621",
        "line_num": 644,
        "line_str": "argument_list|( name|Calendar operator|. name|HOUR",
        "file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/time/DateUtils.java",
        "input_line_num": "range(700, 704)"
      },
      {
        "commit_hash": "2a41c12c95bb41f7b07a270927b27f3bc5098621",
        "line_num": 638,
        "line_str": "name|HOUR argument_list|) operator|== name|cal2",
        "file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/time/DateUtils.java",
        "input_line_num": "range(691, 695)"
      },
      {
        "commit_hash": "2a41c12c95bb41f7b07a270927b27f3bc5098621",
        "line_num": 637,
        "line_str": "operator|. name|HOUR argument_list|) operator|==",
        "file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/time/DateUtils.java",
        "input_line_num": "range(691, 695)"
      },
      {
        "commit_hash": "2a41c12c95bb41f7b07a270927b27f3bc5098621",
        "line_num": 636,
        "line_str": "name|Calendar operator|. name|HOUR argument_list|)",
        "file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/time/DateUtils.java",
        "input_line_num": "range(691, 695)"
      },
      {
        "commit_hash": "2a41c12c95bb41f7b07a270927b27f3bc5098621",
        "line_num": 635,
        "line_str": "argument_list|( name|Calendar operator|. name|HOUR",
        "file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/time/DateUtils.java",
        "input_line_num": "range(691, 695)"
      },
      {
        "commit_hash": "2a41c12c95bb41f7b07a270927b27f3bc5098621",
        "line_num": 647,
        "line_str": "name|HOUR argument_list|) operator|&& name|cal1",
        "file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/time/DateUtils.java",
        "input_line_num": "range(700, 704)"
      },
      {
        "commit_hash": "2a41c12c95bb41f7b07a270927b27f3bc5098621",
        "line_num": 646,
        "line_str": "operator|. name|HOUR argument_list|) operator|&&",
        "file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/time/DateUtils.java",
        "input_line_num": "range(700, 704)"
      },
      {
        "commit_hash": "2a41c12c95bb41f7b07a270927b27f3bc5098621",
        "line_num": 645,
        "line_str": "name|Calendar operator|. name|HOUR argument_list|)",
        "file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/time/DateUtils.java",
        "input_line_num": "range(700, 704)"
      }
    ]
  },
  {
    "id": 10059,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": ["dcdea66eff6cee2cd956e8ad2a92ab3a7c3a2f09"],
    "fix_commit_hash": "0b2b82ad923b0455cde93286e3f504a1abd0863b",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "3905071819a14403d1cdb9437d2e005adf18fc70",
        "line_num": 4011,
        "line_str": "name|ZERO argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/org/apache/commons/lang/math/FractionTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/math/FractionTest.java",
        "input_line_num": "range(3957, 3958)"
      },
      {
        "commit_hash": "dcdea66eff6cee2cd956e8ad2a92ab3a7c3a2f09",
        "line_num": 1678,
        "line_str": "operator|<= literal|1 operator||| name|Math",
        "file_path": "src/java/org/apache/commons/lang/math/Fraction.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/math/Fraction.java",
        "input_line_num": "range(1704, 1708)"
      },
      {
        "commit_hash": "dcdea66eff6cee2cd956e8ad2a92ab3a7c3a2f09",
        "line_num": 1677,
        "line_str": "argument_list|) operator|<= literal|1 operator|||",
        "file_path": "src/java/org/apache/commons/lang/math/Fraction.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/math/Fraction.java",
        "input_line_num": "range(1704, 1708)"
      },
      {
        "commit_hash": "dcdea66eff6cee2cd956e8ad2a92ab3a7c3a2f09",
        "line_num": 1676,
        "line_str": "name|u argument_list|) operator|<= literal|1",
        "file_path": "src/java/org/apache/commons/lang/math/Fraction.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/math/Fraction.java",
        "input_line_num": "range(1704, 1708)"
      },
      {
        "commit_hash": "dcdea66eff6cee2cd956e8ad2a92ab3a7c3a2f09",
        "line_num": 1675,
        "line_str": "argument_list|( name|u argument_list|) operator|<=",
        "file_path": "src/java/org/apache/commons/lang/math/Fraction.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/math/Fraction.java",
        "input_line_num": "range(1704, 1708)"
      },
      {
        "commit_hash": "9a662f1bfd76c49bfcb9e9947f008aade2db54eb",
        "line_num": 2082,
        "line_str": "block|} block|} specifier|public name|void",
        "file_path": "src/test/org/apache/commons/lang/math/FractionTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/math/FractionTest.java",
        "input_line_num": "range(1986, 1989)"
      },
      {
        "commit_hash": "9a662f1bfd76c49bfcb9e9947f008aade2db54eb",
        "line_num": 2081,
        "line_str": "block|{ block|} block|} specifier|public",
        "file_path": "src/test/org/apache/commons/lang/math/FractionTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/math/FractionTest.java",
        "input_line_num": "range(1986, 1989)"
      },
      {
        "commit_hash": "9a662f1bfd76c49bfcb9e9947f008aade2db54eb",
        "line_num": 2080,
        "line_str": "parameter_list|) block|{ block|} block|}",
        "file_path": "src/test/org/apache/commons/lang/math/FractionTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/math/FractionTest.java",
        "input_line_num": "range(1986, 1989)"
      },
      {
        "commit_hash": "dcdea66eff6cee2cd956e8ad2a92ab3a7c3a2f09",
        "line_num": 1687,
        "line_str": "operator|<= literal|1 condition|) block|{",
        "file_path": "src/java/org/apache/commons/lang/math/Fraction.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/math/Fraction.java",
        "input_line_num": "range(1713, 1717)"
      },
      {
        "commit_hash": "dcdea66eff6cee2cd956e8ad2a92ab3a7c3a2f09",
        "line_num": 1686,
        "line_str": "argument_list|) operator|<= literal|1 condition|)",
        "file_path": "src/java/org/apache/commons/lang/math/Fraction.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/math/Fraction.java",
        "input_line_num": "range(1713, 1717)"
      },
      {
        "commit_hash": "dcdea66eff6cee2cd956e8ad2a92ab3a7c3a2f09",
        "line_num": 1685,
        "line_str": "name|v argument_list|) operator|<= literal|1",
        "file_path": "src/java/org/apache/commons/lang/math/Fraction.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/math/Fraction.java",
        "input_line_num": "range(1713, 1717)"
      },
      {
        "commit_hash": "dcdea66eff6cee2cd956e8ad2a92ab3a7c3a2f09",
        "line_num": 1684,
        "line_str": "argument_list|( name|v argument_list|) operator|<=",
        "file_path": "src/java/org/apache/commons/lang/math/Fraction.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/math/Fraction.java",
        "input_line_num": "range(1713, 1717)"
      }
    ]
  },
  {
    "id": 10060,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": ["a2447673d9ca590a3ed967e7a30b1f9cd18e78d1"],
    "fix_commit_hash": "2bae68787d15c3d3540380164e62759485078ec1",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 389,
        "line_str": "block|, comment block|{ literal|\"\\u00D3\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(406, 410)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 356,
        "line_str": "block|{ literal|\"\\u00CE\" block|, literal|\"&Iacute;\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(371, 375)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 439,
        "line_str": "comment block|{ literal|\"\\u00DA\" block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(455, 459)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 406,
        "line_str": "literal|\"\\u00D5\" block|, literal|\"&Ocirc;\" block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(420, 424)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 340,
        "line_str": "block|, comment block|{ literal|\"\\u00CC\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(357, 361)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 489,
        "line_str": "block|{ literal|\"\\u00E1\" block|, literal|\"&agrave;\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(504, 508)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 390,
        "line_str": "comment block|{ literal|\"\\u00D3\" block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(406, 410)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 357,
        "line_str": "literal|\"\\u00CE\" block|, literal|\"&Iacute;\" block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(371, 375)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 473,
        "line_str": "block|, comment block|{ literal|\"\\u00DF\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(490, 494)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 440,
        "line_str": "block|{ literal|\"\\u00DA\" block|, literal|\"&Ugrave;\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(455, 459)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 341,
        "line_str": "comment block|{ literal|\"\\u00CC\" block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(357, 361)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 490,
        "line_str": "literal|\"\\u00E1\" block|, literal|\"&agrave;\" block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(504, 508)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 424,
        "line_str": "block|, comment block|{ literal|\"\\u00D8\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(441, 445)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 391,
        "line_str": "block|{ literal|\"\\u00D3\" block|, literal|\"&Ograve;\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(406, 410)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 474,
        "line_str": "comment block|{ literal|\"\\u00DF\" block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(490, 494)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 441,
        "line_str": "literal|\"\\u00DA\" block|, literal|\"&Ugrave;\" block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(455, 459)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 375,
        "line_str": "block|, comment block|{ literal|\"\\u00D1\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(392, 396)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 342,
        "line_str": "block|{ literal|\"\\u00CC\" block|, literal|\"&Euml;\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(357, 361)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 425,
        "line_str": "comment block|{ literal|\"\\u00D8\" block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(441, 445)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 392,
        "line_str": "literal|\"\\u00D3\" block|, literal|\"&Ograve;\" block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(406, 410)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 508,
        "line_str": "block|, comment block|{ literal|\"\\u00E4\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(525, 529)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 475,
        "line_str": "block|{ literal|\"\\u00DF\" block|, literal|\"&THORN;\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(490, 494)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 376,
        "line_str": "comment block|{ literal|\"\\u00D1\" block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(392, 396)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 343,
        "line_str": "literal|\"\\u00CC\" block|, literal|\"&Euml;\" block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(357, 361)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 459,
        "line_str": "block|, comment block|{ literal|\"\\u00DD\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(476, 480)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 426,
        "line_str": "block|{ literal|\"\\u00D8\" block|, literal|\"&times;\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(441, 445)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 509,
        "line_str": "comment block|{ literal|\"\\u00E4\" block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(525, 529)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 476,
        "line_str": "literal|\"\\u00DF\" block|, literal|\"&THORN;\" block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(490, 494)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 410,
        "line_str": "block|, comment block|{ literal|\"\\u00D6\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(427, 431)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 377,
        "line_str": "block|{ literal|\"\\u00D1\" block|, literal|\"&ETH;\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(392, 396)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 460,
        "line_str": "comment block|{ literal|\"\\u00DD\" block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(476, 480)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 427,
        "line_str": "literal|\"\\u00D8\" block|, literal|\"&times;\" block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(441, 445)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 361,
        "line_str": "block|, comment block|{ literal|\"\\u00CF\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(378, 382)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 510,
        "line_str": "block|{ literal|\"\\u00E4\" block|, literal|\"&atilde;\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(525, 529)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 411,
        "line_str": "comment block|{ literal|\"\\u00D6\" block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(427, 431)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 378,
        "line_str": "literal|\"\\u00D1\" block|, literal|\"&ETH;\" block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(392, 396)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 494,
        "line_str": "block|, comment block|{ literal|\"\\u00E2\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(511, 515)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 461,
        "line_str": "block|{ literal|\"\\u00DD\" block|, literal|\"&Uuml;\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(476, 480)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 362,
        "line_str": "comment block|{ literal|\"\\u00CF\" block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(378, 382)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 511,
        "line_str": "literal|\"\\u00E4\" block|, literal|\"&atilde;\" block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(525, 529)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 445,
        "line_str": "block|, comment block|{ literal|\"\\u00DB\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(462, 466)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 412,
        "line_str": "block|{ literal|\"\\u00D6\" block|, literal|\"&Otilde;\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(427, 431)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 495,
        "line_str": "comment block|{ literal|\"\\u00E2\" block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(511, 515)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 462,
        "line_str": "literal|\"\\u00DD\" block|, literal|\"&Uuml;\" block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(476, 480)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 396,
        "line_str": "block|, comment block|{ literal|\"\\u00D4\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(413, 417)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 363,
        "line_str": "block|{ literal|\"\\u00CF\" block|, literal|\"&Icirc;\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(378, 382)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 446,
        "line_str": "comment block|{ literal|\"\\u00DB\" block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(462, 466)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 413,
        "line_str": "literal|\"\\u00D6\" block|, literal|\"&Otilde;\" block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(427, 431)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 347,
        "line_str": "block|, comment block|{ literal|\"\\u00CD\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(364, 368)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 496,
        "line_str": "block|{ literal|\"\\u00E2\" block|, literal|\"&aacute;\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(511, 515)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 397,
        "line_str": "comment block|{ literal|\"\\u00D4\" block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(413, 417)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 364,
        "line_str": "literal|\"\\u00CF\" block|, literal|\"&Icirc;\" block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(378, 382)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 480,
        "line_str": "block|, comment block|{ literal|\"\\u00E0\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(497, 501)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 447,
        "line_str": "block|{ literal|\"\\u00DB\" block|, literal|\"&Uacute;\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(462, 466)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 348,
        "line_str": "comment block|{ literal|\"\\u00CD\" block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(364, 368)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 497,
        "line_str": "literal|\"\\u00E2\" block|, literal|\"&aacute;\" block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(511, 515)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 431,
        "line_str": "block|, comment block|{ literal|\"\\u00D9\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(448, 452)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 398,
        "line_str": "block|{ literal|\"\\u00D4\" block|, literal|\"&Oacute;\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(413, 417)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 481,
        "line_str": "comment block|{ literal|\"\\u00E0\" block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(497, 501)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 448,
        "line_str": "literal|\"\\u00DB\" block|, literal|\"&Uacute;\" block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(462, 466)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 382,
        "line_str": "block|, comment block|{ literal|\"\\u00D2\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(399, 403)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 349,
        "line_str": "block|{ literal|\"\\u00CD\" block|, literal|\"&Igrave;\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(364, 368)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 432,
        "line_str": "comment block|{ literal|\"\\u00D9\" block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(448, 452)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 399,
        "line_str": "literal|\"\\u00D4\" block|, literal|\"&Oacute;\" block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(413, 417)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 333,
        "line_str": "block|, comment block|{ literal|\"\\u00CB\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(350, 354)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 515,
        "line_str": "block|, comment block|{ literal|\"\\u00E5\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(532, 536)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 482,
        "line_str": "block|{ literal|\"\\u00E0\" block|, literal|\"&szlig;\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(497, 501)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 383,
        "line_str": "comment block|{ literal|\"\\u00D2\" block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(399, 403)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 350,
        "line_str": "literal|\"\\u00CD\" block|, literal|\"&Igrave;\" block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(364, 368)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 466,
        "line_str": "block|, comment block|{ literal|\"\\u00DE\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(483, 487)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 433,
        "line_str": "block|{ literal|\"\\u00D9\" block|, literal|\"&Oslash;\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(448, 452)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 334,
        "line_str": "comment block|{ literal|\"\\u00CB\" block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(350, 354)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 516,
        "line_str": "comment block|{ literal|\"\\u00E5\" block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(532, 536)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 483,
        "line_str": "literal|\"\\u00E0\" block|, literal|\"&szlig;\" block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(497, 501)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 417,
        "line_str": "block|, comment block|{ literal|\"\\u00D7\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(434, 438)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 384,
        "line_str": "block|{ literal|\"\\u00D2\" block|, literal|\"&Ntilde;\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(399, 403)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 467,
        "line_str": "comment block|{ literal|\"\\u00DE\" block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(483, 487)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 434,
        "line_str": "literal|\"\\u00D9\" block|, literal|\"&Oslash;\" block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(448, 452)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 368,
        "line_str": "block|, comment block|{ literal|\"\\u00D0\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(385, 389)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 335,
        "line_str": "block|{ literal|\"\\u00CB\" block|, literal|\"&Ecirc;\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(350, 354)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 517,
        "line_str": "block|{ literal|\"\\u00E5\" block|, literal|\"&auml;\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(532, 536)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 418,
        "line_str": "comment block|{ literal|\"\\u00D7\" block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(434, 438)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 385,
        "line_str": "literal|\"\\u00D2\" block|, literal|\"&Ntilde;\" block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(399, 403)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 501,
        "line_str": "block|, comment block|{ literal|\"\\u00E3\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(518, 522)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 468,
        "line_str": "block|{ literal|\"\\u00DE\" block|, literal|\"&Yacute;\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(483, 487)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 369,
        "line_str": "comment block|{ literal|\"\\u00D0\" block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(385, 389)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 336,
        "line_str": "literal|\"\\u00CB\" block|, literal|\"&Ecirc;\" block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(350, 354)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 518,
        "line_str": "literal|\"\\u00E5\" block|, literal|\"&auml;\" block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(532, 536)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 452,
        "line_str": "block|, comment block|{ literal|\"\\u00DC\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(469, 473)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 419,
        "line_str": "block|{ literal|\"\\u00D7\" block|, literal|\"&Ouml;\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(434, 438)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 502,
        "line_str": "comment block|{ literal|\"\\u00E3\" block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(518, 522)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 469,
        "line_str": "literal|\"\\u00DE\" block|, literal|\"&Yacute;\" block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(483, 487)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 403,
        "line_str": "block|, comment block|{ literal|\"\\u00D5\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(420, 424)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 370,
        "line_str": "block|{ literal|\"\\u00D0\" block|, literal|\"&Iuml;\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(385, 389)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 453,
        "line_str": "comment block|{ literal|\"\\u00DC\" block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(469, 473)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 420,
        "line_str": "literal|\"\\u00D7\" block|, literal|\"&Ouml;\" block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(434, 438)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 354,
        "line_str": "block|, comment block|{ literal|\"\\u00CE\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(371, 375)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 503,
        "line_str": "block|{ literal|\"\\u00E3\" block|, literal|\"&acirc;\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(518, 522)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 404,
        "line_str": "comment block|{ literal|\"\\u00D5\" block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(420, 424)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 371,
        "line_str": "literal|\"\\u00D0\" block|, literal|\"&Iuml;\" block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(385, 389)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 487,
        "line_str": "block|, comment block|{ literal|\"\\u00E1\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(504, 508)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 454,
        "line_str": "block|{ literal|\"\\u00DC\" block|, literal|\"&Ucirc;\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(469, 473)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 355,
        "line_str": "comment block|{ literal|\"\\u00CE\" block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(371, 375)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 504,
        "line_str": "literal|\"\\u00E3\" block|, literal|\"&acirc;\" block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(518, 522)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 438,
        "line_str": "block|, comment block|{ literal|\"\\u00DA\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(455, 459)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 405,
        "line_str": "block|{ literal|\"\\u00D5\" block|, literal|\"&Ocirc;\"",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(420, 424)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 488,
        "line_str": "comment block|{ literal|\"\\u00E1\" block|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(504, 508)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 455,
        "line_str": "literal|\"\\u00DC\" block|, literal|\"&Ucirc;\" block|}",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(469, 473)"
      }
    ]
  },
  {
    "id": 10061,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": ["e794af9688ae2dee664864be0d128df9a88509ba"],
    "fix_commit_hash": "75d5b74a1a7ef68c5169f4b44cdf972c1ab07ee0",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "9839566cf0eb6d299a61d6354522d6f65ab83af3",
        "line_num": 2377,
        "line_str": "name|mTimeZone argument_list|) decl_stmt|; name|c",
        "file_path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java",
        "input_line_num": "range(2717, 2720)"
      },
      {
        "commit_hash": "9839566cf0eb6d299a61d6354522d6f65ab83af3",
        "line_num": 2376,
        "line_str": "argument_list|( name|mTimeZone argument_list|) decl_stmt|;",
        "file_path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java",
        "input_line_num": "range(2717, 2720)"
      },
      {
        "commit_hash": "9839566cf0eb6d299a61d6354522d6f65ab83af3",
        "line_num": 2375,
        "line_str": "name|GregorianCalendar argument_list|( name|mTimeZone argument_list|)",
        "file_path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java",
        "input_line_num": "range(2717, 2720)"
      }
    ]
  },
  {
    "id": 10062,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": ["a2447673d9ca590a3ed967e7a30b1f9cd18e78d1"],
    "fix_commit_hash": "3e1afecc200d7e3be9537c95b7cf52a7c5031300",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 233,
        "line_str": "expr_stmt|; return|return literal|2 operator|+",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(233, 236)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 232,
        "line_str": "argument_list|) expr_stmt|; return|return literal|2",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(233, 236)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 231,
        "line_str": "name|entityValue argument_list|) expr_stmt|; return|return",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(233, 236)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 226,
        "line_str": "comment name|out operator|. name|write",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(225, 229)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 225,
        "line_str": "block|} comment name|out operator|.",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(225, 229)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 224,
        "line_str": "return|; block|} comment name|out",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(225, 229)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 223,
        "line_str": "literal|0 return|; block|} comment",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(225, 229)"
      }
    ]
  },
  {
    "id": 10063,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": ["4bdc5d864104f29b4ebfe0105b75002db9f58f07"],
    "fix_commit_hash": "38bf7048571f3bc8dd34d14691906426444e4381",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "4bdc5d864104f29b4ebfe0105b75002db9f58f07",
        "line_num": 1671,
        "line_str": "operator|. name|length operator|== literal|0",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2386, 2401)"
      },
      {
        "commit_hash": "4bdc5d864104f29b4ebfe0105b75002db9f58f07",
        "line_num": 1733,
        "line_str": "name|ch condition|) block|{ return|return",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2459, 2460)"
      },
      {
        "commit_hash": "4bdc5d864104f29b4ebfe0105b75002db9f58f07",
        "line_num": 1667,
        "line_str": "operator|== literal|null operator||| name|searchChars",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2386, 2401)"
      },
      {
        "commit_hash": "cf2e48a05c250feb636dd337dae1ffb7a1d9d411",
        "line_num": 2404,
        "line_str": "operator||| name|cs operator|. name|length",
        "file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2378, 2386)"
      },
      {
        "commit_hash": "4bdc5d864104f29b4ebfe0105b75002db9f58f07",
        "line_num": 1663,
        "line_str": "operator|== literal|0 operator||| name|searchChars",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2386, 2401)"
      },
      {
        "commit_hash": "cf2e48a05c250feb636dd337dae1ffb7a1d9d411",
        "line_num": 2433,
        "line_str": "init|; name|i operator|< name|cs",
        "file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2413, 2417)"
      },
      {
        "commit_hash": "cf2e48a05c250feb636dd337dae1ffb7a1d9d411",
        "line_num": 2400,
        "line_str": "condition|( name|cs operator|== literal|null",
        "file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2378, 2386)"
      },
      {
        "commit_hash": "4bdc5d864104f29b4ebfe0105b75002db9f58f07",
        "line_num": 1692,
        "line_str": "name|length argument_list|() condition|; name|i",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2417, 2420)"
      },
      {
        "commit_hash": "4bdc5d864104f29b4ebfe0105b75002db9f58f07",
        "line_num": 1717,
        "line_str": "operator|< name|searchChars operator|. name|length",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2441, 2447)"
      },
      {
        "commit_hash": "4bdc5d864104f29b4ebfe0105b75002db9f58f07",
        "line_num": 1680,
        "line_str": "block|} for|for control|( name|int",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2404, 2407)"
      },
      {
        "commit_hash": "4bdc5d864104f29b4ebfe0105b75002db9f58f07",
        "line_num": 1672,
        "line_str": "name|length operator|== literal|0 condition|)",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2386, 2401)"
      },
      {
        "commit_hash": "4bdc5d864104f29b4ebfe0105b75002db9f58f07",
        "line_num": 1668,
        "line_str": "literal|null operator||| name|searchChars operator|.",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2386, 2401)"
      },
      {
        "commit_hash": "cf2e48a05c250feb636dd337dae1ffb7a1d9d411",
        "line_num": 2405,
        "line_str": "name|cs operator|. name|length argument_list|()",
        "file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2378, 2386)"
      },
      {
        "commit_hash": "4bdc5d864104f29b4ebfe0105b75002db9f58f07",
        "line_num": 1664,
        "line_str": "literal|0 operator||| name|searchChars operator|==",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2386, 2401)"
      },
      {
        "commit_hash": "cf2e48a05c250feb636dd337dae1ffb7a1d9d411",
        "line_num": 2434,
        "line_str": "name|i operator|< name|cs operator|.",
        "file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2413, 2417)"
      },
      {
        "commit_hash": "cf2e48a05c250feb636dd337dae1ffb7a1d9d411",
        "line_num": 2401,
        "line_str": "name|cs operator|== literal|null operator|||",
        "file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2378, 2386)"
      },
      {
        "commit_hash": "4bdc5d864104f29b4ebfe0105b75002db9f58f07",
        "line_num": 1693,
        "line_str": "argument_list|() condition|; name|i operator|++",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2417, 2420)"
      },
      {
        "commit_hash": "4bdc5d864104f29b4ebfe0105b75002db9f58f07",
        "line_num": 1660,
        "line_str": "operator|. name|length argument_list|() operator|==",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2386, 2401)"
      },
      {
        "commit_hash": "4bdc5d864104f29b4ebfe0105b75002db9f58f07",
        "line_num": 1718,
        "line_str": "name|searchChars operator|. name|length condition|;",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2441, 2447)"
      },
      {
        "commit_hash": "d23b22c78078ee7468e797e80188ae9508c0eee0",
        "line_num": 109,
        "line_str": "literal|\"ba\" block|} decl_stmt|; specifier|public",
        "file_path": "src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(89, 91)"
      },
      {
        "commit_hash": "4bdc5d864104f29b4ebfe0105b75002db9f58f07",
        "line_num": 1673,
        "line_str": "operator|== literal|0 condition|) block|{",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2386, 2401)"
      },
      {
        "commit_hash": "4bdc5d864104f29b4ebfe0105b75002db9f58f07",
        "line_num": 1669,
        "line_str": "operator||| name|searchChars operator|. name|length",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2386, 2401)"
      },
      {
        "commit_hash": "4bdc5d864104f29b4ebfe0105b75002db9f58f07",
        "line_num": 1665,
        "line_str": "operator||| name|searchChars operator|== literal|null",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2386, 2401)"
      },
      {
        "commit_hash": "cf2e48a05c250feb636dd337dae1ffb7a1d9d411",
        "line_num": 2435,
        "line_str": "operator|< name|cs operator|. name|length",
        "file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2413, 2417)"
      },
      {
        "commit_hash": "cf2e48a05c250feb636dd337dae1ffb7a1d9d411",
        "line_num": 2402,
        "line_str": "operator|== literal|null operator||| name|cs",
        "file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2378, 2386)"
      },
      {
        "commit_hash": "4bdc5d864104f29b4ebfe0105b75002db9f58f07",
        "line_num": 1661,
        "line_str": "name|length argument_list|() operator|== literal|0",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2386, 2401)"
      },
      {
        "commit_hash": "cf2e48a05c250feb636dd337dae1ffb7a1d9d411",
        "line_num": 2398,
        "line_str": "block|{ if|if condition|( name|cs",
        "file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2378, 2386)"
      },
      {
        "commit_hash": "4bdc5d864104f29b4ebfe0105b75002db9f58f07",
        "line_num": 1719,
        "line_str": "operator|. name|length condition|; name|j",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2441, 2447)"
      },
      {
        "commit_hash": "4bdc5d864104f29b4ebfe0105b75002db9f58f07",
        "line_num": 1715,
        "line_str": "init|; name|j operator|< name|searchChars",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2441, 2447)"
      },
      {
        "commit_hash": "d23b22c78078ee7468e797e80188ae9508c0eee0",
        "line_num": 110,
        "line_str": "block|} decl_stmt|; specifier|public name|StringUtilsEqualsIndexOfTest",
        "file_path": "src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(89, 91)"
      },
      {
        "commit_hash": "4bdc5d864104f29b4ebfe0105b75002db9f58f07",
        "line_num": 1678,
        "line_str": "literal|false return|; block|} for|for",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2404, 2407)"
      },
      {
        "commit_hash": "4bdc5d864104f29b4ebfe0105b75002db9f58f07",
        "line_num": 1674,
        "line_str": "literal|0 condition|) block|{ return|return",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2386, 2401)"
      },
      {
        "commit_hash": "4bdc5d864104f29b4ebfe0105b75002db9f58f07",
        "line_num": 1670,
        "line_str": "name|searchChars operator|. name|length operator|==",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2386, 2401)"
      },
      {
        "commit_hash": "4bdc5d864104f29b4ebfe0105b75002db9f58f07",
        "line_num": 1666,
        "line_str": "name|searchChars operator|== literal|null operator|||",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2386, 2401)"
      },
      {
        "commit_hash": "cf2e48a05c250feb636dd337dae1ffb7a1d9d411",
        "line_num": 2436,
        "line_str": "name|cs operator|. name|length argument_list|()",
        "file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2413, 2417)"
      },
      {
        "commit_hash": "cf2e48a05c250feb636dd337dae1ffb7a1d9d411",
        "line_num": 2403,
        "line_str": "literal|null operator||| name|cs operator|.",
        "file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2378, 2386)"
      },
      {
        "commit_hash": "4bdc5d864104f29b4ebfe0105b75002db9f58f07",
        "line_num": 1662,
        "line_str": "argument_list|() operator|== literal|0 operator|||",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2386, 2401)"
      },
      {
        "commit_hash": "cf2e48a05c250feb636dd337dae1ffb7a1d9d411",
        "line_num": 2399,
        "line_str": "if|if condition|( name|cs operator|==",
        "file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2378, 2386)"
      },
      {
        "commit_hash": "4bdc5d864104f29b4ebfe0105b75002db9f58f07",
        "line_num": 1691,
        "line_str": "operator|. name|length argument_list|() condition|;",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2417, 2420)"
      },
      {
        "commit_hash": "4bdc5d864104f29b4ebfe0105b75002db9f58f07",
        "line_num": 1720,
        "line_str": "name|length condition|; name|j operator|++",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2441, 2447)"
      },
      {
        "commit_hash": "4bdc5d864104f29b4ebfe0105b75002db9f58f07",
        "line_num": 1716,
        "line_str": "name|j operator|< name|searchChars operator|.",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2441, 2447)"
      },
      {
        "commit_hash": "4bdc5d864104f29b4ebfe0105b75002db9f58f07",
        "line_num": 1679,
        "line_str": "return|; block|} for|for control|(",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(2404, 2407)"
      }
    ]
  },
  {
    "id": 10064,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": ["5310e78952ca17521b7d5e83bfcefafa227187a5"],
    "fix_commit_hash": "cb40e35f5e0990fad4c5278964fcc24e112dde8c",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "e8600d357d98cbf727b573732052aba0fd7a1f69",
        "line_num": 7104,
        "line_str": "block|{ name|int name|greater init|=",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(7309, 7312)"
      },
      {
        "commit_hash": "e8600d357d98cbf727b573732052aba0fd7a1f69",
        "line_num": 7103,
        "line_str": "control|) block|{ name|int name|greater",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(7309, 7312)"
      },
      {
        "commit_hash": "e8600d357d98cbf727b573732052aba0fd7a1f69",
        "line_num": 7102,
        "line_str": "operator|++ control|) block|{ name|int",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(7309, 7312)"
      },
      {
        "commit_hash": "e8600d357d98cbf727b573732052aba0fd7a1f69",
        "line_num": 9165,
        "line_str": "argument_list|) argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/org/apache/commons/lang/StringUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/lang3/StringUtilsTest.java",
        "input_line_num": "range(8973, 8974)"
      }
    ]
  },
  {
    "id": 10065,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": ["362fa778259f188a4bef82716478d9e288d3f303"],
    "fix_commit_hash": "fb47b96ab635d7cc6e9edefdddc46f1baf63b117",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "362fa778259f188a4bef82716478d9e288d3f303",
        "line_num": 130,
        "line_str": "index|[ literal|0 index|] argument_list|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/LookupTranslator.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java",
        "input_line_num": "range(144, 147)"
      },
      {
        "commit_hash": "362fa778259f188a4bef82716478d9e288d3f303",
        "line_num": 108,
        "line_str": "name|CharSequence argument_list|, name|CharSequence argument_list|>",
        "file_path": "src/java/org/apache/commons/lang/text/translate/LookupTranslator.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java",
        "input_line_num": "range(99, 103)"
      },
      {
        "commit_hash": "362fa778259f188a4bef82716478d9e288d3f303",
        "line_num": 107,
        "line_str": "argument_list|< name|CharSequence argument_list|, name|CharSequence",
        "file_path": "src/java/org/apache/commons/lang/text/translate/LookupTranslator.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java",
        "input_line_num": "range(99, 103)"
      },
      {
        "commit_hash": "362fa778259f188a4bef82716478d9e288d3f303",
        "line_num": 106,
        "line_str": "name|HashMap argument_list|< name|CharSequence argument_list|,",
        "file_path": "src/java/org/apache/commons/lang/text/translate/LookupTranslator.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java",
        "input_line_num": "range(99, 103)"
      },
      {
        "commit_hash": "362fa778259f188a4bef82716478d9e288d3f303",
        "line_num": 73,
        "line_str": "name|CharSequence argument_list|, name|CharSequence argument_list|>",
        "file_path": "src/java/org/apache/commons/lang/text/translate/LookupTranslator.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java",
        "input_line_num": "range(68, 71)"
      },
      {
        "commit_hash": "362fa778259f188a4bef82716478d9e288d3f303",
        "line_num": 72,
        "line_str": "argument_list|< name|CharSequence argument_list|, name|CharSequence",
        "file_path": "src/java/org/apache/commons/lang/text/translate/LookupTranslator.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java",
        "input_line_num": "range(68, 71)"
      },
      {
        "commit_hash": "2a94524320e36a1422740b50c88715e806a72696",
        "line_num": 71,
        "line_str": "specifier|final name|HashMap argument_list|< name|CharSequence",
        "file_path": "src/java/org/apache/commons/lang/text/translate/LookupTranslator.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java",
        "input_line_num": "range(67, 68)"
      },
      {
        "commit_hash": "362fa778259f188a4bef82716478d9e288d3f303",
        "line_num": 105,
        "line_str": "operator|new name|HashMap argument_list|< name|CharSequence",
        "file_path": "src/java/org/apache/commons/lang/text/translate/LookupTranslator.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java",
        "input_line_num": "range(99, 103)"
      },
      {
        "commit_hash": "362fa778259f188a4bef82716478d9e288d3f303",
        "line_num": 132,
        "line_str": "index|] argument_list|, name|seq index|[",
        "file_path": "src/java/org/apache/commons/lang/text/translate/LookupTranslator.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java",
        "input_line_num": "range(144, 147)"
      },
      {
        "commit_hash": "362fa778259f188a4bef82716478d9e288d3f303",
        "line_num": 131,
        "line_str": "literal|0 index|] argument_list|, name|seq",
        "file_path": "src/java/org/apache/commons/lang/text/translate/LookupTranslator.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java",
        "input_line_num": "range(144, 147)"
      },
      {
        "commit_hash": "362fa778259f188a4bef82716478d9e288d3f303",
        "line_num": 258,
        "line_str": "name|subSeq argument_list|) decl_stmt|; if|if",
        "file_path": "src/java/org/apache/commons/lang/text/translate/LookupTranslator.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java",
        "input_line_num": "range(287, 290)"
      },
      {
        "commit_hash": "362fa778259f188a4bef82716478d9e288d3f303",
        "line_num": 257,
        "line_str": "argument_list|( name|subSeq argument_list|) decl_stmt|;",
        "file_path": "src/java/org/apache/commons/lang/text/translate/LookupTranslator.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java",
        "input_line_num": "range(287, 290)"
      },
      {
        "commit_hash": "362fa778259f188a4bef82716478d9e288d3f303",
        "line_num": 256,
        "line_str": "name|get argument_list|( name|subSeq argument_list|)",
        "file_path": "src/java/org/apache/commons/lang/text/translate/LookupTranslator.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java",
        "input_line_num": "range(287, 290)"
      }
    ]
  },
  {
    "id": 10066,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": ["0c5f9f0d1f91164b9cfb3daf887fc9dbf7bd198c"],
    "fix_commit_hash": "8b1a8e178abb46cc048a3982636b8ec4e6ffc8dc",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "0c5f9f0d1f91164b9cfb3daf887fc9dbf7bd198c",
        "line_num": 1479,
        "line_str": "argument_list|) return|; block|} comment",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_line_num": "range(1465, 1481)"
      },
      {
        "commit_hash": "0c5f9f0d1f91164b9cfb3daf887fc9dbf7bd198c",
        "line_num": 1478,
        "line_str": "argument_list|() argument_list|) return|; block|}",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_line_num": "range(1465, 1481)"
      },
      {
        "commit_hash": "0c5f9f0d1f91164b9cfb3daf887fc9dbf7bd198c",
        "line_num": 1477,
        "line_str": "name|toUpperCase argument_list|() argument_list|) return|;",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_line_num": "range(1465, 1481)"
      },
      {
        "commit_hash": "0c5f9f0d1f91164b9cfb3daf887fc9dbf7bd198c",
        "line_num": 1476,
        "line_str": "operator|. name|toUpperCase argument_list|() argument_list|)",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_line_num": "range(1465, 1481)"
      },
      {
        "commit_hash": "0c5f9f0d1f91164b9cfb3daf887fc9dbf7bd198c",
        "line_num": 1475,
        "line_str": "name|searchStr operator|. name|toUpperCase argument_list|()",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_line_num": "range(1465, 1481)"
      },
      {
        "commit_hash": "0c5f9f0d1f91164b9cfb3daf887fc9dbf7bd198c",
        "line_num": 1474,
        "line_str": "argument_list|, name|searchStr operator|. name|toUpperCase",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_line_num": "range(1465, 1481)"
      },
      {
        "commit_hash": "0c5f9f0d1f91164b9cfb3daf887fc9dbf7bd198c",
        "line_num": 1473,
        "line_str": "argument_list|() argument_list|, name|searchStr operator|.",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_line_num": "range(1465, 1481)"
      },
      {
        "commit_hash": "0c5f9f0d1f91164b9cfb3daf887fc9dbf7bd198c",
        "line_num": 1472,
        "line_str": "name|toUpperCase argument_list|() argument_list|, name|searchStr",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_line_num": "range(1465, 1481)"
      },
      {
        "commit_hash": "0c5f9f0d1f91164b9cfb3daf887fc9dbf7bd198c",
        "line_num": 1471,
        "line_str": "operator|. name|toUpperCase argument_list|() argument_list|,",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_line_num": "range(1465, 1481)"
      },
      {
        "commit_hash": "0c5f9f0d1f91164b9cfb3daf887fc9dbf7bd198c",
        "line_num": 1470,
        "line_str": "name|str operator|. name|toUpperCase argument_list|()",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_line_num": "range(1465, 1481)"
      },
      {
        "commit_hash": "0c5f9f0d1f91164b9cfb3daf887fc9dbf7bd198c",
        "line_num": 1469,
        "line_str": "argument_list|( name|str operator|. name|toUpperCase",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_line_num": "range(1465, 1481)"
      },
      {
        "commit_hash": "0c5f9f0d1f91164b9cfb3daf887fc9dbf7bd198c",
        "line_num": 1468,
        "line_str": "name|contains argument_list|( name|str operator|.",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_line_num": "range(1465, 1481)"
      },
      {
        "commit_hash": "0c5f9f0d1f91164b9cfb3daf887fc9dbf7bd198c",
        "line_num": 1467,
        "line_str": "return|return name|contains argument_list|( name|str",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_line_num": "range(1465, 1481)"
      },
      {
        "commit_hash": "0c5f9f0d1f91164b9cfb3daf887fc9dbf7bd198c",
        "line_num": 1466,
        "line_str": "block|} return|return name|contains argument_list|(",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_line_num": "range(1465, 1481)"
      },
      {
        "commit_hash": "0c5f9f0d1f91164b9cfb3daf887fc9dbf7bd198c",
        "line_num": 1465,
        "line_str": "return|; block|} return|return name|contains",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_line_num": "range(1465, 1481)"
      },
      {
        "commit_hash": "0c5f9f0d1f91164b9cfb3daf887fc9dbf7bd198c",
        "line_num": 1464,
        "line_str": "literal|false return|; block|} return|return",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_line_num": "range(1465, 1481)"
      },
      {
        "commit_hash": "251a47618ed658d9ffb9c8522248b76ee345a98c",
        "line_num": 1954,
        "line_str": "expr_stmt|; block|} comment specifier|public",
        "file_path": "src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3304, 3306)"
      },
      {
        "commit_hash": "251a47618ed658d9ffb9c8522248b76ee345a98c",
        "line_num": 1953,
        "line_str": "argument_list|) expr_stmt|; block|} comment",
        "file_path": "src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(3304, 3306)"
      }
    ]
  },
  {
    "id": 10067,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": ["695289c466e51ff7f211867dccbc755fd515fc43"],
    "fix_commit_hash": "eb3e2ae1f3734986a9f0225c661888baac3cb13b",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "b2f1757bf9ec1632a940b9a2e65a1a022ba54af8",
        "line_num": 1005,
        "line_str": "name|QUOTE condition|) block|{ return|return",
        "file_path": "src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java",
        "input_line_num": "range(1611, 1614)"
      },
      {
        "commit_hash": "b2f1757bf9ec1632a940b9a2e65a1a022ba54af8",
        "line_num": 1007,
        "line_str": "block|{ return|return name|appendTo operator|==",
        "file_path": "src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java",
        "input_line_num": "range(1611, 1614)"
      },
      {
        "commit_hash": "b2f1757bf9ec1632a940b9a2e65a1a022ba54af8",
        "line_num": 1006,
        "line_str": "condition|) block|{ return|return name|appendTo",
        "file_path": "src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java",
        "input_line_num": "range(1611, 1614)"
      }
    ]
  },
  {
    "id": 10068,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": ["d23b22c78078ee7468e797e80188ae9508c0eee0"],
    "fix_commit_hash": "81f10d7f1ef52d44f43b38d81ac3dc1c83d45134",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "ff435051c68c8d36cc52d815462b387181f3cd2a",
        "line_num": 5482,
        "line_str": "expr_stmt|; block|} block|} block|}",
        "file_path": "src/test/org/apache/commons/lang/NumberUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/lang/NumberUtilsTest.java",
        "input_line_num": "range(5482, 5483)"
      }
    ]
  },
  {
    "id": 10069,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": ["8688d11849b9335f63210dd9018545b3c3a907d8"],
    "fix_commit_hash": "d95fcd8e24568b4f9d3cb9da922a4029e293c793",
    "language": ["java"],
    "inducing_commit_hash": []
  },
  {
    "id": 10070,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": ["868f6976aea222e96259843f56df9aed8e48584b"],
    "fix_commit_hash": "916639bda234a8e5a030361c4068667764b34cb7",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "f03e83e74e8a723fd8c8fffc84cc7faaf9494ab4",
        "line_num": 162,
        "line_str": "name|str argument_list|, literal|false argument_list|)",
        "file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_line_num": "range(178, 179)"
      },
      {
        "commit_hash": "f03e83e74e8a723fd8c8fffc84cc7faaf9494ab4",
        "line_num": 285,
        "line_str": "name|escapeSingleQuote parameter_list|) throws|throws name|IOException",
        "file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_line_num": "range(312, 315)"
      },
      {
        "commit_hash": "f03e83e74e8a723fd8c8fffc84cc7faaf9494ab4",
        "line_num": 220,
        "line_str": "name|boolean name|escapeSingleQuotes parameter_list|) block|{",
        "file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_line_num": "range(236, 238)"
      },
      {
        "commit_hash": "868f6976aea222e96259843f56df9aed8e48584b",
        "line_num": 603,
        "line_str": "expr_stmt|; name|out operator|. name|write",
        "file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_line_num": "range(654, 657)"
      },
      {
        "commit_hash": "868f6976aea222e96259843f56df9aed8e48584b",
        "line_num": 602,
        "line_str": "argument_list|) expr_stmt|; name|out operator|.",
        "file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_line_num": "range(654, 657)"
      },
      {
        "commit_hash": "868f6976aea222e96259843f56df9aed8e48584b",
        "line_num": 601,
        "line_str": "literal|'\\\\' argument_list|) expr_stmt|; name|out",
        "file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_line_num": "range(654, 657)"
      },
      {
        "commit_hash": "f03e83e74e8a723fd8c8fffc84cc7faaf9494ab4",
        "line_num": 219,
        "line_str": "parameter_list|, name|boolean name|escapeSingleQuotes parameter_list|)",
        "file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_line_num": "range(236, 238)"
      },
      {
        "commit_hash": "f03e83e74e8a723fd8c8fffc84cc7faaf9494ab4",
        "line_num": 283,
        "line_str": "parameter_list|, name|boolean name|escapeSingleQuote parameter_list|)",
        "file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_line_num": "range(312, 315)"
      },
      {
        "commit_hash": "f03e83e74e8a723fd8c8fffc84cc7faaf9494ab4",
        "line_num": 246,
        "line_str": "name|escapeSingleQuotes argument_list|) expr_stmt|; return|return",
        "file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_line_num": "range(272, 275)"
      },
      {
        "commit_hash": "97dfb3a031f9f5ec3e8d0ec49f0cc2c322f70ffc",
        "line_num": 181,
        "line_str": "name|escapeSingleQuotes parameter_list|) block|{ if|if",
        "file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_line_num": "range(238, 239)"
      },
      {
        "commit_hash": "868f6976aea222e96259843f56df9aed8e48584b",
        "line_num": 596,
        "line_str": "case|: name|out operator|. name|write",
        "file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_line_num": "range(647, 650)"
      },
      {
        "commit_hash": "868f6976aea222e96259843f56df9aed8e48584b",
        "line_num": 595,
        "line_str": "literal|'/' case|: name|out operator|.",
        "file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_line_num": "range(647, 650)"
      },
      {
        "commit_hash": "868f6976aea222e96259843f56df9aed8e48584b",
        "line_num": 594,
        "line_str": "case|case literal|'/' case|: name|out",
        "file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_line_num": "range(647, 650)"
      },
      {
        "commit_hash": "f03e83e74e8a723fd8c8fffc84cc7faaf9494ab4",
        "line_num": 244,
        "line_str": "name|str argument_list|, name|escapeSingleQuotes argument_list|)",
        "file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_line_num": "range(272, 275)"
      },
      {
        "commit_hash": "f03e83e74e8a723fd8c8fffc84cc7faaf9494ab4",
        "line_num": 245,
        "line_str": "argument_list|, name|escapeSingleQuotes argument_list|) expr_stmt|;",
        "file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_line_num": "range(272, 275)"
      },
      {
        "commit_hash": "f03e83e74e8a723fd8c8fffc84cc7faaf9494ab4",
        "line_num": 137,
        "line_str": "name|str argument_list|, literal|false argument_list|)",
        "file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_line_num": "range(153, 154)"
      },
      {
        "commit_hash": "f03e83e74e8a723fd8c8fffc84cc7faaf9494ab4",
        "line_num": 206,
        "line_str": "name|str argument_list|, literal|true argument_list|)",
        "file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_line_num": "range(222, 223)"
      },
      {
        "commit_hash": "f03e83e74e8a723fd8c8fffc84cc7faaf9494ab4",
        "line_num": 284,
        "line_str": "name|boolean name|escapeSingleQuote parameter_list|) throws|throws",
        "file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_line_num": "range(312, 315)"
      }
    ]
  },
  {
    "id": 10071,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": ["e5bd9a5654ff829b091a5a6c4f8ed6180c3d359b"],
    "fix_commit_hash": "d5e343049c2610c31ddacb24f0d173942f6d5ac9",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "e5bd9a5654ff829b091a5a6c4f8ed6180c3d359b",
        "line_num": 1700,
        "line_str": "operator|) decl_stmt|; name|int name|strLen",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(2974, 2977)"
      },
      {
        "commit_hash": "e5bd9a5654ff829b091a5a6c4f8ed6180c3d359b",
        "line_num": 1699,
        "line_str": "argument_list|() operator|) decl_stmt|; name|int",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(2974, 2977)"
      },
      {
        "commit_hash": "e5bd9a5654ff829b091a5a6c4f8ed6180c3d359b",
        "line_num": 1837,
        "line_str": "decl_stmt|; name|int name|strLen init|=",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(3141, 3144)"
      },
      {
        "commit_hash": "e5bd9a5654ff829b091a5a6c4f8ed6180c3d359b",
        "line_num": 1836,
        "line_str": "operator|) decl_stmt|; name|int name|strLen",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(3141, 3144)"
      },
      {
        "commit_hash": "e5bd9a5654ff829b091a5a6c4f8ed6180c3d359b",
        "line_num": 1835,
        "line_str": "argument_list|() operator|) decl_stmt|; name|int",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(3141, 3144)"
      },
      {
        "commit_hash": "e5bd9a5654ff829b091a5a6c4f8ed6180c3d359b",
        "line_num": 1701,
        "line_str": "decl_stmt|; name|int name|strLen init|=",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(2974, 2977)"
      }
    ]
  },
  {
    "id": 10072,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": ["dd2cd176597eb3acc4d16942a3a9870883366cef"],
    "fix_commit_hash": "eb8f74efb75e71fc91e515a38becc2aac203e339",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "2f435baa687274dac335ed00aa943f2d35bbf9a2",
        "line_num": 626,
        "line_str": "expr_stmt|; block|} if|else if condition|(",
        "file_path": "src/java/org/apache/commons/lang/builder/EqualsBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/builder/EqualsBuilder.java",
        "input_line_num": "range(808, 810)"
      },
      {
        "commit_hash": "2f435baa687274dac335ed00aa943f2d35bbf9a2",
        "line_num": 625,
        "line_str": "argument_list|) expr_stmt|; block|} if|else if",
        "file_path": "src/java/org/apache/commons/lang/builder/EqualsBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/builder/EqualsBuilder.java",
        "input_line_num": "range(808, 810)"
      },
      {
        "commit_hash": "dd2cd176597eb3acc4d16942a3a9870883366cef",
        "line_num": 350,
        "line_str": "condition|) block|{ comment name|isEquals",
        "file_path": "src/java/org/apache/commons/lang/builder/EqualsBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/builder/EqualsBuilder.java",
        "input_line_num": "range(797, 799)"
      },
      {
        "commit_hash": "dd2cd176597eb3acc4d16942a3a9870883366cef",
        "line_num": 349,
        "line_str": "argument_list|() condition|) block|{ comment",
        "file_path": "src/java/org/apache/commons/lang/builder/EqualsBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/builder/EqualsBuilder.java",
        "input_line_num": "range(797, 799)"
      }
    ]
  },
  {
    "id": 10073,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": ["7e8976d60b8a24f9fc03f89d98304d77e6153b6d"],
    "fix_commit_hash": "0ac772a4e3b07287c435fdc3c812f67277c85cc8",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "7e8976d60b8a24f9fc03f89d98304d77e6153b6d",
        "line_num": 1226,
        "line_str": "block|{ name|int name|gcd init|=",
        "file_path": "src/java/org/apache/commons/lang/math/Fraction.java",
        "input_file_path": "src/java/org/apache/commons/lang/math/Fraction.java",
        "input_line_num": "range(1346, 1349)"
      },
      {
        "commit_hash": "7e8976d60b8a24f9fc03f89d98304d77e6153b6d",
        "line_num": 1225,
        "line_str": "parameter_list|() block|{ name|int name|gcd",
        "file_path": "src/java/org/apache/commons/lang/math/Fraction.java",
        "input_file_path": "src/java/org/apache/commons/lang/math/Fraction.java",
        "input_line_num": "range(1346, 1349)"
      },
      {
        "commit_hash": "7e8976d60b8a24f9fc03f89d98304d77e6153b6d",
        "line_num": 1224,
        "line_str": "name|reduce parameter_list|() block|{ name|int",
        "file_path": "src/java/org/apache/commons/lang/math/Fraction.java",
        "input_file_path": "src/java/org/apache/commons/lang/math/Fraction.java",
        "input_line_num": "range(1346, 1349)"
      }
    ]
  },
  {
    "id": 10074,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": ["49b8c603ef302a4b8d44070e9649770f6afe655d"],
    "fix_commit_hash": "a5589b39e985e64861bd920aa7b13ab32c215b06",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "49b8c603ef302a4b8d44070e9649770f6afe655d",
        "line_num": 1252,
        "line_str": "block|} block|} case|case literal|4",
        "file_path": "src/java/org/apache/commons/lang/BooleanUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/BooleanUtils.java",
        "input_line_num": "range(1328, 1331)"
      },
      {
        "commit_hash": "49b8c603ef302a4b8d44070e9649770f6afe655d",
        "line_num": 1251,
        "line_str": "return|; block|} block|} case|case",
        "file_path": "src/java/org/apache/commons/lang/BooleanUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/BooleanUtils.java",
        "input_line_num": "range(1328, 1331)"
      },
      {
        "commit_hash": "49b8c603ef302a4b8d44070e9649770f6afe655d",
        "line_num": 1250,
        "line_str": "operator|) return|; block|} block|}",
        "file_path": "src/java/org/apache/commons/lang/BooleanUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/BooleanUtils.java",
        "input_line_num": "range(1328, 1331)"
      }
    ]
  },
  {
    "id": 10075,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": ["f03e83e74e8a723fd8c8fffc84cc7faaf9494ab4"],
    "fix_commit_hash": "868f6976aea222e96259843f56df9aed8e48584b",
    "language": ["java"],
    "inducing_commit_hash": []
  },
  {
    "id": 10076,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": ["bb1671667d9085fb76bd06af7f7ad91d2c1c8389"],
    "fix_commit_hash": "d3b1163073c7aeb6011a5b65bfadad15bfc0f108",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "bb1671667d9085fb76bd06af7f7ad91d2c1c8389",
        "line_num": 1668,
        "line_str": "name|millisecs expr_stmt|; if|if condition|(",
        "file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_line_num": "range(1667, 1670)"
      },
      {
        "commit_hash": "bb1671667d9085fb76bd06af7f7ad91d2c1c8389",
        "line_num": 1667,
        "line_str": "operator|- name|millisecs expr_stmt|; if|if",
        "file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_line_num": "range(1667, 1670)"
      },
      {
        "commit_hash": "bb1671667d9085fb76bd06af7f7ad91d2c1c8389",
        "line_num": 1722,
        "line_str": "expr_stmt|; if|if condition|( name|field",
        "file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_line_num": "range(1720, 1723)"
      },
      {
        "commit_hash": "bb1671667d9085fb76bd06af7f7ad91d2c1c8389",
        "line_num": 1721,
        "line_str": "operator|) expr_stmt|; if|if condition|(",
        "file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_line_num": "range(1720, 1723)"
      },
      {
        "commit_hash": "bb1671667d9085fb76bd06af7f7ad91d2c1c8389",
        "line_num": 1720,
        "line_str": "literal|1000L operator|) expr_stmt|; if|if",
        "file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_line_num": "range(1720, 1723)"
      },
      {
        "commit_hash": "bb1671667d9085fb76bd06af7f7ad91d2c1c8389",
        "line_num": 1683,
        "line_str": "block|} block|} comment name|int",
        "file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_line_num": "range(1681, 1684)"
      },
      {
        "commit_hash": "bb1671667d9085fb76bd06af7f7ad91d2c1c8389",
        "line_num": 1682,
        "line_str": "expr_stmt|; block|} block|} comment",
        "file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_line_num": "range(1681, 1684)"
      },
      {
        "commit_hash": "bb1671667d9085fb76bd06af7f7ad91d2c1c8389",
        "line_num": 1681,
        "line_str": "literal|true expr_stmt|; block|} block|}",
        "file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_line_num": "range(1681, 1684)"
      },
      {
        "commit_hash": "bb1671667d9085fb76bd06af7f7ad91d2c1c8389",
        "line_num": 1736,
        "line_str": "block|} block|} comment name|int",
        "file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_line_num": "range(1734, 1737)"
      },
      {
        "commit_hash": "bb1671667d9085fb76bd06af7f7ad91d2c1c8389",
        "line_num": 1735,
        "line_str": "expr_stmt|; block|} block|} comment",
        "file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_line_num": "range(1734, 1737)"
      },
      {
        "commit_hash": "bb1671667d9085fb76bd06af7f7ad91d2c1c8389",
        "line_num": 1734,
        "line_str": "literal|true expr_stmt|; block|} block|}",
        "file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_line_num": "range(1734, 1737)"
      },
      {
        "commit_hash": "bb1671667d9085fb76bd06af7f7ad91d2c1c8389",
        "line_num": 1669,
        "line_str": "expr_stmt|; if|if condition|( name|field",
        "file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_line_num": "range(1667, 1670)"
      }
    ]
  },
  {
    "id": 10077,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": ["ddd4f84525178a0722ecbc01229d919d11c526f7"],
    "fix_commit_hash": "e89e8d62b911340cc5b293465cdae909f3dfd640",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "ddd4f84525178a0722ecbc01229d919d11c526f7",
        "line_num": 353,
        "line_str": "decl_stmt|; name|char name|ch4 init|=",
        "file_path": "src/java/org/apache/commons/lang/LocaleUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/LocaleUtils.java",
        "input_line_num": "range(351, 354)"
      },
      {
        "commit_hash": "ddd4f84525178a0722ecbc01229d919d11c526f7",
        "line_num": 352,
        "line_str": "argument_list|) decl_stmt|; name|char name|ch4",
        "file_path": "src/java/org/apache/commons/lang/LocaleUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/LocaleUtils.java",
        "input_line_num": "range(351, 354)"
      },
      {
        "commit_hash": "ddd4f84525178a0722ecbc01229d919d11c526f7",
        "line_num": 351,
        "line_str": "literal|3 argument_list|) decl_stmt|; name|char",
        "file_path": "src/java/org/apache/commons/lang/LocaleUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/LocaleUtils.java",
        "input_line_num": "range(351, 354)"
      },
      {
        "commit_hash": "8f7f90712dc565ca29bbd21c1cfacdd9eb4d44ff",
        "line_num": 2272,
        "line_str": "block|} block|} block|} end_class",
        "file_path": "src/test/org/apache/commons/lang/LocaleUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/lang/LocaleUtilsTest.java",
        "input_line_num": "range(2271, 2273)"
      },
      {
        "commit_hash": "8f7f90712dc565ca29bbd21c1cfacdd9eb4d44ff",
        "line_num": 2271,
        "line_str": "block|{ block|} block|} block|}",
        "file_path": "src/test/org/apache/commons/lang/LocaleUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/lang/LocaleUtilsTest.java",
        "input_line_num": "range(2271, 2273)"
      }
    ]
  },
  {
    "id": 10078,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": ["8b070b8b22a00b7969a68317ea0f2409e06ec2ea"],
    "fix_commit_hash": "3ef8a796b5ddf87e3e9afec9ba94aac62681b394",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "c45315f36cfeed974974b807ef2ac777760ab963",
        "line_num": 212,
        "line_str": "expr_stmt|; name|this operator|. name|runningState",
        "file_path": "src/java/org/apache/commons/lang/time/StopWatch.java",
        "input_file_path": "src/java/org/apache/commons/lang/time/StopWatch.java",
        "input_line_num": "range(213, 216)"
      },
      {
        "commit_hash": "c45315f36cfeed974974b807ef2ac777760ab963",
        "line_num": 211,
        "line_str": "argument_list|() expr_stmt|; name|this operator|.",
        "file_path": "src/java/org/apache/commons/lang/time/StopWatch.java",
        "input_file_path": "src/java/org/apache/commons/lang/time/StopWatch.java",
        "input_line_num": "range(213, 216)"
      },
      {
        "commit_hash": "c45315f36cfeed974974b807ef2ac777760ab963",
        "line_num": 210,
        "line_str": "name|currentTimeMillis argument_list|() expr_stmt|; name|this",
        "file_path": "src/java/org/apache/commons/lang/time/StopWatch.java",
        "input_file_path": "src/java/org/apache/commons/lang/time/StopWatch.java",
        "input_line_num": "range(213, 216)"
      },
      {
        "commit_hash": "c45315f36cfeed974974b807ef2ac777760ab963",
        "line_num": 205,
        "line_str": "block|} name|stopTime operator|= name|System",
        "file_path": "src/java/org/apache/commons/lang/time/StopWatch.java",
        "input_file_path": "src/java/org/apache/commons/lang/time/StopWatch.java",
        "input_line_num": "range(206, 209)"
      },
      {
        "commit_hash": "c45315f36cfeed974974b807ef2ac777760ab963",
        "line_num": 204,
        "line_str": "throw|; block|} name|stopTime operator|=",
        "file_path": "src/java/org/apache/commons/lang/time/StopWatch.java",
        "input_file_path": "src/java/org/apache/commons/lang/time/StopWatch.java",
        "input_line_num": "range(206, 209)"
      },
      {
        "commit_hash": "c45315f36cfeed974974b807ef2ac777760ab963",
        "line_num": 203,
        "line_str": "argument_list|) throw|; block|} name|stopTime",
        "file_path": "src/java/org/apache/commons/lang/time/StopWatch.java",
        "input_file_path": "src/java/org/apache/commons/lang/time/StopWatch.java",
        "input_line_num": "range(206, 209)"
      }
    ]
  },
  {
    "id": 10079,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": ["ddd4f84525178a0722ecbc01229d919d11c526f7"],
    "fix_commit_hash": "bbd990b81fd7f8ab9dde75c8070b973b9ce500fc",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "ddd4f84525178a0722ecbc01229d919d11c526f7",
        "line_num": 702,
        "line_str": "name|cAvailableLocaleSet operator|. name|contains argument_list|(",
        "file_path": "src/java/org/apache/commons/lang/LocaleUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/LocaleUtils.java",
        "input_line_num": "range(699, 703)"
      },
      {
        "commit_hash": "ddd4f84525178a0722ecbc01229d919d11c526f7",
        "line_num": 701,
        "line_str": "return|return name|cAvailableLocaleSet operator|. name|contains",
        "file_path": "src/java/org/apache/commons/lang/LocaleUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/LocaleUtils.java",
        "input_line_num": "range(699, 703)"
      },
      {
        "commit_hash": "ddd4f84525178a0722ecbc01229d919d11c526f7",
        "line_num": 700,
        "line_str": "block|{ return|return name|cAvailableLocaleSet operator|.",
        "file_path": "src/java/org/apache/commons/lang/LocaleUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/LocaleUtils.java",
        "input_line_num": "range(699, 703)"
      },
      {
        "commit_hash": "ddd4f84525178a0722ecbc01229d919d11c526f7",
        "line_num": 699,
        "line_str": "parameter_list|) block|{ return|return name|cAvailableLocaleSet",
        "file_path": "src/java/org/apache/commons/lang/LocaleUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/LocaleUtils.java",
        "input_line_num": "range(699, 703)"
      },
      {
        "commit_hash": "ddd4f84525178a0722ecbc01229d919d11c526f7",
        "line_num": 317,
        "line_str": "return|; block|} comment comment",
        "file_path": "src/test/org/apache/commons/lang/LocaleUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/lang/LocaleUtilsTest.java",
        "input_line_num": "range(326, 328)"
      },
      {
        "commit_hash": "ddd4f84525178a0722ecbc01229d919d11c526f7",
        "line_num": 316,
        "line_str": "name|suite return|; block|} comment",
        "file_path": "src/test/org/apache/commons/lang/LocaleUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/lang/LocaleUtilsTest.java",
        "input_line_num": "range(326, 328)"
      }
    ]
  },
  {
    "id": 10080,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": ["b4255e6d071dc8d48bfc51037cecb29097b9a49d"],
    "fix_commit_hash": "cff0f1ae37bb2b7ab2dcdb10dec1f3cad7532e1c",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "b4255e6d071dc8d48bfc51037cecb29097b9a49d",
        "line_num": 300,
        "line_str": "name|pos argument_list|) argument_list|) expr_stmt|;",
        "file_path": "src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java",
        "input_line_num": "range(297, 301)"
      },
      {
        "commit_hash": "b4255e6d071dc8d48bfc51037cecb29097b9a49d",
        "line_num": 299,
        "line_str": "argument_list|, name|pos argument_list|) argument_list|)",
        "file_path": "src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java",
        "input_line_num": "range(297, 301)"
      },
      {
        "commit_hash": "b4255e6d071dc8d48bfc51037cecb29097b9a49d",
        "line_num": 298,
        "line_str": "name|input argument_list|, name|pos argument_list|)",
        "file_path": "src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java",
        "input_line_num": "range(297, 301)"
      },
      {
        "commit_hash": "b4255e6d071dc8d48bfc51037cecb29097b9a49d",
        "line_num": 297,
        "line_str": "argument_list|( name|input argument_list|, name|pos",
        "file_path": "src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java",
        "input_line_num": "range(297, 301)"
      }
    ]
  },
  {
    "id": 10081,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": ["e5bd9a5654ff829b091a5a6c4f8ed6180c3d359b"],
    "fix_commit_hash": "a8203b65261110c4a30ff69fe0da7a2390d82757",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "e5bd9a5654ff829b091a5a6c4f8ed6180c3d359b",
        "line_num": 3844,
        "line_str": "operator|< name|thisBuf operator|. name|length",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(5282, 5288)"
      },
      {
        "commit_hash": "e5bd9a5654ff829b091a5a6c4f8ed6180c3d359b",
        "line_num": 3843,
        "line_str": "name|i operator|< name|thisBuf operator|.",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(5282, 5288)"
      },
      {
        "commit_hash": "e5bd9a5654ff829b091a5a6c4f8ed6180c3d359b",
        "line_num": 3842,
        "line_str": "init|; name|i operator|< name|thisBuf",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(5282, 5288)"
      },
      {
        "commit_hash": "e5bd9a5654ff829b091a5a6c4f8ed6180c3d359b",
        "line_num": 3728,
        "line_str": "name|length condition|; name|i operator|++",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(5145, 5151)"
      },
      {
        "commit_hash": "e5bd9a5654ff829b091a5a6c4f8ed6180c3d359b",
        "line_num": 3727,
        "line_str": "operator|. name|length condition|; name|i",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(5145, 5151)"
      },
      {
        "commit_hash": "e5bd9a5654ff829b091a5a6c4f8ed6180c3d359b",
        "line_num": 3726,
        "line_str": "name|thisBuf operator|. name|length condition|;",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(5145, 5151)"
      },
      {
        "commit_hash": "e5bd9a5654ff829b091a5a6c4f8ed6180c3d359b",
        "line_num": 3725,
        "line_str": "operator|< name|thisBuf operator|. name|length",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(5145, 5151)"
      },
      {
        "commit_hash": "e5bd9a5654ff829b091a5a6c4f8ed6180c3d359b",
        "line_num": 3724,
        "line_str": "name|i operator|< name|thisBuf operator|.",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(5145, 5151)"
      },
      {
        "commit_hash": "e5bd9a5654ff829b091a5a6c4f8ed6180c3d359b",
        "line_num": 3723,
        "line_str": "init|; name|i operator|< name|thisBuf",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(5145, 5151)"
      },
      {
        "commit_hash": "e5bd9a5654ff829b091a5a6c4f8ed6180c3d359b",
        "line_num": 3847,
        "line_str": "name|length condition|; name|i operator|++",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(5282, 5288)"
      },
      {
        "commit_hash": "e5bd9a5654ff829b091a5a6c4f8ed6180c3d359b",
        "line_num": 3846,
        "line_str": "operator|. name|length condition|; name|i",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(5282, 5288)"
      },
      {
        "commit_hash": "e5bd9a5654ff829b091a5a6c4f8ed6180c3d359b",
        "line_num": 3845,
        "line_str": "name|thisBuf operator|. name|length condition|;",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(5282, 5288)"
      }
    ]
  },
  {
    "id": 10082,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": ["e5bd9a5654ff829b091a5a6c4f8ed6180c3d359b"],
    "fix_commit_hash": "88c76d207f642831ca899e144159424aaa60cf8e",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "e5bd9a5654ff829b091a5a6c4f8ed6180c3d359b",
        "line_num": 3996,
        "line_str": "name|strLen condition|; name|i operator|++",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(5437, 5445)"
      },
      {
        "commit_hash": "e5bd9a5654ff829b091a5a6c4f8ed6180c3d359b",
        "line_num": 3995,
        "line_str": "operator|- name|strLen condition|; name|i",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(5437, 5445)"
      },
      {
        "commit_hash": "e5bd9a5654ff829b091a5a6c4f8ed6180c3d359b",
        "line_num": 3994,
        "line_str": "name|length operator|- name|strLen condition|;",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(5437, 5445)"
      },
      {
        "commit_hash": "e5bd9a5654ff829b091a5a6c4f8ed6180c3d359b",
        "line_num": 3993,
        "line_str": "operator|. name|length operator|- name|strLen",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(5437, 5445)"
      },
      {
        "commit_hash": "e5bd9a5654ff829b091a5a6c4f8ed6180c3d359b",
        "line_num": 3992,
        "line_str": "name|thisBuf operator|. name|length operator|-",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(5437, 5445)"
      },
      {
        "commit_hash": "e5bd9a5654ff829b091a5a6c4f8ed6180c3d359b",
        "line_num": 3991,
        "line_str": "operator|< name|thisBuf operator|. name|length",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(5437, 5445)"
      },
      {
        "commit_hash": "e5bd9a5654ff829b091a5a6c4f8ed6180c3d359b",
        "line_num": 3990,
        "line_str": "name|i operator|< name|thisBuf operator|.",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(5437, 5445)"
      },
      {
        "commit_hash": "e5bd9a5654ff829b091a5a6c4f8ed6180c3d359b",
        "line_num": 3989,
        "line_str": "init|; name|i operator|< name|thisBuf",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(5437, 5445)"
      },
      {
        "commit_hash": "dc03d7c8f81fa7933a095e65860078c1e0c595b8",
        "line_num": 4182,
        "line_str": "name|buffer decl_stmt|; name|outer label|:",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(5426, 5428)"
      },
      {
        "commit_hash": "dc03d7c8f81fa7933a095e65860078c1e0c595b8",
        "line_num": 4181,
        "line_str": "init|= name|buffer decl_stmt|; name|outer",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(5426, 5428)"
      }
    ]
  },
  {
    "id": 10083,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": ["d17bffa174a507998e343b60a5e8852821f36412"],
    "fix_commit_hash": "8de71ae52958ae70fe651b7327319c9beecd9b84",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "d17bffa174a507998e343b60a5e8852821f36412",
        "line_num": 780,
        "line_str": "expr_stmt|; block|} block|} end_class",
        "file_path": "src/test/org/apache/commons/lang/enums/ValuedEnumTest.java",
        "input_file_path": "src/test/org/apache/commons/lang/enums/ValuedEnumTest.java",
        "input_line_num": "range(779, 781)"
      },
      {
        "commit_hash": "d17bffa174a507998e343b60a5e8852821f36412",
        "line_num": 779,
        "line_str": "argument_list|) expr_stmt|; block|} block|}",
        "file_path": "src/test/org/apache/commons/lang/enums/ValuedEnumTest.java",
        "input_file_path": "src/test/org/apache/commons/lang/enums/ValuedEnumTest.java",
        "input_line_num": "range(779, 781)"
      },
      {
        "commit_hash": "df1653a8490feba4a21ad8aade5c960b402c3c7a",
        "line_num": 393,
        "line_str": "argument_list|) expr_stmt|; block|} comment",
        "file_path": "src/test/org/apache/commons/lang/enums/EnumEqualsTest.java",
        "input_file_path": "src/test/org/apache/commons/lang/enums/EnumEqualsTest.java",
        "input_line_num": "range(393, 395)"
      },
      {
        "commit_hash": "f6a926a7b5955dfa2d722508a47e9e41e0f56029",
        "line_num": 222,
        "line_str": "return|; block|} comment specifier|public",
        "file_path": "src/java/org/apache/commons/lang/enums/ValuedEnum.java",
        "input_file_path": "src/java/org/apache/commons/lang/enums/ValuedEnum.java",
        "input_line_num": "range(222, 223)"
      },
      {
        "commit_hash": "df1653a8490feba4a21ad8aade5c960b402c3c7a",
        "line_num": 394,
        "line_str": "expr_stmt|; block|} comment specifier|public",
        "file_path": "src/test/org/apache/commons/lang/enums/EnumEqualsTest.java",
        "input_file_path": "src/test/org/apache/commons/lang/enums/EnumEqualsTest.java",
        "input_line_num": "range(393, 395)"
      },
      {
        "commit_hash": "d17bffa174a507998e343b60a5e8852821f36412",
        "line_num": 214,
        "line_str": "parameter_list|) block|{ return|return name|iValue",
        "file_path": "src/java/org/apache/commons/lang/enums/ValuedEnum.java",
        "input_file_path": "src/java/org/apache/commons/lang/enums/ValuedEnum.java",
        "input_line_num": "range(208, 210)"
      },
      {
        "commit_hash": "d17bffa174a507998e343b60a5e8852821f36412",
        "line_num": 213,
        "line_str": "name|other parameter_list|) block|{ return|return",
        "file_path": "src/java/org/apache/commons/lang/enums/ValuedEnum.java",
        "input_file_path": "src/java/org/apache/commons/lang/enums/ValuedEnum.java",
        "input_line_num": "range(208, 210)"
      }
    ]
  },
  {
    "id": 10084,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["67dffec4e7adc482215df440e716525ffce5c1c5"],
    "fix_commit_hash": "7e2ffcc9034de41d7787f0b33b5670474f7a10de",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "96dfe1afa1c06fb243e312d3366daf99b88ca7b5",
        "line_num": 5210,
        "line_str": "block|} block|} comment specifier|public",
        "file_path": "src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java",
        "input_line_num": "range(6395, 6397)"
      },
      {
        "commit_hash": "96dfe1afa1c06fb243e312d3366daf99b88ca7b5",
        "line_num": 5209,
        "line_str": "block|} block|} block|} comment",
        "file_path": "src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java",
        "input_line_num": "range(6395, 6397)"
      },
      {
        "commit_hash": "67dffec4e7adc482215df440e716525ffce5c1c5",
        "line_num": 6076,
        "line_str": "comment block|} block|} block|}",
        "file_path": "src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java",
        "input_line_num": "range(6394, 6395)"
      }
    ]
  },
  {
    "id": 10085,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["322706393973a99fc70f0cbd8cadee38bae3aa94"],
    "fix_commit_hash": "32643d19538ad853a1280eb4060c4f15ac6dc3dd",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "322706393973a99fc70f0cbd8cadee38bae3aa94",
        "line_num": 905,
        "line_str": "condition|( name|source operator|. name|substring",
        "file_path": "src/java/org/apache/commons/math/complex/ComplexFormat.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/ComplexFormat.java",
        "input_line_num": "range(1004, 1007)"
      },
      {
        "commit_hash": "322706393973a99fc70f0cbd8cadee38bae3aa94",
        "line_num": 904,
        "line_str": "if|if condition|( name|source operator|.",
        "file_path": "src/java/org/apache/commons/math/complex/ComplexFormat.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/ComplexFormat.java",
        "input_line_num": "range(1004, 1007)"
      },
      {
        "commit_hash": "322706393973a99fc70f0cbd8cadee38bae3aa94",
        "line_num": 903,
        "line_str": "decl_stmt|; if|if condition|( name|source",
        "file_path": "src/java/org/apache/commons/math/complex/ComplexFormat.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/ComplexFormat.java",
        "input_line_num": "range(1004, 1007)"
      },
      {
        "commit_hash": "3842ecf3762347198bbc933abadb73c21327ca0c",
        "line_num": 1920,
        "line_str": "block|} block|} block|} end_class",
        "file_path": "src/test/org/apache/commons/math/complex/AbstractComplexFormatTest.java",
        "input_file_path": "src/test/org/apache/commons/math/complex/ComplexFormatAbstractTest.java",
        "input_line_num": "range(1919, 1921)"
      },
      {
        "commit_hash": "3842ecf3762347198bbc933abadb73c21327ca0c",
        "line_num": 1919,
        "line_str": "comment block|} block|} block|}",
        "file_path": "src/test/org/apache/commons/math/complex/AbstractComplexFormatTest.java",
        "input_file_path": "src/test/org/apache/commons/math/complex/ComplexFormatAbstractTest.java",
        "input_line_num": "range(1919, 1921)"
      }
    ]
  },
  {
    "id": 10086,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["ac9e22b1d5abce5909d5ae2b2dde33166dddeae8"],
    "fix_commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "da13ce96f28a5f4019ab5476471a9eb933662350",
        "line_num": 502,
        "line_str": "comment block|} block|} block|}",
        "file_path": "src/test/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_file_path": "src/test/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_line_num": "range(505, 506)"
      },
      {
        "commit_hash": "4a0a0f618c13b9c0ecc97a5e841b9e91872402f2",
        "line_num": 242,
        "line_str": "return|; block|} comment specifier|public",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(243, 244)"
      },
      {
        "commit_hash": "ac9e22b1d5abce5909d5ae2b2dde33166dddeae8",
        "line_num": 204,
        "line_str": "name|MathException block|{ return|return literal|0.5",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(212, 214)"
      },
      {
        "commit_hash": "ac9e22b1d5abce5909d5ae2b2dde33166dddeae8",
        "line_num": 203,
        "line_str": "throws|throws name|MathException block|{ return|return",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(212, 214)"
      },
      {
        "commit_hash": "ac9e22b1d5abce5909d5ae2b2dde33166dddeae8",
        "line_num": 233,
        "line_str": "operator|) return|; block|} comment",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(242, 243)"
      }
    ]
  },
  {
    "id": 10087,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["0a904461932f2c0455611e77ec6a8d8aced2980b"],
    "fix_commit_hash": "e39a7750ef362679599b623b05bfadb150832515",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 286,
        "line_str": "name|testRegularizedGamma argument_list|( literal|0.632121 argument_list|,",
        "file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_line_num": "range(310, 314)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 348,
        "line_str": "block|{ name|testLogGamma argument_list|( literal|0.693147",
        "file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_line_num": "range(373, 377)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 121,
        "line_str": "argument_list|, literal|10e-5 argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_line_num": "range(146, 148)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 125,
        "line_str": "name|actual argument_list|, literal|10e-5 argument_list|)",
        "file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_line_num": "range(124, 128)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 64,
        "line_str": "name|double name|DEFAULT_EPSILON init|= literal|10e-9",
        "file_path": "src/java/org/apache/commons/math/special/Gamma.java",
        "input_file_path": "src/java/org/apache/commons/math/special/Gamma.java",
        "input_line_num": "range(102, 106)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 68,
        "line_str": "init|= literal|10e-9 decl_stmt|; comment",
        "file_path": "src/java/org/apache/commons/math/special/Beta.java",
        "input_file_path": "src/java/org/apache/commons/math/special/Beta.java",
        "input_line_num": "range(88, 92)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 179,
        "line_str": "name|actual argument_list|, literal|10e-5 argument_list|)",
        "file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_line_num": "range(178, 182)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 171,
        "line_str": "literal|10e-5 argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_line_num": "range(193, 197)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 493,
        "line_str": "name|testLogBeta argument_list|( operator|- literal|0.693147",
        "file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_line_num": "range(493, 497)"
      },
      {
        "commit_hash": "a25f1e4515b215f4510088cd1787725479390b14",
        "line_num": 134,
        "line_str": "literal|10e-5 argument_list|) expr_stmt|; name|TestUtils",
        "file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_line_num": "range(131, 135)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 287,
        "line_str": "argument_list|( literal|0.632121 argument_list|, literal|1.0",
        "file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_line_num": "range(310, 314)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 349,
        "line_str": "name|testLogGamma argument_list|( literal|0.693147 argument_list|,",
        "file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_line_num": "range(373, 377)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 122,
        "line_str": "literal|10e-5 argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_line_num": "range(146, 148)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 126,
        "line_str": "argument_list|, literal|10e-5 argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_line_num": "range(124, 128)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 65,
        "line_str": "name|DEFAULT_EPSILON init|= literal|10e-9 decl_stmt|;",
        "file_path": "src/java/org/apache/commons/math/special/Gamma.java",
        "input_file_path": "src/java/org/apache/commons/math/special/Gamma.java",
        "input_line_num": "range(102, 106)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 69,
        "line_str": "literal|10e-9 decl_stmt|; comment specifier|private",
        "file_path": "src/java/org/apache/commons/math/special/Beta.java",
        "input_file_path": "src/java/org/apache/commons/math/special/Beta.java",
        "input_line_num": "range(88, 92)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 180,
        "line_str": "argument_list|, literal|10e-5 argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_line_num": "range(178, 182)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 168,
        "line_str": "argument_list|, name|actual argument_list|, literal|10e-5",
        "file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_line_num": "range(193, 197)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 494,
        "line_str": "argument_list|( operator|- literal|0.693147 argument_list|,",
        "file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_line_num": "range(493, 497)"
      },
      {
        "commit_hash": "a25f1e4515b215f4510088cd1787725479390b14",
        "line_num": 131,
        "line_str": "argument_list|, name|actualP argument_list|, literal|10e-5",
        "file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_line_num": "range(131, 135)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 288,
        "line_str": "literal|0.632121 argument_list|, literal|1.0 argument_list|,",
        "file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_line_num": "range(310, 314)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 350,
        "line_str": "argument_list|( literal|0.693147 argument_list|, literal|3.0",
        "file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_line_num": "range(373, 377)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 127,
        "line_str": "literal|10e-5 argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_line_num": "range(124, 128)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 66,
        "line_str": "init|= literal|10e-9 decl_stmt|; comment",
        "file_path": "src/java/org/apache/commons/math/special/Gamma.java",
        "input_file_path": "src/java/org/apache/commons/math/special/Gamma.java",
        "input_line_num": "range(102, 106)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 66,
        "line_str": "name|double name|DEFAULT_EPSILON init|= literal|10e-9",
        "file_path": "src/java/org/apache/commons/math/special/Beta.java",
        "input_file_path": "src/java/org/apache/commons/math/special/Beta.java",
        "input_line_num": "range(88, 92)"
      },
      {
        "commit_hash": "a25f1e4515b215f4510088cd1787725479390b14",
        "line_num": 144,
        "line_str": "operator|- name|actualQ argument_list|, literal|10e-5",
        "file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_line_num": "range(144, 146)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 181,
        "line_str": "literal|10e-5 argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_line_num": "range(178, 182)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 169,
        "line_str": "name|actual argument_list|, literal|10e-5 argument_list|)",
        "file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_line_num": "range(193, 197)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 495,
        "line_str": "operator|- literal|0.693147 argument_list|, literal|1.0",
        "file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_line_num": "range(493, 497)"
      },
      {
        "commit_hash": "a25f1e4515b215f4510088cd1787725479390b14",
        "line_num": 132,
        "line_str": "name|actualP argument_list|, literal|10e-5 argument_list|)",
        "file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_line_num": "range(131, 135)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 351,
        "line_str": "literal|0.693147 argument_list|, literal|3.0 argument_list|)",
        "file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_line_num": "range(373, 377)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 285,
        "line_str": "block|{ name|testRegularizedGamma argument_list|( literal|0.632121",
        "file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_line_num": "range(310, 314)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 67,
        "line_str": "literal|10e-9 decl_stmt|; comment specifier|private",
        "file_path": "src/java/org/apache/commons/math/special/Gamma.java",
        "input_file_path": "src/java/org/apache/commons/math/special/Gamma.java",
        "input_line_num": "range(102, 106)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 124,
        "line_str": "argument_list|, name|actual argument_list|, literal|10e-5",
        "file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_line_num": "range(124, 128)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 67,
        "line_str": "name|DEFAULT_EPSILON init|= literal|10e-9 decl_stmt|;",
        "file_path": "src/java/org/apache/commons/math/special/Beta.java",
        "input_file_path": "src/java/org/apache/commons/math/special/Beta.java",
        "input_line_num": "range(88, 92)"
      },
      {
        "commit_hash": "a25f1e4515b215f4510088cd1787725479390b14",
        "line_num": 145,
        "line_str": "name|actualQ argument_list|, literal|10e-5 argument_list|)",
        "file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_line_num": "range(144, 146)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 178,
        "line_str": "argument_list|, name|actual argument_list|, literal|10e-5",
        "file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_line_num": "range(178, 182)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 170,
        "line_str": "argument_list|, literal|10e-5 argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_line_num": "range(193, 197)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 496,
        "line_str": "literal|0.693147 argument_list|, literal|1.0 argument_list|,",
        "file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_line_num": "range(493, 497)"
      },
      {
        "commit_hash": "a25f1e4515b215f4510088cd1787725479390b14",
        "line_num": 133,
        "line_str": "argument_list|, literal|10e-5 argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_line_num": "range(131, 135)"
      }
    ]
  },
  {
    "id": 10088,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["b45652977d317211bcd02e01446796d664bc96f5"],
    "fix_commit_hash": "fc21b26f84312e4f75e8b144238618c73a8b091f",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "b45652977d317211bcd02e01446796d664bc96f5",
        "line_num": 501,
        "line_str": "name|sumXY operator|/ name|sumXX return|;",
        "file_path": "src/java/org/apache/commons/math/stat/regression/SimpleRegression.java",
        "input_file_path": "src/java/org/apache/commons/math/stat/regression/SimpleRegression.java",
        "input_line_num": "range(501, 504)"
      },
      {
        "commit_hash": "b45652977d317211bcd02e01446796d664bc96f5",
        "line_num": 496,
        "line_str": "return|return name|sumYY operator|- name|sumXY",
        "file_path": "src/java/org/apache/commons/math/stat/regression/SimpleRegression.java",
        "input_file_path": "src/java/org/apache/commons/math/stat/regression/SimpleRegression.java",
        "input_line_num": "range(494, 497)"
      },
      {
        "commit_hash": "b45652977d317211bcd02e01446796d664bc96f5",
        "line_num": 495,
        "line_str": "block|{ return|return name|sumYY operator|-",
        "file_path": "src/java/org/apache/commons/math/stat/regression/SimpleRegression.java",
        "input_file_path": "src/java/org/apache/commons/math/stat/regression/SimpleRegression.java",
        "input_line_num": "range(494, 497)"
      },
      {
        "commit_hash": "b45652977d317211bcd02e01446796d664bc96f5",
        "line_num": 494,
        "line_str": "parameter_list|() block|{ return|return name|sumYY",
        "file_path": "src/java/org/apache/commons/math/stat/regression/SimpleRegression.java",
        "input_file_path": "src/java/org/apache/commons/math/stat/regression/SimpleRegression.java",
        "input_line_num": "range(494, 497)"
      },
      {
        "commit_hash": "b45652977d317211bcd02e01446796d664bc96f5",
        "line_num": 503,
        "line_str": "name|sumXX return|; block|} comment",
        "file_path": "src/java/org/apache/commons/math/stat/regression/SimpleRegression.java",
        "input_file_path": "src/java/org/apache/commons/math/stat/regression/SimpleRegression.java",
        "input_line_num": "range(501, 504)"
      },
      {
        "commit_hash": "b45652977d317211bcd02e01446796d664bc96f5",
        "line_num": 502,
        "line_str": "operator|/ name|sumXX return|; block|}",
        "file_path": "src/java/org/apache/commons/math/stat/regression/SimpleRegression.java",
        "input_file_path": "src/java/org/apache/commons/math/stat/regression/SimpleRegression.java",
        "input_line_num": "range(501, 504)"
      }
    ]
  },
  {
    "id": 10089,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["41598b038509e9cdb7f6dbeefdb2a2876d2708a6"],
    "fix_commit_hash": "41ba9e00e3bbde990f6821f67f0da2a5575b9ac3",
    "language": ["java"],
    "inducing_commit_hash": []
  },
  {
    "id": 10090,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["80180b28efc35d63bedde1f7014c29349d744dfe"],
    "fix_commit_hash": "a6b2e992e17cee0d4cb5a2da8242a20b8e5a8fc3",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "80180b28efc35d63bedde1f7014c29349d744dfe",
        "line_num": 154,
        "line_str": "argument_list|( name|i argument_list|, name|i",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 166)"
      },
      {
        "commit_hash": "80180b28efc35d63bedde1f7014c29349d744dfe",
        "line_num": 150,
        "line_str": "block|{ name|weightMatrix operator|. name|setEntry",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 166)"
      },
      {
        "commit_hash": "80180b28efc35d63bedde1f7014c29349d744dfe",
        "line_num": 146,
        "line_str": "condition|; name|i operator|++ control|)",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 166)"
      },
      {
        "commit_hash": "80180b28efc35d63bedde1f7014c29349d744dfe",
        "line_num": 142,
        "line_str": "init|; name|i operator|< name|dim",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 166)"
      },
      {
        "commit_hash": "80180b28efc35d63bedde1f7014c29349d744dfe",
        "line_num": 138,
        "line_str": "name|int name|i init|= literal|0",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 166)"
      },
      {
        "commit_hash": "80180b28efc35d63bedde1f7014c29349d744dfe",
        "line_num": 756,
        "line_str": "parameter_list|) block|{ specifier|final name|EigenDecomposition",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(755, 757)"
      },
      {
        "commit_hash": "80180b28efc35d63bedde1f7014c29349d744dfe",
        "line_num": 134,
        "line_str": "argument_list|) expr_stmt|; for|for control|(",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 166)"
      },
      {
        "commit_hash": "a3a1f9a217c2ac49927aa3364ecd2eee4079a29f",
        "line_num": 68,
        "line_str": "operator|. name|linear operator|. name|MatrixUtils",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(68, 72)"
      },
      {
        "commit_hash": "80180b28efc35d63bedde1f7014c29349d744dfe",
        "line_num": 163,
        "line_str": "argument_list|) expr_stmt|; block|} block|}",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 166)"
      },
      {
        "commit_hash": "80180b28efc35d63bedde1f7014c29349d744dfe",
        "line_num": 130,
        "line_str": "argument_list|( name|dim argument_list|, name|dim",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 166)"
      },
      {
        "commit_hash": "80180b28efc35d63bedde1f7014c29349d744dfe",
        "line_num": 159,
        "line_str": "name|weight index|[ name|i index|]",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 166)"
      },
      {
        "commit_hash": "a3a1f9a217c2ac49927aa3364ecd2eee4079a29f",
        "line_num": 126,
        "line_str": "operator|= name|MatrixUtils operator|. name|createRealMatrix",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(125, 128)"
      },
      {
        "commit_hash": "80180b28efc35d63bedde1f7014c29349d744dfe",
        "line_num": 155,
        "line_str": "name|i argument_list|, name|i argument_list|,",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 166)"
      },
      {
        "commit_hash": "80180b28efc35d63bedde1f7014c29349d744dfe",
        "line_num": 773,
        "line_str": "return|; block|} block|} end_class",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(773, 774)"
      },
      {
        "commit_hash": "80180b28efc35d63bedde1f7014c29349d744dfe",
        "line_num": 151,
        "line_str": "name|weightMatrix operator|. name|setEntry argument_list|(",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 166)"
      },
      {
        "commit_hash": "80180b28efc35d63bedde1f7014c29349d744dfe",
        "line_num": 147,
        "line_str": "name|i operator|++ control|) block|{",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 166)"
      },
      {
        "commit_hash": "80180b28efc35d63bedde1f7014c29349d744dfe",
        "line_num": 143,
        "line_str": "name|i operator|< name|dim condition|;",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 166)"
      },
      {
        "commit_hash": "80180b28efc35d63bedde1f7014c29349d744dfe",
        "line_num": 139,
        "line_str": "name|i init|= literal|0 init|;",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 166)"
      },
      {
        "commit_hash": "80180b28efc35d63bedde1f7014c29349d744dfe",
        "line_num": 135,
        "line_str": "expr_stmt|; for|for control|( name|int",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 166)"
      },
      {
        "commit_hash": "a3a1f9a217c2ac49927aa3364ecd2eee4079a29f",
        "line_num": 69,
        "line_str": "name|linear operator|. name|MatrixUtils import|;",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(68, 72)"
      },
      {
        "commit_hash": "80180b28efc35d63bedde1f7014c29349d744dfe",
        "line_num": 164,
        "line_str": "expr_stmt|; block|} block|} comment",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 166)"
      },
      {
        "commit_hash": "80180b28efc35d63bedde1f7014c29349d744dfe",
        "line_num": 131,
        "line_str": "name|dim argument_list|, name|dim argument_list|)",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 166)"
      },
      {
        "commit_hash": "80180b28efc35d63bedde1f7014c29349d744dfe",
        "line_num": 160,
        "line_str": "index|[ name|i index|] argument_list|)",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 166)"
      },
      {
        "commit_hash": "a3a1f9a217c2ac49927aa3364ecd2eee4079a29f",
        "line_num": 127,
        "line_str": "name|MatrixUtils operator|. name|createRealMatrix argument_list|(",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(125, 128)"
      },
      {
        "commit_hash": "80180b28efc35d63bedde1f7014c29349d744dfe",
        "line_num": 156,
        "line_str": "argument_list|, name|i argument_list|, name|weight",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 166)"
      },
      {
        "commit_hash": "80180b28efc35d63bedde1f7014c29349d744dfe",
        "line_num": 152,
        "line_str": "operator|. name|setEntry argument_list|( name|i",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 166)"
      },
      {
        "commit_hash": "80180b28efc35d63bedde1f7014c29349d744dfe",
        "line_num": 148,
        "line_str": "operator|++ control|) block|{ name|weightMatrix",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 166)"
      },
      {
        "commit_hash": "80180b28efc35d63bedde1f7014c29349d744dfe",
        "line_num": 144,
        "line_str": "operator|< name|dim condition|; name|i",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 166)"
      },
      {
        "commit_hash": "80180b28efc35d63bedde1f7014c29349d744dfe",
        "line_num": 140,
        "line_str": "init|= literal|0 init|; name|i",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 166)"
      },
      {
        "commit_hash": "80180b28efc35d63bedde1f7014c29349d744dfe",
        "line_num": 136,
        "line_str": "for|for control|( name|int name|i",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 166)"
      },
      {
        "commit_hash": "a3a1f9a217c2ac49927aa3364ecd2eee4079a29f",
        "line_num": 70,
        "line_str": "operator|. name|MatrixUtils import|; end_import",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(68, 72)"
      },
      {
        "commit_hash": "80180b28efc35d63bedde1f7014c29349d744dfe",
        "line_num": 165,
        "line_str": "block|} block|} comment specifier|public",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 166)"
      },
      {
        "commit_hash": "80180b28efc35d63bedde1f7014c29349d744dfe",
        "line_num": 132,
        "line_str": "argument_list|, name|dim argument_list|) expr_stmt|;",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 166)"
      },
      {
        "commit_hash": "80180b28efc35d63bedde1f7014c29349d744dfe",
        "line_num": 161,
        "line_str": "name|i index|] argument_list|) expr_stmt|;",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 166)"
      },
      {
        "commit_hash": "80180b28efc35d63bedde1f7014c29349d744dfe",
        "line_num": 128,
        "line_str": "operator|. name|createRealMatrix argument_list|( name|dim",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 166)"
      },
      {
        "commit_hash": "80180b28efc35d63bedde1f7014c29349d744dfe",
        "line_num": 157,
        "line_str": "name|i argument_list|, name|weight index|[",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 166)"
      },
      {
        "commit_hash": "80180b28efc35d63bedde1f7014c29349d744dfe",
        "line_num": 124,
        "line_str": "decl_stmt|; name|weightMatrix operator|= name|MatrixUtils",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(124, 125)"
      },
      {
        "commit_hash": "80180b28efc35d63bedde1f7014c29349d744dfe",
        "line_num": 153,
        "line_str": "name|setEntry argument_list|( name|i argument_list|,",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 166)"
      },
      {
        "commit_hash": "80180b28efc35d63bedde1f7014c29349d744dfe",
        "line_num": 149,
        "line_str": "control|) block|{ name|weightMatrix operator|.",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 166)"
      },
      {
        "commit_hash": "80180b28efc35d63bedde1f7014c29349d744dfe",
        "line_num": 145,
        "line_str": "name|dim condition|; name|i operator|++",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 166)"
      },
      {
        "commit_hash": "80180b28efc35d63bedde1f7014c29349d744dfe",
        "line_num": 141,
        "line_str": "literal|0 init|; name|i operator|<",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 166)"
      },
      {
        "commit_hash": "80180b28efc35d63bedde1f7014c29349d744dfe",
        "line_num": 137,
        "line_str": "control|( name|int name|i init|=",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 166)"
      },
      {
        "commit_hash": "80180b28efc35d63bedde1f7014c29349d744dfe",
        "line_num": 755,
        "line_str": "name|m parameter_list|) block|{ specifier|final",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(755, 757)"
      },
      {
        "commit_hash": "a3a1f9a217c2ac49927aa3364ecd2eee4079a29f",
        "line_num": 71,
        "line_str": "name|MatrixUtils import|; end_import",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(68, 72)"
      },
      {
        "commit_hash": "80180b28efc35d63bedde1f7014c29349d744dfe",
        "line_num": 133,
        "line_str": "name|dim argument_list|) expr_stmt|; for|for",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 166)"
      },
      {
        "commit_hash": "80180b28efc35d63bedde1f7014c29349d744dfe",
        "line_num": 162,
        "line_str": "index|] argument_list|) expr_stmt|; block|}",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 166)"
      },
      {
        "commit_hash": "80180b28efc35d63bedde1f7014c29349d744dfe",
        "line_num": 129,
        "line_str": "name|createRealMatrix argument_list|( name|dim argument_list|,",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 166)"
      },
      {
        "commit_hash": "80180b28efc35d63bedde1f7014c29349d744dfe",
        "line_num": 158,
        "line_str": "argument_list|, name|weight index|[ name|i",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(128, 166)"
      },
      {
        "commit_hash": "a3a1f9a217c2ac49927aa3364ecd2eee4079a29f",
        "line_num": 125,
        "line_str": "name|weightMatrix operator|= name|MatrixUtils operator|.",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(125, 128)"
      }
    ]
  },
  {
    "id": 10091,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["90279e83d82389db2ba88898ec985a1827849e6e"],
    "fix_commit_hash": "b221a7342856a2a548f5d9817055defc0ec4dea6",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "dc5fdf712a7d0f04d44f97db379827a4f1fe043d",
        "line_num": 7739,
        "line_str": "name|TWO_POWER_52 condition|) block|{ return|return",
        "file_path": "src/main/java/org/apache/commons/math/util/FastMath.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "input_line_num": "range(6489, 6493)"
      },
      {
        "commit_hash": "dc5fdf712a7d0f04d44f97db379827a4f1fe043d",
        "line_num": 7738,
        "line_str": "operator|- name|TWO_POWER_52 condition|) block|{",
        "file_path": "src/main/java/org/apache/commons/math/util/FastMath.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "input_line_num": "range(6489, 6493)"
      },
      {
        "commit_hash": "dc5fdf712a7d0f04d44f97db379827a4f1fe043d",
        "line_num": 7737,
        "line_str": "operator|<= operator|- name|TWO_POWER_52 condition|)",
        "file_path": "src/main/java/org/apache/commons/math/util/FastMath.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "input_line_num": "range(6489, 6493)"
      },
      {
        "commit_hash": "dc5fdf712a7d0f04d44f97db379827a4f1fe043d",
        "line_num": 7736,
        "line_str": "name|y operator|<= operator|- name|TWO_POWER_52",
        "file_path": "src/main/java/org/apache/commons/math/util/FastMath.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "input_line_num": "range(6489, 6493)"
      },
      {
        "commit_hash": "dc5fdf712a7d0f04d44f97db379827a4f1fe043d",
        "line_num": 7734,
        "line_str": "name|TWO_POWER_52 operator||| name|y operator|<=",
        "file_path": "src/main/java/org/apache/commons/math/util/FastMath.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "input_line_num": "range(6484, 6488)"
      },
      {
        "commit_hash": "dc5fdf712a7d0f04d44f97db379827a4f1fe043d",
        "line_num": 7733,
        "line_str": "operator|>= name|TWO_POWER_52 operator||| name|y",
        "file_path": "src/main/java/org/apache/commons/math/util/FastMath.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "input_line_num": "range(6484, 6488)"
      },
      {
        "commit_hash": "dc5fdf712a7d0f04d44f97db379827a4f1fe043d",
        "line_num": 7732,
        "line_str": "name|y operator|>= name|TWO_POWER_52 operator|||",
        "file_path": "src/main/java/org/apache/commons/math/util/FastMath.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "input_line_num": "range(6484, 6488)"
      },
      {
        "commit_hash": "dc5fdf712a7d0f04d44f97db379827a4f1fe043d",
        "line_num": 7731,
        "line_str": "condition|( name|y operator|>= name|TWO_POWER_52",
        "file_path": "src/main/java/org/apache/commons/math/util/FastMath.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "input_line_num": "range(6484, 6488)"
      }
    ]
  },
  {
    "id": 10092,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["1eb0c0d7421823470de3a901643ae3be2c9e0a8e"],
    "fix_commit_hash": "621806b796bc416f00341feca894ebae07be5ed0",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "1eb0c0d7421823470de3a901643ae3be2c9e0a8e",
        "line_num": 8121,
        "line_str": "argument_list|, name|DfpField operator|. name|FLAG_INVALID",
        "file_path": "src/test/java/org/apache/commons/math/dfp/DfpTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/dfp/DfpTest.java",
        "input_line_num": "range(8148, 8157)"
      },
      {
        "commit_hash": "1eb0c0d7421823470de3a901643ae3be2c9e0a8e",
        "line_num": 8150,
        "line_str": "argument_list|, literal|\"Multiply #38\" argument_list|) expr_stmt|;",
        "file_path": "src/test/java/org/apache/commons/math/dfp/DfpTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/dfp/DfpTest.java",
        "input_line_num": "range(8173, 8184)"
      },
      {
        "commit_hash": "1eb0c0d7421823470de3a901643ae3be2c9e0a8e",
        "line_num": 8117,
        "line_str": "argument_list|) argument_list|, comment name|nan",
        "file_path": "src/test/java/org/apache/commons/math/dfp/DfpTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/dfp/DfpTest.java",
        "input_line_num": "range(8148, 8157)"
      },
      {
        "commit_hash": "1eb0c0d7421823470de3a901643ae3be2c9e0a8e",
        "line_num": 8146,
        "line_str": "argument_list|, name|DfpField operator|. name|FLAG_INVALID",
        "file_path": "src/test/java/org/apache/commons/math/dfp/DfpTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/dfp/DfpTest.java",
        "input_line_num": "range(8173, 8184)"
      },
      {
        "commit_hash": "1eb0c0d7421823470de3a901643ae3be2c9e0a8e",
        "line_num": 8142,
        "line_str": "argument_list|) argument_list|, comment name|nan",
        "file_path": "src/test/java/org/apache/commons/math/dfp/DfpTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/dfp/DfpTest.java",
        "input_line_num": "range(8173, 8184)"
      },
      {
        "commit_hash": "1eb0c0d7421823470de3a901643ae3be2c9e0a8e",
        "line_num": 8122,
        "line_str": "name|DfpField operator|. name|FLAG_INVALID argument_list|,",
        "file_path": "src/test/java/org/apache/commons/math/dfp/DfpTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/dfp/DfpTest.java",
        "input_line_num": "range(8148, 8157)"
      },
      {
        "commit_hash": "1eb0c0d7421823470de3a901643ae3be2c9e0a8e",
        "line_num": 8151,
        "line_str": "literal|\"Multiply #38\" argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/java/org/apache/commons/math/dfp/DfpTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/dfp/DfpTest.java",
        "input_line_num": "range(8173, 8184)"
      },
      {
        "commit_hash": "1eb0c0d7421823470de3a901643ae3be2c9e0a8e",
        "line_num": 8118,
        "line_str": "argument_list|, comment name|nan argument_list|,",
        "file_path": "src/test/java/org/apache/commons/math/dfp/DfpTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/dfp/DfpTest.java",
        "input_line_num": "range(8148, 8157)"
      },
      {
        "commit_hash": "1eb0c0d7421823470de3a901643ae3be2c9e0a8e",
        "line_num": 8147,
        "line_str": "name|DfpField operator|. name|FLAG_INVALID argument_list|,",
        "file_path": "src/test/java/org/apache/commons/math/dfp/DfpTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/dfp/DfpTest.java",
        "input_line_num": "range(8173, 8184)"
      },
      {
        "commit_hash": "1eb0c0d7421823470de3a901643ae3be2c9e0a8e",
        "line_num": 8143,
        "line_str": "argument_list|, comment name|nan argument_list|,",
        "file_path": "src/test/java/org/apache/commons/math/dfp/DfpTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/dfp/DfpTest.java",
        "input_line_num": "range(8173, 8184)"
      },
      {
        "commit_hash": "1eb0c0d7421823470de3a901643ae3be2c9e0a8e",
        "line_num": 8123,
        "line_str": "operator|. name|FLAG_INVALID argument_list|, literal|\"Multiply #37\"",
        "file_path": "src/test/java/org/apache/commons/math/dfp/DfpTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/dfp/DfpTest.java",
        "input_line_num": "range(8148, 8157)"
      },
      {
        "commit_hash": "1eb0c0d7421823470de3a901643ae3be2c9e0a8e",
        "line_num": 8119,
        "line_str": "comment name|nan argument_list|, name|DfpField",
        "file_path": "src/test/java/org/apache/commons/math/dfp/DfpTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/dfp/DfpTest.java",
        "input_line_num": "range(8148, 8157)"
      },
      {
        "commit_hash": "1eb0c0d7421823470de3a901643ae3be2c9e0a8e",
        "line_num": 8148,
        "line_str": "operator|. name|FLAG_INVALID argument_list|, literal|\"Multiply #38\"",
        "file_path": "src/test/java/org/apache/commons/math/dfp/DfpTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/dfp/DfpTest.java",
        "input_line_num": "range(8173, 8184)"
      },
      {
        "commit_hash": "1eb0c0d7421823470de3a901643ae3be2c9e0a8e",
        "line_num": 8144,
        "line_str": "comment name|nan argument_list|, name|DfpField",
        "file_path": "src/test/java/org/apache/commons/math/dfp/DfpTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/dfp/DfpTest.java",
        "input_line_num": "range(8173, 8184)"
      },
      {
        "commit_hash": "1eb0c0d7421823470de3a901643ae3be2c9e0a8e",
        "line_num": 8124,
        "line_str": "name|FLAG_INVALID argument_list|, literal|\"Multiply #37\" argument_list|)",
        "file_path": "src/test/java/org/apache/commons/math/dfp/DfpTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/dfp/DfpTest.java",
        "input_line_num": "range(8148, 8157)"
      },
      {
        "commit_hash": "1eb0c0d7421823470de3a901643ae3be2c9e0a8e",
        "line_num": 8120,
        "line_str": "name|nan argument_list|, name|DfpField operator|.",
        "file_path": "src/test/java/org/apache/commons/math/dfp/DfpTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/dfp/DfpTest.java",
        "input_line_num": "range(8148, 8157)"
      },
      {
        "commit_hash": "1eb0c0d7421823470de3a901643ae3be2c9e0a8e",
        "line_num": 8149,
        "line_str": "name|FLAG_INVALID argument_list|, literal|\"Multiply #38\" argument_list|)",
        "file_path": "src/test/java/org/apache/commons/math/dfp/DfpTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/dfp/DfpTest.java",
        "input_line_num": "range(8173, 8184)"
      },
      {
        "commit_hash": "1eb0c0d7421823470de3a901643ae3be2c9e0a8e",
        "line_num": 8116,
        "line_str": "literal|10000 argument_list|) argument_list|, comment",
        "file_path": "src/test/java/org/apache/commons/math/dfp/DfpTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/dfp/DfpTest.java",
        "input_line_num": "range(8148, 8157)"
      },
      {
        "commit_hash": "1eb0c0d7421823470de3a901643ae3be2c9e0a8e",
        "line_num": 8145,
        "line_str": "name|nan argument_list|, name|DfpField operator|.",
        "file_path": "src/test/java/org/apache/commons/math/dfp/DfpTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/dfp/DfpTest.java",
        "input_line_num": "range(8173, 8184)"
      },
      {
        "commit_hash": "1eb0c0d7421823470de3a901643ae3be2c9e0a8e",
        "line_num": 8141,
        "line_str": "literal|1 argument_list|) argument_list|, comment",
        "file_path": "src/test/java/org/apache/commons/math/dfp/DfpTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/dfp/DfpTest.java",
        "input_line_num": "range(8173, 8184)"
      }
    ]
  },
  {
    "id": 10093,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["711d6b94a120d413e9d8bd21bb26ec7d0aeecc39"],
    "fix_commit_hash": "c0b655ace5665c0cd32e3f5e5b46edad4d223125",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "b3cbb097ddd902b5d980cdab46b7e0dba10975b6",
        "line_num": 976,
        "line_str": "operator|( name|double operator|) operator|(",
        "file_path": "src/main/java/org/apache/commons/math/distribution/HypergeometricDistribution.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java",
        "input_line_num": "range(853, 866)"
      },
      {
        "commit_hash": "b3cbb097ddd902b5d980cdab46b7e0dba10975b6",
        "line_num": 975,
        "line_str": "return|return operator|( name|double operator|)",
        "file_path": "src/main/java/org/apache/commons/math/distribution/HypergeometricDistribution.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java",
        "input_line_num": "range(853, 866)"
      },
      {
        "commit_hash": "b3cbb097ddd902b5d980cdab46b7e0dba10975b6",
        "line_num": 974,
        "line_str": "block|{ return|return operator|( name|double",
        "file_path": "src/main/java/org/apache/commons/math/distribution/HypergeometricDistribution.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java",
        "input_line_num": "range(853, 866)"
      },
      {
        "commit_hash": "b3cbb097ddd902b5d980cdab46b7e0dba10975b6",
        "line_num": 973,
        "line_str": "parameter_list|() block|{ return|return operator|(",
        "file_path": "src/main/java/org/apache/commons/math/distribution/HypergeometricDistribution.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java",
        "input_line_num": "range(853, 866)"
      },
      {
        "commit_hash": "e2882045231f6d29a6ffa9b2be9ff18b1698db87",
        "line_num": 643,
        "line_str": "expr_stmt|; block|} block|} end_class",
        "file_path": "src/test/org/apache/commons/math/distribution/HypergeometricDistributionTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/distribution/HypergeometricDistributionTest.java",
        "input_line_num": "range(1931, 1932)"
      },
      {
        "commit_hash": "b3cbb097ddd902b5d980cdab46b7e0dba10975b6",
        "line_num": 991,
        "line_str": "argument_list|() return|; block|} comment",
        "file_path": "src/main/java/org/apache/commons/math/distribution/HypergeometricDistribution.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java",
        "input_line_num": "range(869, 872)"
      },
      {
        "commit_hash": "b3cbb097ddd902b5d980cdab46b7e0dba10975b6",
        "line_num": 990,
        "line_str": "name|getPopulationSize argument_list|() return|; block|}",
        "file_path": "src/main/java/org/apache/commons/math/distribution/HypergeometricDistribution.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java",
        "input_line_num": "range(869, 872)"
      },
      {
        "commit_hash": "b3cbb097ddd902b5d980cdab46b7e0dba10975b6",
        "line_num": 989,
        "line_str": "operator|) name|getPopulationSize argument_list|() return|;",
        "file_path": "src/main/java/org/apache/commons/math/distribution/HypergeometricDistribution.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java",
        "input_line_num": "range(869, 872)"
      },
      {
        "commit_hash": "b3cbb097ddd902b5d980cdab46b7e0dba10975b6",
        "line_num": 985,
        "line_str": "operator|) operator|/ operator|( name|double",
        "file_path": "src/main/java/org/apache/commons/math/distribution/HypergeometricDistribution.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java",
        "input_line_num": "range(853, 866)"
      },
      {
        "commit_hash": "b3cbb097ddd902b5d980cdab46b7e0dba10975b6",
        "line_num": 984,
        "line_str": "argument_list|() operator|) operator|/ operator|(",
        "file_path": "src/main/java/org/apache/commons/math/distribution/HypergeometricDistribution.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java",
        "input_line_num": "range(853, 866)"
      },
      {
        "commit_hash": "b3cbb097ddd902b5d980cdab46b7e0dba10975b6",
        "line_num": 983,
        "line_str": "name|getNumberOfSuccesses argument_list|() operator|) operator|/",
        "file_path": "src/main/java/org/apache/commons/math/distribution/HypergeometricDistribution.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java",
        "input_line_num": "range(853, 866)"
      },
      {
        "commit_hash": "b3cbb097ddd902b5d980cdab46b7e0dba10975b6",
        "line_num": 982,
        "line_str": "operator|* name|getNumberOfSuccesses argument_list|() operator|)",
        "file_path": "src/main/java/org/apache/commons/math/distribution/HypergeometricDistribution.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java",
        "input_line_num": "range(853, 866)"
      },
      {
        "commit_hash": "b3cbb097ddd902b5d980cdab46b7e0dba10975b6",
        "line_num": 981,
        "line_str": "argument_list|() operator|* name|getNumberOfSuccesses argument_list|()",
        "file_path": "src/main/java/org/apache/commons/math/distribution/HypergeometricDistribution.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java",
        "input_line_num": "range(853, 866)"
      },
      {
        "commit_hash": "b3cbb097ddd902b5d980cdab46b7e0dba10975b6",
        "line_num": 980,
        "line_str": "name|getSampleSize argument_list|() operator|* name|getNumberOfSuccesses",
        "file_path": "src/main/java/org/apache/commons/math/distribution/HypergeometricDistribution.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java",
        "input_line_num": "range(853, 866)"
      },
      {
        "commit_hash": "b3cbb097ddd902b5d980cdab46b7e0dba10975b6",
        "line_num": 979,
        "line_str": "operator|( name|getSampleSize argument_list|() operator|*",
        "file_path": "src/main/java/org/apache/commons/math/distribution/HypergeometricDistribution.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java",
        "input_line_num": "range(853, 866)"
      },
      {
        "commit_hash": "b3cbb097ddd902b5d980cdab46b7e0dba10975b6",
        "line_num": 978,
        "line_str": "operator|) operator|( name|getSampleSize argument_list|()",
        "file_path": "src/main/java/org/apache/commons/math/distribution/HypergeometricDistribution.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java",
        "input_line_num": "range(853, 866)"
      },
      {
        "commit_hash": "b3cbb097ddd902b5d980cdab46b7e0dba10975b6",
        "line_num": 977,
        "line_str": "name|double operator|) operator|( name|getSampleSize",
        "file_path": "src/main/java/org/apache/commons/math/distribution/HypergeometricDistribution.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java",
        "input_line_num": "range(853, 866)"
      }
    ]
  },
  {
    "id": 10094,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["36d811b2d4cfe1b867823bd60ccca25abbc80b46"],
    "fix_commit_hash": "f1b04e990f4fc86544b6230fab1aa8ecfb74fbb1",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "d5ff460ba69e4261f066d7856e2f90b886924513",
        "line_num": 1105,
        "line_str": "operator|< name|b operator|. name|getValue",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(1102, 1106)"
      },
      {
        "commit_hash": "d5ff460ba69e4261f066d7856e2f90b886924513",
        "line_num": 1122,
        "line_str": "argument_list|() operator|> name|b operator|.",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(1120, 1124)"
      },
      {
        "commit_hash": "d5ff460ba69e4261f066d7856e2f90b886924513",
        "line_num": 891,
        "line_str": "argument_list|, name|isMinim argument_list|) return|;",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(884, 894)"
      },
      {
        "commit_hash": "d5ff460ba69e4261f066d7856e2f90b886924513",
        "line_num": 887,
        "line_str": "argument_list|( name|current argument_list|, name|previous",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(884, 894)"
      },
      {
        "commit_hash": "d5ff460ba69e4261f066d7856e2f90b886924513",
        "line_num": 1102,
        "line_str": "operator|. name|getValue argument_list|() operator|<",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(1102, 1106)"
      },
      {
        "commit_hash": "d5ff460ba69e4261f066d7856e2f90b886924513",
        "line_num": 1123,
        "line_str": "operator|> name|b operator|. name|getValue",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(1120, 1124)"
      },
      {
        "commit_hash": "d5ff460ba69e4261f066d7856e2f90b886924513",
        "line_num": 892,
        "line_str": "name|isMinim argument_list|) return|; block|}",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(884, 894)"
      },
      {
        "commit_hash": "d5ff460ba69e4261f066d7856e2f90b886924513",
        "line_num": 888,
        "line_str": "name|current argument_list|, name|previous argument_list|,",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(884, 894)"
      },
      {
        "commit_hash": "d5ff460ba69e4261f066d7856e2f90b886924513",
        "line_num": 884,
        "line_str": "block|{ return|return name|best argument_list|(",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(884, 894)"
      },
      {
        "commit_hash": "43ed5002e1483019207c5130459ef469c24dab31",
        "line_num": 442,
        "line_str": "argument_list|) decl_stmt|; name|int name|iter",
        "file_path": "src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(424, 425)"
      },
      {
        "commit_hash": "d5ff460ba69e4261f066d7856e2f90b886924513",
        "line_num": 1103,
        "line_str": "name|getValue argument_list|() operator|< name|b",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(1102, 1106)"
      },
      {
        "commit_hash": "d5ff460ba69e4261f066d7856e2f90b886924513",
        "line_num": 1120,
        "line_str": "operator|. name|getValue argument_list|() operator|>",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(1120, 1124)"
      },
      {
        "commit_hash": "d4a0b9eb3d09bb697afe8a4c2b3340a46b97a53b",
        "line_num": 389,
        "line_str": "name|fx argument_list|) decl_stmt|; name|int",
        "file_path": "src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(423, 424)"
      },
      {
        "commit_hash": "d5ff460ba69e4261f066d7856e2f90b886924513",
        "line_num": 893,
        "line_str": "argument_list|) return|; block|} block|}",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(884, 894)"
      },
      {
        "commit_hash": "d5ff460ba69e4261f066d7856e2f90b886924513",
        "line_num": 889,
        "line_str": "argument_list|, name|previous argument_list|, name|isMinim",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(884, 894)"
      },
      {
        "commit_hash": "d5ff460ba69e4261f066d7856e2f90b886924513",
        "line_num": 885,
        "line_str": "return|return name|best argument_list|( name|current",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(884, 894)"
      },
      {
        "commit_hash": "d5ff460ba69e4261f066d7856e2f90b886924513",
        "line_num": 1042,
        "line_str": "return|return name|best argument_list|( name|current",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(1042, 1043)"
      },
      {
        "commit_hash": "d5ff460ba69e4261f066d7856e2f90b886924513",
        "line_num": 1104,
        "line_str": "argument_list|() operator|< name|b operator|.",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(1102, 1106)"
      },
      {
        "commit_hash": "d5ff460ba69e4261f066d7856e2f90b886924513",
        "line_num": 1121,
        "line_str": "name|getValue argument_list|() operator|> name|b",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(1120, 1124)"
      },
      {
        "commit_hash": "36d811b2d4cfe1b867823bd60ccca25abbc80b46",
        "line_num": 861,
        "line_str": "name|fu argument_list|) expr_stmt|; if|if",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(861, 862)"
      },
      {
        "commit_hash": "d5ff460ba69e4261f066d7856e2f90b886924513",
        "line_num": 890,
        "line_str": "name|previous argument_list|, name|isMinim argument_list|)",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(884, 894)"
      },
      {
        "commit_hash": "d5ff460ba69e4261f066d7856e2f90b886924513",
        "line_num": 886,
        "line_str": "name|best argument_list|( name|current argument_list|,",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(884, 894)"
      }
    ]
  },
  {
    "id": 10095,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["36d811b2d4cfe1b867823bd60ccca25abbc80b46"],
    "fix_commit_hash": "d5ff460ba69e4261f066d7856e2f90b886924513",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "43ed5002e1483019207c5130459ef469c24dab31",
        "line_num": 1041,
        "line_str": "name|current return|; block|} operator|++",
        "file_path": "src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(1033, 1037)"
      },
      {
        "commit_hash": "43ed5002e1483019207c5130459ef469c24dab31",
        "line_num": 1040,
        "line_str": "return|return name|current return|; block|}",
        "file_path": "src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(1033, 1037)"
      },
      {
        "commit_hash": "43ed5002e1483019207c5130459ef469c24dab31",
        "line_num": 1039,
        "line_str": "comment return|return name|current return|;",
        "file_path": "src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(1033, 1037)"
      },
      {
        "commit_hash": "43ed5002e1483019207c5130459ef469c24dab31",
        "line_num": 1038,
        "line_str": "block|{ comment return|return name|current",
        "file_path": "src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(1033, 1037)"
      },
      {
        "commit_hash": "36d811b2d4cfe1b867823bd60ccca25abbc80b46",
        "line_num": 884,
        "line_str": "block|{ return|return name|current return|;",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(883, 887)"
      },
      {
        "commit_hash": "36d811b2d4cfe1b867823bd60ccca25abbc80b46",
        "line_num": 886,
        "line_str": "name|current return|; block|} block|}",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(883, 887)"
      },
      {
        "commit_hash": "36d811b2d4cfe1b867823bd60ccca25abbc80b46",
        "line_num": 885,
        "line_str": "return|return name|current return|; block|}",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(883, 887)"
      },
      {
        "commit_hash": "76fcbc838c0f27d9b029c1f283390cb4f47f8895",
        "line_num": 891,
        "line_str": "expr_stmt|; block|} block|} block|}",
        "file_path": "src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(1041, 1042)"
      },
      {
        "commit_hash": "36d811b2d4cfe1b867823bd60ccca25abbc80b46",
        "line_num": 883,
        "line_str": "condition|) block|{ return|return name|current",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(883, 887)"
      }
    ]
  },
  {
    "id": 10096,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["b67bf47e45fa177c25fd5c445011d868a5383a6d"],
    "fix_commit_hash": "996dd998e3081e4a842017b8ebcdae9b6059b530",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "1eaea0b549f685bd416cef68faa3a137b9bb3519",
        "line_num": 1189,
        "line_str": "block|, name|ZERO_DENOMINATOR_IN_FRACTION argument_list|( literal|\"zero denominator in fraction {0}/{1}\"",
        "file_path": "src/main/java/org/apache/commons/math/util/LocalizedFormats.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java",
        "input_line_num": "range(1657, 1660)"
      },
      {
        "commit_hash": "1eaea0b549f685bd416cef68faa3a137b9bb3519",
        "line_num": 1188,
        "line_str": "argument_list|) block|, name|ZERO_DENOMINATOR_IN_FRACTION argument_list|(",
        "file_path": "src/main/java/org/apache/commons/math/util/LocalizedFormats.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java",
        "input_line_num": "range(1657, 1660)"
      },
      {
        "commit_hash": "1eaea0b549f685bd416cef68faa3a137b9bb3519",
        "line_num": 1187,
        "line_str": "literal|\"denominator must be different from 0\" argument_list|) block|, name|ZERO_DENOMINATOR_IN_FRACTION",
        "file_path": "src/main/java/org/apache/commons/math/util/LocalizedFormats.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java",
        "input_line_num": "range(1657, 1660)"
      },
      {
        "commit_hash": "8fd1834813ca42fa107b783fd57672f4f5bc9091",
        "line_num": 956,
        "line_str": "argument_list|) expr_stmt|; block|} block|}",
        "file_path": "src/test/org/apache/commons/math/optimization/fitting/HarmonicFitterTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/optimization/fitting/HarmonicFitterTest.java",
        "input_line_num": "range(1159, 1160)"
      },
      {
        "commit_hash": "b67bf47e45fa177c25fd5c445011d868a5383a6d",
        "line_num": 768,
        "line_str": "block|{ name|a operator|= name|FastMath",
        "file_path": "src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFitter.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java",
        "input_line_num": "range(851, 854)"
      },
      {
        "commit_hash": "b67bf47e45fa177c25fd5c445011d868a5383a6d",
        "line_num": 767,
        "line_str": "else|else block|{ name|a operator|=",
        "file_path": "src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFitter.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java",
        "input_line_num": "range(851, 854)"
      },
      {
        "commit_hash": "b67bf47e45fa177c25fd5c445011d868a5383a6d",
        "line_num": 766,
        "line_str": "block|} else|else block|{ name|a",
        "file_path": "src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFitter.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java",
        "input_line_num": "range(851, 854)"
      }
    ]
  },
  {
    "id": 10097,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["c7b489f1e9cf9ceaff0f5844fdcf6630224ebf16"],
    "fix_commit_hash": "1566dd339f6efc2347b0962fac7fce22adbc31ff",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "c7b489f1e9cf9ceaff0f5844fdcf6630224ebf16",
        "line_num": 233,
        "line_str": "name|a0 operator|> name|overflow condition|)",
        "file_path": "src/java/org/apache/commons/math/fraction/Fraction.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/fraction/Fraction.java",
        "input_line_num": "range(512, 516)"
      },
      {
        "commit_hash": "c7b489f1e9cf9ceaff0f5844fdcf6630224ebf16",
        "line_num": 232,
        "line_str": "condition|( name|a0 operator|> name|overflow",
        "file_path": "src/java/org/apache/commons/math/fraction/Fraction.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/fraction/Fraction.java",
        "input_line_num": "range(512, 516)"
      },
      {
        "commit_hash": "c7b489f1e9cf9ceaff0f5844fdcf6630224ebf16",
        "line_num": 231,
        "line_str": "if|if condition|( name|a0 operator|>",
        "file_path": "src/java/org/apache/commons/math/fraction/Fraction.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/fraction/Fraction.java",
        "input_line_num": "range(512, 516)"
      },
      {
        "commit_hash": "c7b489f1e9cf9ceaff0f5844fdcf6630224ebf16",
        "line_num": 230,
        "line_str": "decl_stmt|; if|if condition|( name|a0",
        "file_path": "src/java/org/apache/commons/math/fraction/Fraction.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/fraction/Fraction.java",
        "input_line_num": "range(512, 516)"
      },
      {
        "commit_hash": "c7b489f1e9cf9ceaff0f5844fdcf6630224ebf16",
        "line_num": 1402,
        "line_str": "literal|1.0e10 argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/org/apache/commons/math/fraction/FractionTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/fraction/FractionTest.java",
        "input_line_num": "range(1453, 1454)"
      },
      {
        "commit_hash": "c7b489f1e9cf9ceaff0f5844fdcf6630224ebf16",
        "line_num": 381,
        "line_str": "name|q2 operator|> name|overflow operator|)",
        "file_path": "src/java/org/apache/commons/math/fraction/Fraction.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/fraction/Fraction.java",
        "input_line_num": "range(660, 664)"
      },
      {
        "commit_hash": "c7b489f1e9cf9ceaff0f5844fdcf6630224ebf16",
        "line_num": 380,
        "line_str": "operator|( name|q2 operator|> name|overflow",
        "file_path": "src/java/org/apache/commons/math/fraction/Fraction.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/fraction/Fraction.java",
        "input_line_num": "range(660, 664)"
      },
      {
        "commit_hash": "c7b489f1e9cf9ceaff0f5844fdcf6630224ebf16",
        "line_num": 379,
        "line_str": "operator||| operator|( name|q2 operator|>",
        "file_path": "src/java/org/apache/commons/math/fraction/Fraction.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/fraction/Fraction.java",
        "input_line_num": "range(660, 664)"
      },
      {
        "commit_hash": "c7b489f1e9cf9ceaff0f5844fdcf6630224ebf16",
        "line_num": 378,
        "line_str": "operator|) operator||| operator|( name|q2",
        "file_path": "src/java/org/apache/commons/math/fraction/Fraction.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/fraction/Fraction.java",
        "input_line_num": "range(660, 664)"
      },
      {
        "commit_hash": "c7b489f1e9cf9ceaff0f5844fdcf6630224ebf16",
        "line_num": 375,
        "line_str": "name|p2 operator|> name|overflow operator|)",
        "file_path": "src/java/org/apache/commons/math/fraction/Fraction.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/fraction/Fraction.java",
        "input_line_num": "range(654, 658)"
      },
      {
        "commit_hash": "c7b489f1e9cf9ceaff0f5844fdcf6630224ebf16",
        "line_num": 374,
        "line_str": "operator|( name|p2 operator|> name|overflow",
        "file_path": "src/java/org/apache/commons/math/fraction/Fraction.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/fraction/Fraction.java",
        "input_line_num": "range(654, 658)"
      },
      {
        "commit_hash": "c7b489f1e9cf9ceaff0f5844fdcf6630224ebf16",
        "line_num": 373,
        "line_str": "condition|( operator|( name|p2 operator|>",
        "file_path": "src/java/org/apache/commons/math/fraction/Fraction.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/fraction/Fraction.java",
        "input_line_num": "range(654, 658)"
      },
      {
        "commit_hash": "c7b489f1e9cf9ceaff0f5844fdcf6630224ebf16",
        "line_num": 372,
        "line_str": "if|if condition|( operator|( name|p2",
        "file_path": "src/java/org/apache/commons/math/fraction/Fraction.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/fraction/Fraction.java",
        "input_line_num": "range(654, 658)"
      }
    ]
  },
  {
    "id": 10098,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["e1776ba6ae75701bd275edd60356cada29342214"],
    "fix_commit_hash": "d3fc5af31eb696af03cfbe2e18584c7e1d307d54",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "e1776ba6ae75701bd275edd60356cada29342214",
        "line_num": 613,
        "line_str": "name|minRow return|; block|} return|return",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_line_num": "range(613, 615)"
      },
      {
        "commit_hash": "71b31811964d5dc9387a53235e3f70616944de99",
        "line_num": 419,
        "line_str": "comment for|for control|( name|Integer",
        "file_path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_line_num": "range(444, 447)"
      },
      {
        "commit_hash": "71b31811964d5dc9387a53235e3f70616944de99",
        "line_num": 418,
        "line_str": "comment comment for|for control|(",
        "file_path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_line_num": "range(444, 447)"
      },
      {
        "commit_hash": "71b31811964d5dc9387a53235e3f70616944de99",
        "line_num": 417,
        "line_str": "block|{ comment comment for|for",
        "file_path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_line_num": "range(444, 447)"
      },
      {
        "commit_hash": "e1776ba6ae75701bd275edd60356cada29342214",
        "line_num": 532,
        "line_str": "comment name|Integer name|minRow init|=",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_line_num": "range(530, 533)"
      },
      {
        "commit_hash": "e1776ba6ae75701bd275edd60356cada29342214",
        "line_num": 531,
        "line_str": "comment comment name|Integer name|minRow",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_line_num": "range(530, 533)"
      },
      {
        "commit_hash": "e1776ba6ae75701bd275edd60356cada29342214",
        "line_num": 530,
        "line_str": "comment comment comment name|Integer",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_line_num": "range(530, 533)"
      },
      {
        "commit_hash": "e1776ba6ae75701bd275edd60356cada29342214",
        "line_num": 561,
        "line_str": "name|getNumObjectiveFunctions argument_list|() init|; name|i",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_line_num": "range(560, 563)"
      },
      {
        "commit_hash": "e1776ba6ae75701bd275edd60356cada29342214",
        "line_num": 560,
        "line_str": "operator|. name|getNumObjectiveFunctions argument_list|() init|;",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_line_num": "range(560, 563)"
      },
      {
        "commit_hash": "e1776ba6ae75701bd275edd60356cada29342214",
        "line_num": 562,
        "line_str": "argument_list|() init|; name|i operator|<",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_line_num": "range(560, 563)"
      },
      {
        "commit_hash": "e1776ba6ae75701bd275edd60356cada29342214",
        "line_num": 555,
        "line_str": "control|( name|int name|i init|=",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_line_num": "range(551, 556)"
      },
      {
        "commit_hash": "e1776ba6ae75701bd275edd60356cada29342214",
        "line_num": 554,
        "line_str": "for|for control|( name|int name|i",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_line_num": "range(551, 556)"
      },
      {
        "commit_hash": "e1776ba6ae75701bd275edd60356cada29342214",
        "line_num": 553,
        "line_str": "block|{ for|for control|( name|int",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_line_num": "range(551, 556)"
      },
      {
        "commit_hash": "e1776ba6ae75701bd275edd60356cada29342214",
        "line_num": 552,
        "line_str": "control|) block|{ for|for control|(",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_line_num": "range(551, 556)"
      },
      {
        "commit_hash": "e1776ba6ae75701bd275edd60356cada29342214",
        "line_num": 551,
        "line_str": "name|minRatioPositions control|) block|{ for|for",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_line_num": "range(551, 556)"
      },
      {
        "commit_hash": "e1776ba6ae75701bd275edd60356cada29342214",
        "line_num": 614,
        "line_str": "return|; block|} return|return name|minRatioPositions",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_line_num": "range(613, 615)"
      }
    ]
  },
  {
    "id": 10099,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["dd4efa43349e74832b092ba33a92275b68cab9d3"],
    "fix_commit_hash": "92c4697300e8ddf06152bc0838c738d50673c1d2",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "dd4efa43349e74832b092ba33a92275b68cab9d3",
        "line_num": 1965,
        "line_str": "argument_list|) throw|; block|} specifier|final",
        "file_path": "src/main/java/org/apache/commons/math/util/MathArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/util/MathArrays.java",
        "input_line_num": "range(2913, 2915)"
      },
      {
        "commit_hash": "5e379d26f1eefb9f1b8c800dff8eaa8a23146e20",
        "line_num": 3028,
        "line_str": "expr_stmt|; block|} block|} annotation|@",
        "file_path": "src/test/java/org/apache/commons/math/util/MathArraysTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/util/MathArraysTest.java",
        "input_line_num": "range(4682, 4684)"
      },
      {
        "commit_hash": "5e379d26f1eefb9f1b8c800dff8eaa8a23146e20",
        "line_num": 3029,
        "line_str": "block|} block|} annotation|@ name|Test",
        "file_path": "src/test/java/org/apache/commons/math/util/MathArraysTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/util/MathArraysTest.java",
        "input_line_num": "range(4682, 4684)"
      },
      {
        "commit_hash": "dd4efa43349e74832b092ba33a92275b68cab9d3",
        "line_num": 1966,
        "line_str": "throw|; block|} specifier|final name|double",
        "file_path": "src/main/java/org/apache/commons/math/util/MathArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/util/MathArrays.java",
        "input_line_num": "range(2913, 2915)"
      }
    ]
  },
  {
    "id": 10100,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["602e3fec32294ab720a30c11b743cd04140f3ff7"],
    "fix_commit_hash": "a5d8d115cb85149c62059a23e8f4d318cac0e903",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "602e3fec32294ab720a30c11b743cd04140f3ff7",
        "line_num": 87,
        "line_str": "name|elitismRate operator|= name|elitismRate expr_stmt|;",
        "file_path": "src/java/org/apache/commons/math/genetics/ElitisticListPopulation.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java",
        "input_line_num": "range(135, 143)"
      },
      {
        "commit_hash": "602e3fec32294ab720a30c11b743cd04140f3ff7",
        "line_num": 86,
        "line_str": "operator|. name|elitismRate operator|= name|elitismRate",
        "file_path": "src/java/org/apache/commons/math/genetics/ElitisticListPopulation.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java",
        "input_line_num": "range(135, 143)"
      },
      {
        "commit_hash": "602e3fec32294ab720a30c11b743cd04140f3ff7",
        "line_num": 85,
        "line_str": "name|this operator|. name|elitismRate operator|=",
        "file_path": "src/java/org/apache/commons/math/genetics/ElitisticListPopulation.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java",
        "input_line_num": "range(135, 143)"
      },
      {
        "commit_hash": "602e3fec32294ab720a30c11b743cd04140f3ff7",
        "line_num": 84,
        "line_str": "expr_stmt|; name|this operator|. name|elitismRate",
        "file_path": "src/java/org/apache/commons/math/genetics/ElitisticListPopulation.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java",
        "input_line_num": "range(135, 143)"
      },
      {
        "commit_hash": "602e3fec32294ab720a30c11b743cd04140f3ff7",
        "line_num": 83,
        "line_str": "argument_list|) expr_stmt|; name|this operator|.",
        "file_path": "src/java/org/apache/commons/math/genetics/ElitisticListPopulation.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java",
        "input_line_num": "range(135, 143)"
      },
      {
        "commit_hash": "602e3fec32294ab720a30c11b743cd04140f3ff7",
        "line_num": 82,
        "line_str": "name|populationLimit argument_list|) expr_stmt|; name|this",
        "file_path": "src/java/org/apache/commons/math/genetics/ElitisticListPopulation.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java",
        "input_line_num": "range(135, 143)"
      },
      {
        "commit_hash": "602e3fec32294ab720a30c11b743cd04140f3ff7",
        "line_num": 112,
        "line_str": "name|elitismRate expr_stmt|; block|} comment",
        "file_path": "src/java/org/apache/commons/math/genetics/ElitisticListPopulation.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java",
        "input_line_num": "range(160, 168)"
      },
      {
        "commit_hash": "602e3fec32294ab720a30c11b743cd04140f3ff7",
        "line_num": 111,
        "line_str": "operator|= name|elitismRate expr_stmt|; block|}",
        "file_path": "src/java/org/apache/commons/math/genetics/ElitisticListPopulation.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java",
        "input_line_num": "range(160, 168)"
      },
      {
        "commit_hash": "602e3fec32294ab720a30c11b743cd04140f3ff7",
        "line_num": 110,
        "line_str": "name|elitismRate operator|= name|elitismRate expr_stmt|;",
        "file_path": "src/java/org/apache/commons/math/genetics/ElitisticListPopulation.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java",
        "input_line_num": "range(160, 168)"
      },
      {
        "commit_hash": "602e3fec32294ab720a30c11b743cd04140f3ff7",
        "line_num": 109,
        "line_str": "operator|. name|elitismRate operator|= name|elitismRate",
        "file_path": "src/java/org/apache/commons/math/genetics/ElitisticListPopulation.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java",
        "input_line_num": "range(160, 168)"
      },
      {
        "commit_hash": "602e3fec32294ab720a30c11b743cd04140f3ff7",
        "line_num": 108,
        "line_str": "name|this operator|. name|elitismRate operator|=",
        "file_path": "src/java/org/apache/commons/math/genetics/ElitisticListPopulation.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java",
        "input_line_num": "range(160, 168)"
      },
      {
        "commit_hash": "602e3fec32294ab720a30c11b743cd04140f3ff7",
        "line_num": 107,
        "line_str": "expr_stmt|; name|this operator|. name|elitismRate",
        "file_path": "src/java/org/apache/commons/math/genetics/ElitisticListPopulation.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java",
        "input_line_num": "range(160, 168)"
      },
      {
        "commit_hash": "602e3fec32294ab720a30c11b743cd04140f3ff7",
        "line_num": 106,
        "line_str": "argument_list|) expr_stmt|; name|this operator|.",
        "file_path": "src/java/org/apache/commons/math/genetics/ElitisticListPopulation.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java",
        "input_line_num": "range(160, 168)"
      },
      {
        "commit_hash": "602e3fec32294ab720a30c11b743cd04140f3ff7",
        "line_num": 105,
        "line_str": "name|populationLimit argument_list|) expr_stmt|; name|this",
        "file_path": "src/java/org/apache/commons/math/genetics/ElitisticListPopulation.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java",
        "input_line_num": "range(160, 168)"
      },
      {
        "commit_hash": "602e3fec32294ab720a30c11b743cd04140f3ff7",
        "line_num": 89,
        "line_str": "name|elitismRate expr_stmt|; block|} comment",
        "file_path": "src/java/org/apache/commons/math/genetics/ElitisticListPopulation.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java",
        "input_line_num": "range(135, 143)"
      },
      {
        "commit_hash": "602e3fec32294ab720a30c11b743cd04140f3ff7",
        "line_num": 88,
        "line_str": "operator|= name|elitismRate expr_stmt|; block|}",
        "file_path": "src/java/org/apache/commons/math/genetics/ElitisticListPopulation.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java",
        "input_line_num": "range(135, 143)"
      }
    ]
  },
  {
    "id": 10101,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["f36be8e8b7371fb8814456b6c095866aa802de78"],
    "fix_commit_hash": "e98a5000cd211539bf4ba65f62cc7f81395e1726",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "f36be8e8b7371fb8814456b6c095866aa802de78",
        "line_num": 1519,
        "line_str": "decl_stmt|; if|if condition|( name|basicRows",
        "file_path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1907, 1908)"
      },
      {
        "commit_hash": "24a6a2692e942969f5c39bd88d3d12ac0f0bf0d9",
        "line_num": 1457,
        "line_str": "if|if condition|( name|basicRows operator|.",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1908, 1909)"
      }
    ]
  },
  {
    "id": 10102,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["8742126f8f6117d90401f8d3ca1f40cd72b489aa"],
    "fix_commit_hash": "bc4e9db01c2a03062965fa4bac65782376ab2287",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "d6beaeaa9c53aa4e6ae128a856e68a9eeb1cadb8",
        "line_num": 109,
        "line_str": "expr_stmt|; name|this operator|. name|rows",
        "file_path": "src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java",
        "input_file_path": "src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java",
        "input_line_num": "range(109, 110)"
      },
      {
        "commit_hash": "82aff3309c4021ada6ef93202a1649afe803dda9",
        "line_num": 93,
        "line_str": "argument_list|) expr_stmt|; name|this operator|.",
        "file_path": "src/java/org/apache/commons/math/linear/SparseRealMatrix.java",
        "input_file_path": "src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java",
        "input_line_num": "range(107, 109)"
      },
      {
        "commit_hash": "82aff3309c4021ada6ef93202a1649afe803dda9",
        "line_num": 92,
        "line_str": "name|columnDimension argument_list|) expr_stmt|; name|this",
        "file_path": "src/java/org/apache/commons/math/linear/SparseRealMatrix.java",
        "input_file_path": "src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java",
        "input_line_num": "range(107, 109)"
      }
    ]
  },
  {
    "id": 10103,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["330f3fe17d132bd4e2a91ff812ccf489e77f390f"],
    "fix_commit_hash": "e6f27ebcb9ee0a344308382b99a3894bb61b225d",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 4192,
        "line_str": "literal|10 condition|; name|i operator|++",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4221)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 662,
        "line_str": "condition|) block|{ return|return name|isZero",
        "file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(661, 670)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 4188,
        "line_str": "literal|10 init|; name|i operator|<",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4221)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 4217,
        "line_str": "argument_list|() argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4221)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 1624,
        "line_str": "name|Complex operator|. name|INF argument_list|)",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(1623, 1627)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 4184,
        "line_str": "name|int name|i init|= operator|-",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4221)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 4213,
        "line_str": "name|i argument_list|) operator|. name|atan",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4221)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 4180,
        "line_str": "parameter_list|() block|{ for|for control|(",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4221)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 844,
        "line_str": "else|: name|INF return|; block|}",
        "file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(838, 846)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 4209,
        "line_str": "literal|1 operator|- literal|0.1 operator|*",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4221)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 840,
        "line_str": "return|return name|isZero condition|? name|NaN",
        "file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(838, 846)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 4205,
        "line_str": "name|Complex argument_list|( literal|0 argument_list|,",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4221)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 4201,
        "line_str": "operator|. name|println argument_list|( operator|new",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4221)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 4230,
        "line_str": "argument_list|() operator|. name|isInfinite argument_list|()",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4229, 4233)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 4197,
        "line_str": "block|{ name|System operator|. name|out",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4221)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 667,
        "line_str": "name|NaN else|: name|INF return|;",
        "file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(661, 670)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 4193,
        "line_str": "condition|; name|i operator|++ control|)",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4221)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 663,
        "line_str": "block|{ return|return name|isZero condition|?",
        "file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(661, 670)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 4189,
        "line_str": "init|; name|i operator|< literal|10",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4221)"
      },
      {
        "commit_hash": "4c2341482b6828b68525b2c4890972b018eff0c2",
        "line_num": 820,
        "line_str": "literal|0d condition|) block|{ return|return",
        "file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(837, 838)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 4218,
        "line_str": "argument_list|) expr_stmt|; block|} name|Assert",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4221)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 1625,
        "line_str": "operator|. name|INF argument_list|) expr_stmt|;",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(1623, 1627)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 4185,
        "line_str": "name|i init|= operator|- literal|10",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4221)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 4214,
        "line_str": "argument_list|) operator|. name|atan argument_list|()",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4221)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 4181,
        "line_str": "block|{ for|for control|( name|int",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4221)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 845,
        "line_str": "name|INF return|; block|} if|if",
        "file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(838, 846)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 4210,
        "line_str": "operator|- literal|0.1 operator|* name|i",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4221)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 841,
        "line_str": "name|isZero condition|? name|NaN else|:",
        "file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(838, 846)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 4206,
        "line_str": "argument_list|( literal|0 argument_list|, literal|1",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4221)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 4202,
        "line_str": "name|println argument_list|( operator|new name|Complex",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4221)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 4231,
        "line_str": "operator|. name|isInfinite argument_list|() argument_list|)",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4229, 4233)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 4198,
        "line_str": "name|System operator|. name|out operator|.",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4221)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 668,
        "line_str": "else|: name|INF return|; block|}",
        "file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(661, 670)"
      },
      {
        "commit_hash": "a4bbdaf426a92d6351796b1d57407776f09f0a3d",
        "line_num": 1411,
        "line_str": "name|ZERO argument_list|) decl_stmt|; name|Assert",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(1615, 1618)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 4194,
        "line_str": "name|i operator|++ control|) block|{",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4221)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 664,
        "line_str": "return|return name|isZero condition|? name|NaN",
        "file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(661, 670)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 4190,
        "line_str": "name|i operator|< literal|10 condition|;",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4221)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 4219,
        "line_str": "expr_stmt|; block|} name|Assert operator|.",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4221)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 1626,
        "line_str": "name|INF argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(1623, 1627)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 4186,
        "line_str": "init|= operator|- literal|10 init|;",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4221)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 4215,
        "line_str": "operator|. name|atan argument_list|() argument_list|)",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4221)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 4182,
        "line_str": "for|for control|( name|int name|i",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4221)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 4211,
        "line_str": "literal|0.1 operator|* name|i argument_list|)",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4221)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 842,
        "line_str": "condition|? name|NaN else|: name|INF",
        "file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(838, 846)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 4229,
        "line_str": "name|atan argument_list|() operator|. name|isInfinite",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4229, 4233)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 4207,
        "line_str": "literal|0 argument_list|, literal|1 operator|-",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4221)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 838,
        "line_str": "condition|) block|{ return|return name|isZero",
        "file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(838, 846)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 4203,
        "line_str": "argument_list|( operator|new name|Complex argument_list|(",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4221)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 4232,
        "line_str": "name|isInfinite argument_list|() argument_list|) expr_stmt|;",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4229, 4233)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 4199,
        "line_str": "operator|. name|out operator|. name|println",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4221)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 669,
        "line_str": "name|INF return|; block|} if|if",
        "file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(661, 670)"
      },
      {
        "commit_hash": "a4bbdaf426a92d6351796b1d57407776f09f0a3d",
        "line_num": 1412,
        "line_str": "argument_list|) decl_stmt|; name|Assert operator|.",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(1615, 1618)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 4195,
        "line_str": "operator|++ control|) block|{ name|System",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4221)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 665,
        "line_str": "name|isZero condition|? name|NaN else|:",
        "file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(661, 670)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 4191,
        "line_str": "operator|< literal|10 condition|; name|i",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4221)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 661,
        "line_str": "name|isZero condition|) block|{ return|return",
        "file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(661, 670)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 4220,
        "line_str": "block|} name|Assert operator|. name|assertTrue",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4221)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 4187,
        "line_str": "operator|- literal|10 init|; name|i",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4221)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 4216,
        "line_str": "name|atan argument_list|() argument_list|) expr_stmt|;",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4221)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 1623,
        "line_str": "argument_list|, name|Complex operator|. name|INF",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(1623, 1627)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 4183,
        "line_str": "control|( name|int name|i init|=",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4221)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 4212,
        "line_str": "operator|* name|i argument_list|) operator|.",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4221)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 4179,
        "line_str": "name|testAtanI parameter_list|() block|{ for|for",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4221)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 843,
        "line_str": "name|NaN else|: name|INF return|;",
        "file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(838, 846)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 4208,
        "line_str": "argument_list|, literal|1 operator|- literal|0.1",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4221)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 839,
        "line_str": "block|{ return|return name|isZero condition|?",
        "file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(838, 846)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 4204,
        "line_str": "operator|new name|Complex argument_list|( literal|0",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4221)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 4200,
        "line_str": "name|out operator|. name|println argument_list|(",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4221)"
      },
      {
        "commit_hash": "a4bbdaf426a92d6351796b1d57407776f09f0a3d",
        "line_num": 1413,
        "line_str": "decl_stmt|; name|Assert operator|. name|assertEquals",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(1615, 1618)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 4196,
        "line_str": "control|) block|{ name|System operator|.",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(4179, 4221)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 666,
        "line_str": "condition|? name|NaN else|: name|INF",
        "file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(661, 670)"
      }
    ]
  },
  {
    "id": 10104,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["39cf5e69259d7560d50553caf028f9229b721013"],
    "fix_commit_hash": "13d22f45624470ce5c07c085cf8b1ec0251eaee6",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "39cf5e69259d7560d50553caf028f9229b721013",
        "line_num": 53,
        "line_str": "name|TooManyEvaluationsException import|; end_import",
        "file_path": "src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java",
        "input_line_num": "range(50, 54)"
      },
      {
        "commit_hash": "39cf5e69259d7560d50553caf028f9229b721013",
        "line_num": 52,
        "line_str": "operator|. name|TooManyEvaluationsException import|; end_import",
        "file_path": "src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java",
        "input_line_num": "range(50, 54)"
      },
      {
        "commit_hash": "39cf5e69259d7560d50553caf028f9229b721013",
        "line_num": 51,
        "line_str": "name|exception operator|. name|TooManyEvaluationsException import|;",
        "file_path": "src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java",
        "input_line_num": "range(50, 54)"
      },
      {
        "commit_hash": "39cf5e69259d7560d50553caf028f9229b721013",
        "line_num": 50,
        "line_str": "operator|. name|exception operator|. name|TooManyEvaluationsException",
        "file_path": "src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java",
        "input_line_num": "range(50, 54)"
      },
      {
        "commit_hash": "39cf5e69259d7560d50553caf028f9229b721013",
        "line_num": 145,
        "line_str": "operator|= name|TooManyEvaluationsException operator|. name|class",
        "file_path": "src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java",
        "input_line_num": "range(143, 147)"
      },
      {
        "commit_hash": "39cf5e69259d7560d50553caf028f9229b721013",
        "line_num": 144,
        "line_str": "name|expected operator|= name|TooManyEvaluationsException operator|.",
        "file_path": "src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java",
        "input_line_num": "range(143, 147)"
      },
      {
        "commit_hash": "39cf5e69259d7560d50553caf028f9229b721013",
        "line_num": 143,
        "line_str": "argument_list|( name|expected operator|= name|TooManyEvaluationsException",
        "file_path": "src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java",
        "input_line_num": "range(143, 147)"
      },
      {
        "commit_hash": "39cf5e69259d7560d50553caf028f9229b721013",
        "line_num": 146,
        "line_str": "name|TooManyEvaluationsException operator|. name|class argument_list|)",
        "file_path": "src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java",
        "input_line_num": "range(143, 147)"
      },
      {
        "commit_hash": "39cf5e69259d7560d50553caf028f9229b721013",
        "line_num": 588,
        "line_str": "comment break|break; default|default: comment",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(586, 589)"
      },
      {
        "commit_hash": "39cf5e69259d7560d50553caf028f9229b721013",
        "line_num": 587,
        "line_str": "case|: comment break|break; default|default:",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(586, 589)"
      },
      {
        "commit_hash": "39cf5e69259d7560d50553caf028f9229b721013",
        "line_num": 586,
        "line_str": "name|REGULA_FALSI case|: comment break|break;",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(586, 589)"
      }
    ]
  },
  {
    "id": 10105,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["2f066a5b2d2fe8a00a251a3220b0d52446fe392d"],
    "fix_commit_hash": "39cf5e69259d7560d50553caf028f9229b721013",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 608,
        "line_str": "argument_list|( name|x1 argument_list|) argument_list|,",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 637)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 124,
        "line_str": "block|} annotation|@ name|Test specifier|public",
        "file_path": "src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java",
        "input_line_num": "range(124, 127)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 604,
        "line_str": "operator|* name|FastMath operator|. name|abs",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 637)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 633,
        "line_str": "name|x0 argument_list|) expr_stmt|; block|}",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 637)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 600,
        "line_str": "operator|. name|max argument_list|( name|rtol",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 637)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 629,
        "line_str": "name|f0 operator|= name|computeObjectiveValue argument_list|(",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 637)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 596,
        "line_str": "name|double name|delta init|= name|FastMath",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 637)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 625,
        "line_str": "operator|- name|delta operator|) expr_stmt|;",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 637)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 592,
        "line_str": "name|x1 condition|) block|{ specifier|final",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 637)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 621,
        "line_str": "operator|( name|x0 operator|+ name|x1",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 637)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 588,
        "line_str": "if|if condition|( name|x operator|==",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 637)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 617,
        "line_str": "name|x0 operator|= literal|0.5 operator|*",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 637)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 613,
        "line_str": "argument_list|) decl_stmt|; comment comment",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 637)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 609,
        "line_str": "name|x1 argument_list|) argument_list|, name|atol",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 637)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 125,
        "line_str": "annotation|@ name|Test specifier|public name|void",
        "file_path": "src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java",
        "input_line_num": "range(124, 127)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 605,
        "line_str": "name|FastMath operator|. name|abs argument_list|(",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 637)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 634,
        "line_str": "argument_list|) expr_stmt|; block|} break|break;",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 637)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 601,
        "line_str": "name|max argument_list|( name|rtol operator|*",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 637)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 630,
        "line_str": "operator|= name|computeObjectiveValue argument_list|( name|x0",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 637)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 597,
        "line_str": "name|delta init|= name|FastMath operator|.",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 637)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 626,
        "line_str": "name|delta operator|) expr_stmt|; name|f0",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 637)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 593,
        "line_str": "condition|) block|{ specifier|final name|double",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 637)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 622,
        "line_str": "name|x0 operator|+ name|x1 operator|-",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 637)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 589,
        "line_str": "condition|( name|x operator|== name|x1",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 637)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 618,
        "line_str": "operator|= literal|0.5 operator|* operator|(",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 637)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 585,
        "line_str": "case|case name|REGULA_FALSI case|: if|if",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 637)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 614,
        "line_str": "decl_stmt|; comment comment name|x0",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 637)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 610,
        "line_str": "argument_list|) argument_list|, name|atol argument_list|)",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 637)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 126,
        "line_str": "name|Test specifier|public name|void name|testIssue631",
        "file_path": "src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java",
        "input_line_num": "range(124, 127)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 606,
        "line_str": "operator|. name|abs argument_list|( name|x1",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 637)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 635,
        "line_str": "expr_stmt|; block|} break|break; default|default:",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 637)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 602,
        "line_str": "argument_list|( name|rtol operator|* name|FastMath",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 637)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 631,
        "line_str": "name|computeObjectiveValue argument_list|( name|x0 argument_list|)",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 637)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 598,
        "line_str": "init|= name|FastMath operator|. name|max",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 637)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 627,
        "line_str": "operator|) expr_stmt|; name|f0 operator|=",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 637)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 594,
        "line_str": "block|{ specifier|final name|double name|delta",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 637)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 623,
        "line_str": "operator|+ name|x1 operator|- name|delta",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 637)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 590,
        "line_str": "name|x operator|== name|x1 condition|)",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 637)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 619,
        "line_str": "literal|0.5 operator|* operator|( name|x0",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 637)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 586,
        "line_str": "name|REGULA_FALSI case|: if|if condition|(",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 637)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 615,
        "line_str": "comment comment name|x0 operator|=",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 637)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 611,
        "line_str": "argument_list|, name|atol argument_list|) decl_stmt|;",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 637)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 607,
        "line_str": "name|abs argument_list|( name|x1 argument_list|)",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 637)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 636,
        "line_str": "block|} break|break; default|default: comment",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 637)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 603,
        "line_str": "name|rtol operator|* name|FastMath operator|.",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 637)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 632,
        "line_str": "argument_list|( name|x0 argument_list|) expr_stmt|;",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 637)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 599,
        "line_str": "name|FastMath operator|. name|max argument_list|(",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 637)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 628,
        "line_str": "expr_stmt|; name|f0 operator|= name|computeObjectiveValue",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 637)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 595,
        "line_str": "specifier|final name|double name|delta init|=",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 637)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 624,
        "line_str": "name|x1 operator|- name|delta operator|)",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 637)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 591,
        "line_str": "operator|== name|x1 condition|) block|{",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 637)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 620,
        "line_str": "operator|* operator|( name|x0 operator|+",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 637)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 587,
        "line_str": "case|: if|if condition|( name|x",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 637)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 616,
        "line_str": "comment name|x0 operator|= literal|0.5",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 637)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 612,
        "line_str": "name|atol argument_list|) decl_stmt|; comment",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(585, 637)"
      }
    ]
  },
  {
    "id": 10106,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["6ef3b2932f4ca9219e41784bb0cd229dcabcdb11"],
    "fix_commit_hash": "7707b0bb80be05bbf6533a36bb0c646cbfd1026d",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "6ef3b2932f4ca9219e41784bb0cd229dcabcdb11",
        "line_num": 509,
        "line_str": "name|assertEquals argument_list|( name|w operator|.",
        "file_path": "src/test/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(769, 770)"
      },
      {
        "commit_hash": "e9c6d1de301072c16a48587db682542f967b3a9b",
        "line_num": 501,
        "line_str": "expr_stmt|; return|return name|createComplex argument_list|(",
        "file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(498, 501)"
      },
      {
        "commit_hash": "e9c6d1de301072c16a48587db682542f967b3a9b",
        "line_num": 500,
        "line_str": "argument_list|) expr_stmt|; return|return name|createComplex",
        "file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(498, 501)"
      },
      {
        "commit_hash": "a4bbdaf426a92d6351796b1d57407776f09f0a3d",
        "line_num": 762,
        "line_str": "literal|0 argument_list|) expr_stmt|; name|Assert",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(778, 779)"
      },
      {
        "commit_hash": "e9c6d1de301072c16a48587db682542f967b3a9b",
        "line_num": 499,
        "line_str": "name|rhs argument_list|) expr_stmt|; return|return",
        "file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(498, 501)"
      },
      {
        "commit_hash": "a4bbdaf426a92d6351796b1d57407776f09f0a3d",
        "line_num": 752,
        "line_str": "operator|. name|assertEquals argument_list|( name|w",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(766, 769)"
      },
      {
        "commit_hash": "a4bbdaf426a92d6351796b1d57407776f09f0a3d",
        "line_num": 751,
        "line_str": "name|Assert operator|. name|assertEquals argument_list|(",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(766, 769)"
      },
      {
        "commit_hash": "a4bbdaf426a92d6351796b1d57407776f09f0a3d",
        "line_num": 750,
        "line_str": "decl_stmt|; name|Assert operator|. name|assertEquals",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(766, 769)"
      },
      {
        "commit_hash": "30a40fa69d15367196d134823032514f6cddbaf6",
        "line_num": 680,
        "line_str": "argument_list|() argument_list|, literal|4.0 argument_list|,",
        "file_path": "src/test/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(772, 775)"
      },
      {
        "commit_hash": "30a40fa69d15367196d134823032514f6cddbaf6",
        "line_num": 679,
        "line_str": "name|getReal argument_list|() argument_list|, literal|4.0",
        "file_path": "src/test/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(772, 775)"
      },
      {
        "commit_hash": "30a40fa69d15367196d134823032514f6cddbaf6",
        "line_num": 678,
        "line_str": "operator|. name|getReal argument_list|() argument_list|,",
        "file_path": "src/test/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(772, 775)"
      },
      {
        "commit_hash": "6ef3b2932f4ca9219e41784bb0cd229dcabcdb11",
        "line_num": 516,
        "line_str": "argument_list|, literal|0 argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(775, 778)"
      },
      {
        "commit_hash": "6ef3b2932f4ca9219e41784bb0cd229dcabcdb11",
        "line_num": 515,
        "line_str": "literal|4.0 argument_list|, literal|0 argument_list|)",
        "file_path": "src/test/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(775, 778)"
      },
      {
        "commit_hash": "6ef3b2932f4ca9219e41784bb0cd229dcabcdb11",
        "line_num": 514,
        "line_str": "argument_list|, literal|4.0 argument_list|, literal|0",
        "file_path": "src/test/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(775, 778)"
      }
    ]
  },
  {
    "id": 10107,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["1eb0c0d7421823470de3a901643ae3be2c9e0a8e"],
    "fix_commit_hash": "c00ac8120a4215125e49775cd9351e689586b467",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "1eb0c0d7421823470de3a901643ae3be2c9e0a8e",
        "line_num": 9952,
        "line_str": "decl_stmt|; if|if condition|( name|lessThan",
        "file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_line_num": "range(9945, 9955)"
      },
      {
        "commit_hash": "1eb0c0d7421823470de3a901643ae3be2c9e0a8e",
        "line_num": 9951,
        "line_str": "literal|false decl_stmt|; if|if condition|(",
        "file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_line_num": "range(9945, 9955)"
      },
      {
        "commit_hash": "1eb0c0d7421823470de3a901643ae3be2c9e0a8e",
        "line_num": 9950,
        "line_str": "init|= literal|false decl_stmt|; if|if",
        "file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_line_num": "range(9945, 9955)"
      },
      {
        "commit_hash": "1eb0c0d7421823470de3a901643ae3be2c9e0a8e",
        "line_num": 647,
        "line_str": "condition|) block|{ return|return; block|}",
        "file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_line_num": "range(646, 649)"
      },
      {
        "commit_hash": "1eb0c0d7421823470de3a901643ae3be2c9e0a8e",
        "line_num": 646,
        "line_str": "literal|0 condition|) block|{ return|return;",
        "file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_line_num": "range(646, 649)"
      },
      {
        "commit_hash": "1eb0c0d7421823470de3a901643ae3be2c9e0a8e",
        "line_num": 648,
        "line_str": "block|{ return|return; block|} name|exponent",
        "file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_line_num": "range(646, 649)"
      },
      {
        "commit_hash": "1eb0c0d7421823470de3a901643ae3be2c9e0a8e",
        "line_num": 9959,
        "line_str": "argument_list|) condition|) block|{ name|y",
        "file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_line_num": "range(9945, 9955)"
      },
      {
        "commit_hash": "1eb0c0d7421823470de3a901643ae3be2c9e0a8e",
        "line_num": 9958,
        "line_str": "argument_list|() argument_list|) condition|) block|{",
        "file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_line_num": "range(9945, 9955)"
      },
      {
        "commit_hash": "1eb0c0d7421823470de3a901643ae3be2c9e0a8e",
        "line_num": 9957,
        "line_str": "name|getZero argument_list|() argument_list|) condition|)",
        "file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_line_num": "range(9945, 9955)"
      },
      {
        "commit_hash": "1eb0c0d7421823470de3a901643ae3be2c9e0a8e",
        "line_num": 9956,
        "line_str": "argument_list|( name|getZero argument_list|() argument_list|)",
        "file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_line_num": "range(9945, 9955)"
      },
      {
        "commit_hash": "1eb0c0d7421823470de3a901643ae3be2c9e0a8e",
        "line_num": 9955,
        "line_str": "name|lessThan argument_list|( name|getZero argument_list|()",
        "file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_line_num": "range(9945, 9955)"
      },
      {
        "commit_hash": "1eb0c0d7421823470de3a901643ae3be2c9e0a8e",
        "line_num": 9954,
        "line_str": "condition|( name|lessThan argument_list|( name|getZero",
        "file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_line_num": "range(9945, 9955)"
      },
      {
        "commit_hash": "1eb0c0d7421823470de3a901643ae3be2c9e0a8e",
        "line_num": 9953,
        "line_str": "if|if condition|( name|lessThan argument_list|(",
        "file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_line_num": "range(9945, 9955)"
      }
    ]
  },
  {
    "id": 10108,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["89ac173c2b467e6289df0e62f2a43ed1730fbad5"],
    "fix_commit_hash": "0c38504ffa3ef520ce78e260538d7b8742c895e8",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1559,
        "line_str": "operator|. name|x operator|* name|v2",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1731, 1746)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1555,
        "line_str": "operator|. name|x operator|- name|v1",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1731, 1746)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1522,
        "line_str": "parameter_list|( name|Vector3D name|v1 parameter_list|,",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1710)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1551,
        "line_str": "operator|. name|z operator|* name|v2",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1731, 1746)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1580,
        "line_str": "name|x argument_list|) return|; block|}",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1747, 1765)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1547,
        "line_str": "operator|. name|y argument_list|, name|v1",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1731, 1746)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1576,
        "line_str": "name|y operator|* name|v2 operator|.",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1747, 1765)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1543,
        "line_str": "operator|. name|z operator|* name|v2",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1718, 1730)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1572,
        "line_str": "name|y operator|- name|v1 operator|.",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1747, 1765)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1539,
        "line_str": "operator|. name|z operator|- name|v1",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1718, 1730)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1568,
        "line_str": "name|x operator|* name|v2 operator|.",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1747, 1765)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1535,
        "line_str": "operator|. name|y operator|* name|v2",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1718, 1730)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1564,
        "line_str": "name|z argument_list|, name|v1 operator|.",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1747, 1765)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1531,
        "line_str": "operator|new name|Vector3D argument_list|( name|v1",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1711, 1717)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1560,
        "line_str": "name|x operator|* name|v2 operator|.",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1731, 1746)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1527,
        "line_str": "name|v2 parameter_list|) block|{ return|return",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1711, 1717)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1556,
        "line_str": "name|x operator|- name|v1 operator|.",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1731, 1746)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1523,
        "line_str": "name|Vector3D name|v1 parameter_list|, name|Vector3D",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1710)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1552,
        "line_str": "name|z operator|* name|v2 operator|.",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1731, 1746)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1548,
        "line_str": "name|y argument_list|, name|v1 operator|.",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1731, 1746)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1577,
        "line_str": "operator|* name|v2 operator|. name|x",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1747, 1765)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1544,
        "line_str": "name|z operator|* name|v2 operator|.",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1718, 1730)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1573,
        "line_str": "operator|- name|v1 operator|. name|y",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1747, 1765)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1540,
        "line_str": "name|z operator|- name|v1 operator|.",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1718, 1730)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1569,
        "line_str": "operator|* name|v2 operator|. name|y",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1747, 1765)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1536,
        "line_str": "name|y operator|* name|v2 operator|.",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1718, 1730)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1565,
        "line_str": "argument_list|, name|v1 operator|. name|x",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1747, 1765)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1532,
        "line_str": "name|Vector3D argument_list|( name|v1 operator|.",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1711, 1717)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1561,
        "line_str": "operator|* name|v2 operator|. name|z",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1731, 1746)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1528,
        "line_str": "parameter_list|) block|{ return|return operator|new",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1711, 1717)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1557,
        "line_str": "operator|- name|v1 operator|. name|x",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1731, 1746)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1524,
        "line_str": "name|v1 parameter_list|, name|Vector3D name|v2",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1710)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1553,
        "line_str": "operator|* name|v2 operator|. name|x",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1731, 1746)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1520,
        "line_str": "name|Vector3D name|crossProduct parameter_list|( name|Vector3D",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1710)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1549,
        "line_str": "argument_list|, name|v1 operator|. name|z",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1731, 1746)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1578,
        "line_str": "name|v2 operator|. name|x argument_list|)",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1747, 1765)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1545,
        "line_str": "operator|* name|v2 operator|. name|y",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1718, 1730)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1574,
        "line_str": "name|v1 operator|. name|y operator|*",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1747, 1765)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1541,
        "line_str": "operator|- name|v1 operator|. name|z",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1718, 1730)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1570,
        "line_str": "name|v2 operator|. name|y operator|-",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1747, 1765)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1537,
        "line_str": "operator|* name|v2 operator|. name|z",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1718, 1730)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1566,
        "line_str": "name|v1 operator|. name|x operator|*",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1747, 1765)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1529,
        "line_str": "block|{ return|return operator|new name|Vector3D",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1711, 1717)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1558,
        "line_str": "name|v1 operator|. name|x operator|*",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1731, 1746)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1525,
        "line_str": "parameter_list|, name|Vector3D name|v2 parameter_list|)",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1710)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1554,
        "line_str": "name|v2 operator|. name|x operator|-",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1731, 1746)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1521,
        "line_str": "name|crossProduct parameter_list|( name|Vector3D name|v1",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1704, 1710)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1550,
        "line_str": "name|v1 operator|. name|z operator|*",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1731, 1746)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1579,
        "line_str": "operator|. name|x argument_list|) return|;",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1747, 1765)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1575,
        "line_str": "operator|. name|y operator|* name|v2",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1747, 1765)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1542,
        "line_str": "name|v1 operator|. name|z operator|*",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1718, 1730)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1571,
        "line_str": "operator|. name|y operator|- name|v1",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1747, 1765)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1538,
        "line_str": "name|v2 operator|. name|z operator|-",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1718, 1730)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1567,
        "line_str": "operator|. name|x operator|* name|v2",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1747, 1765)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1534,
        "line_str": "name|v1 operator|. name|y operator|*",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1718, 1730)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1563,
        "line_str": "operator|. name|z argument_list|, name|v1",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1747, 1765)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1530,
        "line_str": "return|return operator|new name|Vector3D argument_list|(",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(1711, 1717)"
      }
    ]
  },
  {
    "id": 10109,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["6ef3b2932f4ca9219e41784bb0cd229dcabcdb11"],
    "fix_commit_hash": "9054aac4b948117b838d6a5b15be1f50965d805a",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "ac9e22b1d5abce5909d5ae2b2dde33166dddeae8",
        "line_num": 214,
        "line_str": "name|erf argument_list|( operator|( name|x",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(366, 372)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 276,
        "line_str": "name|standardDeviation operator|) condition|) block|{",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(385, 406)"
      },
      {
        "commit_hash": "9be86f674f91fa3fe0a8694e7b98472dabe6886d",
        "line_num": 785,
        "line_str": "block|} block|} block|} specifier|public",
        "file_path": "src/test/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_line_num": "range(835, 837)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 305,
        "line_str": "name|ex throw|; block|} block|}",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(427, 435)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 272,
        "line_str": "name|mean operator|- literal|20 operator|*",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(385, 406)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 301,
        "line_str": "block|} else|else block|{ throw|throw",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(427, 435)"
      },
      {
        "commit_hash": "38844d12e3c59b3c39acc8c00d7e1dbc52d84e25",
        "line_num": 426,
        "line_str": "literal|1 return|; block|} else|else",
        "file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(423, 427)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 268,
        "line_str": "condition|( name|x operator|< operator|(",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(385, 406)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 587,
        "line_str": "literal|10 condition|) block|{ comment",
        "file_path": "src/test/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_line_num": "range(796, 802)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 264,
        "line_str": "name|ex parameter_list|) block|{ if|if",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(385, 406)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 550,
        "line_str": "name|i operator|+= literal|5 control|)",
        "file_path": "src/test/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_line_num": "range(766, 771)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 293,
        "line_str": "operator|* name|standardDeviation operator|) condition|)",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(410, 423)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 260,
        "line_str": "block|} catch|catch parameter_list|( name|MaxIterationsExceededException",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(385, 406)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 227,
        "line_str": "name|MathException block|{ try|try block|{",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(353, 357)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 289,
        "line_str": "operator|( name|mean operator|+ literal|20",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(410, 423)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 285,
        "line_str": "if|else if condition|( name|x operator|>",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(410, 423)"
      },
      {
        "commit_hash": "ac9e22b1d5abce5909d5ae2b2dde33166dddeae8",
        "line_num": 219,
        "line_str": "name|mean operator|) operator|/ operator|(",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(366, 372)"
      },
      {
        "commit_hash": "38844d12e3c59b3c39acc8c00d7e1dbc52d84e25",
        "line_num": 406,
        "line_str": "block|{ comment return|return literal|0",
        "file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(406, 410)"
      },
      {
        "commit_hash": "ac9e22b1d5abce5909d5ae2b2dde33166dddeae8",
        "line_num": 215,
        "line_str": "argument_list|( operator|( name|x operator|-",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(366, 372)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 277,
        "line_str": "operator|) condition|) block|{ comment",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(385, 406)"
      },
      {
        "commit_hash": "9c8d2c79c1ef565337599849cd066ff63b8d5816",
        "line_num": 372,
        "line_str": "block|} block|} comment annotation|@",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(435, 436)"
      },
      {
        "commit_hash": "9be86f674f91fa3fe0a8694e7b98472dabe6886d",
        "line_num": 786,
        "line_str": "block|} block|} specifier|public name|void",
        "file_path": "src/test/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_line_num": "range(835, 837)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 306,
        "line_str": "throw|; block|} block|} block|}",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(427, 435)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 273,
        "line_str": "operator|- literal|20 operator|* name|standardDeviation",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(385, 406)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 302,
        "line_str": "else|else block|{ throw|throw name|ex",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(427, 435)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 269,
        "line_str": "name|x operator|< operator|( name|mean",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(385, 406)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 588,
        "line_str": "condition|) block|{ comment name|assertTrue",
        "file_path": "src/test/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_line_num": "range(796, 802)"
      },
      {
        "commit_hash": "38844d12e3c59b3c39acc8c00d7e1dbc52d84e25",
        "line_num": 423,
        "line_str": "condition|) block|{ return|return literal|1",
        "file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(423, 427)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 265,
        "line_str": "parameter_list|) block|{ if|if condition|(",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(385, 406)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 551,
        "line_str": "operator|+= literal|5 control|) block|{",
        "file_path": "src/test/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_line_num": "range(766, 771)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 294,
        "line_str": "name|standardDeviation operator|) condition|) block|{",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(410, 423)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 261,
        "line_str": "catch|catch parameter_list|( name|MaxIterationsExceededException name|ex",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(385, 406)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 228,
        "line_str": "block|{ try|try block|{ return|return",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(353, 357)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 584,
        "line_str": "condition|( name|i operator|< literal|10",
        "file_path": "src/test/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_line_num": "range(796, 802)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 290,
        "line_str": "name|mean operator|+ literal|20 operator|*",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(410, 423)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 286,
        "line_str": "condition|( name|x operator|> operator|(",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(410, 423)"
      },
      {
        "commit_hash": "38844d12e3c59b3c39acc8c00d7e1dbc52d84e25",
        "line_num": 407,
        "line_str": "comment return|return literal|0 return|;",
        "file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(406, 410)"
      },
      {
        "commit_hash": "ac9e22b1d5abce5909d5ae2b2dde33166dddeae8",
        "line_num": 216,
        "line_str": "operator|( name|x operator|- name|mean",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(366, 372)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 278,
        "line_str": "condition|) block|{ comment return|return",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(385, 406)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 307,
        "line_str": "block|} block|} block|} comment",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(427, 435)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 274,
        "line_str": "literal|20 operator|* name|standardDeviation operator|)",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(385, 406)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 303,
        "line_str": "block|{ throw|throw name|ex throw|;",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(427, 435)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 270,
        "line_str": "operator|< operator|( name|mean operator|-",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(385, 406)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 622,
        "line_str": "expr_stmt|; block|} block|} block|}",
        "file_path": "src/test/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_line_num": "range(834, 835)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 589,
        "line_str": "block|{ comment name|assertTrue argument_list|(",
        "file_path": "src/test/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_line_num": "range(796, 802)"
      },
      {
        "commit_hash": "38844d12e3c59b3c39acc8c00d7e1dbc52d84e25",
        "line_num": 424,
        "line_str": "block|{ return|return literal|1 return|;",
        "file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(423, 427)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 266,
        "line_str": "block|{ if|if condition|( name|x",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(385, 406)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 585,
        "line_str": "name|i operator|< literal|10 condition|)",
        "file_path": "src/test/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_line_num": "range(796, 802)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 295,
        "line_str": "operator|) condition|) block|{ return|return",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(410, 423)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 262,
        "line_str": "parameter_list|( name|MaxIterationsExceededException name|ex parameter_list|)",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(385, 406)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 229,
        "line_str": "try|try block|{ return|return literal|0.5",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(353, 357)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 552,
        "line_str": "literal|5 control|) block|{ comment",
        "file_path": "src/test/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_line_num": "range(766, 771)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 291,
        "line_str": "operator|+ literal|20 operator|* name|standardDeviation",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(410, 423)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 258,
        "line_str": "operator|) return|; block|} catch|catch",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(385, 406)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 548,
        "line_str": "literal|100 condition|; name|i operator|+=",
        "file_path": "src/test/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_line_num": "range(766, 771)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 287,
        "line_str": "name|x operator|> operator|( name|mean",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(410, 423)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 283,
        "line_str": "return|; block|} if|else if condition|(",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(410, 423)"
      },
      {
        "commit_hash": "38844d12e3c59b3c39acc8c00d7e1dbc52d84e25",
        "line_num": 408,
        "line_str": "return|return literal|0 return|; block|}",
        "file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(406, 410)"
      },
      {
        "commit_hash": "ac9e22b1d5abce5909d5ae2b2dde33166dddeae8",
        "line_num": 217,
        "line_str": "name|x operator|- name|mean operator|)",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(366, 372)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 275,
        "line_str": "operator|* name|standardDeviation operator|) condition|)",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(385, 406)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 304,
        "line_str": "throw|throw name|ex throw|; block|}",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(427, 435)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 271,
        "line_str": "operator|( name|mean operator|- literal|20",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(385, 406)"
      },
      {
        "commit_hash": "ac9e22b1d5abce5909d5ae2b2dde33166dddeae8",
        "line_num": 205,
        "line_str": "block|{ return|return literal|0.5 operator|*",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(357, 358)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 300,
        "line_str": "return|; block|} else|else block|{",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(427, 435)"
      },
      {
        "commit_hash": "38844d12e3c59b3c39acc8c00d7e1dbc52d84e25",
        "line_num": 425,
        "line_str": "return|return literal|1 return|; block|}",
        "file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(423, 427)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 267,
        "line_str": "if|if condition|( name|x operator|<",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(385, 406)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 586,
        "line_str": "operator|< literal|10 condition|) block|{",
        "file_path": "src/test/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_line_num": "range(796, 802)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 263,
        "line_str": "name|MaxIterationsExceededException name|ex parameter_list|) block|{",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(385, 406)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 549,
        "line_str": "condition|; name|i operator|+= literal|5",
        "file_path": "src/test/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_line_num": "range(766, 771)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 292,
        "line_str": "literal|20 operator|* name|standardDeviation operator|)",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(410, 423)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 259,
        "line_str": "return|; block|} catch|catch parameter_list|(",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(385, 406)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 226,
        "line_str": "throws|throws name|MathException block|{ try|try",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(353, 357)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 288,
        "line_str": "operator|> operator|( name|mean operator|+",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(410, 423)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 284,
        "line_str": "block|} if|else if condition|( name|x",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(410, 423)"
      },
      {
        "commit_hash": "38844d12e3c59b3c39acc8c00d7e1dbc52d84e25",
        "line_num": 409,
        "line_str": "literal|0 return|; block|} if|else if",
        "file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(406, 410)"
      },
      {
        "commit_hash": "ac9e22b1d5abce5909d5ae2b2dde33166dddeae8",
        "line_num": 218,
        "line_str": "operator|- name|mean operator|) operator|/",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(366, 372)"
      }
    ]
  },
  {
    "id": 10110,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["b1ade04fc274a2030fcf1df2c760755eeb83bf1b"],
    "fix_commit_hash": "d2a5bc02c002acfa220ce8bad23b9e8af137f47d",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "8c131082913e0edc1ae248d36407f88991d7aa53",
        "line_num": 6063,
        "line_str": "operator|> literal|0 condition|) block|{",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5926, 5951)"
      },
      {
        "commit_hash": "f27f087466f834092e537777c9f91e47c87f024a",
        "line_num": 6146,
        "line_str": "block|} block|} comment specifier|public",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5974, 5977)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 549,
        "line_str": "operator|( name|Double operator|. name|isNaN",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1334, 1350)"
      },
      {
        "commit_hash": "8c131082913e0edc1ae248d36407f88991d7aa53",
        "line_num": 6080,
        "line_str": "block|} else|else block|{ name|checkOrder",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5955, 5965)"
      },
      {
        "commit_hash": "8c131082913e0edc1ae248d36407f88991d7aa53",
        "line_num": 6047,
        "line_str": "name|checkOrder parameter_list|( name|double index|[]",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5926, 5951)"
      },
      {
        "commit_hash": "a6ab98b9867145c7d4eccab43c9ab8927aab06a7",
        "line_num": 1755,
        "line_str": "name|ceil argument_list|( name|nextAfter argument_list|(",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3951, 3954)"
      },
      {
        "commit_hash": "8c131082913e0edc1ae248d36407f88991d7aa53",
        "line_num": 6064,
        "line_str": "literal|0 condition|) block|{ name|checkOrder",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5926, 5951)"
      },
      {
        "commit_hash": "f27f087466f834092e537777c9f91e47c87f024a",
        "line_num": 6147,
        "line_str": "block|} comment specifier|public specifier|static",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5974, 5977)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 550,
        "line_str": "name|Double operator|. name|isNaN argument_list|(",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1334, 1350)"
      },
      {
        "commit_hash": "8c131082913e0edc1ae248d36407f88991d7aa53",
        "line_num": 6081,
        "line_str": "else|else block|{ name|checkOrder argument_list|(",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5955, 5965)"
      },
      {
        "commit_hash": "8c131082913e0edc1ae248d36407f88991d7aa53",
        "line_num": 6048,
        "line_str": "parameter_list|( name|double index|[] name|val",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5926, 5951)"
      },
      {
        "commit_hash": "a6ab98b9867145c7d4eccab43c9ab8927aab06a7",
        "line_num": 1756,
        "line_str": "argument_list|( name|nextAfter argument_list|( name|unscaled",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3951, 3954)"
      },
      {
        "commit_hash": "8c131082913e0edc1ae248d36407f88991d7aa53",
        "line_num": 6065,
        "line_str": "condition|) block|{ name|checkOrder argument_list|(",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5926, 5951)"
      },
      {
        "commit_hash": "a6ab98b9867145c7d4eccab43c9ab8927aab06a7",
        "line_num": 1773,
        "line_str": "operator|. name|floor argument_list|( name|nextAfter",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3970, 3973)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 551,
        "line_str": "operator|. name|isNaN argument_list|( name|x",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1334, 1350)"
      },
      {
        "commit_hash": "8c131082913e0edc1ae248d36407f88991d7aa53",
        "line_num": 6082,
        "line_str": "block|{ name|checkOrder argument_list|( name|val",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5955, 5965)"
      },
      {
        "commit_hash": "8c131082913e0edc1ae248d36407f88991d7aa53",
        "line_num": 6049,
        "line_str": "name|double index|[] name|val parameter_list|,",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5926, 5951)"
      },
      {
        "commit_hash": "a6ab98b9867145c7d4eccab43c9ab8927aab06a7",
        "line_num": 1724,
        "line_str": "operator|. name|floor argument_list|( name|nextAfter",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3921, 3924)"
      },
      {
        "commit_hash": "8c131082913e0edc1ae248d36407f88991d7aa53",
        "line_num": 6066,
        "line_str": "block|{ name|checkOrder argument_list|( name|val",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5926, 5951)"
      },
      {
        "commit_hash": "80b1e90b42a34856b61cec628fcea6633d1000cd",
        "line_num": 3275,
        "line_str": "name|direction parameter_list|) block|{ return|return",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3275, 3287)"
      },
      {
        "commit_hash": "a6ab98b9867145c7d4eccab43c9ab8927aab06a7",
        "line_num": 1774,
        "line_str": "name|floor argument_list|( name|nextAfter argument_list|(",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3970, 3973)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 552,
        "line_str": "name|isNaN argument_list|( name|x argument_list|)",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1334, 1350)"
      },
      {
        "commit_hash": "8c131082913e0edc1ae248d36407f88991d7aa53",
        "line_num": 6083,
        "line_str": "name|checkOrder argument_list|( name|val argument_list|,",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5955, 5965)"
      },
      {
        "commit_hash": "8c131082913e0edc1ae248d36407f88991d7aa53",
        "line_num": 6050,
        "line_str": "index|[] name|val parameter_list|, name|int",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5926, 5951)"
      },
      {
        "commit_hash": "a6ab98b9867145c7d4eccab43c9ab8927aab06a7",
        "line_num": 1725,
        "line_str": "name|floor argument_list|( name|nextAfter argument_list|(",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3921, 3924)"
      },
      {
        "commit_hash": "70f29147ed9f8fe3b3d37c742ef126f046325d92",
        "line_num": 6100,
        "line_str": "argument_list|( name|val argument_list|, name|OrderDirection",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5965, 5969)"
      },
      {
        "commit_hash": "8c131082913e0edc1ae248d36407f88991d7aa53",
        "line_num": 6067,
        "line_str": "name|checkOrder argument_list|( name|val argument_list|,",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5926, 5951)"
      },
      {
        "commit_hash": "80b1e90b42a34856b61cec628fcea6633d1000cd",
        "line_num": 3276,
        "line_str": "parameter_list|) block|{ return|return name|FastMath",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3275, 3287)"
      },
      {
        "commit_hash": "a6ab98b9867145c7d4eccab43c9ab8927aab06a7",
        "line_num": 1263,
        "line_str": "specifier|public specifier|static name|double name|nextAfter",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3266, 3275)"
      },
      {
        "commit_hash": "a6ab98b9867145c7d4eccab43c9ab8927aab06a7",
        "line_num": 1775,
        "line_str": "argument_list|( name|nextAfter argument_list|( name|unscaled",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3970, 3973)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 553,
        "line_str": "argument_list|( name|x argument_list|) operator|&&",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1334, 1350)"
      },
      {
        "commit_hash": "8c131082913e0edc1ae248d36407f88991d7aa53",
        "line_num": 6051,
        "line_str": "name|val parameter_list|, name|int name|dir",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5926, 5951)"
      },
      {
        "commit_hash": "a6ab98b9867145c7d4eccab43c9ab8927aab06a7",
        "line_num": 1726,
        "line_str": "argument_list|( name|nextAfter argument_list|( name|unscaled",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3921, 3924)"
      },
      {
        "commit_hash": "70f29147ed9f8fe3b3d37c742ef126f046325d92",
        "line_num": 6101,
        "line_str": "name|val argument_list|, name|OrderDirection operator|.",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5965, 5969)"
      },
      {
        "commit_hash": "80b1e90b42a34856b61cec628fcea6633d1000cd",
        "line_num": 3277,
        "line_str": "block|{ return|return name|FastMath operator|.",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3275, 3287)"
      },
      {
        "commit_hash": "a6ab98b9867145c7d4eccab43c9ab8927aab06a7",
        "line_num": 1264,
        "line_str": "specifier|static name|double name|nextAfter parameter_list|(",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3266, 3275)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 554,
        "line_str": "name|x argument_list|) operator|&& name|Double",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1334, 1350)"
      },
      {
        "commit_hash": "8c131082913e0edc1ae248d36407f88991d7aa53",
        "line_num": 6052,
        "line_str": "parameter_list|, name|int name|dir parameter_list|,",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5926, 5951)"
      },
      {
        "commit_hash": "80b1e90b42a34856b61cec628fcea6633d1000cd",
        "line_num": 3261,
        "line_str": "return|; block|} comment annotation|@",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3261, 3266)"
      },
      {
        "commit_hash": "a6ab98b9867145c7d4eccab43c9ab8927aab06a7",
        "line_num": 1793,
        "line_str": "block|{ name|unscaled operator|= name|nextAfter",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3990, 3993)"
      },
      {
        "commit_hash": "70f29147ed9f8fe3b3d37c742ef126f046325d92",
        "line_num": 6102,
        "line_str": "argument_list|, name|OrderDirection operator|. name|DECREASING",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5965, 5969)"
      },
      {
        "commit_hash": "80b1e90b42a34856b61cec628fcea6633d1000cd",
        "line_num": 3278,
        "line_str": "return|return name|FastMath operator|. name|nextAfter",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3275, 3287)"
      },
      {
        "commit_hash": "a6ab98b9867145c7d4eccab43c9ab8927aab06a7",
        "line_num": 1265,
        "line_str": "name|double name|nextAfter parameter_list|( name|double",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3266, 3275)"
      },
      {
        "commit_hash": "b8a46f6657147be4ddc194c04bcbd5aa00abf23f",
        "line_num": 1239,
        "line_str": "block|{ name|Double operator|. name|NaN",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(3355, 3360)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 555,
        "line_str": "argument_list|) operator|&& name|Double operator|.",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1334, 1350)"
      },
      {
        "commit_hash": "70f29147ed9f8fe3b3d37c742ef126f046325d92",
        "line_num": 6086,
        "line_str": "argument_list|( name|val argument_list|, name|OrderDirection",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5951, 5955)"
      },
      {
        "commit_hash": "8c131082913e0edc1ae248d36407f88991d7aa53",
        "line_num": 6053,
        "line_str": "name|int name|dir parameter_list|, name|boolean",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5926, 5951)"
      },
      {
        "commit_hash": "80b1e90b42a34856b61cec628fcea6633d1000cd",
        "line_num": 3262,
        "line_str": "block|} comment annotation|@ name|Deprecated",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3261, 3266)"
      },
      {
        "commit_hash": "a6ab98b9867145c7d4eccab43c9ab8927aab06a7",
        "line_num": 1794,
        "line_str": "name|unscaled operator|= name|nextAfter argument_list|(",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3990, 3993)"
      },
      {
        "commit_hash": "70f29147ed9f8fe3b3d37c742ef126f046325d92",
        "line_num": 6103,
        "line_str": "name|OrderDirection operator|. name|DECREASING argument_list|,",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5965, 5969)"
      },
      {
        "commit_hash": "80b1e90b42a34856b61cec628fcea6633d1000cd",
        "line_num": 3279,
        "line_str": "name|FastMath operator|. name|nextAfter argument_list|(",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3275, 3287)"
      },
      {
        "commit_hash": "a6ab98b9867145c7d4eccab43c9ab8927aab06a7",
        "line_num": 1266,
        "line_str": "name|nextAfter parameter_list|( name|double name|d",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3266, 3275)"
      },
      {
        "commit_hash": "b8a46f6657147be4ddc194c04bcbd5aa00abf23f",
        "line_num": 1240,
        "line_str": "name|Double operator|. name|NaN block|,",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(3355, 3360)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 556,
        "line_str": "operator|&& name|Double operator|. name|isNaN",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1334, 1350)"
      },
      {
        "commit_hash": "70f29147ed9f8fe3b3d37c742ef126f046325d92",
        "line_num": 6087,
        "line_str": "name|val argument_list|, name|OrderDirection operator|.",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5951, 5955)"
      },
      {
        "commit_hash": "8c131082913e0edc1ae248d36407f88991d7aa53",
        "line_num": 6054,
        "line_str": "name|dir parameter_list|, name|boolean name|strict",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5926, 5951)"
      },
      {
        "commit_hash": "a6ab98b9867145c7d4eccab43c9ab8927aab06a7",
        "line_num": 1960,
        "line_str": "block|{ name|unscaled operator|= name|nextAfter",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(4158, 4161)"
      },
      {
        "commit_hash": "80b1e90b42a34856b61cec628fcea6633d1000cd",
        "line_num": 3263,
        "line_str": "comment annotation|@ name|Deprecated specifier|public",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3261, 3266)"
      },
      {
        "commit_hash": "a6ab98b9867145c7d4eccab43c9ab8927aab06a7",
        "line_num": 1795,
        "line_str": "operator|= name|nextAfter argument_list|( name|unscaled",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3990, 3993)"
      },
      {
        "commit_hash": "80b1e90b42a34856b61cec628fcea6633d1000cd",
        "line_num": 3280,
        "line_str": "operator|. name|nextAfter argument_list|( name|d",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3275, 3287)"
      },
      {
        "commit_hash": "a6ab98b9867145c7d4eccab43c9ab8927aab06a7",
        "line_num": 1267,
        "line_str": "parameter_list|( name|double name|d parameter_list|,",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3266, 3275)"
      },
      {
        "commit_hash": "b8a46f6657147be4ddc194c04bcbd5aa00abf23f",
        "line_num": 1241,
        "line_str": "operator|. name|NaN block|, name|Double",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(3355, 3360)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 557,
        "line_str": "name|Double operator|. name|isNaN argument_list|(",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1334, 1350)"
      },
      {
        "commit_hash": "70f29147ed9f8fe3b3d37c742ef126f046325d92",
        "line_num": 6088,
        "line_str": "argument_list|, name|OrderDirection operator|. name|INCREASING",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5951, 5955)"
      },
      {
        "commit_hash": "8c131082913e0edc1ae248d36407f88991d7aa53",
        "line_num": 6055,
        "line_str": "parameter_list|, name|boolean name|strict parameter_list|)",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5926, 5951)"
      },
      {
        "commit_hash": "a6ab98b9867145c7d4eccab43c9ab8927aab06a7",
        "line_num": 1961,
        "line_str": "name|unscaled operator|= name|nextAfter argument_list|(",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(4158, 4161)"
      },
      {
        "commit_hash": "80b1e90b42a34856b61cec628fcea6633d1000cd",
        "line_num": 3264,
        "line_str": "annotation|@ name|Deprecated specifier|public specifier|static",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3261, 3266)"
      },
      {
        "commit_hash": "80b1e90b42a34856b61cec628fcea6633d1000cd",
        "line_num": 3281,
        "line_str": "name|nextAfter argument_list|( name|d argument_list|,",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3275, 3287)"
      },
      {
        "commit_hash": "a6ab98b9867145c7d4eccab43c9ab8927aab06a7",
        "line_num": 1268,
        "line_str": "name|double name|d parameter_list|, name|double",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3266, 3275)"
      },
      {
        "commit_hash": "b8a46f6657147be4ddc194c04bcbd5aa00abf23f",
        "line_num": 1242,
        "line_str": "name|NaN block|, name|Double operator|.",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(3355, 3360)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 558,
        "line_str": "operator|. name|isNaN argument_list|( name|y",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1334, 1350)"
      },
      {
        "commit_hash": "70f29147ed9f8fe3b3d37c742ef126f046325d92",
        "line_num": 6089,
        "line_str": "name|OrderDirection operator|. name|INCREASING argument_list|,",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5951, 5955)"
      },
      {
        "commit_hash": "8c131082913e0edc1ae248d36407f88991d7aa53",
        "line_num": 6056,
        "line_str": "name|boolean name|strict parameter_list|) block|{",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5926, 5951)"
      },
      {
        "commit_hash": "a6ab98b9867145c7d4eccab43c9ab8927aab06a7",
        "line_num": 1962,
        "line_str": "operator|= name|nextAfter argument_list|( name|unscaled",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(4158, 4161)"
      },
      {
        "commit_hash": "80b1e90b42a34856b61cec628fcea6633d1000cd",
        "line_num": 3265,
        "line_str": "name|Deprecated specifier|public specifier|static name|double",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3261, 3266)"
      },
      {
        "commit_hash": "80b1e90b42a34856b61cec628fcea6633d1000cd",
        "line_num": 3282,
        "line_str": "argument_list|( name|d argument_list|, name|direction",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3275, 3287)"
      },
      {
        "commit_hash": "a6ab98b9867145c7d4eccab43c9ab8927aab06a7",
        "line_num": 1269,
        "line_str": "name|d parameter_list|, name|double name|direction",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3266, 3275)"
      },
      {
        "commit_hash": "a6ab98b9867145c7d4eccab43c9ab8927aab06a7",
        "line_num": 1682,
        "line_str": "operator|. name|floor argument_list|( name|nextAfter",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3879, 3882)"
      },
      {
        "commit_hash": "b8a46f6657147be4ddc194c04bcbd5aa00abf23f",
        "line_num": 1243,
        "line_str": "block|, name|Double operator|. name|POSITIVE_INFINITY",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(3355, 3360)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 559,
        "line_str": "name|isNaN argument_list|( name|y argument_list|)",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1334, 1350)"
      },
      {
        "commit_hash": "8c131082913e0edc1ae248d36407f88991d7aa53",
        "line_num": 6090,
        "line_str": "operator|. name|DECREASING argument_list|, name|strict",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5969, 5974)"
      },
      {
        "commit_hash": "8c131082913e0edc1ae248d36407f88991d7aa53",
        "line_num": 6057,
        "line_str": "name|strict parameter_list|) block|{ if|if",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5926, 5951)"
      },
      {
        "commit_hash": "b8a46f6657147be4ddc194c04bcbd5aa00abf23f",
        "line_num": 1260,
        "line_str": "block|{ name|Double operator|. name|NaN",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(3376, 3381)"
      },
      {
        "commit_hash": "8c131082913e0edc1ae248d36407f88991d7aa53",
        "line_num": 6074,
        "line_str": "operator|. name|INCREASING argument_list|, name|strict",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5955, 5965)"
      },
      {
        "commit_hash": "80b1e90b42a34856b61cec628fcea6633d1000cd",
        "line_num": 3283,
        "line_str": "name|d argument_list|, name|direction argument_list|)",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3275, 3287)"
      },
      {
        "commit_hash": "a6ab98b9867145c7d4eccab43c9ab8927aab06a7",
        "line_num": 1270,
        "line_str": "parameter_list|, name|double name|direction parameter_list|)",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3266, 3275)"
      },
      {
        "commit_hash": "a6ab98b9867145c7d4eccab43c9ab8927aab06a7",
        "line_num": 1683,
        "line_str": "name|floor argument_list|( name|nextAfter argument_list|(",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3879, 3882)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 560,
        "line_str": "argument_list|( name|y argument_list|) operator|)",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1334, 1350)"
      },
      {
        "commit_hash": "8c131082913e0edc1ae248d36407f88991d7aa53",
        "line_num": 6091,
        "line_str": "name|DECREASING argument_list|, name|strict argument_list|)",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5969, 5974)"
      },
      {
        "commit_hash": "8c131082913e0edc1ae248d36407f88991d7aa53",
        "line_num": 6058,
        "line_str": "parameter_list|) block|{ if|if condition|(",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5926, 5951)"
      },
      {
        "commit_hash": "b631eb68a8aa659e0760de672edfbfb9f9ac246d",
        "line_num": 1252,
        "line_str": "block|{ return|return operator|( name|Double",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1332, 1334)"
      },
      {
        "commit_hash": "b8a46f6657147be4ddc194c04bcbd5aa00abf23f",
        "line_num": 1261,
        "line_str": "name|Double operator|. name|NaN block|,",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(3376, 3381)"
      },
      {
        "commit_hash": "8c131082913e0edc1ae248d36407f88991d7aa53",
        "line_num": 6075,
        "line_str": "name|INCREASING argument_list|, name|strict argument_list|)",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5955, 5965)"
      },
      {
        "commit_hash": "80b1e90b42a34856b61cec628fcea6633d1000cd",
        "line_num": 3284,
        "line_str": "argument_list|, name|direction argument_list|) return|;",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3275, 3287)"
      },
      {
        "commit_hash": "a6ab98b9867145c7d4eccab43c9ab8927aab06a7",
        "line_num": 1271,
        "line_str": "name|double name|direction parameter_list|) block|{",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3266, 3275)"
      },
      {
        "commit_hash": "a6ab98b9867145c7d4eccab43c9ab8927aab06a7",
        "line_num": 1684,
        "line_str": "argument_list|( name|nextAfter argument_list|( name|unscaled",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3879, 3882)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 561,
        "line_str": "name|y argument_list|) operator|) operator|||",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1334, 1350)"
      },
      {
        "commit_hash": "8c131082913e0edc1ae248d36407f88991d7aa53",
        "line_num": 6092,
        "line_str": "argument_list|, name|strict argument_list|) expr_stmt|;",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5969, 5974)"
      },
      {
        "commit_hash": "8c131082913e0edc1ae248d36407f88991d7aa53",
        "line_num": 6059,
        "line_str": "block|{ if|if condition|( name|dir",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5926, 5951)"
      },
      {
        "commit_hash": "b631eb68a8aa659e0760de672edfbfb9f9ac246d",
        "line_num": 1253,
        "line_str": "return|return operator|( name|Double operator|.",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1332, 1334)"
      },
      {
        "commit_hash": "a6ab98b9867145c7d4eccab43c9ab8927aab06a7",
        "line_num": 1701,
        "line_str": "operator|. name|ceil argument_list|( name|nextAfter",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3898, 3901)"
      },
      {
        "commit_hash": "b8a46f6657147be4ddc194c04bcbd5aa00abf23f",
        "line_num": 1262,
        "line_str": "operator|. name|NaN block|, name|Double",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(3376, 3381)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 545,
        "line_str": "parameter_list|) block|{ return|return operator|(",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1331, 1332)"
      },
      {
        "commit_hash": "8c131082913e0edc1ae248d36407f88991d7aa53",
        "line_num": 6076,
        "line_str": "argument_list|, name|strict argument_list|) expr_stmt|;",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5955, 5965)"
      },
      {
        "commit_hash": "8c131082913e0edc1ae248d36407f88991d7aa53",
        "line_num": 6043,
        "line_str": "comment specifier|public specifier|static name|void",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5926, 5951)"
      },
      {
        "commit_hash": "b631eb68a8aa659e0760de672edfbfb9f9ac246d",
        "line_num": 1270,
        "line_str": "name|x operator|== name|y return|;",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1350, 1353)"
      },
      {
        "commit_hash": "80b1e90b42a34856b61cec628fcea6633d1000cd",
        "line_num": 3285,
        "line_str": "name|direction argument_list|) return|; block|}",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3275, 3287)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 562,
        "line_str": "argument_list|) operator|) operator||| name|x",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1334, 1350)"
      },
      {
        "commit_hash": "8c131082913e0edc1ae248d36407f88991d7aa53",
        "line_num": 6093,
        "line_str": "name|strict argument_list|) expr_stmt|; block|}",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5969, 5974)"
      },
      {
        "commit_hash": "8c131082913e0edc1ae248d36407f88991d7aa53",
        "line_num": 6060,
        "line_str": "if|if condition|( name|dir operator|>",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5926, 5951)"
      },
      {
        "commit_hash": "a6ab98b9867145c7d4eccab43c9ab8927aab06a7",
        "line_num": 1702,
        "line_str": "name|ceil argument_list|( name|nextAfter argument_list|(",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3898, 3901)"
      },
      {
        "commit_hash": "b8a46f6657147be4ddc194c04bcbd5aa00abf23f",
        "line_num": 1263,
        "line_str": "name|NaN block|, name|Double operator|.",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(3376, 3381)"
      },
      {
        "commit_hash": "8c131082913e0edc1ae248d36407f88991d7aa53",
        "line_num": 6077,
        "line_str": "name|strict argument_list|) expr_stmt|; block|}",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5955, 5965)"
      },
      {
        "commit_hash": "8c131082913e0edc1ae248d36407f88991d7aa53",
        "line_num": 6044,
        "line_str": "specifier|public specifier|static name|void name|checkOrder",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5926, 5951)"
      },
      {
        "commit_hash": "a6ab98b9867145c7d4eccab43c9ab8927aab06a7",
        "line_num": 2049,
        "line_str": "operator|. name|ceil argument_list|( name|nextAfter",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(4247, 4250)"
      },
      {
        "commit_hash": "b631eb68a8aa659e0760de672edfbfb9f9ac246d",
        "line_num": 1271,
        "line_str": "operator|== name|y return|; block|}",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1350, 1353)"
      },
      {
        "commit_hash": "80b1e90b42a34856b61cec628fcea6633d1000cd",
        "line_num": 3286,
        "line_str": "argument_list|) return|; block|} comment",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3275, 3287)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 563,
        "line_str": "operator|) operator||| name|x operator|==",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1334, 1350)"
      },
      {
        "commit_hash": "8c131082913e0edc1ae248d36407f88991d7aa53",
        "line_num": 6094,
        "line_str": "argument_list|) expr_stmt|; block|} block|}",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5969, 5974)"
      },
      {
        "commit_hash": "8c131082913e0edc1ae248d36407f88991d7aa53",
        "line_num": 6061,
        "line_str": "condition|( name|dir operator|> literal|0",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5926, 5951)"
      },
      {
        "commit_hash": "a6ab98b9867145c7d4eccab43c9ab8927aab06a7",
        "line_num": 1703,
        "line_str": "argument_list|( name|nextAfter argument_list|( name|unscaled",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3898, 3901)"
      },
      {
        "commit_hash": "b8a46f6657147be4ddc194c04bcbd5aa00abf23f",
        "line_num": 1264,
        "line_str": "block|, name|Double operator|. name|POSITIVE_INFINITY",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(3376, 3381)"
      },
      {
        "commit_hash": "8c131082913e0edc1ae248d36407f88991d7aa53",
        "line_num": 6078,
        "line_str": "argument_list|) expr_stmt|; block|} else|else",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5955, 5965)"
      },
      {
        "commit_hash": "8c131082913e0edc1ae248d36407f88991d7aa53",
        "line_num": 6045,
        "line_str": "specifier|static name|void name|checkOrder parameter_list|(",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5926, 5951)"
      },
      {
        "commit_hash": "a6ab98b9867145c7d4eccab43c9ab8927aab06a7",
        "line_num": 2050,
        "line_str": "name|ceil argument_list|( name|nextAfter argument_list|(",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(4247, 4250)"
      },
      {
        "commit_hash": "b631eb68a8aa659e0760de672edfbfb9f9ac246d",
        "line_num": 1272,
        "line_str": "name|y return|; block|} comment",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1350, 1353)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 564,
        "line_str": "operator||| name|x operator|== name|y",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1334, 1350)"
      },
      {
        "commit_hash": "8c131082913e0edc1ae248d36407f88991d7aa53",
        "line_num": 6062,
        "line_str": "name|dir operator|> literal|0 condition|)",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5926, 5951)"
      },
      {
        "commit_hash": "f27f087466f834092e537777c9f91e47c87f024a",
        "line_num": 6145,
        "line_str": "expr_stmt|; block|} block|} comment",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5974, 5977)"
      },
      {
        "commit_hash": "8c131082913e0edc1ae248d36407f88991d7aa53",
        "line_num": 6079,
        "line_str": "expr_stmt|; block|} else|else block|{",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5955, 5965)"
      },
      {
        "commit_hash": "8c131082913e0edc1ae248d36407f88991d7aa53",
        "line_num": 6046,
        "line_str": "name|void name|checkOrder parameter_list|( name|double",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(5926, 5951)"
      },
      {
        "commit_hash": "a6ab98b9867145c7d4eccab43c9ab8927aab06a7",
        "line_num": 2051,
        "line_str": "argument_list|( name|nextAfter argument_list|( name|unscaled",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(4247, 4250)"
      },
      {
        "commit_hash": "a6ab98b9867145c7d4eccab43c9ab8927aab06a7",
        "line_num": 1754,
        "line_str": "operator|. name|ceil argument_list|( name|nextAfter",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(3951, 3954)"
      }
    ]
  },
  {
    "id": 10111,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["615ca9a000c253575e6f62bed87db6110b750834"],
    "fix_commit_hash": "7dadc2ab019f066a7a287376ad4c63193e8a0a9a",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "8541f303370cec9a25f2b32b3d660b3f188913f0",
        "line_num": 740,
        "line_str": "name|residuals index|[ name|i index|]",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(830, 834)"
      },
      {
        "commit_hash": "8cb418e7fa50aba9977fe073aec66ad3f6e4f07c",
        "line_num": 707,
        "line_str": "init|= literal|0 init|; name|i",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(806, 830)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 1363,
        "line_str": "literal|null condition|) block|{ comment",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1452)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 934,
        "line_str": "name|current operator|= operator|new name|VectorialPointValuePair",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(994, 1006)"
      },
      {
        "commit_hash": "a7faf40b61f445d15d9a210b23fa0008b87e25e2",
        "line_num": 416,
        "line_str": "condition|) block|{ name|incrementIterationsCounter argument_list|()",
        "file_path": "src/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(486, 489)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 1380,
        "line_str": "condition|) block|{ return|return name|current",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1452)"
      },
      {
        "commit_hash": "8cb418e7fa50aba9977fe073aec66ad3f6e4f07c",
        "line_num": 741,
        "line_str": "index|] expr_stmt|; block|} return|return",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(845, 852)"
      },
      {
        "commit_hash": "8cb418e7fa50aba9977fe073aec66ad3f6e4f07c",
        "line_num": 708,
        "line_str": "literal|0 init|; name|i operator|<",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(806, 830)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 1364,
        "line_str": "condition|) block|{ comment if|if",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1452)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 935,
        "line_str": "operator|= operator|new name|VectorialPointValuePair argument_list|(",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(994, 1006)"
      },
      {
        "commit_hash": "a7faf40b61f445d15d9a210b23fa0008b87e25e2",
        "line_num": 417,
        "line_str": "block|{ name|incrementIterationsCounter argument_list|() expr_stmt|;",
        "file_path": "src/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(486, 489)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 1381,
        "line_str": "block|{ return|return name|current return|;",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1452)"
      },
      {
        "commit_hash": "8cb418e7fa50aba9977fe073aec66ad3f6e4f07c",
        "line_num": 742,
        "line_str": "expr_stmt|; block|} return|return name|chiSquare",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(845, 852)"
      },
      {
        "commit_hash": "8cb418e7fa50aba9977fe073aec66ad3f6e4f07c",
        "line_num": 709,
        "line_str": "init|; name|i operator|< name|rows",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(806, 830)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 1365,
        "line_str": "block|{ comment if|if condition|(",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1452)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 955,
        "line_str": "index|] operator|* name|residuals index|[",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/estimation/LevenbergMarquardtEstimator.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(725, 728)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 936,
        "line_str": "operator|new name|VectorialPointValuePair argument_list|( name|point",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(994, 1006)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 1382,
        "line_str": "return|return name|current return|; block|}",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1452)"
      },
      {
        "commit_hash": "8cb418e7fa50aba9977fe073aec66ad3f6e4f07c",
        "line_num": 743,
        "line_str": "block|} return|return name|chiSquare return|;",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(845, 852)"
      },
      {
        "commit_hash": "8cb418e7fa50aba9977fe073aec66ad3f6e4f07c",
        "line_num": 710,
        "line_str": "name|i operator|< name|rows condition|;",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(806, 830)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 1366,
        "line_str": "comment if|if condition|( name|checker",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1452)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 956,
        "line_str": "operator|* name|residuals index|[ name|i",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/estimation/LevenbergMarquardtEstimator.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(725, 728)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 937,
        "line_str": "name|VectorialPointValuePair argument_list|( name|point argument_list|,",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(994, 1006)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 1383,
        "line_str": "name|current return|; block|} block|}",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1452)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 725,
        "line_str": "comment name|qTy argument_list|( name|residuals",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/estimation/LevenbergMarquardtEstimator.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(504, 508)"
      },
      {
        "commit_hash": "8ac52f78d23e8d0a0e8d72c89f7f88491b2706ca",
        "line_num": 1310,
        "line_str": "block|, literal|0.257829976764542 block|} argument_list|)",
        "file_path": "src/mantissa/tests-src/org/spaceroots/mantissa/estimation/MinpackTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_line_num": "range(1380, 1382)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1105,
        "line_str": "comment name|determineLMParameter argument_list|( name|oldRes",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/estimation/LevenbergMarquardtEstimator.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(875, 879)"
      },
      {
        "commit_hash": "8cb418e7fa50aba9977fe073aec66ad3f6e4f07c",
        "line_num": 744,
        "line_str": "return|return name|chiSquare return|; block|}",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(845, 852)"
      },
      {
        "commit_hash": "8cb418e7fa50aba9977fe073aec66ad3f6e4f07c",
        "line_num": 711,
        "line_str": "operator|< name|rows condition|; operator|++",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(806, 830)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 1367,
        "line_str": "if|if condition|( name|checker operator|.",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1452)"
      },
      {
        "commit_hash": "8541f303370cec9a25f2b32b3d660b3f188913f0",
        "line_num": 684,
        "line_str": "condition|) block|{ comment return|return",
        "file_path": "src/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(763, 764)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 957,
        "line_str": "name|residuals index|[ name|i index|]",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/estimation/LevenbergMarquardtEstimator.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(725, 728)"
      },
      {
        "commit_hash": "8cb418e7fa50aba9977fe073aec66ad3f6e4f07c",
        "line_num": 728,
        "line_str": "index|[ name|i index|] decl_stmt|;",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(834, 840)"
      },
      {
        "commit_hash": "8cb418e7fa50aba9977fe073aec66ad3f6e4f07c",
        "line_num": 695,
        "line_str": "name|getChiSquare parameter_list|() block|{ name|double",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(806, 830)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 938,
        "line_str": "argument_list|( name|point argument_list|, name|objective",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(994, 1006)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 1384,
        "line_str": "return|; block|} block|} else|else",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1452)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 726,
        "line_str": "name|qTy argument_list|( name|residuals argument_list|)",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/estimation/LevenbergMarquardtEstimator.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(504, 508)"
      },
      {
        "commit_hash": "8ac52f78d23e8d0a0e8d72c89f7f88491b2706ca",
        "line_num": 1311,
        "line_str": "literal|0.257829976764542 block|} argument_list|) argument_list|,",
        "file_path": "src/mantissa/tests-src/org/spaceroots/mantissa/estimation/MinpackTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_line_num": "range(1380, 1382)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1106,
        "line_str": "name|determineLMParameter argument_list|( name|oldRes argument_list|,",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/estimation/LevenbergMarquardtEstimator.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(875, 879)"
      },
      {
        "commit_hash": "8cb418e7fa50aba9977fe073aec66ad3f6e4f07c",
        "line_num": 745,
        "line_str": "name|chiSquare return|; block|} comment",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(845, 852)"
      },
      {
        "commit_hash": "8cb418e7fa50aba9977fe073aec66ad3f6e4f07c",
        "line_num": 712,
        "line_str": "name|rows condition|; operator|++ name|i",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(806, 830)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 1368,
        "line_str": "condition|( name|checker operator|. name|converged",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1452)"
      },
      {
        "commit_hash": "8cb418e7fa50aba9977fe073aec66ad3f6e4f07c",
        "line_num": 729,
        "line_str": "name|i index|] decl_stmt|; name|chiSquare",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(834, 840)"
      },
      {
        "commit_hash": "8cb418e7fa50aba9977fe073aec66ad3f6e4f07c",
        "line_num": 696,
        "line_str": "parameter_list|() block|{ name|double name|chiSquare",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(806, 830)"
      },
      {
        "commit_hash": "a4f9188a55e6935d4d38ae97806af4d59e671588",
        "line_num": 838,
        "line_str": "name|residual operator|* name|residual operator|*",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(840, 844)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 939,
        "line_str": "name|point argument_list|, name|objective argument_list|)",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(994, 1006)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 1385,
        "line_str": "block|} block|} else|else block|{",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1452)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 727,
        "line_str": "argument_list|( name|residuals argument_list|) expr_stmt|;",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/estimation/LevenbergMarquardtEstimator.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(504, 508)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1652,
        "line_str": "name|tmpVec expr_stmt|; block|} comment",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/estimation/LevenbergMarquardtEstimator.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1418, 1421)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1107,
        "line_str": "argument_list|( name|oldRes argument_list|, name|delta",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/estimation/LevenbergMarquardtEstimator.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(875, 879)"
      },
      {
        "commit_hash": "8cb418e7fa50aba9977fe073aec66ad3f6e4f07c",
        "line_num": 713,
        "line_str": "condition|; operator|++ name|i control|)",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(806, 830)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 1369,
        "line_str": "name|checker operator|. name|converged argument_list|(",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1452)"
      },
      {
        "commit_hash": "8cb418e7fa50aba9977fe073aec66ad3f6e4f07c",
        "line_num": 730,
        "line_str": "index|] decl_stmt|; name|chiSquare operator|+=",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(834, 840)"
      },
      {
        "commit_hash": "8cb418e7fa50aba9977fe073aec66ad3f6e4f07c",
        "line_num": 697,
        "line_str": "block|{ name|double name|chiSquare init|=",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(806, 830)"
      },
      {
        "commit_hash": "a4f9188a55e6935d4d38ae97806af4d59e671588",
        "line_num": 839,
        "line_str": "operator|* name|residual operator|* name|residualsWeights",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(840, 844)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 940,
        "line_str": "argument_list|, name|objective argument_list|) expr_stmt|;",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(994, 1006)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 1386,
        "line_str": "block|} else|else block|{ comment",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1452)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 728,
        "line_str": "name|residuals argument_list|) expr_stmt|; comment",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/estimation/LevenbergMarquardtEstimator.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(504, 508)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1653,
        "line_str": "expr_stmt|; block|} comment if|if",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/estimation/LevenbergMarquardtEstimator.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1418, 1421)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1108,
        "line_str": "name|oldRes argument_list|, name|delta argument_list|,",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/estimation/LevenbergMarquardtEstimator.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(875, 879)"
      },
      {
        "commit_hash": "8cb418e7fa50aba9977fe073aec66ad3f6e4f07c",
        "line_num": 714,
        "line_str": "operator|++ name|i control|) block|{",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(806, 830)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 1370,
        "line_str": "operator|. name|converged argument_list|( name|getIterations",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1452)"
      },
      {
        "commit_hash": "8cb418e7fa50aba9977fe073aec66ad3f6e4f07c",
        "line_num": 731,
        "line_str": "decl_stmt|; name|chiSquare operator|+= name|residual",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(834, 840)"
      },
      {
        "commit_hash": "8cb418e7fa50aba9977fe073aec66ad3f6e4f07c",
        "line_num": 698,
        "line_str": "name|double name|chiSquare init|= literal|0",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(806, 830)"
      },
      {
        "commit_hash": "a4f9188a55e6935d4d38ae97806af4d59e671588",
        "line_num": 840,
        "line_str": "name|residual operator|* name|residualsWeights index|[",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(840, 844)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 941,
        "line_str": "name|objective argument_list|) expr_stmt|; comment",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(994, 1006)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 1387,
        "line_str": "else|else block|{ comment if|if",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1452)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1654,
        "line_str": "block|} comment if|if condition|(",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/estimation/LevenbergMarquardtEstimator.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1418, 1421)"
      },
      {
        "commit_hash": "8cb418e7fa50aba9977fe073aec66ad3f6e4f07c",
        "line_num": 715,
        "line_str": "name|i control|) block|{ specifier|final",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(806, 830)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 1371,
        "line_str": "name|converged argument_list|( name|getIterations argument_list|()",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1452)"
      },
      {
        "commit_hash": "8cb418e7fa50aba9977fe073aec66ad3f6e4f07c",
        "line_num": 732,
        "line_str": "name|chiSquare operator|+= name|residual operator|*",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(834, 840)"
      },
      {
        "commit_hash": "8cb418e7fa50aba9977fe073aec66ad3f6e4f07c",
        "line_num": 699,
        "line_str": "name|chiSquare init|= literal|0 decl_stmt|;",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(806, 830)"
      },
      {
        "commit_hash": "a4f9188a55e6935d4d38ae97806af4d59e671588",
        "line_num": 841,
        "line_str": "operator|* name|residualsWeights index|[ name|i",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(840, 844)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 942,
        "line_str": "argument_list|) expr_stmt|; comment name|double",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(994, 1006)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 1388,
        "line_str": "block|{ comment if|if condition|(",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1452)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1655,
        "line_str": "comment if|if condition|( operator|(",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/estimation/LevenbergMarquardtEstimator.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1452, 1453)"
      },
      {
        "commit_hash": "8cb418e7fa50aba9977fe073aec66ad3f6e4f07c",
        "line_num": 716,
        "line_str": "control|) block|{ specifier|final name|double",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(806, 830)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 1372,
        "line_str": "argument_list|( name|getIterations argument_list|() argument_list|,",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1452)"
      },
      {
        "commit_hash": "8cb418e7fa50aba9977fe073aec66ad3f6e4f07c",
        "line_num": 733,
        "line_str": "operator|+= name|residual operator|* name|residual",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(834, 840)"
      },
      {
        "commit_hash": "8cb418e7fa50aba9977fe073aec66ad3f6e4f07c",
        "line_num": 700,
        "line_str": "init|= literal|0 decl_stmt|; for|for",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(806, 830)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 614,
        "line_str": "name|double index|[] block|{ literal|11.412069435091231",
        "file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_line_num": "range(614, 621)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 581,
        "line_str": "name|double index|[] block|{ literal|11.4121122022341",
        "file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_line_num": "range(581, 588)"
      },
      {
        "commit_hash": "8cb418e7fa50aba9977fe073aec66ad3f6e4f07c",
        "line_num": 717,
        "line_str": "block|{ specifier|final name|double name|residual",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(806, 830)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 1373,
        "line_str": "name|getIterations argument_list|() argument_list|, name|previous",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1452)"
      },
      {
        "commit_hash": "8cb418e7fa50aba9977fe073aec66ad3f6e4f07c",
        "line_num": 701,
        "line_str": "literal|0 decl_stmt|; for|for control|(",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(806, 830)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 615,
        "line_str": "index|[] block|{ literal|11.412069435091231 block|,",
        "file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_line_num": "range(614, 621)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 582,
        "line_str": "index|[] block|{ literal|11.4121122022341 block|,",
        "file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_line_num": "range(581, 588)"
      },
      {
        "commit_hash": "8cb418e7fa50aba9977fe073aec66ad3f6e4f07c",
        "line_num": 718,
        "line_str": "specifier|final name|double name|residual init|=",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(806, 830)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 1374,
        "line_str": "argument_list|() argument_list|, name|previous argument_list|,",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1452)"
      },
      {
        "commit_hash": "8cb418e7fa50aba9977fe073aec66ad3f6e4f07c",
        "line_num": 702,
        "line_str": "decl_stmt|; for|for control|( name|int",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(806, 830)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 1358,
        "line_str": "comment if|if condition|( name|checker",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1452)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 616,
        "line_str": "block|{ literal|11.412069435091231 block|, operator|-",
        "file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_line_num": "range(614, 621)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 583,
        "line_str": "block|{ literal|11.4121122022341 block|, operator|-",
        "file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_line_num": "range(581, 588)"
      },
      {
        "commit_hash": "d6beaeaa9c53aa4e6ae128a856e68a9eeb1cadb8",
        "line_num": 861,
        "line_str": "name|residualsWeights index|[ name|i index|]",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(844, 845)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 1376,
        "line_str": "name|double index|[] block|{ literal|0.2578330049",
        "file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_line_num": "range(1376, 1380)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 1375,
        "line_str": "argument_list|, name|previous argument_list|, name|current",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1452)"
      },
      {
        "commit_hash": "8cb418e7fa50aba9977fe073aec66ad3f6e4f07c",
        "line_num": 703,
        "line_str": "for|for control|( name|int name|i",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(806, 830)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 1359,
        "line_str": "if|if condition|( name|checker operator|!=",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1452)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 617,
        "line_str": "literal|11.412069435091231 block|, operator|- literal|0.8968582807605691",
        "file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_line_num": "range(614, 621)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 584,
        "line_str": "literal|11.4121122022341 block|, operator|- literal|0.8968550851268697",
        "file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_line_num": "range(581, 588)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 1377,
        "line_str": "index|[] block|{ literal|0.2578330049 block|,",
        "file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_line_num": "range(1376, 1380)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 1376,
        "line_str": "name|previous argument_list|, name|current argument_list|)",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1452)"
      },
      {
        "commit_hash": "8541f303370cec9a25f2b32b3d660b3f188913f0",
        "line_num": 737,
        "line_str": "name|double name|residual init|= name|residuals",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(830, 834)"
      },
      {
        "commit_hash": "8cb418e7fa50aba9977fe073aec66ad3f6e4f07c",
        "line_num": 704,
        "line_str": "control|( name|int name|i init|=",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(806, 830)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 1360,
        "line_str": "condition|( name|checker operator|!= literal|null",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1452)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1594,
        "line_str": "name|xNorm argument_list|) expr_stmt|; block|}",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/estimation/LevenbergMarquardtEstimator.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1363, 1366)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 618,
        "line_str": "block|, operator|- literal|0.8968582807605691 block|}",
        "file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_line_num": "range(614, 621)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 585,
        "line_str": "block|, operator|- literal|0.8968550851268697 block|}",
        "file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_line_num": "range(581, 588)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 931,
        "line_str": "name|updateResidualsAndCost argument_list|() expr_stmt|; name|current",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(994, 1006)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 1378,
        "line_str": "block|{ literal|0.2578330049 block|, literal|0.257829976764542",
        "file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_line_num": "range(1376, 1380)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 1377,
        "line_str": "argument_list|, name|current argument_list|) condition|)",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1452)"
      },
      {
        "commit_hash": "8541f303370cec9a25f2b32b3d660b3f188913f0",
        "line_num": 738,
        "line_str": "name|residual init|= name|residuals index|[",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(830, 834)"
      },
      {
        "commit_hash": "8cb418e7fa50aba9977fe073aec66ad3f6e4f07c",
        "line_num": 705,
        "line_str": "name|int name|i init|= literal|0",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(806, 830)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 1361,
        "line_str": "name|checker operator|!= literal|null condition|)",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1452)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1595,
        "line_str": "argument_list|) expr_stmt|; block|} else|else",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/estimation/LevenbergMarquardtEstimator.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1363, 1366)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 619,
        "line_str": "operator|- literal|0.8968582807605691 block|} argument_list|)",
        "file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_line_num": "range(614, 621)"
      },
      {
        "commit_hash": "8541f303370cec9a25f2b32b3d660b3f188913f0",
        "line_num": 645,
        "line_str": "name|pj index|] operator|* name|residuals",
        "file_path": "src/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(724, 725)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 586,
        "line_str": "operator|- literal|0.8968550851268697 block|} argument_list|)",
        "file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_line_num": "range(581, 588)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 932,
        "line_str": "argument_list|() expr_stmt|; name|current operator|=",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(994, 1006)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 1379,
        "line_str": "literal|0.2578330049 block|, literal|0.257829976764542 block|}",
        "file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_line_num": "range(1376, 1380)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 1378,
        "line_str": "name|current argument_list|) condition|) block|{",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1452)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 701,
        "line_str": "block|{ comment return|return name|current",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(764, 766)"
      },
      {
        "commit_hash": "8541f303370cec9a25f2b32b3d660b3f188913f0",
        "line_num": 739,
        "line_str": "init|= name|residuals index|[ name|i",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(830, 834)"
      },
      {
        "commit_hash": "8cb418e7fa50aba9977fe073aec66ad3f6e4f07c",
        "line_num": 706,
        "line_str": "name|i init|= literal|0 init|;",
        "file_path": "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(806, 830)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 1362,
        "line_str": "operator|!= literal|null condition|) block|{",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1452)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 1596,
        "line_str": "expr_stmt|; block|} else|else block|{",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/estimation/LevenbergMarquardtEstimator.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1363, 1366)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 620,
        "line_str": "literal|0.8968582807605691 block|} argument_list|) argument_list|,",
        "file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_line_num": "range(614, 621)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 587,
        "line_str": "literal|0.8968550851268697 block|} argument_list|) argument_list|,",
        "file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_line_num": "range(581, 588)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 933,
        "line_str": "expr_stmt|; name|current operator|= operator|new",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(994, 1006)"
      },
      {
        "commit_hash": "a7faf40b61f445d15d9a210b23fa0008b87e25e2",
        "line_num": 415,
        "line_str": "literal|true condition|) block|{ name|incrementIterationsCounter",
        "file_path": "src/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(486, 489)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 1379,
        "line_str": "argument_list|) condition|) block|{ return|return",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(1421, 1452)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 702,
        "line_str": "comment return|return name|current return|;",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(764, 766)"
      }
    ]
  },
  {
    "id": 10112,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["583dffc0ee383e9b5e1e08c574de10db8270fdb7"],
    "fix_commit_hash": "f41fcd85ca62a2109a6e550be0353d292d351213",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 87,
        "line_str": "argument_list|( name|min argument_list|, name|max",
        "file_path": "src/java/org/apache/commons/math/analysis/BisectionSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java",
        "input_line_num": "range(201, 204)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 86,
        "line_str": "name|solve argument_list|( name|min argument_list|,",
        "file_path": "src/java/org/apache/commons/math/analysis/BisectionSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java",
        "input_line_num": "range(201, 204)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 85,
        "line_str": "return|return name|solve argument_list|( name|min",
        "file_path": "src/java/org/apache/commons/math/analysis/BisectionSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java",
        "input_line_num": "range(201, 204)"
      }
    ]
  },
  {
    "id": 10113,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["18b61a1b18ed7d80ec2bf28588ce95fdd3dddf28"],
    "fix_commit_hash": "523df0c13719150b1397a6094f410274bfaf1475",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "18b61a1b18ed7d80ec2bf28588ce95fdd3dddf28",
        "line_num": 859,
        "line_str": "return|return name|getCumPct argument_list|( operator|(",
        "file_path": "src/java/org/apache/commons/math/stat/Frequency.java",
        "input_file_path": "src/main/java/org/apache/commons/math/stat/Frequency.java",
        "input_line_num": "range(857, 861)"
      },
      {
        "commit_hash": "18b61a1b18ed7d80ec2bf28588ce95fdd3dddf28",
        "line_num": 858,
        "line_str": "block|{ return|return name|getCumPct argument_list|(",
        "file_path": "src/java/org/apache/commons/math/stat/Frequency.java",
        "input_file_path": "src/main/java/org/apache/commons/math/stat/Frequency.java",
        "input_line_num": "range(857, 861)"
      },
      {
        "commit_hash": "18b61a1b18ed7d80ec2bf28588ce95fdd3dddf28",
        "line_num": 857,
        "line_str": "parameter_list|) block|{ return|return name|getCumPct",
        "file_path": "src/java/org/apache/commons/math/stat/Frequency.java",
        "input_file_path": "src/main/java/org/apache/commons/math/stat/Frequency.java",
        "input_line_num": "range(857, 861)"
      },
      {
        "commit_hash": "18b61a1b18ed7d80ec2bf28588ce95fdd3dddf28",
        "line_num": 860,
        "line_str": "name|getCumPct argument_list|( operator|( name|Comparable",
        "file_path": "src/java/org/apache/commons/math/stat/Frequency.java",
        "input_file_path": "src/main/java/org/apache/commons/math/stat/Frequency.java",
        "input_line_num": "range(857, 861)"
      }
    ]
  },
  {
    "id": 10114,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["dfd9f0676b690fe8c0928316b656ffb87d44cd31"],
    "fix_commit_hash": "138baec1c778c2ea1dc1a6efe6d5e76a3b072b1d",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "dfd9f0676b690fe8c0928316b656ffb87d44cd31",
        "line_num": 4685,
        "line_str": "name|int name|sum init|= literal|0",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(4949, 4953)"
      },
      {
        "commit_hash": "dfd9f0676b690fe8c0928316b656ffb87d44cd31",
        "line_num": 4684,
        "line_str": "block|{ name|int name|sum init|=",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(4949, 4953)"
      },
      {
        "commit_hash": "dfd9f0676b690fe8c0928316b656ffb87d44cd31",
        "line_num": 4683,
        "line_str": "parameter_list|) block|{ name|int name|sum",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(4949, 4953)"
      },
      {
        "commit_hash": "dfd9f0676b690fe8c0928316b656ffb87d44cd31",
        "line_num": 4682,
        "line_str": "name|p2 parameter_list|) block|{ name|int",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(4949, 4953)"
      },
      {
        "commit_hash": "dfd9f0676b690fe8c0928316b656ffb87d44cd31",
        "line_num": 4708,
        "line_str": "name|int name|dp init|= name|p1",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(4972, 4976)"
      },
      {
        "commit_hash": "dfd9f0676b690fe8c0928316b656ffb87d44cd31",
        "line_num": 4707,
        "line_str": "specifier|final name|int name|dp init|=",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(4972, 4976)"
      },
      {
        "commit_hash": "dfd9f0676b690fe8c0928316b656ffb87d44cd31",
        "line_num": 4706,
        "line_str": "block|{ specifier|final name|int name|dp",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(4972, 4976)"
      },
      {
        "commit_hash": "dfd9f0676b690fe8c0928316b656ffb87d44cd31",
        "line_num": 4705,
        "line_str": "control|) block|{ specifier|final name|int",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(4972, 4976)"
      }
    ]
  },
  {
    "id": 10115,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["24a6a2692e942969f5c39bd88d3d12ac0f0bf0d9"],
    "fix_commit_hash": "75f5c92aeb47e264c196a8c38a495adac89f493c",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1074,
        "line_str": "expr_stmt|; block|} else|else block|{",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1169, 1184)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1070,
        "line_str": "block|{ name|row operator|= name|i",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1169, 1184)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1066,
        "line_str": "name|row operator|== literal|null condition|)",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1169, 1184)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1062,
        "line_str": "condition|) block|{ if|if condition|(",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1169, 1184)"
      },
      {
        "commit_hash": "6c65646a2d62b8ead3a7d4da3410fc4050c25fb5",
        "line_num": 1083,
        "line_str": "block|{ if|if condition|( operator|!",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1150, 1152)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1075,
        "line_str": "block|} else|else block|{ return|return",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1169, 1184)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1071,
        "line_str": "name|row operator|= name|i expr_stmt|;",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1169, 1184)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1067,
        "line_str": "operator|== literal|null condition|) block|{",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1169, 1184)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1063,
        "line_str": "block|{ if|if condition|( name|row",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1169, 1184)"
      },
      {
        "commit_hash": "6c65646a2d62b8ead3a7d4da3410fc4050c25fb5",
        "line_num": 1084,
        "line_str": "if|if condition|( operator|! name|MathUtils",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1150, 1152)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1080,
        "line_str": "return|; block|} block|} block|}",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1187, 1189)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1076,
        "line_str": "else|else block|{ return|return literal|null",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1169, 1184)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1072,
        "line_str": "operator|= name|i expr_stmt|; block|}",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1169, 1184)"
      },
      {
        "commit_hash": "6c65646a2d62b8ead3a7d4da3410fc4050c25fb5",
        "line_num": 1101,
        "line_str": "argument_list|) condition|) block|{ if|if",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1168, 1169)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1068,
        "line_str": "literal|null condition|) block|{ name|row",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1169, 1184)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1064,
        "line_str": "if|if condition|( name|row operator|==",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1169, 1184)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1081,
        "line_str": "block|} block|} block|} return|return",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1187, 1189)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1073,
        "line_str": "name|i expr_stmt|; block|} else|else",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1169, 1184)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1069,
        "line_str": "condition|) block|{ name|row operator|=",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1169, 1184)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1065,
        "line_str": "condition|( name|row operator|== literal|null",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1169, 1184)"
      }
    ]
  },
  {
    "id": 10116,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["b03d68547460332b861044db80ccd08edec361a1"],
    "fix_commit_hash": "24a6a2692e942969f5c39bd88d3d12ac0f0bf0d9",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1043,
        "line_str": "catch|catch parameter_list|( name|OptimizationException name|e",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1052)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1010,
        "line_str": "argument_list|() decl_stmt|; try|try block|{",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1005, 1010)"
      },
      {
        "commit_hash": "cdd62a0f07e3d715f72243aa7e881ca53b59afe3",
        "line_num": 944,
        "line_str": "parameter_list|() block|{ name|LinearObjectiveFunction name|f",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(942, 945)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 300,
        "line_str": "index|] argument_list|) expr_stmt|; name|assertEquals",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(298, 301)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 647,
        "line_str": "index|] argument_list|) expr_stmt|; name|assertEquals",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(645, 648)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1384,
        "line_str": "init|= name|getNumObjectiveFunctions argument_list|() init|;",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1503)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1351,
        "line_str": "name|int name|col init|= name|getNumObjectiveFunctions",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1435, 1446)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1285,
        "line_str": "argument_list|( name|getOriginalNumDecisionVariables argument_list|() argument_list|)",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1365, 1373)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1027,
        "line_str": "argument_list|) expr_stmt|; name|fail argument_list|(",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1052)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 482,
        "line_str": "name|getValue argument_list|() argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(481, 487)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 928,
        "line_str": "comment block|} catch|catch parameter_list|(",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(911, 941)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 796,
        "line_str": "index|[ literal|1 index|] argument_list|)",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(796, 799)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1401,
        "line_str": "argument_list|( name|basicRow argument_list|, name|i",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1503)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1368,
        "line_str": "condition|( name|basicRow operator|== literal|null",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1503)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1044,
        "line_str": "parameter_list|( name|OptimizationException name|e parameter_list|)",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1052)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1011,
        "line_str": "decl_stmt|; try|try block|{ name|solver",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1005, 1010)"
      },
      {
        "commit_hash": "cdd62a0f07e3d715f72243aa7e881ca53b59afe3",
        "line_num": 813,
        "line_str": "name|void name|testInfeasibleSolution parameter_list|() block|{",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(813, 816)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 136,
        "line_str": "specifier|public class|class name|SimplexSolverTest extends|extends",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(136, 142)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1385,
        "line_str": "name|getNumObjectiveFunctions argument_list|() init|; name|i",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1503)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1352,
        "line_str": "name|col init|= name|getNumObjectiveFunctions argument_list|()",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1435, 1446)"
      },
      {
        "commit_hash": "6c65646a2d62b8ead3a7d4da3410fc4050c25fb5",
        "line_num": 1540,
        "line_str": "index|[ literal|2 index|] argument_list|)",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1536, 1539)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 483,
        "line_str": "argument_list|() argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(481, 487)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1028,
        "line_str": "expr_stmt|; name|fail argument_list|( literal|\"An exception should have been thrown.\"",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1052)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 929,
        "line_str": "block|} catch|catch parameter_list|( name|OptimizationException",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(911, 941)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 896,
        "line_str": "name|SimplexSolver argument_list|() decl_stmt|; try|try",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(894, 899)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 285,
        "line_str": "index|[ literal|0 index|] argument_list|)",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(285, 288)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 797,
        "line_str": "literal|1 index|] argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(796, 799)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1402,
        "line_str": "name|basicRow argument_list|, name|i argument_list|)",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1503)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1369,
        "line_str": "name|basicRow operator|== literal|null condition|)",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1503)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 632,
        "line_str": "index|[ literal|0 index|] argument_list|)",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(632, 635)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1045,
        "line_str": "name|OptimizationException name|e parameter_list|) block|{",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1052)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1012,
        "line_str": "try|try block|{ name|solver operator|.",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1005, 1010)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 913,
        "line_str": "literal|false argument_list|) expr_stmt|; name|fail",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(911, 941)"
      },
      {
        "commit_hash": "cdd62a0f07e3d715f72243aa7e881ca53b59afe3",
        "line_num": 814,
        "line_str": "name|testInfeasibleSolution parameter_list|() block|{ name|LinearObjectiveFunction",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(813, 816)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 137,
        "line_str": "class|class name|SimplexSolverTest extends|extends name|TestCase",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(136, 142)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1386,
        "line_str": "argument_list|() init|; name|i operator|<",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1503)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1353,
        "line_str": "init|= name|getNumObjectiveFunctions argument_list|() operator|+",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1435, 1446)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1287,
        "line_str": "argument_list|() argument_list|) decl_stmt|; for|for",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1374, 1376)"
      },
      {
        "commit_hash": "6c65646a2d62b8ead3a7d4da3410fc4050c25fb5",
        "line_num": 1541,
        "line_str": "literal|2 index|] argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1536, 1539)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 484,
        "line_str": "argument_list|) expr_stmt|; block|} specifier|public",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(481, 487)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1029,
        "line_str": "name|fail argument_list|( literal|\"An exception should have been thrown.\" argument_list|)",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1052)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 930,
        "line_str": "catch|catch parameter_list|( name|OptimizationException name|e",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(911, 941)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 897,
        "line_str": "argument_list|() decl_stmt|; try|try block|{",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(894, 899)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 286,
        "line_str": "literal|0 index|] argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(285, 288)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 798,
        "line_str": "index|] argument_list|) expr_stmt|; name|assertEquals",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(796, 799)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1403,
        "line_str": "argument_list|, name|i argument_list|) operator|==",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1503)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1370,
        "line_str": "operator|== literal|null condition|) block|{",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1503)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 633,
        "line_str": "literal|0 index|] argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(632, 635)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1304,
        "line_str": "operator|++ control|) block|{ name|coefficients",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1391, 1394)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1046,
        "line_str": "name|e parameter_list|) block|{ name|fail",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1052)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1013,
        "line_str": "block|{ name|solver operator|. name|optimize",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1005, 1010)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 914,
        "line_str": "argument_list|) expr_stmt|; name|fail argument_list|(",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(911, 941)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1360,
        "line_str": "argument_list|) expr_stmt|; block|} specifier|public",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1356, 1358)"
      },
      {
        "commit_hash": "cdd62a0f07e3d715f72243aa7e881ca53b59afe3",
        "line_num": 815,
        "line_str": "parameter_list|() block|{ name|LinearObjectiveFunction name|f",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(813, 816)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 138,
        "line_str": "name|SimplexSolverTest extends|extends name|TestCase block|{",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(136, 142)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1387,
        "line_str": "init|; name|i operator|< name|col",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1503)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1354,
        "line_str": "name|getNumObjectiveFunctions argument_list|() operator|+ name|decisionVariable",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1435, 1446)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1288,
        "line_str": "argument_list|) decl_stmt|; for|for control|(",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1374, 1376)"
      },
      {
        "commit_hash": "6c65646a2d62b8ead3a7d4da3410fc4050c25fb5",
        "line_num": 1542,
        "line_str": "index|] argument_list|) expr_stmt|; name|assertEquals",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1536, 1539)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 485,
        "line_str": "expr_stmt|; block|} specifier|public name|void",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(481, 487)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1030,
        "line_str": "argument_list|( literal|\"An exception should have been thrown.\" argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1052)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 931,
        "line_str": "parameter_list|( name|OptimizationException name|e parameter_list|)",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(911, 941)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 898,
        "line_str": "decl_stmt|; try|try block|{ name|solver",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(894, 899)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 287,
        "line_str": "index|] argument_list|) expr_stmt|; name|assertEquals",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(285, 288)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1404,
        "line_str": "name|i argument_list|) operator|== literal|1",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1503)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1371,
        "line_str": "literal|null condition|) block|{ return|return",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1503)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 634,
        "line_str": "index|] argument_list|) expr_stmt|; name|assertEquals",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(632, 635)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1305,
        "line_str": "control|) block|{ name|coefficients index|[",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1391, 1394)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 23,
        "line_str": "end_package  begin_import import|import",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(23, 24)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1047,
        "line_str": "parameter_list|) block|{ name|fail argument_list|(",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1052)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1460,
        "line_str": "argument_list|) expr_stmt|; block|} specifier|public",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1649, 1652)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 915,
        "line_str": "expr_stmt|; name|fail argument_list|( literal|\"An exception should have been thrown.\"",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(911, 941)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1361,
        "line_str": "expr_stmt|; block|} specifier|public name|void",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1356, 1358)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 783,
        "line_str": "index|[ literal|0 index|] argument_list|)",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(783, 786)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 139,
        "line_str": "extends|extends name|TestCase block|{ specifier|public",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(136, 142)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1388,
        "line_str": "name|i operator|< name|col condition|;",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1503)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1355,
        "line_str": "argument_list|() operator|+ name|decisionVariable decl_stmt|;",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1435, 1446)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1031,
        "line_str": "literal|\"An exception should have been thrown.\" argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1052)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 486,
        "line_str": "block|} specifier|public name|void name|testMinimization",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(481, 487)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 932,
        "line_str": "name|OptimizationException name|e parameter_list|) block|{",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(911, 941)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 899,
        "line_str": "try|try block|{ name|solver operator|.",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(894, 899)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1405,
        "line_str": "argument_list|) operator|== literal|1 condition|)",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1503)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1372,
        "line_str": "condition|) block|{ return|return literal|0",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1503)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1306,
        "line_str": "block|{ name|coefficients index|[ name|i",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1391, 1394)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1048,
        "line_str": "block|{ name|fail argument_list|( literal|\"wrong exception caught\"",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1052)"
      },
      {
        "commit_hash": "6c65646a2d62b8ead3a7d4da3410fc4050c25fb5",
        "line_num": 1527,
        "line_str": "index|[ literal|1 index|] argument_list|)",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1523, 1526)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1461,
        "line_str": "expr_stmt|; block|} specifier|public name|void",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1649, 1652)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 916,
        "line_str": "name|fail argument_list|( literal|\"An exception should have been thrown.\" argument_list|)",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(911, 941)"
      },
      {
        "commit_hash": "6c65646a2d62b8ead3a7d4da3410fc4050c25fb5",
        "line_num": 1362,
        "line_str": "block|} specifier|public name|void name|testEpsilon",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1358, 1359)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 784,
        "line_str": "literal|0 index|] argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(783, 786)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 140,
        "line_str": "name|TestCase block|{ specifier|public name|void",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(136, 142)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1389,
        "line_str": "operator|< name|col condition|; name|i",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1503)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1356,
        "line_str": "operator|+ name|decisionVariable decl_stmt|; name|Integer",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1435, 1446)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1323,
        "line_str": "operator|) expr_stmt|; block|} return|return",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1410, 1412)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1032,
        "line_str": "argument_list|) expr_stmt|; block|} catch|catch",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1052)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 933,
        "line_str": "name|e parameter_list|) block|{ name|fail",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(911, 941)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 900,
        "line_str": "block|{ name|solver operator|. name|optimize",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(894, 899)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1406,
        "line_str": "operator|== literal|1 condition|) block|{",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1503)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1373,
        "line_str": "block|{ return|return literal|0 return|;",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1503)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1340,
        "line_str": "block|} comment specifier|protected name|double",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1427, 1435)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1049,
        "line_str": "name|fail argument_list|( literal|\"wrong exception caught\" argument_list|)",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1052)"
      },
      {
        "commit_hash": "6c65646a2d62b8ead3a7d4da3410fc4050c25fb5",
        "line_num": 1528,
        "line_str": "literal|1 index|] argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1523, 1526)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 471,
        "line_str": "index|[ literal|1 index|] argument_list|)",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(471, 474)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1462,
        "line_str": "block|} specifier|public name|void name|testLargeModel",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1649, 1652)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 917,
        "line_str": "argument_list|( literal|\"An exception should have been thrown.\" argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(911, 941)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 785,
        "line_str": "index|] argument_list|) expr_stmt|; name|assertEquals",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(783, 786)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 141,
        "line_str": "block|{ specifier|public name|void name|testSimplexSolver",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(136, 142)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1390,
        "line_str": "name|col condition|; name|i operator|++",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1503)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1357,
        "line_str": "name|decisionVariable decl_stmt|; name|Integer name|basicRow",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1435, 1446)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1324,
        "line_str": "expr_stmt|; block|} return|return operator|new",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1410, 1412)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1033,
        "line_str": "expr_stmt|; block|} catch|catch parameter_list|(",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1052)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 934,
        "line_str": "parameter_list|) block|{ name|fail argument_list|(",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(911, 941)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1407,
        "line_str": "literal|1 condition|) block|{ return|return",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1503)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1374,
        "line_str": "return|return literal|0 return|; block|}",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1503)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1341,
        "line_str": "comment specifier|protected name|double name|getDecisionVariableValue",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1427, 1435)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1050,
        "line_str": "argument_list|( literal|\"wrong exception caught\" argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1052)"
      },
      {
        "commit_hash": "6c65646a2d62b8ead3a7d4da3410fc4050c25fb5",
        "line_num": 1529,
        "line_str": "index|] argument_list|) expr_stmt|; name|assertEquals",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1523, 1526)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 472,
        "line_str": "literal|1 index|] argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(471, 474)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 918,
        "line_str": "literal|\"An exception should have been thrown.\" argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(911, 941)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1391,
        "line_str": "condition|; name|i operator|++ control|)",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1503)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1358,
        "line_str": "decl_stmt|; name|Integer name|basicRow init|=",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1435, 1446)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 43,
        "line_str": "end_import  begin_import import|import",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(43, 53)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1034,
        "line_str": "block|} catch|catch parameter_list|( name|UnboundedSolutionException",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1052)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 935,
        "line_str": "block|{ name|fail argument_list|( literal|\"wrong exception caught\"",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(911, 941)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1408,
        "line_str": "condition|) block|{ return|return literal|0",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1503)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1375,
        "line_str": "literal|0 return|; block|} comment",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1503)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1342,
        "line_str": "specifier|protected name|double name|getDecisionVariableValue parameter_list|(",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1427, 1435)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1309,
        "line_str": "name|i index|] operator|= name|getDecisionVariableValue",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1396, 1403)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1051,
        "line_str": "literal|\"wrong exception caught\" argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1052)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 473,
        "line_str": "index|] argument_list|) expr_stmt|; name|assertEquals",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(471, 474)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 919,
        "line_str": "argument_list|) expr_stmt|; block|} catch|catch",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(911, 941)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 308,
        "line_str": "operator|. name|getValue argument_list|() argument_list|)",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(308, 311)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1392,
        "line_str": "name|i operator|++ control|) block|{",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1503)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 44,
        "line_str": "begin_import import|import name|junit",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(43, 53)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1035,
        "line_str": "catch|catch parameter_list|( name|UnboundedSolutionException name|e",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1052)"
      },
      {
        "commit_hash": "6c65646a2d62b8ead3a7d4da3410fc4050c25fb5",
        "line_num": 1514,
        "line_str": "index|[ literal|0 index|] argument_list|)",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1510, 1513)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 936,
        "line_str": "name|fail argument_list|( literal|\"wrong exception caught\" argument_list|)",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(911, 941)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1409,
        "line_str": "block|{ return|return literal|0 return|;",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1503)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1376,
        "line_str": "return|; block|} comment comment",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1503)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1343,
        "line_str": "name|double name|getDecisionVariableValue parameter_list|( specifier|final",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1427, 1435)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1310,
        "line_str": "index|] operator|= name|getDecisionVariableValue argument_list|(",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1396, 1403)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1052,
        "line_str": "argument_list|) expr_stmt|; block|} block|}",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1052)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 920,
        "line_str": "expr_stmt|; block|} catch|catch parameter_list|(",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(911, 941)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 309,
        "line_str": "name|getValue argument_list|() argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(308, 311)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 656,
        "line_str": "operator|. name|getValue argument_list|() argument_list|)",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(656, 662)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1393,
        "line_str": "operator|++ control|) block|{ if|if",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1503)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 45,
        "line_str": "begin_import import|import name|junit operator|.",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(43, 53)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1036,
        "line_str": "parameter_list|( name|UnboundedSolutionException name|e parameter_list|)",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1052)"
      },
      {
        "commit_hash": "6c65646a2d62b8ead3a7d4da3410fc4050c25fb5",
        "line_num": 1515,
        "line_str": "literal|0 index|] argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1510, 1513)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 458,
        "line_str": "index|[ literal|0 index|] argument_list|)",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(458, 461)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 937,
        "line_str": "argument_list|( literal|\"wrong exception caught\" argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(911, 941)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1410,
        "line_str": "return|return literal|0 return|; block|}",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1503)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1377,
        "line_str": "block|} comment comment for|for",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1503)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1344,
        "line_str": "name|getDecisionVariableValue parameter_list|( specifier|final name|int",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1427, 1435)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1311,
        "line_str": "operator|= name|getDecisionVariableValue argument_list|( name|i",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1396, 1403)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1278,
        "line_str": "argument_list|() index|] decl_stmt|; name|double",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1365, 1373)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1053,
        "line_str": "expr_stmt|; block|} block|} specifier|public",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1052)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 921,
        "line_str": "block|} catch|catch parameter_list|( name|NoFeasibleSolutionException",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(911, 941)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 310,
        "line_str": "argument_list|() argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(308, 311)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 657,
        "line_str": "name|getValue argument_list|() argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(656, 662)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1394,
        "line_str": "control|) block|{ if|if condition|(",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1503)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1361,
        "line_str": "init|= name|getBasicRow argument_list|( name|col",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1503)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 46,
        "line_str": "import|import name|junit operator|. name|framework",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(43, 53)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1037,
        "line_str": "name|UnboundedSolutionException name|e parameter_list|) block|{",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1052)"
      },
      {
        "commit_hash": "6c65646a2d62b8ead3a7d4da3410fc4050c25fb5",
        "line_num": 1516,
        "line_str": "index|] argument_list|) expr_stmt|; name|assertEquals",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1510, 1513)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 459,
        "line_str": "literal|0 index|] argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(458, 461)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 938,
        "line_str": "literal|\"wrong exception caught\" argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(911, 941)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 806,
        "line_str": "operator|. name|getValue argument_list|() argument_list|)",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(806, 812)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1411,
        "line_str": "literal|0 return|; block|} block|}",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1503)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1378,
        "line_str": "comment comment for|for control|(",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1503)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1345,
        "line_str": "parameter_list|( specifier|final name|int name|decisionVariable",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1427, 1435)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1312,
        "line_str": "name|getDecisionVariableValue argument_list|( name|i argument_list|)",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1396, 1403)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1279,
        "line_str": "index|] decl_stmt|; name|double name|mostNegative",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1365, 1373)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1054,
        "line_str": "block|} block|} specifier|public name|void",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1052)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 922,
        "line_str": "catch|catch parameter_list|( name|NoFeasibleSolutionException name|e",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(911, 941)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 658,
        "line_str": "argument_list|() argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(656, 662)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1395,
        "line_str": "block|{ if|if condition|( name|tableau",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1503)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1362,
        "line_str": "name|getBasicRow argument_list|( name|col argument_list|)",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1503)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 47,
        "line_str": "name|junit operator|. name|framework operator|.",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(43, 53)"
      },
      {
        "commit_hash": "6c65646a2d62b8ead3a7d4da3410fc4050c25fb5",
        "line_num": 1550,
        "line_str": "operator|. name|getValue argument_list|() argument_list|)",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1546, 1551)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1038,
        "line_str": "name|e parameter_list|) block|{ comment",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1052)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 460,
        "line_str": "index|] argument_list|) expr_stmt|; name|assertEquals",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(458, 461)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 939,
        "line_str": "argument_list|) expr_stmt|; block|} block|}",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(911, 941)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 807,
        "line_str": "name|getValue argument_list|() argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(806, 812)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1412,
        "line_str": "return|; block|} block|} return|return",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1503)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1379,
        "line_str": "comment for|for control|( name|int",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1503)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1346,
        "line_str": "specifier|final name|int name|decisionVariable parameter_list|)",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1427, 1435)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1313,
        "line_str": "argument_list|( name|i argument_list|) operator|-",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1396, 1403)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1280,
        "line_str": "decl_stmt|; name|double name|mostNegative init|=",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1365, 1373)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1055,
        "line_str": "block|} specifier|public name|void name|testRestrictVariablesToNonNegative",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1052)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 923,
        "line_str": "parameter_list|( name|NoFeasibleSolutionException name|e parameter_list|)",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(911, 941)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 312,
        "line_str": "expr_stmt|; block|} comment specifier|public",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(312, 315)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 659,
        "line_str": "argument_list|) expr_stmt|; block|} specifier|public",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(656, 662)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1396,
        "line_str": "if|if condition|( name|tableau operator|.",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1503)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1363,
        "line_str": "argument_list|( name|col argument_list|) decl_stmt|;",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1503)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 48,
        "line_str": "operator|. name|framework operator|. name|TestCase",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(43, 53)"
      },
      {
        "commit_hash": "6c65646a2d62b8ead3a7d4da3410fc4050c25fb5",
        "line_num": 1551,
        "line_str": "name|getValue argument_list|() argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1546, 1551)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1039,
        "line_str": "parameter_list|) block|{ comment block|}",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1052)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 940,
        "line_str": "expr_stmt|; block|} block|} specifier|public",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(911, 941)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 808,
        "line_str": "argument_list|() argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(806, 812)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1413,
        "line_str": "block|} block|} return|return name|getEntry",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1503)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1380,
        "line_str": "for|for control|( name|int name|i",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1503)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1347,
        "line_str": "name|int name|decisionVariable parameter_list|) block|{",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1427, 1435)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1314,
        "line_str": "name|i argument_list|) operator|- operator|(",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1396, 1403)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1281,
        "line_str": "name|double name|mostNegative init|= name|getDecisionVariableValue",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1365, 1373)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 924,
        "line_str": "name|NoFeasibleSolutionException name|e parameter_list|) block|{",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(911, 941)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 313,
        "line_str": "block|} comment specifier|public name|void",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(312, 315)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 660,
        "line_str": "expr_stmt|; block|} specifier|public name|void",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(656, 662)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1397,
        "line_str": "condition|( name|tableau operator|. name|getEntry",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1503)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1364,
        "line_str": "name|col argument_list|) decl_stmt|; if|if",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1503)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 49,
        "line_str": "name|framework operator|. name|TestCase import|;",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(43, 53)"
      },
      {
        "commit_hash": "6c65646a2d62b8ead3a7d4da3410fc4050c25fb5",
        "line_num": 1552,
        "line_str": "argument_list|() argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1546, 1551)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1040,
        "line_str": "block|{ comment block|} catch|catch",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1052)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 941,
        "line_str": "block|} block|} specifier|public name|void",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(911, 941)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 809,
        "line_str": "argument_list|) expr_stmt|; block|} specifier|public",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(806, 812)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1414,
        "line_str": "block|} return|return name|getEntry argument_list|(",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1503)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1381,
        "line_str": "control|( name|int name|i init|=",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1503)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1348,
        "line_str": "name|decisionVariable parameter_list|) block|{ name|int",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1435, 1446)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1315,
        "line_str": "argument_list|) operator|- operator|( name|restrictToNonNegative",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1396, 1403)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1282,
        "line_str": "name|mostNegative init|= name|getDecisionVariableValue argument_list|(",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1365, 1373)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 925,
        "line_str": "name|e parameter_list|) block|{ comment",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(911, 941)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 314,
        "line_str": "comment specifier|public name|void name|testModelWithNoArtificialVars",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(312, 315)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 661,
        "line_str": "block|} specifier|public name|void name|testSolutionWithNegativeDecisionVariable",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(656, 662)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1398,
        "line_str": "name|tableau operator|. name|getEntry argument_list|(",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1503)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1365,
        "line_str": "argument_list|) decl_stmt|; if|if condition|(",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1503)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 50,
        "line_str": "operator|. name|TestCase import|; end_import",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(43, 53)"
      },
      {
        "commit_hash": "6c65646a2d62b8ead3a7d4da3410fc4050c25fb5",
        "line_num": 1553,
        "line_str": "argument_list|) expr_stmt|; block|} specifier|public",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1546, 1551)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1041,
        "line_str": "comment block|} catch|catch parameter_list|(",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1052)"
      },
      {
        "commit_hash": "cdd62a0f07e3d715f72243aa7e881ca53b59afe3",
        "line_num": 942,
        "line_str": "name|void name|testUnboundedSolution parameter_list|() block|{",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(942, 945)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 298,
        "line_str": "index|[ literal|1 index|] argument_list|)",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(298, 301)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 810,
        "line_str": "expr_stmt|; block|} specifier|public name|void",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(806, 812)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1415,
        "line_str": "return|return name|getEntry argument_list|( name|basicRow",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1503)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1382,
        "line_str": "name|int name|i init|= name|getNumObjectiveFunctions",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1503)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1349,
        "line_str": "parameter_list|) block|{ name|int name|col",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1435, 1446)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 645,
        "line_str": "index|[ literal|1 index|] argument_list|)",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(645, 648)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1283,
        "line_str": "init|= name|getDecisionVariableValue argument_list|( name|getOriginalNumDecisionVariables",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1365, 1373)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 926,
        "line_str": "parameter_list|) block|{ comment block|}",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(911, 941)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1399,
        "line_str": "operator|. name|getEntry argument_list|( name|basicRow",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1503)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1366,
        "line_str": "decl_stmt|; if|if condition|( name|basicRow",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1503)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 51,
        "line_str": "name|TestCase import|; end_import",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(43, 53)"
      },
      {
        "commit_hash": "6c65646a2d62b8ead3a7d4da3410fc4050c25fb5",
        "line_num": 1554,
        "line_str": "expr_stmt|; block|} specifier|public name|void",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1546, 1551)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1009,
        "line_str": "name|SimplexSolver argument_list|() decl_stmt|; try|try",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1005, 1010)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1042,
        "line_str": "block|} catch|catch parameter_list|( name|OptimizationException",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1052)"
      },
      {
        "commit_hash": "cdd62a0f07e3d715f72243aa7e881ca53b59afe3",
        "line_num": 943,
        "line_str": "name|testUnboundedSolution parameter_list|() block|{ name|LinearObjectiveFunction",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(942, 945)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 299,
        "line_str": "literal|1 index|] argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(298, 301)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 811,
        "line_str": "block|} specifier|public name|void name|testInfeasibleSolution",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(806, 812)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 646,
        "line_str": "literal|1 index|] argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(645, 648)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1383,
        "line_str": "name|i init|= name|getNumObjectiveFunctions argument_list|()",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1503)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1350,
        "line_str": "block|{ name|int name|col init|=",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1435, 1446)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1284,
        "line_str": "name|getDecisionVariableValue argument_list|( name|getOriginalNumDecisionVariables argument_list|()",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1365, 1373)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 1026,
        "line_str": "literal|false argument_list|) expr_stmt|; name|fail",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(1022, 1052)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 481,
        "line_str": "operator|. name|getValue argument_list|() argument_list|)",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(481, 487)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 927,
        "line_str": "block|{ comment block|} catch|catch",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(911, 941)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1400,
        "line_str": "name|getEntry argument_list|( name|basicRow argument_list|,",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1503)"
      },
      {
        "commit_hash": "b03d68547460332b861044db80ccd08edec361a1",
        "line_num": 1367,
        "line_str": "if|if condition|( name|basicRow operator|==",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(1448, 1503)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 52,
        "line_str": "import|; end_import  begin_import",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(43, 53)"
      }
    ]
  },
  {
    "id": 10117,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["0c84b28c3542f3340f7ec0dffc34c60dff66604e"],
    "fix_commit_hash": "62b3877f953dd47c4d301be35c77446e2cf55311",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "0c84b28c3542f3340f7ec0dffc34c60dff66604e",
        "line_num": 1456,
        "line_str": "literal|\"Expected ClassCastException\" argument_list|) expr_stmt|; comment",
        "file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_line_num": "range(1453, 1464)"
      },
      {
        "commit_hash": "0c84b28c3542f3340f7ec0dffc34c60dff66604e",
        "line_num": 1423,
        "line_str": "block|} catch|catch parameter_list|( name|ClassCastException",
        "file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_line_num": "range(1423, 1427)"
      },
      {
        "commit_hash": "0c84b28c3542f3340f7ec0dffc34c60dff66604e",
        "line_num": 1419,
        "line_str": "argument_list|( literal|\"Expected ClassCastException\" argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_line_num": "range(1417, 1421)"
      },
      {
        "commit_hash": "0c84b28c3542f3340f7ec0dffc34c60dff66604e",
        "line_num": 1461,
        "line_str": "catch|catch parameter_list|( name|ClassCastException name|expected",
        "file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_line_num": "range(1453, 1464)"
      },
      {
        "commit_hash": "0c84b28c3542f3340f7ec0dffc34c60dff66604e",
        "line_num": 1457,
        "line_str": "argument_list|) expr_stmt|; comment block|}",
        "file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_line_num": "range(1453, 1464)"
      },
      {
        "commit_hash": "0c84b28c3542f3340f7ec0dffc34c60dff66604e",
        "line_num": 1424,
        "line_str": "catch|catch parameter_list|( name|ClassCastException name|expected",
        "file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_line_num": "range(1423, 1427)"
      },
      {
        "commit_hash": "0c84b28c3542f3340f7ec0dffc34c60dff66604e",
        "line_num": 1453,
        "line_str": "expr_stmt|; name|fail argument_list|( literal|\"Expected ClassCastException\"",
        "file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_line_num": "range(1453, 1464)"
      },
      {
        "commit_hash": "0c84b28c3542f3340f7ec0dffc34c60dff66604e",
        "line_num": 1420,
        "line_str": "literal|\"Expected ClassCastException\" argument_list|) expr_stmt|; block|}",
        "file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_line_num": "range(1417, 1421)"
      },
      {
        "commit_hash": "0c84b28c3542f3340f7ec0dffc34c60dff66604e",
        "line_num": 289,
        "line_str": "argument_list|) expr_stmt|; block|} comment",
        "file_path": "src/java/org/apache/commons/math/stat/Frequency.java",
        "input_file_path": "src/java/org/apache/commons/math/stat/Frequency.java",
        "input_line_num": "range(289, 291)"
      },
      {
        "commit_hash": "0c84b28c3542f3340f7ec0dffc34c60dff66604e",
        "line_num": 1462,
        "line_str": "parameter_list|( name|ClassCastException name|expected parameter_list|)",
        "file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_line_num": "range(1453, 1464)"
      },
      {
        "commit_hash": "0c84b28c3542f3340f7ec0dffc34c60dff66604e",
        "line_num": 277,
        "line_str": "name|v parameter_list|) block|{ name|addValue",
        "file_path": "src/java/org/apache/commons/math/stat/Frequency.java",
        "input_file_path": "src/java/org/apache/commons/math/stat/Frequency.java",
        "input_line_num": "range(277, 279)"
      },
      {
        "commit_hash": "0c84b28c3542f3340f7ec0dffc34c60dff66604e",
        "line_num": 1458,
        "line_str": "expr_stmt|; comment block|} catch|catch",
        "file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_line_num": "range(1453, 1464)"
      },
      {
        "commit_hash": "0c84b28c3542f3340f7ec0dffc34c60dff66604e",
        "line_num": 1425,
        "line_str": "parameter_list|( name|ClassCastException name|expected parameter_list|)",
        "file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_line_num": "range(1423, 1427)"
      },
      {
        "commit_hash": "0c84b28c3542f3340f7ec0dffc34c60dff66604e",
        "line_num": 1454,
        "line_str": "name|fail argument_list|( literal|\"Expected ClassCastException\" argument_list|)",
        "file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_line_num": "range(1453, 1464)"
      },
      {
        "commit_hash": "0c84b28c3542f3340f7ec0dffc34c60dff66604e",
        "line_num": 1417,
        "line_str": "comment name|fail argument_list|( literal|\"Expected ClassCastException\"",
        "file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_line_num": "range(1417, 1421)"
      },
      {
        "commit_hash": "0c84b28c3542f3340f7ec0dffc34c60dff66604e",
        "line_num": 290,
        "line_str": "expr_stmt|; block|} comment specifier|public",
        "file_path": "src/java/org/apache/commons/math/stat/Frequency.java",
        "input_file_path": "src/java/org/apache/commons/math/stat/Frequency.java",
        "input_line_num": "range(289, 291)"
      },
      {
        "commit_hash": "0c84b28c3542f3340f7ec0dffc34c60dff66604e",
        "line_num": 1463,
        "line_str": "name|ClassCastException name|expected parameter_list|) block|{",
        "file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_line_num": "range(1453, 1464)"
      },
      {
        "commit_hash": "0c84b28c3542f3340f7ec0dffc34c60dff66604e",
        "line_num": 278,
        "line_str": "parameter_list|) block|{ name|addValue argument_list|(",
        "file_path": "src/java/org/apache/commons/math/stat/Frequency.java",
        "input_file_path": "src/java/org/apache/commons/math/stat/Frequency.java",
        "input_line_num": "range(277, 279)"
      },
      {
        "commit_hash": "0c84b28c3542f3340f7ec0dffc34c60dff66604e",
        "line_num": 1459,
        "line_str": "comment block|} catch|catch parameter_list|(",
        "file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_line_num": "range(1453, 1464)"
      },
      {
        "commit_hash": "0c84b28c3542f3340f7ec0dffc34c60dff66604e",
        "line_num": 1426,
        "line_str": "name|ClassCastException name|expected parameter_list|) block|{",
        "file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_line_num": "range(1423, 1427)"
      },
      {
        "commit_hash": "0c84b28c3542f3340f7ec0dffc34c60dff66604e",
        "line_num": 1455,
        "line_str": "argument_list|( literal|\"Expected ClassCastException\" argument_list|) expr_stmt|;",
        "file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_line_num": "range(1453, 1464)"
      },
      {
        "commit_hash": "0c84b28c3542f3340f7ec0dffc34c60dff66604e",
        "line_num": 1418,
        "line_str": "name|fail argument_list|( literal|\"Expected ClassCastException\" argument_list|)",
        "file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_line_num": "range(1417, 1421)"
      },
      {
        "commit_hash": "0c84b28c3542f3340f7ec0dffc34c60dff66604e",
        "line_num": 1460,
        "line_str": "block|} catch|catch parameter_list|( name|ClassCastException",
        "file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_line_num": "range(1453, 1464)"
      }
    ]
  },
  {
    "id": 10118,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["0a904461932f2c0455611e77ec6a8d8aced2980b"],
    "fix_commit_hash": "85a8ab2dcfc26e83be1514acdb11d3feaac3e73d",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "430f487ebc550a07ed2f06a758cd2dd480669fc9",
        "line_num": 159,
        "line_str": "return|; block|} if|if condition|(",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(170, 178)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 268,
        "line_str": "name|result init|= name|Math operator|.",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(471, 505)"
      },
      {
        "commit_hash": "430f487ebc550a07ed2f06a758cd2dd480669fc9",
        "line_num": 176,
        "line_str": "condition|) block|{ return|return name|n",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(191, 199)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 318,
        "line_str": "return|return name|Math operator|. name|floor",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(522, 535)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 285,
        "line_str": "operator|== name|Long operator|. name|MAX_VALUE",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(471, 505)"
      },
      {
        "commit_hash": "430f487ebc550a07ed2f06a758cd2dd480669fc9",
        "line_num": 193,
        "line_str": "operator|+ name|binomialCoefficient argument_list|( name|n",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(206, 210)"
      },
      {
        "commit_hash": "430f487ebc550a07ed2f06a758cd2dd480669fc9",
        "line_num": 160,
        "line_str": "block|} if|if condition|( operator|(",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(170, 178)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 269,
        "line_str": "init|= name|Math operator|. name|round",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(471, 505)"
      },
      {
        "commit_hash": "430f487ebc550a07ed2f06a758cd2dd480669fc9",
        "line_num": 177,
        "line_str": "block|{ return|return name|n return|;",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(191, 199)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 319,
        "line_str": "name|Math operator|. name|floor argument_list|(",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(522, 535)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 286,
        "line_str": "name|Long operator|. name|MAX_VALUE condition|)",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(471, 505)"
      },
      {
        "commit_hash": "430f487ebc550a07ed2f06a758cd2dd480669fc9",
        "line_num": 161,
        "line_str": "if|if condition|( operator|( name|k",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(170, 178)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 270,
        "line_str": "name|Math operator|. name|round argument_list|(",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(471, 505)"
      },
      {
        "commit_hash": "430f487ebc550a07ed2f06a758cd2dd480669fc9",
        "line_num": 178,
        "line_str": "return|return name|n return|; block|}",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(191, 199)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 320,
        "line_str": "operator|. name|floor argument_list|( name|Math",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(522, 535)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 287,
        "line_str": "operator|. name|MAX_VALUE condition|) block|{",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(471, 505)"
      },
      {
        "commit_hash": "430f487ebc550a07ed2f06a758cd2dd480669fc9",
        "line_num": 129,
        "line_str": "block|} comment specifier|private name|long",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(145, 146)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 271,
        "line_str": "operator|. name|round argument_list|( name|binomialCoefficientDouble",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(471, 505)"
      },
      {
        "commit_hash": "430f487ebc550a07ed2f06a758cd2dd480669fc9",
        "line_num": 179,
        "line_str": "name|n return|; block|} return|return",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(191, 199)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 321,
        "line_str": "name|floor argument_list|( name|Math operator|.",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(522, 535)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 288,
        "line_str": "name|MAX_VALUE condition|) block|{ throw|throw",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(471, 505)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 272,
        "line_str": "name|round argument_list|( name|binomialCoefficientDouble argument_list|(",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(471, 505)"
      },
      {
        "commit_hash": "430f487ebc550a07ed2f06a758cd2dd480669fc9",
        "line_num": 180,
        "line_str": "return|; block|} return|return name|binomialCoefficient",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(191, 199)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 322,
        "line_str": "argument_list|( name|Math operator|. name|exp",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(522, 535)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 289,
        "line_str": "condition|) block|{ throw|throw operator|new",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(471, 505)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 273,
        "line_str": "argument_list|( name|binomialCoefficientDouble argument_list|( name|n",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(471, 505)"
      },
      {
        "commit_hash": "430f487ebc550a07ed2f06a758cd2dd480669fc9",
        "line_num": 181,
        "line_str": "block|} return|return name|binomialCoefficient argument_list|(",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(191, 199)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 488,
        "line_str": "argument_list|) return|; block|} name|double",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(636, 639)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 323,
        "line_str": "name|Math operator|. name|exp argument_list|(",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(522, 535)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 290,
        "line_str": "block|{ throw|throw operator|new name|ArithmeticException",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(471, 505)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 274,
        "line_str": "name|binomialCoefficientDouble argument_list|( name|n argument_list|,",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(471, 505)"
      },
      {
        "commit_hash": "430f487ebc550a07ed2f06a758cd2dd480669fc9",
        "line_num": 793,
        "line_str": "block|} comment block|} specifier|public",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(809, 811)"
      },
      {
        "commit_hash": "430f487ebc550a07ed2f06a758cd2dd480669fc9",
        "line_num": 182,
        "line_str": "return|return name|binomialCoefficient argument_list|( name|n",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(191, 199)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 489,
        "line_str": "return|; block|} name|double name|logSum",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(636, 639)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 324,
        "line_str": "operator|. name|exp argument_list|( name|binomialCoefficientLog",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(522, 535)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 291,
        "line_str": "throw|throw operator|new name|ArithmeticException argument_list|(",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(471, 505)"
      },
      {
        "commit_hash": "430f487ebc550a07ed2f06a758cd2dd480669fc9",
        "line_num": 199,
        "line_str": "argument_list|, name|k argument_list|) return|;",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(215, 218)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 275,
        "line_str": "argument_list|( name|n argument_list|, name|k",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(471, 505)"
      },
      {
        "commit_hash": "430f487ebc550a07ed2f06a758cd2dd480669fc9",
        "line_num": 794,
        "line_str": "comment block|} specifier|public name|void",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(809, 811)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 490,
        "line_str": "block|} name|double name|logSum init|=",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(636, 639)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 325,
        "line_str": "name|exp argument_list|( name|binomialCoefficientLog argument_list|(",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(522, 535)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 292,
        "line_str": "operator|new name|ArithmeticException argument_list|( literal|\"result too large to represent in a long integer\"",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(471, 505)"
      },
      {
        "commit_hash": "430f487ebc550a07ed2f06a758cd2dd480669fc9",
        "line_num": 200,
        "line_str": "name|k argument_list|) return|; block|}",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(215, 218)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 276,
        "line_str": "name|n argument_list|, name|k argument_list|)",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(471, 505)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 326,
        "line_str": "argument_list|( name|binomialCoefficientLog argument_list|( name|n",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(522, 535)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 293,
        "line_str": "name|ArithmeticException argument_list|( literal|\"result too large to represent in a long integer\" argument_list|)",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(471, 505)"
      },
      {
        "commit_hash": "430f487ebc550a07ed2f06a758cd2dd480669fc9",
        "line_num": 201,
        "line_str": "argument_list|) return|; block|} comment",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(215, 218)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 277,
        "line_str": "argument_list|, name|k argument_list|) argument_list|)",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(471, 505)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 327,
        "line_str": "name|binomialCoefficientLog argument_list|( name|n argument_list|,",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(522, 535)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 294,
        "line_str": "argument_list|( literal|\"result too large to represent in a long integer\" argument_list|) throw|;",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(471, 505)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 278,
        "line_str": "name|k argument_list|) argument_list|) decl_stmt|;",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(471, 505)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 295,
        "line_str": "literal|\"result too large to represent in a long integer\" argument_list|) throw|; block|}",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(471, 505)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 279,
        "line_str": "argument_list|) argument_list|) decl_stmt|; if|if",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(471, 505)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 352,
        "line_str": "expr_stmt|; block|} block|} comment",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(807, 809)"
      },
      {
        "commit_hash": "430f487ebc550a07ed2f06a758cd2dd480669fc9",
        "line_num": 154,
        "line_str": "operator|) condition|) block|{ return|return",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(170, 178)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 296,
        "line_str": "argument_list|) throw|; block|} return|return",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(471, 505)"
      },
      {
        "commit_hash": "430f487ebc550a07ed2f06a758cd2dd480669fc9",
        "line_num": 138,
        "line_str": "name|int name|k parameter_list|) block|{",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(154, 158)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 280,
        "line_str": "argument_list|) decl_stmt|; if|if condition|(",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(471, 505)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 353,
        "line_str": "block|} block|} comment block|}",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(807, 809)"
      },
      {
        "commit_hash": "430f487ebc550a07ed2f06a758cd2dd480669fc9",
        "line_num": 155,
        "line_str": "condition|) block|{ return|return literal|1",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(170, 178)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 330,
        "line_str": "argument_list|, name|k argument_list|) argument_list|)",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(537, 541)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 297,
        "line_str": "throw|; block|} return|return name|result",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(471, 505)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 264,
        "line_str": "name|n return|; block|} name|long",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(471, 505)"
      },
      {
        "commit_hash": "430f487ebc550a07ed2f06a758cd2dd480669fc9",
        "line_num": 139,
        "line_str": "name|k parameter_list|) block|{ if|if",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(154, 158)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 281,
        "line_str": "decl_stmt|; if|if condition|( name|result",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(471, 505)"
      },
      {
        "commit_hash": "430f487ebc550a07ed2f06a758cd2dd480669fc9",
        "line_num": 156,
        "line_str": "block|{ return|return literal|1 return|;",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(170, 178)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 331,
        "line_str": "name|k argument_list|) argument_list|) operator|+",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(537, 541)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 265,
        "line_str": "return|; block|} name|long name|result",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(471, 505)"
      },
      {
        "commit_hash": "430f487ebc550a07ed2f06a758cd2dd480669fc9",
        "line_num": 140,
        "line_str": "parameter_list|) block|{ if|if condition|(",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(154, 158)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 315,
        "line_str": "name|k parameter_list|) block|{ return|return",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(522, 535)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 282,
        "line_str": "if|if condition|( name|result operator|==",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(471, 505)"
      },
      {
        "commit_hash": "430f487ebc550a07ed2f06a758cd2dd480669fc9",
        "line_num": 190,
        "line_str": "operator|- literal|1 argument_list|) operator|+",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(206, 210)"
      },
      {
        "commit_hash": "430f487ebc550a07ed2f06a758cd2dd480669fc9",
        "line_num": 157,
        "line_str": "return|return literal|1 return|; block|}",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(170, 178)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 332,
        "line_str": "argument_list|) argument_list|) operator|+ literal|0.5",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(537, 541)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 266,
        "line_str": "block|} name|long name|result init|=",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(471, 505)"
      },
      {
        "commit_hash": "430f487ebc550a07ed2f06a758cd2dd480669fc9",
        "line_num": 141,
        "line_str": "block|{ if|if condition|( operator|(",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(154, 158)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 316,
        "line_str": "parameter_list|) block|{ return|return name|Math",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(522, 535)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 283,
        "line_str": "condition|( name|result operator|== name|Long",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(471, 505)"
      },
      {
        "commit_hash": "430f487ebc550a07ed2f06a758cd2dd480669fc9",
        "line_num": 191,
        "line_str": "literal|1 argument_list|) operator|+ name|binomialCoefficient",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(206, 210)"
      },
      {
        "commit_hash": "430f487ebc550a07ed2f06a758cd2dd480669fc9",
        "line_num": 158,
        "line_str": "literal|1 return|; block|} if|if",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(170, 178)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 333,
        "line_str": "argument_list|) operator|+ literal|0.5 argument_list|)",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(537, 541)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 267,
        "line_str": "name|long name|result init|= name|Math",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(471, 505)"
      },
      {
        "commit_hash": "430f487ebc550a07ed2f06a758cd2dd480669fc9",
        "line_num": 175,
        "line_str": "operator|) condition|) block|{ return|return",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(191, 199)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 317,
        "line_str": "block|{ return|return name|Math operator|.",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(522, 535)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 284,
        "line_str": "name|result operator|== name|Long operator|.",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(471, 505)"
      },
      {
        "commit_hash": "430f487ebc550a07ed2f06a758cd2dd480669fc9",
        "line_num": 192,
        "line_str": "argument_list|) operator|+ name|binomialCoefficient argument_list|(",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(206, 210)"
      }
    ]
  },
  {
    "id": 10119,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["0a904461932f2c0455611e77ec6a8d8aced2980b"],
    "fix_commit_hash": "7cd3d822b65b7acdd1f6e1c82b291cd994f4fe05",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 590,
        "line_str": "name|Long operator|. name|MAX_VALUE condition|)",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(891, 914)"
      },
      {
        "commit_hash": "430f487ebc550a07ed2f06a758cd2dd480669fc9",
        "line_num": 1142,
        "line_str": "literal|10 condition|; name|i operator|++",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(1363, 1367)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 586,
        "line_str": "if|if condition|( name|result operator|==",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(891, 914)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 582,
        "line_str": "name|n argument_list|) argument_list|) decl_stmt|;",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(891, 914)"
      },
      {
        "commit_hash": "b8a46f6657147be4ddc194c04bcbd5aa00abf23f",
        "line_num": 834,
        "line_str": "return|; block|} comment specifier|public",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(881, 883)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 578,
        "line_str": "name|round argument_list|( name|factorialDouble argument_list|(",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(891, 914)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 574,
        "line_str": "name|result init|= name|Math operator|.",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(891, 914)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 603,
        "line_str": "return|return name|result return|; block|}",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(922, 926)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 570,
        "line_str": "name|n parameter_list|) block|{ name|long",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(891, 914)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 599,
        "line_str": "literal|\"result too large to represent in a long integer\" argument_list|) throw|; block|}",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(917, 921)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 591,
        "line_str": "operator|. name|MAX_VALUE condition|) block|{",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(891, 914)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 587,
        "line_str": "condition|( name|result operator|== name|Long",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(891, 914)"
      },
      {
        "commit_hash": "430f487ebc550a07ed2f06a758cd2dd480669fc9",
        "line_num": 1139,
        "line_str": "init|; name|i operator|< literal|10",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(1363, 1367)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 583,
        "line_str": "argument_list|) argument_list|) decl_stmt|; if|if",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(891, 914)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 579,
        "line_str": "argument_list|( name|factorialDouble argument_list|( name|n",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(891, 914)"
      },
      {
        "commit_hash": "b8a46f6657147be4ddc194c04bcbd5aa00abf23f",
        "line_num": 835,
        "line_str": "block|} comment specifier|public specifier|static",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(881, 883)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 575,
        "line_str": "init|= name|Math operator|. name|round",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(891, 914)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 604,
        "line_str": "name|result return|; block|} comment",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(922, 926)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 571,
        "line_str": "parameter_list|) block|{ name|long name|result",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(891, 914)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 596,
        "line_str": "operator|new name|ArithmeticException argument_list|( literal|\"result too large to represent in a long integer\"",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(917, 921)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 592,
        "line_str": "name|MAX_VALUE condition|) block|{ throw|throw",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(891, 914)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 588,
        "line_str": "name|result operator|== name|Long operator|.",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(891, 914)"
      },
      {
        "commit_hash": "430f487ebc550a07ed2f06a758cd2dd480669fc9",
        "line_num": 1140,
        "line_str": "name|i operator|< literal|10 condition|;",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(1363, 1367)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 584,
        "line_str": "argument_list|) decl_stmt|; if|if condition|(",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(891, 914)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 580,
        "line_str": "name|factorialDouble argument_list|( name|n argument_list|)",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(891, 914)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 675,
        "line_str": "argument_list|) throw|; block|} name|double",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(996, 998)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 576,
        "line_str": "name|Math operator|. name|round argument_list|(",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(891, 914)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 572,
        "line_str": "block|{ name|long name|result init|=",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(891, 914)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 601,
        "line_str": "throw|; block|} return|return name|result",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(922, 926)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 630,
        "line_str": "argument_list|) throw|; block|} return|return",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(951, 953)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 597,
        "line_str": "name|ArithmeticException argument_list|( literal|\"result too large to represent in a long integer\" argument_list|)",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(917, 921)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 589,
        "line_str": "operator|== name|Long operator|. name|MAX_VALUE",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(891, 914)"
      },
      {
        "commit_hash": "430f487ebc550a07ed2f06a758cd2dd480669fc9",
        "line_num": 1141,
        "line_str": "operator|< literal|10 condition|; name|i",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(1363, 1367)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 585,
        "line_str": "decl_stmt|; if|if condition|( name|result",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(891, 914)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 581,
        "line_str": "argument_list|( name|n argument_list|) argument_list|)",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(891, 914)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 676,
        "line_str": "throw|; block|} name|double name|logSum",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(996, 998)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 577,
        "line_str": "operator|. name|round argument_list|( name|factorialDouble",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(891, 914)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 573,
        "line_str": "name|long name|result init|= name|Math",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(891, 914)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 602,
        "line_str": "block|} return|return name|result return|;",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(922, 926)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 631,
        "line_str": "throw|; block|} return|return name|Math",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(951, 953)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 598,
        "line_str": "argument_list|( literal|\"result too large to represent in a long integer\" argument_list|) throw|;",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(917, 921)"
      }
    ]
  },
  {
    "id": 10120,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["20786a617657c0c20315005c621052a2735dfe67"],
    "fix_commit_hash": "a96e597894562c2cf01fc678f6c435d65ccc31c5",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 743,
        "line_str": "literal|0 condition|) block|{ return|return",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1048, 1056)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 742,
        "line_str": "operator|== literal|0 condition|) block|{",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1048, 1056)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 741,
        "line_str": "name|v operator|== literal|0 condition|)",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1048, 1056)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 740,
        "line_str": "operator|* name|v operator|== literal|0",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1048, 1056)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 739,
        "line_str": "name|u operator|* name|v operator|==",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1048, 1056)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 738,
        "line_str": "condition|( name|u operator|* name|v",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1048, 1056)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 737,
        "line_str": "if|if condition|( name|u operator|*",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1048, 1056)"
      },
      {
        "commit_hash": "b1ade04fc274a2030fcf1df2c760755eeb83bf1b",
        "line_num": 736,
        "line_str": "block|{ if|if condition|( name|u",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1048, 1056)"
      }
    ]
  },
  {
    "id": 10121,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["0a904461932f2c0455611e77ec6a8d8aced2980b"],
    "fix_commit_hash": "e6449cccdeaba96ffba4c27db322c5c3d5c18662",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 444,
        "line_str": "operator|== name|Double operator|. name|doubleToRawLongBits",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(666, 704)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 440,
        "line_str": "name|doubleToRawLongBits argument_list|( name|real argument_list|)",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(666, 704)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 469,
        "line_str": "operator|. name|getImaginary argument_list|() argument_list|)",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(666, 704)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 436,
        "line_str": "operator|= operator|( name|Double operator|.",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(666, 704)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 465,
        "line_str": "operator|. name|doubleToRawLongBits argument_list|( name|rhs",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(666, 704)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 461,
        "line_str": "name|imaginary argument_list|) operator|== name|Double",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(666, 704)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 457,
        "line_str": "name|Double operator|. name|doubleToRawLongBits argument_list|(",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(666, 704)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 453,
        "line_str": "argument_list|) operator|) operator|&& operator|(",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(666, 704)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 449,
        "line_str": "name|rhs operator|. name|getReal argument_list|()",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(666, 704)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 445,
        "line_str": "name|Double operator|. name|doubleToRawLongBits argument_list|(",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(666, 704)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 441,
        "line_str": "argument_list|( name|real argument_list|) operator|==",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(666, 704)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 470,
        "line_str": "name|getImaginary argument_list|() argument_list|) operator|)",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(666, 704)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 437,
        "line_str": "operator|( name|Double operator|. name|doubleToRawLongBits",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(666, 704)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 466,
        "line_str": "name|doubleToRawLongBits argument_list|( name|rhs operator|.",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(666, 704)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 462,
        "line_str": "argument_list|) operator|== name|Double operator|.",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(666, 704)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 458,
        "line_str": "operator|. name|doubleToRawLongBits argument_list|( name|imaginary",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(666, 704)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 454,
        "line_str": "operator|) operator|&& operator|( name|Double",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(666, 704)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 450,
        "line_str": "operator|. name|getReal argument_list|() argument_list|)",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(666, 704)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 446,
        "line_str": "operator|. name|doubleToRawLongBits argument_list|( name|rhs",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(666, 704)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 442,
        "line_str": "name|real argument_list|) operator|== name|Double",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(666, 704)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 471,
        "line_str": "argument_list|() argument_list|) operator|) expr_stmt|;",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(666, 704)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 438,
        "line_str": "name|Double operator|. name|doubleToRawLongBits argument_list|(",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(666, 704)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 467,
        "line_str": "argument_list|( name|rhs operator|. name|getImaginary",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(666, 704)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 463,
        "line_str": "operator|== name|Double operator|. name|doubleToRawLongBits",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(666, 704)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 459,
        "line_str": "name|doubleToRawLongBits argument_list|( name|imaginary argument_list|)",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(666, 704)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 455,
        "line_str": "operator|&& operator|( name|Double operator|.",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(666, 704)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 451,
        "line_str": "name|getReal argument_list|() argument_list|) operator|)",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(666, 704)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 447,
        "line_str": "name|doubleToRawLongBits argument_list|( name|rhs operator|.",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(666, 704)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 443,
        "line_str": "argument_list|) operator|== name|Double operator|.",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(666, 704)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 472,
        "line_str": "argument_list|) operator|) expr_stmt|; block|}",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(666, 704)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 439,
        "line_str": "operator|. name|doubleToRawLongBits argument_list|( name|real",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(666, 704)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 468,
        "line_str": "name|rhs operator|. name|getImaginary argument_list|()",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(666, 704)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 435,
        "line_str": "name|ret operator|= operator|( name|Double",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(666, 704)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 464,
        "line_str": "name|Double operator|. name|doubleToRawLongBits argument_list|(",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(666, 704)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 460,
        "line_str": "argument_list|( name|imaginary argument_list|) operator|==",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(666, 704)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 456,
        "line_str": "operator|( name|Double operator|. name|doubleToRawLongBits",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(666, 704)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 452,
        "line_str": "argument_list|() argument_list|) operator|) operator|&&",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(666, 704)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 448,
        "line_str": "argument_list|( name|rhs operator|. name|getReal",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(666, 704)"
      }
    ]
  },
  {
    "id": 10122,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": ["4f1e69b5313761cb95909359a408d13e6aa29635"],
    "fix_commit_hash": "ed492bd0c5c5c3a0258a65cb31cc8723d8f011fd",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "ff69ef1cc25034ce8fd11838ab4478a7a0b048f1",
        "line_num": 375,
        "line_str": "if|if condition|( name|yMin operator|*",
        "file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_line_num": "range(372, 380)"
      },
      {
        "commit_hash": "ff69ef1cc25034ce8fd11838ab4478a7a0b048f1",
        "line_num": 425,
        "line_str": "argument_list|, name|yMin argument_list|) return|;",
        "file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_line_num": "range(425, 428)"
      },
      {
        "commit_hash": "4f1e69b5313761cb95909359a408d13e6aa29635",
        "line_num": 190,
        "line_str": "block|{ throw|throw operator|new name|IllegalArgumentException",
        "file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_line_num": "range(380, 384)"
      },
      {
        "commit_hash": "ff69ef1cc25034ce8fd11838ab4478a7a0b048f1",
        "line_num": 413,
        "line_str": "return|return name|solve argument_list|( name|min",
        "file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_line_num": "range(409, 414)"
      },
      {
        "commit_hash": "ff69ef1cc25034ce8fd11838ab4478a7a0b048f1",
        "line_num": 409,
        "line_str": "argument_list|) throw|; block|} comment",
        "file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_line_num": "range(409, 414)"
      },
      {
        "commit_hash": "ff69ef1cc25034ce8fd11838ab4478a7a0b048f1",
        "line_num": 376,
        "line_str": "condition|( name|yMin operator|* name|yMax",
        "file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_line_num": "range(372, 380)"
      },
      {
        "commit_hash": "ff69ef1cc25034ce8fd11838ab4478a7a0b048f1",
        "line_num": 372,
        "line_str": "argument_list|) decl_stmt|; comment if|if",
        "file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_line_num": "range(372, 380)"
      },
      {
        "commit_hash": "ff69ef1cc25034ce8fd11838ab4478a7a0b048f1",
        "line_num": 426,
        "line_str": "name|yMin argument_list|) return|; block|}",
        "file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_line_num": "range(425, 428)"
      },
      {
        "commit_hash": "ff69ef1cc25034ce8fd11838ab4478a7a0b048f1",
        "line_num": 352,
        "line_str": "argument_list|) expr_stmt|; name|double name|yMin",
        "file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_line_num": "range(352, 354)"
      },
      {
        "commit_hash": "4f1e69b5313761cb95909359a408d13e6aa29635",
        "line_num": 187,
        "line_str": "operator|>= literal|0 condition|) block|{",
        "file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_line_num": "range(380, 384)"
      },
      {
        "commit_hash": "ff69ef1cc25034ce8fd11838ab4478a7a0b048f1",
        "line_num": 410,
        "line_str": "throw|; block|} comment return|return",
        "file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_line_num": "range(409, 414)"
      },
      {
        "commit_hash": "ff69ef1cc25034ce8fd11838ab4478a7a0b048f1",
        "line_num": 377,
        "line_str": "name|yMin operator|* name|yMax operator|>=",
        "file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_line_num": "range(372, 380)"
      },
      {
        "commit_hash": "ff69ef1cc25034ce8fd11838ab4478a7a0b048f1",
        "line_num": 373,
        "line_str": "decl_stmt|; comment if|if condition|(",
        "file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_line_num": "range(372, 380)"
      },
      {
        "commit_hash": "ff69ef1cc25034ce8fd11838ab4478a7a0b048f1",
        "line_num": 427,
        "line_str": "argument_list|) return|; block|} comment",
        "file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_line_num": "range(425, 428)"
      },
      {
        "commit_hash": "ff69ef1cc25034ce8fd11838ab4478a7a0b048f1",
        "line_num": 353,
        "line_str": "expr_stmt|; name|double name|yMin init|=",
        "file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_line_num": "range(352, 354)"
      },
      {
        "commit_hash": "4f1e69b5313761cb95909359a408d13e6aa29635",
        "line_num": 188,
        "line_str": "literal|0 condition|) block|{ throw|throw",
        "file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_line_num": "range(380, 384)"
      },
      {
        "commit_hash": "ff69ef1cc25034ce8fd11838ab4478a7a0b048f1",
        "line_num": 411,
        "line_str": "block|} comment return|return name|solve",
        "file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_line_num": "range(409, 414)"
      },
      {
        "commit_hash": "ff69ef1cc25034ce8fd11838ab4478a7a0b048f1",
        "line_num": 378,
        "line_str": "operator|* name|yMax operator|>= literal|0",
        "file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_line_num": "range(372, 380)"
      },
      {
        "commit_hash": "ff69ef1cc25034ce8fd11838ab4478a7a0b048f1",
        "line_num": 374,
        "line_str": "comment if|if condition|( name|yMin",
        "file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_line_num": "range(372, 380)"
      },
      {
        "commit_hash": "4f1e69b5313761cb95909359a408d13e6aa29635",
        "line_num": 189,
        "line_str": "condition|) block|{ throw|throw operator|new",
        "file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_line_num": "range(380, 384)"
      },
      {
        "commit_hash": "ff69ef1cc25034ce8fd11838ab4478a7a0b048f1",
        "line_num": 412,
        "line_str": "comment return|return name|solve argument_list|(",
        "file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_line_num": "range(409, 414)"
      },
      {
        "commit_hash": "ff69ef1cc25034ce8fd11838ab4478a7a0b048f1",
        "line_num": 379,
        "line_str": "name|yMax operator|>= literal|0 condition|)",
        "file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_file_path": "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "input_line_num": "range(372, 380)"
      }
    ]
  },
  {
    "id": 10123,
    "repo_name": "mockito/mockito",
    "bug_commit_hash": ["ab9e9f347705bf9f4ebace4b07b085088275a256"],
    "fix_commit_hash": "5a03bf5d0c9aedac9cfbf074833167c1eca6439f",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "dc2bea8fe7c5440bbcacf8a36cc03da512d26aa1",
        "line_num": 300,
        "line_str": "else|else block|{ name|contextualActualTypeParameters operator|.",
        "file_path": "src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java",
        "input_file_path": "src/org/mockito/internal/util/reflection/GenericMetadataSupport.java",
        "input_line_num": "range(213, 217)"
      },
      {
        "commit_hash": "dc2bea8fe7c5440bbcacf8a36cc03da512d26aa1",
        "line_num": 299,
        "line_str": "block|} else|else block|{ name|contextualActualTypeParameters",
        "file_path": "src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java",
        "input_file_path": "src/org/mockito/internal/util/reflection/GenericMetadataSupport.java",
        "input_line_num": "range(213, 217)"
      },
      {
        "commit_hash": "dc2bea8fe7c5440bbcacf8a36cc03da512d26aa1",
        "line_num": 298,
        "line_str": "expr_stmt|; block|} else|else block|{",
        "file_path": "src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java",
        "input_file_path": "src/org/mockito/internal/util/reflection/GenericMetadataSupport.java",
        "input_line_num": "range(213, 217)"
      },
      {
        "commit_hash": "dc2bea8fe7c5440bbcacf8a36cc03da512d26aa1",
        "line_num": 297,
        "line_str": "argument_list|) expr_stmt|; block|} else|else",
        "file_path": "src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java",
        "input_file_path": "src/org/mockito/internal/util/reflection/GenericMetadataSupport.java",
        "input_line_num": "range(213, 217)"
      },
      {
        "commit_hash": "6eaf9a247dcfb68b88fec1f2a28808f2bfc19436",
        "line_num": 167,
        "line_str": "block|{ interface|interface name|UpperBoundedTypeWithClass parameter_list|<",
        "file_path": "test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java",
        "input_file_path": "test/org/mockito/internal/util/reflection/GenericMetadataSupportTest.java",
        "input_line_num": "range(192, 193)"
      },
      {
        "commit_hash": "55bfac6da735fbda1711e4a5ba53dd324ffa0f99",
        "line_num": 197,
        "line_str": "name|GenericMetadataSupportTest block|{ interface|interface name|UpperBoundedTypeWithClass",
        "file_path": "test/org/mockito/internal/util/reflection/GenericMetadataSupportTest.java",
        "input_file_path": "test/org/mockito/internal/util/reflection/GenericMetadataSupportTest.java",
        "input_line_num": "range(191, 192)"
      }
    ]
  },
  {
    "id": 10124,
    "repo_name": "JodaOrg/joda-time",
    "bug_commit_hash": ["8612f9e5b88c1bea933ef9ab1e431f5db3006b48"],
    "fix_commit_hash": "9a62b06be5d0df8e833ff8583398cca386608cac",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "8612f9e5b88c1bea933ef9ab1e431f5db3006b48",
        "line_num": 454,
        "line_str": "block|{ if|if condition|( name|durationField",
        "file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_line_num": "range(452, 467)"
      },
      {
        "commit_hash": "b86efe73e72ece8e5ceeed48d05228aa1725c9ad",
        "line_num": 571,
        "line_str": "block|{ name|int name|compare init|=",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(569, 572)"
      },
      {
        "commit_hash": "8612f9e5b88c1bea933ef9ab1e431f5db3006b48",
        "line_num": 463,
        "line_str": "return|return literal|1 return|; block|}",
        "file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_line_num": "range(452, 467)"
      },
      {
        "commit_hash": "b86efe73e72ece8e5ceeed48d05228aa1725c9ad",
        "line_num": 629,
        "line_str": "name|compare operator|== literal|0 condition|)",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(616, 619)"
      },
      {
        "commit_hash": "8612f9e5b88c1bea933ef9ab1e431f5db3006b48",
        "line_num": 459,
        "line_str": "name|isSupported argument_list|() condition|) block|{",
        "file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_line_num": "range(452, 467)"
      },
      {
        "commit_hash": "8612f9e5b88c1bea933ef9ab1e431f5db3006b48",
        "line_num": 455,
        "line_str": "if|if condition|( name|durationField operator|.",
        "file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_line_num": "range(452, 467)"
      },
      {
        "commit_hash": "8612f9e5b88c1bea933ef9ab1e431f5db3006b48",
        "line_num": 464,
        "line_str": "literal|1 return|; block|} return|return",
        "file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_line_num": "range(452, 467)"
      },
      {
        "commit_hash": "8612f9e5b88c1bea933ef9ab1e431f5db3006b48",
        "line_num": 460,
        "line_str": "argument_list|() condition|) block|{ return|return",
        "file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_line_num": "range(452, 467)"
      },
      {
        "commit_hash": "b86efe73e72ece8e5ceeed48d05228aa1725c9ad",
        "line_num": 630,
        "line_str": "operator|== literal|0 condition|) block|{",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(616, 619)"
      },
      {
        "commit_hash": "8612f9e5b88c1bea933ef9ab1e431f5db3006b48",
        "line_num": 456,
        "line_str": "condition|( name|durationField operator|. name|isSupported",
        "file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_line_num": "range(452, 467)"
      },
      {
        "commit_hash": "8612f9e5b88c1bea933ef9ab1e431f5db3006b48",
        "line_num": 452,
        "line_str": "name|durationField parameter_list|) block|{ if|if",
        "file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_line_num": "range(452, 467)"
      },
      {
        "commit_hash": "8612f9e5b88c1bea933ef9ab1e431f5db3006b48",
        "line_num": 465,
        "line_str": "return|; block|} return|return literal|0",
        "file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_line_num": "range(452, 467)"
      },
      {
        "commit_hash": "b86efe73e72ece8e5ceeed48d05228aa1725c9ad",
        "line_num": 569,
        "line_str": "literal|0 condition|) block|{ name|int",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(569, 572)"
      },
      {
        "commit_hash": "8612f9e5b88c1bea933ef9ab1e431f5db3006b48",
        "line_num": 461,
        "line_str": "condition|) block|{ return|return literal|1",
        "file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_line_num": "range(452, 467)"
      },
      {
        "commit_hash": "b86efe73e72ece8e5ceeed48d05228aa1725c9ad",
        "line_num": 631,
        "line_str": "literal|0 condition|) block|{ if|if",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(616, 619)"
      },
      {
        "commit_hash": "8612f9e5b88c1bea933ef9ab1e431f5db3006b48",
        "line_num": 457,
        "line_str": "name|durationField operator|. name|isSupported argument_list|()",
        "file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_line_num": "range(452, 467)"
      },
      {
        "commit_hash": "8612f9e5b88c1bea933ef9ab1e431f5db3006b48",
        "line_num": 453,
        "line_str": "parameter_list|) block|{ if|if condition|(",
        "file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_line_num": "range(452, 467)"
      },
      {
        "commit_hash": "8612f9e5b88c1bea933ef9ab1e431f5db3006b48",
        "line_num": 466,
        "line_str": "block|} return|return literal|0 return|;",
        "file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_line_num": "range(452, 467)"
      },
      {
        "commit_hash": "b86efe73e72ece8e5ceeed48d05228aa1725c9ad",
        "line_num": 570,
        "line_str": "condition|) block|{ name|int name|compare",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(569, 572)"
      },
      {
        "commit_hash": "8612f9e5b88c1bea933ef9ab1e431f5db3006b48",
        "line_num": 462,
        "line_str": "block|{ return|return literal|1 return|;",
        "file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_line_num": "range(452, 467)"
      },
      {
        "commit_hash": "8612f9e5b88c1bea933ef9ab1e431f5db3006b48",
        "line_num": 458,
        "line_str": "operator|. name|isSupported argument_list|() condition|)",
        "file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_line_num": "range(452, 467)"
      }
    ]
  },
  {
    "id": 10125,
    "repo_name": "JodaOrg/joda-time",
    "bug_commit_hash": ["01ed04f3a83f17e9947c83d04cb258430429789d"],
    "fix_commit_hash": "57eb4cbb9044771cd46a9eee0c62016618930226",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "01ed04f3a83f17e9947c83d04cb258430429789d",
        "line_num": 360,
        "line_str": "name|FALSE argument_list|) expr_stmt|; block|}",
        "file_path": "JodaTime/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_file_path": "src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_line_num": "range(348, 364)"
      },
      {
        "commit_hash": "01ed04f3a83f17e9947c83d04cb258430429789d",
        "line_num": 356,
        "line_str": "name|set argument_list|( name|Boolean operator|.",
        "file_path": "JodaTime/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_file_path": "src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_line_num": "range(348, 364)"
      },
      {
        "commit_hash": "01ed04f3a83f17e9947c83d04cb258430429789d",
        "line_num": 352,
        "line_str": "static|static block|{ name|cVerbose operator|.",
        "file_path": "JodaTime/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_file_path": "src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_line_num": "range(348, 364)"
      },
      {
        "commit_hash": "01ed04f3a83f17e9947c83d04cb258430429789d",
        "line_num": 348,
        "line_str": "name|Boolean argument_list|> argument_list|() decl_stmt|;",
        "file_path": "JodaTime/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_file_path": "src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_line_num": "range(348, 364)"
      },
      {
        "commit_hash": "01ed04f3a83f17e9947c83d04cb258430429789d",
        "line_num": 361,
        "line_str": "argument_list|) expr_stmt|; block|} comment",
        "file_path": "JodaTime/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_file_path": "src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_line_num": "range(348, 364)"
      },
      {
        "commit_hash": "01ed04f3a83f17e9947c83d04cb258430429789d",
        "line_num": 357,
        "line_str": "argument_list|( name|Boolean operator|. name|FALSE",
        "file_path": "JodaTime/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_file_path": "src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_line_num": "range(348, 364)"
      },
      {
        "commit_hash": "01ed04f3a83f17e9947c83d04cb258430429789d",
        "line_num": 353,
        "line_str": "block|{ name|cVerbose operator|. name|set",
        "file_path": "JodaTime/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_file_path": "src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_line_num": "range(348, 364)"
      },
      {
        "commit_hash": "01ed04f3a83f17e9947c83d04cb258430429789d",
        "line_num": 349,
        "line_str": "argument_list|> argument_list|() decl_stmt|; static|static",
        "file_path": "JodaTime/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_file_path": "src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_line_num": "range(348, 364)"
      },
      {
        "commit_hash": "7d3c89246ef7d27f7796a79215f5be588c9ed9dd",
        "line_num": 261,
        "line_str": "argument_list|) expr_stmt|; block|} specifier|public",
        "file_path": "JodaTime/src/test/org/joda/time/tz/TestCompiler.java",
        "input_file_path": "src/test/java/org/joda/time/tz/TestCompiler.java",
        "input_line_num": "range(299, 302)"
      },
      {
        "commit_hash": "01ed04f3a83f17e9947c83d04cb258430429789d",
        "line_num": 362,
        "line_str": "expr_stmt|; block|} comment specifier|public",
        "file_path": "JodaTime/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_file_path": "src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_line_num": "range(348, 364)"
      },
      {
        "commit_hash": "01ed04f3a83f17e9947c83d04cb258430429789d",
        "line_num": 358,
        "line_str": "name|Boolean operator|. name|FALSE argument_list|)",
        "file_path": "JodaTime/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_file_path": "src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_line_num": "range(348, 364)"
      },
      {
        "commit_hash": "01ed04f3a83f17e9947c83d04cb258430429789d",
        "line_num": 354,
        "line_str": "name|cVerbose operator|. name|set argument_list|(",
        "file_path": "JodaTime/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_file_path": "src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_line_num": "range(348, 364)"
      },
      {
        "commit_hash": "01ed04f3a83f17e9947c83d04cb258430429789d",
        "line_num": 350,
        "line_str": "argument_list|() decl_stmt|; static|static block|{",
        "file_path": "JodaTime/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_file_path": "src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_line_num": "range(348, 364)"
      },
      {
        "commit_hash": "7d3c89246ef7d27f7796a79215f5be588c9ed9dd",
        "line_num": 262,
        "line_str": "expr_stmt|; block|} specifier|public name|void",
        "file_path": "JodaTime/src/test/org/joda/time/tz/TestCompiler.java",
        "input_file_path": "src/test/java/org/joda/time/tz/TestCompiler.java",
        "input_line_num": "range(299, 302)"
      },
      {
        "commit_hash": "01ed04f3a83f17e9947c83d04cb258430429789d",
        "line_num": 363,
        "line_str": "block|} comment specifier|public specifier|static",
        "file_path": "JodaTime/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_file_path": "src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_line_num": "range(348, 364)"
      },
      {
        "commit_hash": "01ed04f3a83f17e9947c83d04cb258430429789d",
        "line_num": 359,
        "line_str": "operator|. name|FALSE argument_list|) expr_stmt|;",
        "file_path": "JodaTime/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_file_path": "src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_line_num": "range(348, 364)"
      },
      {
        "commit_hash": "01ed04f3a83f17e9947c83d04cb258430429789d",
        "line_num": 355,
        "line_str": "operator|. name|set argument_list|( name|Boolean",
        "file_path": "JodaTime/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_file_path": "src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_line_num": "range(348, 364)"
      },
      {
        "commit_hash": "01ed04f3a83f17e9947c83d04cb258430429789d",
        "line_num": 351,
        "line_str": "decl_stmt|; static|static block|{ name|cVerbose",
        "file_path": "JodaTime/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_file_path": "src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_line_num": "range(348, 364)"
      },
      {
        "commit_hash": "7d3c89246ef7d27f7796a79215f5be588c9ed9dd",
        "line_num": 263,
        "line_str": "block|} specifier|public name|void name|testCompile",
        "file_path": "JodaTime/src/test/org/joda/time/tz/TestCompiler.java",
        "input_file_path": "src/test/java/org/joda/time/tz/TestCompiler.java",
        "input_line_num": "range(299, 302)"
      }
    ]
  },
  {
    "id": 10126,
    "repo_name": "JodaOrg/joda-time",
    "bug_commit_hash": ["f574d59dd322be0df10694c296bbdff9a7a2fba2"],
    "fix_commit_hash": "0cefc4c212e92e5dccdfa658785c419483317558",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "f574d59dd322be0df10694c296bbdff9a7a2fba2",
        "line_num": 391,
        "line_str": "condition|( name|total operator|/ name|scalar",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(391, 395)"
      },
      {
        "commit_hash": "f574d59dd322be0df10694c296bbdff9a7a2fba2",
        "line_num": 358,
        "line_str": "condition|( name|scalar condition|) block|{",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(356, 360)"
      },
      {
        "commit_hash": "f574d59dd322be0df10694c296bbdff9a7a2fba2",
        "line_num": 325,
        "line_str": "name|ArithmeticException argument_list|( literal|\"The calculation caused an overflow: \" operator|+",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(324, 328)"
      },
      {
        "commit_hash": "f574d59dd322be0df10694c296bbdff9a7a2fba2",
        "line_num": 387,
        "line_str": "operator|* name|scalar decl_stmt|; if|if",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(385, 389)"
      },
      {
        "commit_hash": "f574d59dd322be0df10694c296bbdff9a7a2fba2",
        "line_num": 354,
        "line_str": "name|scalar parameter_list|) block|{ switch|switch",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(351, 355)"
      },
      {
        "commit_hash": "f574d59dd322be0df10694c296bbdff9a7a2fba2",
        "line_num": 408,
        "line_str": "operator|+ name|scalar argument_list|) throw|;",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(406, 410)"
      },
      {
        "commit_hash": "f574d59dd322be0df10694c296bbdff9a7a2fba2",
        "line_num": 400,
        "line_str": "operator|new name|ArithmeticException argument_list|( literal|\"The calculation caused an overflow: \"",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(400, 404)"
      },
      {
        "commit_hash": "f574d59dd322be0df10694c296bbdff9a7a2fba2",
        "line_num": 363,
        "line_str": "operator|- literal|1 case|: return|return",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(363, 366)"
      },
      {
        "commit_hash": "f574d59dd322be0df10694c296bbdff9a7a2fba2",
        "line_num": 392,
        "line_str": "name|total operator|/ name|scalar operator|!=",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(391, 395)"
      },
      {
        "commit_hash": "f574d59dd322be0df10694c296bbdff9a7a2fba2",
        "line_num": 359,
        "line_str": "name|scalar condition|) block|{ case|case",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(356, 360)"
      },
      {
        "commit_hash": "f574d59dd322be0df10694c296bbdff9a7a2fba2",
        "line_num": 326,
        "line_str": "argument_list|( literal|\"The calculation caused an overflow: \" operator|+ name|val1",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(324, 328)"
      },
      {
        "commit_hash": "f574d59dd322be0df10694c296bbdff9a7a2fba2",
        "line_num": 388,
        "line_str": "name|scalar decl_stmt|; if|if condition|(",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(385, 389)"
      },
      {
        "commit_hash": "f574d59dd322be0df10694c296bbdff9a7a2fba2",
        "line_num": 351,
        "line_str": "name|val1 parameter_list|, name|int name|scalar",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(351, 355)"
      },
      {
        "commit_hash": "f574d59dd322be0df10694c296bbdff9a7a2fba2",
        "line_num": 409,
        "line_str": "name|scalar argument_list|) throw|; block|}",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(406, 410)"
      },
      {
        "commit_hash": "f574d59dd322be0df10694c296bbdff9a7a2fba2",
        "line_num": 401,
        "line_str": "name|ArithmeticException argument_list|( literal|\"The calculation caused an overflow: \" operator|+",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(400, 404)"
      },
      {
        "commit_hash": "f574d59dd322be0df10694c296bbdff9a7a2fba2",
        "line_num": 364,
        "line_str": "literal|1 case|: return|return operator|-",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(363, 366)"
      },
      {
        "commit_hash": "f574d59dd322be0df10694c296bbdff9a7a2fba2",
        "line_num": 393,
        "line_str": "operator|/ name|scalar operator|!= name|val1",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(391, 395)"
      },
      {
        "commit_hash": "f574d59dd322be0df10694c296bbdff9a7a2fba2",
        "line_num": 327,
        "line_str": "literal|\"The calculation caused an overflow: \" operator|+ name|val1 operator|+",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(324, 328)"
      },
      {
        "commit_hash": "f574d59dd322be0df10694c296bbdff9a7a2fba2",
        "line_num": 356,
        "line_str": "block|{ switch|switch condition|( name|scalar",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(356, 360)"
      },
      {
        "commit_hash": "f574d59dd322be0df10694c296bbdff9a7a2fba2",
        "line_num": 385,
        "line_str": "init|= name|val1 operator|* name|scalar",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(385, 389)"
      },
      {
        "commit_hash": "f574d59dd322be0df10694c296bbdff9a7a2fba2",
        "line_num": 352,
        "line_str": "parameter_list|, name|int name|scalar parameter_list|)",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(351, 355)"
      },
      {
        "commit_hash": "f574d59dd322be0df10694c296bbdff9a7a2fba2",
        "line_num": 406,
        "line_str": "operator|+ literal|\" * \" operator|+ name|scalar",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(406, 410)"
      },
      {
        "commit_hash": "f574d59dd322be0df10694c296bbdff9a7a2fba2",
        "line_num": 402,
        "line_str": "argument_list|( literal|\"The calculation caused an overflow: \" operator|+ name|val1",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(400, 404)"
      },
      {
        "commit_hash": "f574d59dd322be0df10694c296bbdff9a7a2fba2",
        "line_num": 365,
        "line_str": "case|: return|return operator|- name|val1",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(363, 366)"
      },
      {
        "commit_hash": "f574d59dd322be0df10694c296bbdff9a7a2fba2",
        "line_num": 394,
        "line_str": "name|scalar operator|!= name|val1 condition|)",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(391, 395)"
      },
      {
        "commit_hash": "f574d59dd322be0df10694c296bbdff9a7a2fba2",
        "line_num": 357,
        "line_str": "switch|switch condition|( name|scalar condition|)",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(356, 360)"
      },
      {
        "commit_hash": "f574d59dd322be0df10694c296bbdff9a7a2fba2",
        "line_num": 324,
        "line_str": "operator|new name|ArithmeticException argument_list|( literal|\"The calculation caused an overflow: \"",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(324, 328)"
      },
      {
        "commit_hash": "f574d59dd322be0df10694c296bbdff9a7a2fba2",
        "line_num": 386,
        "line_str": "name|val1 operator|* name|scalar decl_stmt|;",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(385, 389)"
      },
      {
        "commit_hash": "f574d59dd322be0df10694c296bbdff9a7a2fba2",
        "line_num": 353,
        "line_str": "name|int name|scalar parameter_list|) block|{",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(351, 355)"
      },
      {
        "commit_hash": "f574d59dd322be0df10694c296bbdff9a7a2fba2",
        "line_num": 407,
        "line_str": "literal|\" * \" operator|+ name|scalar argument_list|)",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(406, 410)"
      },
      {
        "commit_hash": "f574d59dd322be0df10694c296bbdff9a7a2fba2",
        "line_num": 403,
        "line_str": "literal|\"The calculation caused an overflow: \" operator|+ name|val1 operator|+",
        "file_path": "JodaTime/src/java/org/joda/time/field/FieldUtils.java",
        "input_file_path": "src/main/java/org/joda/time/field/FieldUtils.java",
        "input_line_num": "range(400, 404)"
      }
    ]
  },
  {
    "id": 10127,
    "repo_name": "JodaOrg/joda-time",
    "bug_commit_hash": ["843d7b8f07f4899ad153ffabc25e09a6c0e897c7"],
    "fix_commit_hash": "706513d59425e7a9dc6bdb972f25b03b02e48558",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "843d7b8f07f4899ad153ffabc25e09a6c0e897c7",
        "line_num": 1527,
        "line_str": "argument_list|, name|iPivotYear argument_list|, name|iDefaultYear",
        "file_path": "JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_line_num": "range(1530, 1534)"
      },
      {
        "commit_hash": "843d7b8f07f4899ad153ffabc25e09a6c0e897c7",
        "line_num": 1528,
        "line_str": "name|iPivotYear argument_list|, name|iDefaultYear argument_list|)",
        "file_path": "JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_line_num": "range(1530, 1534)"
      },
      {
        "commit_hash": "843d7b8f07f4899ad153ffabc25e09a6c0e897c7",
        "line_num": 1529,
        "line_str": "argument_list|, name|iDefaultYear argument_list|) decl_stmt|;",
        "file_path": "JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_line_num": "range(1530, 1534)"
      },
      {
        "commit_hash": "843d7b8f07f4899ad153ffabc25e09a6c0e897c7",
        "line_num": 1530,
        "line_str": "name|iDefaultYear argument_list|) decl_stmt|; name|int",
        "file_path": "JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_line_num": "range(1530, 1534)"
      }
    ]
  },
  {
    "id": 10128,
    "repo_name": "JodaOrg/joda-time",
    "bug_commit_hash": ["3ba9ba799b3261b7332a467a88be142c83b298fd"],
    "fix_commit_hash": "8612f9e5b88c1bea933ef9ab1e431f5db3006b48",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "b86efe73e72ece8e5ceeed48d05228aa1725c9ad",
        "line_num": 1359,
        "line_str": "block|{ name|DurationField name|rangeField init|=",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(1357, 1360)"
      },
      {
        "commit_hash": "b86efe73e72ece8e5ceeed48d05228aa1725c9ad",
        "line_num": 591,
        "line_str": "literal|0 operator|&& name|loopUnitField operator|.",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(584, 600)"
      },
      {
        "commit_hash": "0e07ac6b2cff63550d7df336355ca63cc05aa40b",
        "line_num": 427,
        "line_str": "block|{ return|return literal|0 return|;",
        "file_path": "JodaTime/src/java/org/joda/time/chrono/UnsupportedDurationField.java",
        "input_file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_line_num": "range(452, 455)"
      },
      {
        "commit_hash": "b86efe73e72ece8e5ceeed48d05228aa1725c9ad",
        "line_num": 587,
        "line_str": "operator||| operator|( name|compare operator|!=",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(584, 600)"
      },
      {
        "commit_hash": "b86efe73e72ece8e5ceeed48d05228aa1725c9ad",
        "line_num": 794,
        "line_str": "literal|\"Types array must not contain duplicate: \" operator|+ name|loopType operator|.",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(793, 795)"
      },
      {
        "commit_hash": "b86efe73e72ece8e5ceeed48d05228aa1725c9ad",
        "line_num": 662,
        "line_str": "argument_list|( literal|\"Types array must not contain duplicate: \" operator|+ name|loopType",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(662, 664)"
      },
      {
        "commit_hash": "b86efe73e72ece8e5ceeed48d05228aa1725c9ad",
        "line_num": 596,
        "line_str": "argument_list|() operator|== literal|false operator|)",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(584, 600)"
      },
      {
        "commit_hash": "b86efe73e72ece8e5ceeed48d05228aa1725c9ad",
        "line_num": 592,
        "line_str": "operator|&& name|loopUnitField operator|. name|isSupported",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(584, 600)"
      },
      {
        "commit_hash": "b86efe73e72ece8e5ceeed48d05228aa1725c9ad",
        "line_num": 588,
        "line_str": "operator|( name|compare operator|!= literal|0",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(584, 600)"
      },
      {
        "commit_hash": "b86efe73e72ece8e5ceeed48d05228aa1725c9ad",
        "line_num": 584,
        "line_str": "name|compare operator|< literal|0 operator|||",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(584, 600)"
      },
      {
        "commit_hash": "b86efe73e72ece8e5ceeed48d05228aa1725c9ad",
        "line_num": 663,
        "line_str": "literal|\"Types array must not contain duplicate: \" operator|+ name|loopType operator|.",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(662, 664)"
      },
      {
        "commit_hash": "b86efe73e72ece8e5ceeed48d05228aa1725c9ad",
        "line_num": 597,
        "line_str": "operator|== literal|false operator|) condition|)",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(584, 600)"
      },
      {
        "commit_hash": "b86efe73e72ece8e5ceeed48d05228aa1725c9ad",
        "line_num": 593,
        "line_str": "name|loopUnitField operator|. name|isSupported argument_list|()",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(584, 600)"
      },
      {
        "commit_hash": "b86efe73e72ece8e5ceeed48d05228aa1725c9ad",
        "line_num": 589,
        "line_str": "name|compare operator|!= literal|0 operator|&&",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(584, 600)"
      },
      {
        "commit_hash": "b86efe73e72ece8e5ceeed48d05228aa1725c9ad",
        "line_num": 1357,
        "line_str": "literal|0 condition|) block|{ name|DurationField",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(1357, 1360)"
      },
      {
        "commit_hash": "0e07ac6b2cff63550d7df336355ca63cc05aa40b",
        "line_num": 425,
        "line_str": "name|durationField parameter_list|) block|{ return|return",
        "file_path": "JodaTime/src/java/org/joda/time/chrono/UnsupportedDurationField.java",
        "input_file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_line_num": "range(452, 455)"
      },
      {
        "commit_hash": "b86efe73e72ece8e5ceeed48d05228aa1725c9ad",
        "line_num": 585,
        "line_str": "operator|< literal|0 operator||| operator|(",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(584, 600)"
      },
      {
        "commit_hash": "b86efe73e72ece8e5ceeed48d05228aa1725c9ad",
        "line_num": 598,
        "line_str": "literal|false operator|) condition|) block|{",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(584, 600)"
      },
      {
        "commit_hash": "b86efe73e72ece8e5ceeed48d05228aa1725c9ad",
        "line_num": 594,
        "line_str": "operator|. name|isSupported argument_list|() operator|==",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(584, 600)"
      },
      {
        "commit_hash": "b86efe73e72ece8e5ceeed48d05228aa1725c9ad",
        "line_num": 590,
        "line_str": "operator|!= literal|0 operator|&& name|loopUnitField",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(584, 600)"
      },
      {
        "commit_hash": "b86efe73e72ece8e5ceeed48d05228aa1725c9ad",
        "line_num": 1358,
        "line_str": "condition|) block|{ name|DurationField name|rangeField",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(1357, 1360)"
      },
      {
        "commit_hash": "0e07ac6b2cff63550d7df336355ca63cc05aa40b",
        "line_num": 426,
        "line_str": "parameter_list|) block|{ return|return literal|0",
        "file_path": "JodaTime/src/java/org/joda/time/chrono/UnsupportedDurationField.java",
        "input_file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_line_num": "range(452, 455)"
      },
      {
        "commit_hash": "b86efe73e72ece8e5ceeed48d05228aa1725c9ad",
        "line_num": 586,
        "line_str": "literal|0 operator||| operator|( name|compare",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(584, 600)"
      },
      {
        "commit_hash": "b86efe73e72ece8e5ceeed48d05228aa1725c9ad",
        "line_num": 793,
        "line_str": "argument_list|( literal|\"Types array must not contain duplicate: \" operator|+ name|loopType",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(793, 795)"
      },
      {
        "commit_hash": "b86efe73e72ece8e5ceeed48d05228aa1725c9ad",
        "line_num": 599,
        "line_str": "operator|) condition|) block|{ throw|throw",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(584, 600)"
      },
      {
        "commit_hash": "b86efe73e72ece8e5ceeed48d05228aa1725c9ad",
        "line_num": 595,
        "line_str": "name|isSupported argument_list|() operator|== literal|false",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(584, 600)"
      }
    ]
  },
  {
    "id": 10129,
    "repo_name": "JodaOrg/joda-time",
    "bug_commit_hash": ["843d7b8f07f4899ad153ffabc25e09a6c0e897c7"],
    "fix_commit_hash": "1adb1e69863dcd1ff282692bf1452c422528eeb9",
    "language": ["java"],
    "inducing_commit_hash": [
      {
        "commit_hash": "5082337a4152e04ebd8077fd0b7fa28113a4d79e",
        "line_num": 1091,
        "line_str": "argument_list|() decl_stmt|; name|long name|instantLocal",
        "file_path": "JodaTime/src/java/org/joda/time/format/DateTimeFormatter.java",
        "input_file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_line_num": "range(1494, 1496)"
      },
      {
        "commit_hash": "5082337a4152e04ebd8077fd0b7fa28113a4d79e",
        "line_num": 1090,
        "line_str": "name|getChronology argument_list|() decl_stmt|; name|long",
        "file_path": "JodaTime/src/java/org/joda/time/format/DateTimeFormatter.java",
        "input_file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_line_num": "range(1494, 1496)"
      },
      {
        "commit_hash": "706513d59425e7a9dc6bdb972f25b03b02e48558",
        "line_num": 1553,
        "line_str": "argument_list|) argument_list|) decl_stmt|; name|int",
        "file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_line_num": "range(1530, 1542)"
      },
      {
        "commit_hash": "706513d59425e7a9dc6bdb972f25b03b02e48558",
        "line_num": 1552,
        "line_str": "name|instantLocal argument_list|) argument_list|) decl_stmt|;",
        "file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_line_num": "range(1530, 1542)"
      },
      {
        "commit_hash": "706513d59425e7a9dc6bdb972f25b03b02e48558",
        "line_num": 1551,
        "line_str": "argument_list|( name|instantLocal argument_list|) argument_list|)",
        "file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_line_num": "range(1530, 1542)"
      },
      {
        "commit_hash": "706513d59425e7a9dc6bdb972f25b03b02e48558",
        "line_num": 1550,
        "line_str": "name|get argument_list|( name|instantLocal argument_list|)",
        "file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_line_num": "range(1530, 1542)"
      },
      {
        "commit_hash": "706513d59425e7a9dc6bdb972f25b03b02e48558",
        "line_num": 1549,
        "line_str": "operator|. name|get argument_list|( name|instantLocal",
        "file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_line_num": "range(1530, 1542)"
      },
      {
        "commit_hash": "706513d59425e7a9dc6bdb972f25b03b02e48558",
        "line_num": 1548,
        "line_str": "argument_list|() operator|. name|get argument_list|(",
        "file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_line_num": "range(1530, 1542)"
      },
      {
        "commit_hash": "706513d59425e7a9dc6bdb972f25b03b02e48558",
        "line_num": 1547,
        "line_str": "name|year argument_list|() operator|. name|get",
        "file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_line_num": "range(1530, 1542)"
      },
      {
        "commit_hash": "706513d59425e7a9dc6bdb972f25b03b02e48558",
        "line_num": 1546,
        "line_str": "operator|. name|year argument_list|() operator|.",
        "file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_line_num": "range(1530, 1542)"
      },
      {
        "commit_hash": "706513d59425e7a9dc6bdb972f25b03b02e48558",
        "line_num": 1545,
        "line_str": "name|chrono operator|. name|year argument_list|()",
        "file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_line_num": "range(1530, 1542)"
      },
      {
        "commit_hash": "706513d59425e7a9dc6bdb972f25b03b02e48558",
        "line_num": 1544,
        "line_str": "argument_list|, name|chrono operator|. name|year",
        "file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_line_num": "range(1530, 1542)"
      },
      {
        "commit_hash": "706513d59425e7a9dc6bdb972f25b03b02e48558",
        "line_num": 1543,
        "line_str": "name|iPivotYear argument_list|, name|chrono operator|.",
        "file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_line_num": "range(1530, 1542)"
      },
      {
        "commit_hash": "706513d59425e7a9dc6bdb972f25b03b02e48558",
        "line_num": 1542,
        "line_str": "argument_list|, name|iPivotYear argument_list|, name|chrono",
        "file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_line_num": "range(1530, 1542)"
      }
    ]
  }
]
