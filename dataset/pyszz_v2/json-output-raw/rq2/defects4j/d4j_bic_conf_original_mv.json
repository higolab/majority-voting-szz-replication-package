[
  {
    "id": 10000,
    "repo_name": "apache/commons-cli",
    "bug_commit_hash": [
      "c0d5c79f572fc44c527e842f94bbbe9e4b12701d"
    ],
    "fix_commit_hash": "20002f7f4e971349a1c95dd3b05846c5b824b65c",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "147df44faa4eb12ffd4a0063fc3284f784ea67c8",
        "line_num": 71,
        "line_str": "str = str.substring(0, str.length() - 1);",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(69, 72)"
      },
      {
        "commit_hash": "147df44faa4eb12ffd4a0063fc3284f784ea67c8",
        "line_num": 70,
        "line_str": "{",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(69, 72)"
      },
      {
        "commit_hash": "147df44faa4eb12ffd4a0063fc3284f784ea67c8",
        "line_num": 69,
        "line_str": "if (str.endsWith(\"\\\"\"))",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(69, 72)"
      },
      {
        "commit_hash": "147df44faa4eb12ffd4a0063fc3284f784ea67c8",
        "line_num": 65,
        "line_str": "if (str.startsWith(\"\\\"\"))",
        "file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_file_path": "src/java/org/apache/commons/cli/Util.java",
        "input_line_num": "range(65, 66)"
      }
    ]
  },
  {
    "id": 10001,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": [
      "1a7fbd18b47c102152869c3b046b65ff0f12fc43"
    ],
    "fix_commit_hash": "0884a4cbef1c82153ef306477a12af0480385a35",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "1a7fbd18b47c102152869c3b046b65ff0f12fc43",
        "line_num": 1163,
        "line_str": "return valueCheck(n, BOOLEAN_RESULT_PREDICATE);",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(1345, 1346)"
      },
      {
        "commit_hash": "1a7fbd18b47c102152869c3b046b65ff0f12fc43",
        "line_num": 1225,
        "line_str": "return valueCheck(n, MAY_BE_STRING_PREDICATE);",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(1396, 1397)"
      },
      {
        "commit_hash": "1a7fbd18b47c102152869c3b046b65ff0f12fc43",
        "line_num": 1092,
        "line_str": "&& valueCheck(n.getLastChild(), p);",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(1271, 1273)"
      },
      {
        "commit_hash": "1a7fbd18b47c102152869c3b046b65ff0f12fc43",
        "line_num": 1091,
        "line_str": "return valueCheck(n.getFirstChild().getNext(), p)",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(1271, 1273)"
      },
      {
        "commit_hash": "1a7fbd18b47c102152869c3b046b65ff0f12fc43",
        "line_num": 1089,
        "line_str": "&& valueCheck(n.getLastChild(), p);",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(1268, 1270)"
      },
      {
        "commit_hash": "1a7fbd18b47c102152869c3b046b65ff0f12fc43",
        "line_num": 1088,
        "line_str": "return valueCheck(n.getFirstChild(), p)",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(1268, 1270)"
      },
      {
        "commit_hash": "1a7fbd18b47c102152869c3b046b65ff0f12fc43",
        "line_num": 1085,
        "line_str": "return valueCheck(n.getLastChild(), p);",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(1265, 1266)"
      },
      {
        "commit_hash": "1a7fbd18b47c102152869c3b046b65ff0f12fc43",
        "line_num": 1081,
        "line_str": "static boolean valueCheck(Node n, Predicate<Node> p) {",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(1261, 1262)"
      },
      {
        "commit_hash": "1a7fbd18b47c102152869c3b046b65ff0f12fc43",
        "line_num": 1111,
        "line_str": "return valueCheck(n, NUMBERIC_RESULT_PREDICATE);",
        "file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_file_path": "src/com/google/javascript/jscomp/NodeUtil.java",
        "input_line_num": "range(1292, 1293)"
      }
    ]
  },
  {
    "id": 10002,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": [
      "1be1c2636ef14071afa7da5cb8988972bd90149f"
    ],
    "fix_commit_hash": "67289ae4cbaba3ae70cd2e8fb92f3f2898039dfb",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "1be1c2636ef14071afa7da5cb8988972bd90149f",
        "line_num": 292,
        "line_str": "if (result != null) {",
        "file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/UnionType.java",
        "input_line_num": "range(292, 293)"
      },
      {
        "commit_hash": "1be1c2636ef14071afa7da5cb8988972bd90149f",
        "line_num": 151,
        "line_str": "numStr.getGreatestSubtype(ERROR_TYPE));",
        "file_path": "test/com/google/javascript/rhino/jstype/UnionTypeTest.java",
        "input_file_path": "test/com/google/javascript/rhino/jstype/UnionTypeTest.java",
        "input_line_num": "range(151, 152)"
      },
      {
        "commit_hash": "1be1c2636ef14071afa7da5cb8988972bd90149f",
        "line_num": 148,
        "line_str": "UnionType numStr = (UnionType) createUnionType(",
        "file_path": "test/com/google/javascript/rhino/jstype/UnionTypeTest.java",
        "input_file_path": "test/com/google/javascript/rhino/jstype/UnionTypeTest.java",
        "input_line_num": "range(148, 149)"
      }
    ]
  },
  {
    "id": 10003,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": [
      "87071ddf324c3885361f0375b84e15c7cd62283d"
    ],
    "fix_commit_hash": "0fb76a81bbdd8ab84a00b8be2099abfb83c88668",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "45f2bdf91ad3c2f2ac901c72efe9e26148b08d2b",
        "line_num": 266,
        "line_str": "// is still not provided.",
        "file_path": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
        "input_file_path": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
        "input_line_num": "range(326, 329)"
      },
      {
        "commit_hash": "45f2bdf91ad3c2f2ac901c72efe9e26148b08d2b",
        "line_num": 265,
        "line_str": "// leave this here this time and let it error next time if it",
        "file_path": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
        "input_file_path": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
        "input_line_num": "range(326, 329)"
      },
      {
        "commit_hash": "45f2bdf91ad3c2f2ac901c72efe9e26148b08d2b",
        "line_num": 264,
        "line_str": "// we will be doing a later pass that may error, so we can",
        "file_path": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
        "input_file_path": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
        "input_line_num": "range(326, 329)"
      },
      {
        "commit_hash": "45f2bdf91ad3c2f2ac901c72efe9e26148b08d2b",
        "line_num": 261,
        "line_str": "// Requires should be removed before runtime.  The one",
        "file_path": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
        "input_file_path": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
        "input_line_num": "range(324, 325)"
      }
    ]
  },
  {
    "id": 10004,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": [
      "b80dfd3b0e5e4b490b7afb469320d18bac4520b4"
    ],
    "fix_commit_hash": "4597738e8898f738c1f969fe90479728be81cc80",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 33,
        "line_str": "final static String EXTERNS =",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(33, 37)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2081,
        "line_str": "\"HangoutStarter.prototype.launchHangout=function(){\" +",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2081, 2084)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2379,
        "line_str": "}",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2369, 2380)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 34,
        "line_str": "\"/** @nosideeffects */ function nochg(){}\\n\" +",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(33, 37)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2082,
        "line_str": "\"  var self$$2=a.b;\" +",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2081, 2084)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 992,
        "line_str": "test(\"function f(a){return nochg() + a + a;}\" +",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(992, 993)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 299,
        "line_str": "// closure factories: inline functions with vars.",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(299, 300)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 35,
        "line_str": "\"function chg(){}\\n\";",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(33, 37)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2083,
        "line_str": "\"  var JSCompiler_temp_const$$0=goog.Uri;\" +",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2081, 2084)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 1346,
        "line_str": "public void testIssue1101a() {",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(1346, 1359)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 36,
        "line_str": "",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(33, 37)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 994,
        "line_str": "\"var a= nochg()+(nochg()+1+1)+(nochg()+1+1);\");",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(994, 995)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 1347,
        "line_str": "helperCanInlineReferenceToFunction(CanInlineResult.NO,",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(1346, 1359)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 26,
        "line_str": "",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(26, 27)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 599,
        "line_str": "public void testInlineIfParametersModified8() {",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(599, 600)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 1348,
        "line_str": "\"function foo(a){return modifiyX() + a;} foo(x);\", \"foo\",",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(1346, 1359)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 38,
        "line_str": "super(EXTERNS);",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(38, 39)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2086,
        "line_str": "\"    var JSCompiler_inline_result$$0;\" +",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2086, 2095)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 1349,
        "line_str": "INLINE_DIRECT);",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(1346, 1359)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 980,
        "line_str": "test(\"function f(a){return chg() + a + a;}\" +",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(980, 981)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2087,
        "line_str": "\"    {\" +",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2086, 2095)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 601,
        "line_str": "test(\"function f(a){return a.x=2}f(o)\", \"{o.x=2}\");",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(601, 602)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 1350,
        "line_str": "}",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(1346, 1359)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 304,
        "line_str": "\"function _x(){\" +",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(304, 312)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 40,
        "line_str": "this.enableComputeSideEffects();",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(40, 41)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2088,
        "line_str": "\"      var self$$inline_1=self$$2;\" +",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2086, 2095)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 697,
        "line_str": "boolean hasSideEffects = false;  // empty function case",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(697, 707)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2369,
        "line_str": "",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2369, 2380)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 1351,
        "line_str": "",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(1346, 1359)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 305,
        "line_str": "\"  var JSCompiler_inline_result$$0;\" +",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(304, 312)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2089,
        "line_str": "\"      if(!self$$inline_1.domServices_) {\" +",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2086, 2095)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 999,
        "line_str": "test(\"function f(a){return chg() + a + a;}\" +",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(999, 1000)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 698,
        "line_str": "if (block.hasChildren()) {",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(697, 707)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2370,
        "line_str": "public void testIssue1101() {",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2369, 2380)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 157,
        "line_str": "test(\"function BAR_FN(x, y, z) { return z(nochg(x + y)) }\" +",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(157, 158)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 1352,
        "line_str": "public void testIssue1101b() {",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(1346, 1359)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 983,
        "line_str": "\"{var a$$inline_0=chg()+1+1;\" +",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(983, 985)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 306,
        "line_str": "\"  {\" +",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(304, 312)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2090,
        "line_str": "\"        self$$inline_1.domServices_=goog$component$DomServices.get(self$$inline_1.appContext_);\" +",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2086, 2095)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 732,
        "line_str": "if (hasSideEffects && NodeUtil.canBeSideEffected(cArg)) {",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(732, 736)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 699,
        "line_str": "Preconditions.checkState(block.hasOneChild());",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(697, 707)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 356,
        "line_str": "\"var d=c+e;\");",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(356, 357)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2371,
        "line_str": "test(",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2369, 2380)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 604,
        "line_str": "public void testInlineIfParametersModified9() {",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(604, 605)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 1353,
        "line_str": "helperCanInlineReferenceToFunction(CanInlineResult.NO,",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(1346, 1359)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 984,
        "line_str": "\"a=chg()+a$$inline_0+a$$inline_0}\");",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(983, 985)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 373,
        "line_str": "\"var d=c\");",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(373, 374)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 307,
        "line_str": "\"    var x$$inline_1;\" +",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(304, 312)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2091,
        "line_str": "\"      }\" +",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2086, 2095)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 733,
        "line_str": "return CanInlineResult.NO;",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(732, 736)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 700,
        "line_str": "Node stmt = block.getFirstChild();",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(697, 707)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2372,
        "line_str": "\"var x = (function (saved) {\" +",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2369, 2380)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 258,
        "line_str": "\"var JSCompiler_inline_result$$0;\" +",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(258, 262)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 1354,
        "line_str": "\"function foo(a){return (x.prop = 2),a;} foo(x.prop);\", \"foo\",",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(1346, 1359)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 308,
        "line_str": "\"    JSCompiler_inline_result$$0=function(a$$inline_2){\" +",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(304, 312)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2092,
        "line_str": "\"      JSCompiler_inline_result$$0=self$$inline_1.domServices_;\" +",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2086, 2095)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 734,
        "line_str": "}",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(732, 736)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 701,
        "line_str": "if (stmt.isReturn()) {",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(697, 707)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 1002,
        "line_str": "\"{var a$$inline_0=chg()+1+1;\" +",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(1002, 1004)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2373,
        "line_str": "\"    return foo(obj) + saved;\" +",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2369, 2380)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 259,
        "line_str": "\"{var x$$inline_1;\" +",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(258, 262)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 160,
        "line_str": "\"var JSCompiler_temp_const$$0=alert;\" +",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(160, 164)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 606,
        "line_str": "test(\"function f(a){return a[2]=2}f(o)\", \"{o[2]=2}\");",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(606, 607)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 1355,
        "line_str": "INLINE_DIRECT);",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(1346, 1359)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 309,
        "line_str": "\"        return a$$inline_2+1};\" +",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(304, 312)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 1102,
        "line_str": "test(\"var foo = function(a) { return nochg(a); };\" +",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(1102, 1103)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2093,
        "line_str": "\"    }\" +",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2086, 2095)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 735,
        "line_str": "",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(732, 736)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 702,
        "line_str": "hasSideEffects = NodeUtil.mayHaveSideEffects(",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(697, 707)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 1003,
        "line_str": "\"a=chg()+a$$inline_0+a$$inline_0}\");",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(1002, 1004)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2374,
        "line_str": "\"  })(obj[\\\"prop\\\"]);\",",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2369, 2380)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 260,
        "line_str": "\"JSCompiler_inline_result$$0=function(a$$inline_2){return a$$inline_2+1};}\" +",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(258, 262)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 161,
        "line_str": "\"var JSCompiler_inline_result$$1;\" +",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(160, 164)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 1356,
        "line_str": "}",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(1346, 1359)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 310,
        "line_str": "\"  }\" +",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(304, 312)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2094,
        "line_str": "\"    JSCompiler_inline_result$$1=JSCompiler_inline_result$$0.getDomHelper().getWindow();\" +",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2086, 2095)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 703,
        "line_str": "stmt.getFirstChild(), compiler);",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(697, 707)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2375,
        "line_str": "\"var x;\" +",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2369, 2380)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 261,
        "line_str": "\"var d=c+JSCompiler_inline_result$$0\");",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(258, 262)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 162,
        "line_str": "\"{JSCompiler_inline_result$$1=baz(nochg(1+2));}\" +",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(160, 164)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 1357,
        "line_str": "",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(1346, 1359)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 311,
        "line_str": "\"  var d=c+JSCompiler_inline_result$$0\" +",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(304, 312)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 704,
        "line_str": "}",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(697, 707)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 972,
        "line_str": "testSame(\"function f(a){return chg() + a + a;}\" +",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(972, 973)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2376,
        "line_str": "\"{\" +",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2369, 2380)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 163,
        "line_str": "\"JSCompiler_temp_const$$0(JSCompiler_inline_result$$1)\");",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(160, 164)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 1358,
        "line_str": "",
        "file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FunctionInjectorTest.java",
        "input_line_num": "range(1346, 1359)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 1105,
        "line_str": "\"nochg(x)\");",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(1105, 1106)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2096,
        "line_str": "\"  var myUrl=new JSCompiler_temp_const$$0(JSCompiler_inline_result$$1.location.href)\" +",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2096, 2097)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 705,
        "line_str": "}",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(697, 707)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2377,
        "line_str": "\"  var saved$$inline_0=obj[\\\"prop\\\"];x=foo(obj)+saved$$inline_0\" +",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2369, 2380)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 706,
        "line_str": "",
        "file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_file_path": "src/com/google/javascript/jscomp/FunctionInjector.java",
        "input_line_num": "range(697, 707)"
      },
      {
        "commit_hash": "b80dfd3b0e5e4b490b7afb469320d18bac4520b4",
        "line_num": 2378,
        "line_str": "\"}\");",
        "file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineFunctionsTest.java",
        "input_line_num": "range(2369, 2380)"
      }
    ]
  },
  {
    "id": 10005,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": [
      "000ea0f8d6684bb9ff84a483d4ff44952b29d3f7"
    ],
    "fix_commit_hash": "0123fd5303c85d0d26add64aa2e19fee33f73aaa",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "78995bf9e88599055a8c4165d89c09dc92a44b30",
        "line_num": 52,
        "line_str": "\"(function () {1})()\");",
        "file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_line_num": "range(52, 54)"
      },
      {
        "commit_hash": "78995bf9e88599055a8c4165d89c09dc92a44b30",
        "line_num": 51,
        "line_str": "test(\"var AA;(function () {AA=1})()\",",
        "file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_line_num": "range(52, 54)"
      },
      {
        "commit_hash": "78995bf9e88599055a8c4165d89c09dc92a44b30",
        "line_num": 79,
        "line_str": "\"(function () {1})(); var z=1\");",
        "file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_line_num": "range(78, 81)"
      },
      {
        "commit_hash": "78995bf9e88599055a8c4165d89c09dc92a44b30",
        "line_num": 78,
        "line_str": "test(\"/** @const */var aa;(function () {aa=1})(); var z=aa\",",
        "file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_line_num": "range(78, 81)"
      },
      {
        "commit_hash": "78995bf9e88599055a8c4165d89c09dc92a44b30",
        "line_num": 77,
        "line_str": "test(\"/** @const */var aa;(function () {aa=1})()\", \"(function () {1})()\");",
        "file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/InlineVariablesConstantsTest.java",
        "input_line_num": "range(78, 81)"
      }
    ]
  },
  {
    "id": 10006,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": [
      "78995bf9e88599055a8c4165d89c09dc92a44b30"
    ],
    "fix_commit_hash": "2aee36e667526ff8b0b5e6dad66506acee920ea6",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "d1df970451b5a18956448097b3afb43f3a82263d",
        "line_num": 359,
        "line_str": "",
        "file_path": "src/com/google/javascript/jscomp/ReferenceCollectingCallback.java",
        "input_file_path": "src/com/google/javascript/jscomp/ReferenceCollectingCallback.java",
        "input_line_num": "range(426, 427)"
      },
      {
        "commit_hash": "d1df970451b5a18956448097b3afb43f3a82263d",
        "line_num": 273,
        "line_str": "referenceInfo.isAssignedOnceInLifetime()) {",
        "file_path": "src/com/google/javascript/jscomp/InlineVariables.java",
        "input_file_path": "src/com/google/javascript/jscomp/InlineVariables.java",
        "input_line_num": "range(303, 304)"
      }
    ]
  },
  {
    "id": 10007,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": [
      "5909c3db59b16886917456ab950ef9661a7fe6b1"
    ],
    "fix_commit_hash": "d82fb38b0121bf690cea58df293185c7e91ded9c",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "5909c3db59b16886917456ab950ef9661a7fe6b1",
        "line_num": 745,
        "line_str": "return len > 0 && s.charAt(0) != '0';",
        "file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_line_num": "range(791, 792)"
      }
    ]
  },
  {
    "id": 10008,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": [
      "a2715a52745d816a87c05d3007ed8bfe7ef18491"
    ],
    "fix_commit_hash": "7f6700e2b54af3af409f3e8851a0d98a72beef4b",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "7ba4542ae58a5a99cbd69ea413a0b74c07b9cae7",
        "line_num": 197,
        "line_str": "if (!Character.isJavaIdentifierPart(s.charAt(i))) {",
        "file_path": "src/com/google/javascript/rhino/TokenStream.java",
        "input_file_path": "src/com/google/javascript/rhino/TokenStream.java",
        "input_line_num": "range(197, 198)"
      },
      {
        "commit_hash": "7ba4542ae58a5a99cbd69ea413a0b74c07b9cae7",
        "line_num": 193,
        "line_str": "if (length == 0 || !Character.isJavaIdentifierStart(s.charAt(0)))",
        "file_path": "src/com/google/javascript/rhino/TokenStream.java",
        "input_file_path": "src/com/google/javascript/rhino/TokenStream.java",
        "input_line_num": "range(193, 194)"
      }
    ]
  },
  {
    "id": 10009,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": [
      "cc628d6050107e3dfcc7bd2748708c12ef15b4e0"
    ],
    "fix_commit_hash": "4fbbc47cb18f241b23dd2d4bf9c15d45b2473523",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 1243,
        "line_str": "line = stream.getRemainingJSDocLine();",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(1512, 1513)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 1122,
        "line_str": "String line = stream.getRemainingJSDocLine().trim();",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(1367, 1368)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 1177,
        "line_str": "String line = stream.getRemainingJSDocLine();",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(1423, 1424)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 1306,
        "line_str": "String line = stream.getRemainingJSDocLine();",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(1575, 1576)"
      }
    ]
  },
  {
    "id": 10010,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": [
      "a2153e7405e09c8fa413a01874c949b8b2bcd32b"
    ],
    "fix_commit_hash": "33ab4df84afbdb36216b8a1ea3a526c438615e26",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "f80152eb5a2de72e8336b26e0e78b9e6baae37d2",
        "line_num": 1163,
        "line_str": "if (rValue.getJSType() != null",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(1291, 1292)"
      }
    ]
  },
  {
    "id": 10011,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": [
      "b2430d29987b54e977a5e5e8db9242f4486c750b"
    ],
    "fix_commit_hash": "d1cfe67977d8f3aaa85ec20c262171da394d5977",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "b2430d29987b54e977a5e5e8db9242f4486c750b",
        "line_num": 1542,
        "line_str": "interfaceType.getImplicitPrototype().getOwnPropertyNames();",
        "file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_line_num": "range(1569, 1571)"
      },
      {
        "commit_hash": "b2430d29987b54e977a5e5e8db9242f4486c750b",
        "line_num": 1541,
        "line_str": "Set<String> currentPropertyNames =",
        "file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypeCheck.java",
        "input_line_num": "range(1569, 1571)"
      }
    ]
  },
  {
    "id": 10012,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": [
      "dbf6ea95477810188582b9e9ac6c9645717cbe95"
    ],
    "fix_commit_hash": "1787d7b2cff83a0f177dd958033c53e4502406d2",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 106,
        "line_str": "// an eval.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(98, 114)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 135,
        "line_str": "}",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(115, 136)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 102,
        "line_str": "parent == gramps.getFirstChild()) {",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(98, 114)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 131,
        "line_str": "// Fall through and look for warnings for the 1st and 3rd child",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(115, 136)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 98,
        "line_str": "int pt = parent.getType();",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(98, 114)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 127,
        "line_str": "} else if (pt != Token.EXPR_RESULT && pt != Token.BLOCK) {",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(115, 136)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 123,
        "line_str": "else",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(115, 136)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 119,
        "line_str": "continue;",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(115, 136)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 148,
        "line_str": "}",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(139, 150)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 115,
        "line_str": "if (n == parent.getLastChild()) {",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(115, 136)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 144,
        "line_str": "return;",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(139, 150)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 111,
        "line_str": "return;",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(98, 114)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 140,
        "line_str": "!NodeUtil.mayHaveSideEffects(n, t.getCompiler())) {",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(139, 150)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 107,
        "line_str": "if (n == parent.getFirstChild() &&",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(98, 114)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 103,
        "line_str": "// Semantically, a direct call to eval is different from an indirect",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(98, 114)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 132,
        "line_str": "// of a for.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(115, 136)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 99,
        "line_str": "if (pt == Token.COMMA) {",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(98, 114)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 128,
        "line_str": "if (pt == Token.FOR && parent.getChildCount() == 4 &&",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(115, 136)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 124,
        "line_str": "break;",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(115, 136)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 120,
        "line_str": "if (ancestorType != Token.EXPR_RESULT &&",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(115, 136)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 149,
        "line_str": "",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(139, 150)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 116,
        "line_str": "for (Node an : parent.getAncestors()) {",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(115, 136)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 145,
        "line_str": "} else if (n.isExprResult()) {",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(139, 150)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 112,
        "line_str": "}",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(98, 114)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 141,
        "line_str": "if (n.isQualifiedName() && n.getJSDocInfo() != null) {",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(139, 150)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 108,
        "line_str": "parent.getChildCount() == 2 &&",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(98, 114)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 104,
        "line_str": "// call to an eval. See ECMA-262 S15.1.2.1. So it's OK for the first",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(98, 114)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 133,
        "line_str": "} else {",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(115, 136)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 100,
        "line_str": "Node gramps = parent.getParent();",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(98, 114)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 129,
        "line_str": "(n == parent.getFirstChild() ||",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(115, 136)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 125,
        "line_str": "}",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(115, 136)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 121,
        "line_str": "ancestorType != Token.BLOCK)",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(115, 136)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 117,
        "line_str": "int ancestorType = an.getType();",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(115, 136)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 146,
        "line_str": "// we already reported the problem when we visited the child.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(139, 150)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 113,
        "line_str": "}",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(98, 114)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 142,
        "line_str": "// This no-op statement was there so that JSDoc information could",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(139, 150)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 109,
        "line_str": "n.getNext().isName() &&",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(98, 114)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 105,
        "line_str": "// expression to a comma to be a no-op if it's used to indirect",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(98, 114)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 134,
        "line_str": "return;  // it might be OK to not have a side-effect",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(115, 136)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 101,
        "line_str": "if (gramps.isCall() &&",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(98, 114)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 130,
        "line_str": "n == parent.getFirstChild().getNext().getNext())) {",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(115, 136)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 126,
        "line_str": "}",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(115, 136)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 122,
        "line_str": "return;",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(115, 136)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 118,
        "line_str": "if (ancestorType == Token.COMMA)",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(115, 136)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 147,
        "line_str": "return;",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(139, 150)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 143,
        "line_str": "// be attached to the name. This check should not complain about it.",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(139, 150)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 110,
        "line_str": "\"eval\".equals(n.getNext().getString())) {",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(98, 114)"
      },
      {
        "commit_hash": "dbf6ea95477810188582b9e9ac6c9645717cbe95",
        "line_num": 139,
        "line_str": "if (isSimpleOp ||",
        "file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckSideEffects.java",
        "input_line_num": "range(139, 150)"
      }
    ]
  },
  {
    "id": 10013,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": [
      "2f28243f97f468e92316a2c7ea209c857689ab43"
    ],
    "fix_commit_hash": "7a8983042131c5a9c2b5421ae42075cbb8ef1aeb",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "2f28243f97f468e92316a2c7ea209c857689ab43",
        "line_num": 213,
        "line_str": "Preconditions.checkState(finallyBody.isLabelName());",
        "file_path": "src/com/google/javascript/rhino/IR.java",
        "input_file_path": "src/com/google/javascript/rhino/IR.java",
        "input_line_num": "range(223, 225)"
      },
      {
        "commit_hash": "2f28243f97f468e92316a2c7ea209c857689ab43",
        "line_num": 221,
        "line_str": "Node catchBody = block(catchNode).copyInformationFrom(catchNode);",
        "file_path": "src/com/google/javascript/rhino/IR.java",
        "input_file_path": "src/com/google/javascript/rhino/IR.java",
        "input_line_num": "range(232, 233)"
      },
      {
        "commit_hash": "2f28243f97f468e92316a2c7ea209c857689ab43",
        "line_num": 212,
        "line_str": "Preconditions.checkState(tryBody.isLabelName());",
        "file_path": "src/com/google/javascript/rhino/IR.java",
        "input_file_path": "src/com/google/javascript/rhino/IR.java",
        "input_line_num": "range(223, 225)"
      },
      {
        "commit_hash": "2f28243f97f468e92316a2c7ea209c857689ab43",
        "line_num": 225,
        "line_str": "public static Node tryCatchFinally(Node tryBody, Node catchNode, Node finallyBody) {",
        "file_path": "src/com/google/javascript/rhino/IR.java",
        "input_file_path": "src/com/google/javascript/rhino/IR.java",
        "input_line_num": "range(236, 237)"
      }
    ]
  },
  {
    "id": 10014,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": [
      "74a817bbf5256d671036356c58096f612535e4a2"
    ],
    "fix_commit_hash": "38e2b8f247423734adec3dbd76fa22da1a3561a8",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 121,
        "line_str": "(new NodeTraversal(compiler, this)).traverse(root);",
        "file_path": "src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "input_file_path": "src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "input_line_num": "range(157, 158)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 348,
        "line_str": "def.depends.add(jsScope.getVar(n.getString()));",
        "file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_file_path": "src/com/google/javascript/jscomp/MustBeReachingVariableDef.java",
        "input_line_num": "range(396, 397)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 177,
        "line_str": "\"var x; if (g) {           print(a + b)}             print(a - b)\");",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(201, 203)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 176,
        "line_str": "inline(\"var x; if (g) { x= a + b; print(x)    }  x = a - b; print(x)\",",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(201, 203)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 171,
        "line_str": "\"var x;         print(a + b);             print(a - b)\");",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(195, 197)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 170,
        "line_str": "inline(\"var x = a + b; print(x);      x = a - b; print(x)\",",
        "file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java",
        "input_line_num": "range(195, 197)"
      }
    ]
  },
  {
    "id": 10015,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": [
      "a4c526dae1537f027f429145656ffb849699c1fc"
    ],
    "fix_commit_hash": "0a670cb51fd56c12c19f98884c9513792ebc3f76",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "a4c526dae1537f027f429145656ffb849699c1fc",
        "line_num": 1281,
        "line_str": "!options.skipAllPasses &&",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(1285, 1286)"
      }
    ]
  },
  {
    "id": 10016,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": [
      "091577d5000b2260452cdc79eacf54925de894a3"
    ],
    "fix_commit_hash": "382422adae8e9f07fc23c94089c0ebe08a2174bc",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "1a196b77fb5c6b699586ad6a9a2c3bc3ea57b345",
        "line_num": 7769,
        "line_str": "\"actual parameter 1 of f does not match formal parameter\\n\"+",
        "file_path": "test/com/google/javascript/jscomp/TypeCheckTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/TypeCheckTest.java",
        "input_line_num": "range(8406, 8407)"
      },
      {
        "commit_hash": "1a196b77fb5c6b699586ad6a9a2c3bc3ea57b345",
        "line_num": 7742,
        "line_str": "\"actual parameter 1 of f does not match formal parameter\\n\"+",
        "file_path": "test/com/google/javascript/jscomp/TypeCheckTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/TypeCheckTest.java",
        "input_line_num": "range(8379, 8380)"
      }
    ]
  },
  {
    "id": 10017,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": [
      "41abf3b75893403d9e21c33d06e8dc233b5cf657"
    ],
    "fix_commit_hash": "46da17d59abb4f9c48b6ffd31601c212490b970b",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "f6607996d6d3bd6820ce3848d147991b27600a12",
        "line_num": 965,
        "line_str": "return false;",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(1204, 1205)"
      },
      {
        "commit_hash": "f6607996d6d3bd6820ce3848d147991b27600a12",
        "line_num": 962,
        "line_str": "return var.isGlobal();",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(1201, 1202)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 1051,
        "line_str": "inferred = !(rhsValue != null &&",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(1489, 1490)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 1049,
        "line_str": "if (inferred) {",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(1487, 1488)"
      },
      {
        "commit_hash": "ec324a9bb23eb78c76f537f4c4170ba88d542f1c",
        "line_num": 1489,
        "line_str": "rhsValue.isFunction() &&",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(1490, 1491)"
      },
      {
        "commit_hash": "ec324a9bb23eb78c76f537f4c4170ba88d542f1c",
        "line_num": 1512,
        "line_str": "rhsValue.isTrue()) {",
        "file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_file_path": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "input_line_num": "range(1513, 1514)"
      }
    ]
  },
  {
    "id": 10018,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": [
      "41acde3e8e5e8d37ade765b41d9fd29861f03e5e"
    ],
    "fix_commit_hash": "5909c3db59b16886917456ab950ef9661a7fe6b1",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "41acde3e8e5e8d37ade765b41d9fd29861f03e5e",
        "line_num": 744,
        "line_str": "return len > 0;",
        "file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_line_num": "range(745, 746)"
      }
    ]
  },
  {
    "id": 10019,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": [
      "8bf67e65c7ee2a202ac2dbf252727ae656642350"
    ],
    "fix_commit_hash": "49b4ef31c850611a5c85d95140b4cedda7f4c59a",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "c00a33b88d00f3b28787da26e3bb65ae2c1f4893",
        "line_num": 250,
        "line_str": "if (options.checkGlobalThisLevel.isOn()) {",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(255, 256)"
      }
    ]
  },
  {
    "id": 10020,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": [
      "a095236ba70304d61b8ec02ea316d3504cc0ea1d"
    ],
    "fix_commit_hash": "fbaadc736f0031dd84bebea33abae497b47158cb",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 160,
        "line_str": "assertExpressionBooleanFalse(\"0\");",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(157, 181)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 161,
        "line_str": "assertExpressionBooleanFalse(\"''\");",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(157, 181)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 128,
        "line_str": "assertExpressionBooleanTrue(\"a,true\");",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(139, 141)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 162,
        "line_str": "assertExpressionBooleanFalse(\"undefined\");",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(157, 181)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 129,
        "line_str": "assertExpressionBooleanFalse(\"a,false\");",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(139, 141)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 146,
        "line_str": "assertExpressionBooleanUnknown(\"2 + 2\");",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(157, 181)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 163,
        "line_str": "assertExpressionBooleanFalse(\"void 0\");",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(157, 181)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 180,
        "line_str": "private void assertExpressionBooleanFalse(String val) {",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(194, 195)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 147,
        "line_str": "",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(157, 181)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 164,
        "line_str": "assertExpressionBooleanFalse(\"void foo()\");",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(157, 181)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 131,
        "line_str": "assertExpressionBooleanTrue(\"true||false\");",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(142, 144)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 148,
        "line_str": "assertExpressionBooleanTrue(\"a=1\");",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(157, 181)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 165,
        "line_str": "",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(157, 181)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 132,
        "line_str": "assertExpressionBooleanFalse(\"false||false\");",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(142, 144)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 149,
        "line_str": "assertExpressionBooleanTrue(\"a=/a/\");",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(157, 181)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 166,
        "line_str": "assertExpressionBooleanTrue(\"a?true:true\");",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(157, 181)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 150,
        "line_str": "assertExpressionBooleanTrue(\"a={}\");",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(157, 181)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 117,
        "line_str": "assertExpressionBooleanTrue(\"a=true\");",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(128, 130)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 167,
        "line_str": "assertExpressionBooleanFalse(\"a?false:false\");",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(157, 181)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 134,
        "line_str": "assertExpressionBooleanTrue(\"true&&true\");",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(145, 147)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 151,
        "line_str": "",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(157, 181)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 118,
        "line_str": "assertExpressionBooleanFalse(\"a=false\");",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(128, 130)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 168,
        "line_str": "assertExpressionBooleanUnknown(\"a?true:false\");",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(157, 181)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 135,
        "line_str": "assertExpressionBooleanFalse(\"true&&false\");",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(145, 147)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 152,
        "line_str": "assertExpressionBooleanTrue(\"true\");",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(157, 181)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 169,
        "line_str": "assertExpressionBooleanUnknown(\"a?true:foo()\");",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(157, 181)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 153,
        "line_str": "assertExpressionBooleanTrue(\"10\");",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(157, 181)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 120,
        "line_str": "assertExpressionBooleanTrue(\"a=(false,true)\");",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(131, 133)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 137,
        "line_str": "assertExpressionBooleanFalse(\"!true\");",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(148, 151)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 154,
        "line_str": "assertExpressionBooleanTrue(\"'0'\");",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(157, 181)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 121,
        "line_str": "assertExpressionBooleanFalse(\"a=(true,false)\");",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(131, 133)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 138,
        "line_str": "assertExpressionBooleanTrue(\"!false\");",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(148, 151)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 155,
        "line_str": "assertExpressionBooleanTrue(\"/a/\");",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(157, 181)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 172,
        "line_str": "assertExpressionBooleanUnknown(\"-'0.0'\");",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(182, 184)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 139,
        "line_str": "assertExpressionBooleanTrue(\"!''\");",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(148, 151)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 156,
        "line_str": "assertExpressionBooleanTrue(\"{}\");",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(157, 181)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 123,
        "line_str": "assertExpressionBooleanTrue(\"a=(false || true)\");",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(134, 136)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 173,
        "line_str": "}",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(187, 190)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 157,
        "line_str": "assertExpressionBooleanTrue(\"[]\");",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(157, 181)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 124,
        "line_str": "assertExpressionBooleanFalse(\"a=(true && false)\");",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(134, 136)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 174,
        "line_str": "",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(187, 190)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 158,
        "line_str": "assertExpressionBooleanFalse(\"false\");",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(157, 181)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 175,
        "line_str": "private void assertExpressionBooleanTrue(String val) {",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(187, 190)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 142,
        "line_str": "assertExpressionBooleanUnknown(\"a *= 2\");",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(153, 154)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 159,
        "line_str": "assertExpressionBooleanFalse(\"null\");",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(157, 181)"
      },
      {
        "commit_hash": "ad32e173b7c78f48ff85324dc310fa5b5888e2aa",
        "line_num": 126,
        "line_str": "assertExpressionBooleanTrue(\"a=!(true && false)\");",
        "file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/NodeUtilTest.java",
        "input_line_num": "range(137, 138)"
      }
    ]
  },
  {
    "id": 10021,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": [
      "e9a1cc9c431416354dec3dcb393affd7f41c6596"
    ],
    "fix_commit_hash": "34e4616a924bf272c076039e143e20f1d792731e",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 33,
        "line_str": "super(MATH);",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(33, 34)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 256,
        "line_str": "// PureFunctionIdentifier.",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(253, 258)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 29,
        "line_str": "\"/** @nosideeffects */ Math.random = function(){};\" +",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(27, 32)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 54,
        "line_str": "compiler, new PeepholeRemoveDeadCode());",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(44, 58)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 50,
        "line_str": "new PureFunctionIdentifier(compiler, definitionFinder)",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(44, 58)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 46,
        "line_str": "public void process(Node externs, Node root) {",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(44, 58)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 257,
        "line_str": "fold(\"(function () {})();\", \"\");",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(253, 258)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 30,
        "line_str": "\"/** @nosideeffects */ Math.sin = function(){};\";",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(27, 32)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 253,
        "line_str": "foldSame(\"(function () { f(); })();\");",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(253, 258)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 55,
        "line_str": "peepholePass.process(externs, root);",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(44, 58)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 51,
        "line_str": ".process(externs, root);",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(44, 58)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 47,
        "line_str": "SimpleDefinitionFinder definitionFinder =",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(44, 58)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 31,
        "line_str": "",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(27, 32)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 254,
        "line_str": "",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(253, 258)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 27,
        "line_str": "private static final String MATH =",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(27, 32)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 56,
        "line_str": "}",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(44, 58)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 52,
        "line_str": "PeepholeOptimizationsPass peepholePass =",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(44, 58)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 19,
        "line_str": "import com.google.javascript.rhino.Node;",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(19, 21)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 48,
        "line_str": "new SimpleDefinitionFinder(compiler);",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(44, 58)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 44,
        "line_str": "return new CompilerPass() {",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(44, 58)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 255,
        "line_str": "// We know that this function has no side effects because of the",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(253, 258)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 28,
        "line_str": "\"/** @const */ var Math = {};\" +",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(27, 32)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 57,
        "line_str": "};",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(44, 58)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 53,
        "line_str": "new PeepholeOptimizationsPass(",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(44, 58)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 20,
        "line_str": "",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(19, 21)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 49,
        "line_str": "definitionFinder.process(externs, root);",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(44, 58)"
      },
      {
        "commit_hash": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
        "line_num": 45,
        "line_str": "@Override",
        "file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java",
        "input_line_num": "range(44, 58)"
      }
    ]
  },
  {
    "id": 10022,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": [
      "22a1fcd79bd2bfbfdc9e80d5162bdf19065f9e5e"
    ],
    "fix_commit_hash": "b12d1d6489329c989b15635f6f7f06681b3f6582",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "22a1fcd79bd2bfbfdc9e80d5162bdf19065f9e5e",
        "line_num": 96,
        "line_str": "&& 0 <= charno && charno < sourceExcerpt.length()) {",
        "file_path": "src/com/google/javascript/jscomp/LightweightMessageFormatter.java",
        "input_file_path": "src/com/google/javascript/jscomp/LightweightMessageFormatter.java",
        "input_line_num": "range(96, 97)"
      }
    ]
  },
  {
    "id": 10023,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": [
      "75a9013e3907e5db97f10578227497d7b018caf5"
    ],
    "fix_commit_hash": "de726510af4329fb8eeb8a54b2d93d8d37c87545",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "e829dafb9b3365bda6b6bb80f5fa97783752d143",
        "line_num": 1346,
        "line_str": "return toSource(n, null);",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(1459, 1460)"
      },
      {
        "commit_hash": "e829dafb9b3365bda6b6bb80f5fa97783752d143",
        "line_num": 1352,
        "line_str": "private String toSource(Node n, SourceMap sourceMap) {",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(1465, 1466)"
      },
      {
        "commit_hash": "e829dafb9b3365bda6b6bb80f5fa97783752d143",
        "line_num": 1327,
        "line_str": "String code = toSource(root, sourceMap);",
        "file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_file_path": "src/com/google/javascript/jscomp/Compiler.java",
        "input_line_num": "range(1430, 1431)"
      }
    ]
  },
  {
    "id": 10024,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": [
      "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
    ],
    "fix_commit_hash": "48aea0ff7d027507362007415963a4b662fb10a7",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "b88400ce0e9c1a0dadfd3417c256b02a82f38fe1",
        "line_num": 1181,
        "line_str": "assertPrint(\"var x ='\\\\u0000';\", \"var x=\\\"\\\\0\\\"\");",
        "file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_line_num": "range(1231, 1234)"
      },
      {
        "commit_hash": "b88400ce0e9c1a0dadfd3417c256b02a82f38fe1",
        "line_num": 1180,
        "line_str": "assertPrint(\"var x ='\\\\x00';\", \"var x=\\\"\\\\0\\\"\");",
        "file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_line_num": "range(1231, 1234)"
      },
      {
        "commit_hash": "b88400ce0e9c1a0dadfd3417c256b02a82f38fe1",
        "line_num": 1179,
        "line_str": "assertPrint(\"var x ='\\\\0';\", \"var x=\\\"\\\\0\\\"\");",
        "file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/CodePrinterTest.java",
        "input_line_num": "range(1231, 1234)"
      },
      {
        "commit_hash": "b88400ce0e9c1a0dadfd3417c256b02a82f38fe1",
        "line_num": 966,
        "line_str": "case '\\0': sb.append(\"\\\\0\"); break;",
        "file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_line_num": "range(1015, 1016)"
      }
    ]
  },
  {
    "id": 10025,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": [
      "70f817ae4f80ac11dd2dfe97babf5896c690fb48"
    ],
    "fix_commit_hash": "59a30b48325cccadabae8687fdf603d72e26c157",
    "language": [
      "java"
    ],
    "inducing_commit_hash": []
  },
  {
    "id": 10026,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": [
      "5709ec1d0bbe5b7726a14d06f7eab9c35150e314"
    ],
    "fix_commit_hash": "9d5a6e3082dd99f6c44df1b3526b9e83b79aa7da",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 800,
        "line_str": "token = eatTokensUntilEOL();",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(868, 870)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 799,
        "line_str": "",
        "file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_file_path": "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "input_line_num": "range(868, 870)"
      }
    ]
  },
  {
    "id": 10027,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": [
      "847b296c23a63aa0a0b38cc3e63883e1688288e3"
    ],
    "fix_commit_hash": "ee8344091722c28c9351e78dcb4155fbfddfd1af",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "847b296c23a63aa0a0b38cc3e63883e1688288e3",
        "line_num": 841,
        "line_str": "if (c > 0x1f && c <= 0x7f) {",
        "file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_file_path": "src/com/google/javascript/jscomp/CodeGenerator.java",
        "input_line_num": "range(1045, 1046)"
      }
    ]
  },
  {
    "id": 10028,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": [
      "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3"
    ],
    "fix_commit_hash": "03fee32a06ccf8257b2da67b9034270be38805ae",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
        "line_num": 721,
        "line_str": "switch (left.getType()) {",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(907, 909)"
      },
      {
        "commit_hash": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
        "line_num": 785,
        "line_str": "result = left.getType() != right.getType();",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(940, 941)"
      },
      {
        "commit_hash": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
        "line_num": 720,
        "line_str": "",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(907, 909)"
      },
      {
        "commit_hash": "c9e89727dc8063d087d28e42629606f4fd74a6e5",
        "line_num": 780,
        "line_str": "result = left.getType() == right.getType();",
        "file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_file_path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "input_line_num": "range(935, 936)"
      }
    ]
  },
  {
    "id": 10029,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": [
      "fe64e87cccd2c38524c0b36c49beb4c988d1453a"
    ],
    "fix_commit_hash": "78b01c3a435cd175ce3ee70f97b2f8faac342cdc",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
        "line_num": 255,
        "line_str": "}",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(304, 305)"
      },
      {
        "commit_hash": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
        "line_num": 251,
        "line_str": "return true;",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(298, 303)"
      },
      {
        "commit_hash": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
        "line_num": 289,
        "line_str": "if (state != VariableLiveness.MAYBE_LIVE) {",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(347, 349)"
      },
      {
        "commit_hash": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
        "line_num": 285,
        "line_str": "for (Node child = n.getFirstChild();",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(343, 345)"
      },
      {
        "commit_hash": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
        "line_num": 252,
        "line_str": "} else if (state == VariableLiveness.KILL) {",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(298, 303)"
      },
      {
        "commit_hash": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
        "line_num": 244,
        "line_str": "for(Node sibling = n.getNext(); sibling != null;",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(293, 296)"
      },
      {
        "commit_hash": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
        "line_num": 290,
        "line_str": "return state;",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(347, 349)"
      },
      {
        "commit_hash": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
        "line_num": 286,
        "line_str": "child != null; child = child.getNext()) {",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(343, 345)"
      },
      {
        "commit_hash": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
        "line_num": 253,
        "line_str": "return false;",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(298, 303)"
      },
      {
        "commit_hash": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
        "line_num": 249,
        "line_str": "// If we see a READ or KILL there is no need to continue.",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(298, 303)"
      },
      {
        "commit_hash": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
        "line_num": 245,
        "line_str": "sibling = sibling.getNext()) {",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(293, 296)"
      },
      {
        "commit_hash": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
        "line_num": 250,
        "line_str": "if (state == VariableLiveness.READ) {",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(298, 303)"
      },
      {
        "commit_hash": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
        "line_num": 246,
        "line_str": "if (!ControlFlowGraph.isEnteringNewCfgNode(sibling)) {",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(293, 296)"
      },
      {
        "commit_hash": "fe64e87cccd2c38524c0b36c49beb4c988d1453a",
        "line_num": 292,
        "line_str": "}",
        "file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "input_line_num": "range(350, 351)"
      }
    ]
  },
  {
    "id": 10030,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": [
      "80ee905775eded2256972f3e762862fcf66f0095"
    ],
    "fix_commit_hash": "6300a43566d4adcf8828128267808a8740edc835",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "9adfc8062e31dc6b9cd5614d4ba6f8ecd27d5c92",
        "line_num": 201,
        "line_str": "var.getScope() == s && !blacklistedVars.contains(var);",
        "file_path": "src/com/google/javascript/jscomp/CollapseVariableDeclarations.java",
        "input_file_path": "src/com/google/javascript/jscomp/CollapseVariableDeclarations.java",
        "input_line_num": "range(202, 204)"
      },
      {
        "commit_hash": "9adfc8062e31dc6b9cd5614d4ba6f8ecd27d5c92",
        "line_num": 200,
        "line_str": "return var != null &&",
        "file_path": "src/com/google/javascript/jscomp/CollapseVariableDeclarations.java",
        "input_file_path": "src/com/google/javascript/jscomp/CollapseVariableDeclarations.java",
        "input_line_num": "range(202, 204)"
      }
    ]
  },
  {
    "id": 10031,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": [
      "711b76ac1015234f86805f1735ff2c3da195f55c"
    ],
    "fix_commit_hash": "58786c3f717fa506280127265cd68fedf17de0a9",
    "language": [
      "java"
    ],
    "inducing_commit_hash": []
  },
  {
    "id": 10032,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": [
      "8a76da206034045c555297e5069eb273d05fc6fb"
    ],
    "fix_commit_hash": "a857aec27d79fc234fddd4a72c1215af0251b2d8",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "043a352c2e85815a90a1926d112902d924bab6c1",
        "line_num": 163,
        "line_str": "return isNoType() || isNoObjectType() || isNoResolvedType();",
        "file_path": "src/com/google/javascript/rhino/jstype/JSType.java",
        "input_file_path": "src/com/google/javascript/rhino/jstype/JSType.java",
        "input_line_num": "range(163, 164)"
      }
    ]
  },
  {
    "id": 10033,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": [
      "2581851be3b2202bd48d4c76889b020f4cecebf6"
    ],
    "fix_commit_hash": "21a2103d7fa5664ea324ef9ee25b4a8922e50955",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 187,
        "line_str": "return tryRemoveUnconditionalBranching(",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(166, 174)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 183,
        "line_str": "if (n.hasChildren()) {",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(166, 174)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 179,
        "line_str": "}",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(153, 165)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 175,
        "line_str": "if (outEdges.size() == 1) {",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(153, 165)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 171,
        "line_str": "// while no longer exists in the AST, is still in the CFG because we",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(153, 165)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 188,
        "line_str": "ControlFlowAnalysis.computeFollowNode(n));",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(166, 174)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 184,
        "line_str": "Node first = n.getFirstChild();",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(166, 174)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 180,
        "line_str": "",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(153, 165)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 176,
        "line_str": "return tryRemoveUnconditionalBranching(",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(153, 165)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 172,
        "line_str": "// never update the graph as nodes are removed.",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(153, 165)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 239,
        "line_str": "\"  switch (a) { case 'a':return; case 'b':return; case 'c':return }}\",",
        "file_path": "test/com/google/javascript/jscomp/UnreachableCodeEliminationTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/UnreachableCodeEliminationTest.java",
        "input_line_num": "range(238, 240)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 189,
        "line_str": "}",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(166, 174)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 185,
        "line_str": "return tryRemoveUnconditionalBranching(first);",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(166, 174)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 177,
        "line_str": "outEdges.get(0).getDestination().getValue());",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(153, 165)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 206,
        "line_str": "Node fallThrough = tryRemoveUnconditionalBranching(",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(190, 192)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 173,
        "line_str": "if (n.getParent() == null) {",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(153, 165)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 169,
        "line_str": "// If the parent is null, this mean whatever node it was there is now",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(153, 165)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 240,
        "line_str": "\"function foo() { switch (a) { case 'a': case 'b': case 'c': }}\");",
        "file_path": "test/com/google/javascript/jscomp/UnreachableCodeEliminationTest.java",
        "input_file_path": "test/com/google/javascript/jscomp/UnreachableCodeEliminationTest.java",
        "input_line_num": "range(238, 240)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 186,
        "line_str": "} else {",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(166, 174)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 182,
        "line_str": "case Token.BLOCK:",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(166, 174)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 178,
        "line_str": "}",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(153, 165)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 207,
        "line_str": "ControlFlowAnalysis.computeFollowNode(n));",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(190, 192)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 174,
        "line_str": "List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(153, 165)"
      },
      {
        "commit_hash": "2581851be3b2202bd48d4c76889b020f4cecebf6",
        "line_num": 170,
        "line_str": "// useless and it has been removed by other logics in this pass. That node",
        "file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_file_path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java",
        "input_line_num": "range(153, 165)"
      }
    ]
  },
  {
    "id": 10034,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": [
      "82a9956c6337d2f5d4a94ebe624d64faa54d9182"
    ],
    "fix_commit_hash": "7eb2d84de101a125d41d3a1157f4eed789ca4a0d",
    "language": [
      "java"
    ],
    "inducing_commit_hash": []
  },
  {
    "id": 10035,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": [
      "5a3b4cb6b7e816aacd0ffd4c71e23da949fe360d"
    ],
    "fix_commit_hash": "8980b60033b1c6853cbca593ec89d3d332adf7dc",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "5a3b4cb6b7e816aacd0ffd4c71e23da949fe360d",
        "line_num": 166,
        "line_str": "<batchtest>",
        "file_path": "build.xml",
        "input_file_path": "build.xml",
        "input_line_num": "range(166, 167)"
      },
      {
        "commit_hash": "5a3b4cb6b7e816aacd0ffd4c71e23da949fe360d",
        "line_num": 789,
        "line_str": "int indexOfDot = namespace.indexOf('.');",
        "file_path": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
        "input_file_path": "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
        "input_line_num": "range(789, 790)"
      }
    ]
  },
  {
    "id": 10036,
    "repo_name": "google/closure-compiler",
    "bug_commit_hash": [
      "6d00ac1a68612aade8a19d7ecc9b180f00ae5234"
    ],
    "fix_commit_hash": "8aa879a4eeb18cfc8d13e6c843a32b7f41ccd516",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "0f655dc72070acbdcc5fe3a1aecf91c11955c37b",
        "line_num": 159,
        "line_str": "@Override",
        "file_path": "gen/com/google/javascript/jscomp/Instrumentation.java",
        "input_file_path": "gen/com/google/javascript/jscomp/Instrumentation.java",
        "input_line_num": "range(181, 182)"
      },
      {
        "commit_hash": "0f655dc72070acbdcc5fe3a1aecf91c11955c37b",
        "line_num": 187,
        "line_str": "@Override",
        "file_path": "gen/com/google/javascript/jscomp/FunctionInformationMap.java",
        "input_file_path": "gen/com/google/javascript/jscomp/FunctionInformationMap.java",
        "input_line_num": "range(215, 216)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 112,
        "line_str": "if (leftName != null && leftName.contains(\".prototype.\")) {",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(129, 131)"
      },
      {
        "commit_hash": "0f655dc72070acbdcc5fe3a1aecf91c11955c37b",
        "line_num": 977,
        "line_str": "@Override",
        "file_path": "gen/com/google/javascript/jscomp/FunctionInformationMap.java",
        "input_file_path": "gen/com/google/javascript/jscomp/FunctionInformationMap.java",
        "input_line_num": "range(1017, 1018)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 111,
        "line_str": "String leftName = lhs.getQualifiedName();",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(129, 131)"
      },
      {
        "commit_hash": "0f655dc72070acbdcc5fe3a1aecf91c11955c37b",
        "line_num": 654,
        "line_str": "@Override",
        "file_path": "gen/com/google/javascript/jscomp/FunctionInformationMap.java",
        "input_file_path": "gen/com/google/javascript/jscomp/FunctionInformationMap.java",
        "input_line_num": "range(690, 691)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 108,
        "line_str": "if (lhs.getLastChild().getString().equals(\"prototype\")) {",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(125, 127)"
      },
      {
        "commit_hash": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
        "line_num": 107,
        "line_str": "if (lhs.getType() == Token.GETPROP) {",
        "file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_file_path": "src/com/google/javascript/jscomp/CheckGlobalThis.java",
        "input_line_num": "range(125, 127)"
      }
    ]
  },
  {
    "id": 10037,
    "repo_name": "apache/commons-codec",
    "bug_commit_hash": [
      "7882213ce2fde3ef9b990c494f47aeae7b6f6946"
    ],
    "fix_commit_hash": "41c68e9ef470696009d72133c7f05a20e2728e34",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 236,
        "line_str": "\"Torto\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 203,
        "line_str": "\"Duthie\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 170,
        "line_str": "* @throws EncoderException",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 220,
        "line_str": "\"Terti\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 187,
        "line_str": "\"Dita\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 237,
        "line_str": "\"Tuddor\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 204,
        "line_str": "\"Tada\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 171,
        "line_str": "*/",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 221,
        "line_str": "\"Theda\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 188,
        "line_str": "\"Ditter\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 238,
        "line_str": "\"Tudor\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 205,
        "line_str": "\"Taddeo\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 172,
        "line_str": "public void testDavidHoodRevisitedRandomNameTTA1111111() throws EncoderException {",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 222,
        "line_str": "\"Theodor\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 189,
        "line_str": "\"Dodi\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 239,
        "line_str": "\"Turtle\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 206,
        "line_str": "\"Tadeo\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 173,
        "line_str": "this.checkEncodingVariations(\"TTA1111111\", new String[]{",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 223,
        "line_str": "\"Theodore\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 190,
        "line_str": "\"Dodie\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 240,
        "line_str": "\"Tuttle\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 207,
        "line_str": "\"Tadio\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 174,
        "line_str": "\"Darda\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 224,
        "line_str": "\"Theta\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 191,
        "line_str": "\"Dody\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 241,
        "line_str": "\"Tutto\"});",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 208,
        "line_str": "\"Tati\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 175,
        "line_str": "\"Datha\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 225,
        "line_str": "\"Thilda\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 192,
        "line_str": "\"Doherty\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 242,
        "line_str": "}",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 209,
        "line_str": "\"Teador\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 176,
        "line_str": "\"Dedie\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 226,
        "line_str": "\"Thordia\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 193,
        "line_str": "\"Dorthea\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 243,
        "line_str": "",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 210,
        "line_str": "\"Tedda\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 177,
        "line_str": "\"Deedee\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 227,
        "line_str": "\"Tilda\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 194,
        "line_str": "\"Dorthy\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 211,
        "line_str": "\"Tedder\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 178,
        "line_str": "\"Deerdre\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 228,
        "line_str": "\"Tildi\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 195,
        "line_str": "\"Doti\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 212,
        "line_str": "\"Teddi\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 179,
        "line_str": "\"Deidre\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 229,
        "line_str": "\"Tildie\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 196,
        "line_str": "\"Dotti\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 213,
        "line_str": "\"Teddie\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 180,
        "line_str": "\"Deirdre\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 230,
        "line_str": "\"Tildy\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 197,
        "line_str": "\"Dottie\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 214,
        "line_str": "\"Teddy\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 181,
        "line_str": "\"Detta\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 231,
        "line_str": "\"Tita\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 198,
        "line_str": "\"Dotty\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 215,
        "line_str": "\"Tedi\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 182,
        "line_str": "\"Didi\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 232,
        "line_str": "\"Tito\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 199,
        "line_str": "\"Doty\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 216,
        "line_str": "\"Tedie\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 183,
        "line_str": "\"Didier\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 233,
        "line_str": "\"Tjader\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 200,
        "line_str": "\"Doughty\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 167,
        "line_str": "/**",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 217,
        "line_str": "\"Teeter\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 184,
        "line_str": "\"Dido\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 234,
        "line_str": "\"Toddie\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 201,
        "line_str": "\"Douty\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 168,
        "line_str": "* See http://caversham.otago.ac.nz/files/working/ctp150804.pdf",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 218,
        "line_str": "\"Teodoor\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 185,
        "line_str": "\"Dierdre\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 235,
        "line_str": "\"Toddy\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 202,
        "line_str": "\"Dowdell\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 169,
        "line_str": "*",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 219,
        "line_str": "\"Teodor\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      },
      {
        "commit_hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
        "line_num": 186,
        "line_str": "\"Dieter\",",
        "file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_file_path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
        "input_line_num": "range(167, 244)"
      }
    ]
  },
  {
    "id": 10038,
    "repo_name": "apache/commons-codec",
    "bug_commit_hash": [
      "37ba197e62d6b60037d18afc33801e6221f1b8c6"
    ],
    "fix_commit_hash": "5ef5bd199a4e3df74479b4b363fa29b0b3092547",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "37ba197e62d6b60037d18afc33801e6221f1b8c6",
        "line_num": 80,
        "line_str": "return CharSequenceUtils.regionMatches(cs1, false, 0, cs2, 0, Math.max(cs1.length(), cs2.length()));",
        "file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "input_line_num": "range(81, 82)"
      }
    ]
  },
  {
    "id": 10039,
    "repo_name": "apache/commons-codec",
    "bug_commit_hash": [
      "727432fe12821b9e25e2c5a1758076ad83b098eb"
    ],
    "fix_commit_hash": "a5dfe5cbc95d7f3ce0b4829756690c2cb8439f4c",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "727432fe12821b9e25e2c5a1758076ad83b098eb",
        "line_num": 454,
        "line_str": "} else if (contains(value, index + 1, 4, \"IER\")) {",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(455, 456)"
      },
      {
        "commit_hash": "727432fe12821b9e25e2c5a1758076ad83b098eb",
        "line_num": 858,
        "line_str": "} else if ((contains(value, index - 1, 2, \"AS\", \"OS\") ||",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(860, 861)"
      },
      {
        "commit_hash": "727432fe12821b9e25e2c5a1758076ad83b098eb",
        "line_num": 566,
        "line_str": "result.appendAlternate(' ');",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(567, 568)"
      },
      {
        "commit_hash": "727432fe12821b9e25e2c5a1758076ad83b098eb",
        "line_num": 563,
        "line_str": "result.append('L');",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(564, 565)"
      },
      {
        "commit_hash": "727432fe12821b9e25e2c5a1758076ad83b098eb",
        "line_num": 1010,
        "line_str": "*/",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(1005, 1009)"
      },
      {
        "commit_hash": "727432fe12821b9e25e2c5a1758076ad83b098eb",
        "line_num": 1009,
        "line_str": "* at index <code>start</code> and matching up to length <code>length</code>",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(1005, 1009)"
      },
      {
        "commit_hash": "727432fe12821b9e25e2c5a1758076ad83b098eb",
        "line_num": 1008,
        "line_str": "starting",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(1005, 1009)"
      },
      {
        "commit_hash": "727432fe12821b9e25e2c5a1758076ad83b098eb",
        "line_num": 1007,
        "line_str": "* Determines whether <code>value</code> contains any of the criteria",
        "file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_file_path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
        "input_line_num": "range(1005, 1009)"
      }
    ]
  },
  {
    "id": 10040,
    "repo_name": "apache/commons-compress",
    "bug_commit_hash": [
      "a671a703fe86b69adb8c61495a915065c186362d"
    ],
    "fix_commit_hash": "557800a53cedad99afc951032a11931f3e39bf13",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "3503121a0a9fd31efce4803cb2bcbb47310f6f77",
        "line_num": 43,
        "line_str": "return copy(input, output, 8024);",
        "file_path": "src/main/java/org/apache/commons/compress/utils/IOUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/utils/IOUtils.java",
        "input_line_num": "range(49, 50)"
      }
    ]
  },
  {
    "id": 10041,
    "repo_name": "apache/commons-compress",
    "bug_commit_hash": [
      "318de9ae84f1731fda8ce0785ae537f149ea5fcf"
    ],
    "fix_commit_hash": "11840dfde044fec90b0cb4a715ce9d213acea3ca",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "318de9ae84f1731fda8ce0785ae537f149ea5fcf",
        "line_num": 270,
        "line_str": "final char[] chars = s.toCharArray();",
        "file_path": "src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java",
        "input_line_num": "range(270, 271)"
      },
      {
        "commit_hash": "318de9ae84f1731fda8ce0785ae537f149ea5fcf",
        "line_num": 258,
        "line_str": "* replaced with a question mark.",
        "file_path": "src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java",
        "input_line_num": "range(258, 259)"
      }
    ]
  },
  {
    "id": 10042,
    "repo_name": "apache/commons-compress",
    "bug_commit_hash": [
      "982ce0eca9935e65915278ae07febd3a1d52273d"
    ],
    "fix_commit_hash": "6f379134ae1807cd404ed6c9579707e5dc6a6df0",
    "language": [
      "java"
    ],
    "inducing_commit_hash": []
  },
  {
    "id": 10043,
    "repo_name": "apache/commons-compress",
    "bug_commit_hash": [
      "46ad24db76c6f65480736006c2da8b8e5bf8ee25"
    ],
    "fix_commit_hash": "2d858d5c7cc30313c9c3c8ef4a5e8d34d67a395e",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "ae3c158e05af20843fb5ea72deb5b7fb1fefbd54",
        "line_num": 87,
        "line_str": "if (buffer[i] == 0) { // Trailing null",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(98, 99)"
      },
      {
        "commit_hash": "ae3c158e05af20843fb5ea72deb5b7fb1fefbd54",
        "line_num": 91,
        "line_str": "result.append((char) buffer[i]);",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(102, 103)"
      }
    ]
  },
  {
    "id": 10044,
    "repo_name": "apache/commons-compress",
    "bug_commit_hash": [
      "46ad24db76c6f65480736006c2da8b8e5bf8ee25"
    ],
    "fix_commit_hash": "35e4e4fb6848ddfa3878270523f3f9336ae7f9b8",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "1d5567004306b3c6019b4e828f811220fc3fe990",
        "line_num": 51,
        "line_str": "if (currentByte == 0) { // Found trailing null",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(54, 56)"
      },
      {
        "commit_hash": "1d5567004306b3c6019b4e828f811220fc3fe990",
        "line_num": 72,
        "line_str": "result = (result << 3) + (currentByte - '0');// TODO needs to reject invalid bytes",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(76, 77)"
      },
      {
        "commit_hash": "1d5567004306b3c6019b4e828f811220fc3fe990",
        "line_num": 56,
        "line_str": "if (currentByte == (byte) ' ' || currentByte == '0') {",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(60, 61)"
      },
      {
        "commit_hash": "1d5567004306b3c6019b4e828f811220fc3fe990",
        "line_num": 44,
        "line_str": "public static long parseOctal(byte[] buffer, final int offset, final int length) {",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(48, 49)"
      },
      {
        "commit_hash": "1d5567004306b3c6019b4e828f811220fc3fe990",
        "line_num": 66,
        "line_str": "fail(\"Expected IllegalArgumentException\");",
        "file_path": "src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java",
        "input_file_path": "src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java",
        "input_line_num": "range(62, 63)"
      },
      {
        "commit_hash": "1d5567004306b3c6019b4e828f811220fc3fe990",
        "line_num": 61,
        "line_str": "if (currentByte == (byte) ' ') { // Found trailing space",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(65, 66)"
      },
      {
        "commit_hash": "1d5567004306b3c6019b4e828f811220fc3fe990",
        "line_num": 70,
        "line_str": "\"Invalid octal digit at position \"+i+\" in '\"+new String(buffer, offset, length)+\"'\");",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(74, 75)"
      },
      {
        "commit_hash": "1d5567004306b3c6019b4e828f811220fc3fe990",
        "line_num": 50,
        "line_str": "final byte currentByte = buffer[i];",
        "file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java",
        "input_line_num": "range(54, 56)"
      }
    ]
  },
  {
    "id": 10045,
    "repo_name": "google/gson",
    "bug_commit_hash": [
      "765a9f1ecdfaf96f3587f488385111c9d6a4927e"
    ],
    "fix_commit_hash": "ada597e69a78b8b99f79f79493cbf51e16045202",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "2c8bec27d48d0d9ba9d99ff5fb7a9bae36906c48",
        "line_num": 23,
        "line_str": "import junit.framework.TestCase;",
        "file_path": "gson/src/test/java/com/google/gson/stream/JsonWriterTest.java",
        "input_file_path": "gson/src/test/java/com/google/gson/stream/JsonWriterTest.java",
        "input_line_num": "range(23, 24)"
      },
      {
        "commit_hash": "765a9f1ecdfaf96f3587f488385111c9d6a4927e",
        "line_num": 315,
        "line_str": "if (Double.isNaN(value) || Double.isInfinite(value)) {",
        "file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_line_num": "range(494, 495)"
      },
      {
        "commit_hash": "bb7f0b6bb01b0e98e32229cb528772a66a9d6075",
        "line_num": 410,
        "line_str": "writeDeferredName();",
        "file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_file_path": "gson/src/main/java/com/google/gson/stream/JsonWriter.java",
        "input_line_num": "range(497, 498)"
      }
    ]
  },
  {
    "id": 10046,
    "repo_name": "FasterXML/jackson-core",
    "bug_commit_hash": [
      "288b1f323ecaa19345474d78d8263cc443eac3d3"
    ],
    "fix_commit_hash": "3c2c9610b6c76e2b348eb057d0a8268681d573a6",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 27,
        "line_str": "verifyException(e, \"not owned\");",
        "file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_line_num": "range(27, 28)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 58,
        "line_str": "verifyException(e, \"not owned\");",
        "file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_line_num": "range(58, 59)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 88,
        "line_str": "verifyException(e, \"not owned\");",
        "file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_line_num": "range(88, 89)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 43,
        "line_str": "verifyException(e, \"not owned\");",
        "file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_line_num": "range(43, 44)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 73,
        "line_str": "verifyException(e, \"not owned\");",
        "file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/io/TestIOContext.java",
        "input_line_num": "range(73, 74)"
      }
    ]
  },
  {
    "id": 10047,
    "repo_name": "FasterXML/jackson-core",
    "bug_commit_hash": [
      "f15531c04f87f9e4e4724772426603a909eabe2c"
    ],
    "fix_commit_hash": "3baa7d6742f7460bfb0af8edf48bf1575658109a",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "f15531c04f87f9e4e4724772426603a909eabe2c",
        "line_num": 587,
        "line_str": "// Let's grow by 50%",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(583, 584)"
      },
      {
        "commit_hash": "f15531c04f87f9e4e4724772426603a909eabe2c",
        "line_num": 589,
        "line_str": "// Must grow by at least 1 char, no matter what",
        "file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java",
        "input_line_num": "range(585, 586)"
      }
    ]
  },
  {
    "id": 10048,
    "repo_name": "FasterXML/jackson-core",
    "bug_commit_hash": [
      "bb639974b0928a338b4bf60b17b1f612d619e0db"
    ],
    "fix_commit_hash": "0d9cd9fa434c0070638332b7f2243af0277461eb",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "bb639974b0928a338b4bf60b17b1f612d619e0db",
        "line_num": 209,
        "line_str": "char c = str.charAt(i++);",
        "file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_line_num": "range(193, 194)"
      }
    ]
  },
  {
    "id": 10049,
    "repo_name": "FasterXML/jackson-core",
    "bug_commit_hash": [
      "bb639974b0928a338b4bf60b17b1f612d619e0db"
    ],
    "fix_commit_hash": "d99951470163764b3e01a119dab2822e5fd98204",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "0d9cd9fa434c0070638332b7f2243af0277461eb",
        "line_num": 193,
        "line_str": "char c = str.charAt(i);",
        "file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_file_path": "src/main/java/com/fasterxml/jackson/core/JsonPointer.java",
        "input_line_num": "range(193, 194)"
      },
      {
        "commit_hash": "0d9cd9fa434c0070638332b7f2243af0277461eb",
        "line_num": 22,
        "line_str": "",
        "file_path": "release-notes/VERSION",
        "input_file_path": "release-notes/VERSION",
        "input_line_num": "range(22, 23)"
      },
      {
        "commit_hash": "0d9cd9fa434c0070638332b7f2243af0277461eb",
        "line_num": 44,
        "line_str": "",
        "file_path": "src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java",
        "input_line_num": "range(44, 45)"
      }
    ]
  },
  {
    "id": 10050,
    "repo_name": "FasterXML/jackson-core",
    "bug_commit_hash": [
      "f15531c04f87f9e4e4724772426603a909eabe2c"
    ],
    "fix_commit_hash": "11f0b4090937b2aa998734aa2bf032ee8c428e84",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 3,
        "line_str": "import com.fasterxml.jackson.core.util.BufferRecycler;",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(3, 6)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 5,
        "line_str": "",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(3, 6)"
      },
      {
        "commit_hash": "5ff8a2d9a72f0741f9465bf7f04584a3c3e8c28f",
        "line_num": 4,
        "line_str": "import com.fasterxml.jackson.core.util.TextBuffer;",
        "file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_file_path": "src/test/java/com/fasterxml/jackson/core/util/TestTextBuffer.java",
        "input_line_num": "range(3, 6)"
      }
    ]
  },
  {
    "id": 10051,
    "repo_name": "jhy/jsoup",
    "bug_commit_hash": [
      "7eeb74d133625c8819ba8da52e37f4e4db4b8a26"
    ],
    "fix_commit_hash": "8963e2ac79a97e694c388622e935a0471267e9eb",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "cacbbfb9604fc5ce565b3547f4a7de77c037013f",
        "line_num": 18,
        "line_str": "assertEquals(\"UTF-8\", DataUtil.getCharsetFromContentType(\"text/html;charset=\\\"utf-8\\\"\"));",
        "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java",
        "input_file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java",
        "input_line_num": "range(23, 25)"
      },
      {
        "commit_hash": "7eeb74d133625c8819ba8da52e37f4e4db4b8a26",
        "line_num": 9,
        "line_str": "assertEquals(\"UTF-8\", DataUtil.getCharsetFromContentType(\"text/html;charset=utf-8 \"));",
        "file_path": "src/test/java/org/jsoup/DataUtilTest.java",
        "input_file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java",
        "input_line_num": "range(15, 16)"
      },
      {
        "commit_hash": "cacbbfb9604fc5ce565b3547f4a7de77c037013f",
        "line_num": 17,
        "line_str": "assertEquals(\"UTF-8\", DataUtil.getCharsetFromContentType(\"text/html; charset=\\\"utf-8\\\"\"));",
        "file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java",
        "input_file_path": "src/test/java/org/jsoup/helper/DataUtilTest.java",
        "input_line_num": "range(23, 25)"
      },
      {
        "commit_hash": "7eeb74d133625c8819ba8da52e37f4e4db4b8a26",
        "line_num": 104,
        "line_str": "* Parse out a charset from a content type header.",
        "file_path": "src/main/java/org/jsoup/DataUtil.java",
        "input_file_path": "src/main/java/org/jsoup/helper/DataUtil.java",
        "input_line_num": "range(122, 123)"
      }
    ]
  },
  {
    "id": 10052,
    "repo_name": "jhy/jsoup",
    "bug_commit_hash": [
      "f8841edabba28d6125dd87ed72f557e85570066b"
    ],
    "fix_commit_hash": "5e52f1b266173593fab32fe9d8a4963066b2f2fe",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 18,
        "line_str": "assertEquals(\"Hello &amp;&lt;&gt; &angst; &pi; &#26032; there\", escapedAsciiFull);",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(17, 20)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 17,
        "line_str": "assertEquals(\"Hello &amp;&lt;&gt; &aring; &#960; &#26032; there\", escapedAscii);",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(17, 20)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 22,
        "line_str": "private static final Map<String, Character> base;",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(21, 22)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 2259,
        "line_str": "fullByVal.put(c, ((String) entity[0]).toLowerCase());",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(2243, 2244)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 12,
        "line_str": "String text = \"Hello &<> Å π 新 there\";",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(12, 13)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 2254,
        "line_str": "baseByVal.put(c, ((String) entity[0]).toLowerCase());",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(2237, 2239)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 2253,
        "line_str": "base.put((String) entity[0], c);",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(2237, 2239)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 2246,
        "line_str": "base = new HashMap<String, Character>(baseArray.length);",
        "file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Entities.java",
        "input_line_num": "range(2230, 2231)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 24,
        "line_str": "String text = \"Hello &amp;&LT&gt; &ANGST &#960; &#960 &#x65B0; there &!\";",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(24, 25)"
      },
      {
        "commit_hash": "f8841edabba28d6125dd87ed72f557e85570066b",
        "line_num": 19,
        "line_str": "assertEquals(\"Hello &amp;&lt;&gt; &aring; π 新 there\", escapedUtf);",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(17, 20)"
      }
    ]
  },
  {
    "id": 10053,
    "repo_name": "jhy/jsoup",
    "bug_commit_hash": [
      "a623db776696c0e03f68e849147f6a0c57063c02"
    ],
    "fix_commit_hash": "25ba713e1d1a97ebfee38c0df3e7e6d4d9615f97",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "6569bb7a3671cb7241c6fcb6e0f1eef7a39f7a1d",
        "line_num": 34,
        "line_str": "this.key = key.trim();",
        "file_path": "src/main/java/org/jsoup/nodes/Attribute.java",
        "input_file_path": "src/main/java/org/jsoup/nodes/Attribute.java",
        "input_line_num": "range(44, 45)"
      }
    ]
  },
  {
    "id": 10054,
    "repo_name": "jhy/jsoup",
    "bug_commit_hash": [
      "935cab0e00f289ce5369f4c217b5eb3a3d9e33e7"
    ],
    "fix_commit_hash": "2e4969497c5734d90d394103728bb517644f9157",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "5e52f1b266173593fab32fe9d8a4963066b2f2fe",
        "line_num": 17,
        "line_str": "assertEquals(\"Hello &amp;&lt;&gt; &Aring; &aring; &#960; &#26032; there\", escapedAscii);",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(18, 20)"
      },
      {
        "commit_hash": "5e52f1b266173593fab32fe9d8a4963066b2f2fe",
        "line_num": 18,
        "line_str": "assertEquals(\"Hello &amp;&lt;&gt; &angst; &aring; &pi; &#26032; there\", escapedAsciiFull);",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(18, 20)"
      },
      {
        "commit_hash": "5e52f1b266173593fab32fe9d8a4963066b2f2fe",
        "line_num": 12,
        "line_str": "String text = \"Hello &<> Å å π 新 there\";",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(12, 13)"
      },
      {
        "commit_hash": "5e52f1b266173593fab32fe9d8a4963066b2f2fe",
        "line_num": 24,
        "line_str": "String text = \"Hello &amp;&LT&gt; &angst &#960; &#960 &#x65B0; there &!\";",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(26, 27)"
      },
      {
        "commit_hash": "5e52f1b266173593fab32fe9d8a4963066b2f2fe",
        "line_num": 19,
        "line_str": "assertEquals(\"Hello &amp;&lt;&gt; &Aring; &aring; π 新 there\", escapedUtf);",
        "file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_file_path": "src/test/java/org/jsoup/nodes/EntitiesTest.java",
        "input_line_num": "range(21, 22)"
      }
    ]
  },
  {
    "id": 10055,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": [
      "01ab63a0f1d4b8d17d86dc4be56cbc7b92154a48"
    ],
    "fix_commit_hash": "bd59a1908a1df3364918be7b07782500616b15ac",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "01ab63a0f1d4b8d17d86dc4be56cbc7b92154a48",
        "line_num": 236,
        "line_str": "",
        "file_path": "src/main/java/org/apache/commons/lang3/SerializationUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/SerializationUtils.java",
        "input_line_num": "range(238, 239)"
      },
      {
        "commit_hash": "01ab63a0f1d4b8d17d86dc4be56cbc7b92154a48",
        "line_num": 263,
        "line_str": "return Class.forName(name, false, Thread.currentThread().getContextClassLoader());",
        "file_path": "src/main/java/org/apache/commons/lang3/SerializationUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/SerializationUtils.java",
        "input_line_num": "range(265, 266)"
      }
    ]
  },
  {
    "id": 10056,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": [
      "cf2e48a05c250feb636dd337dae1ffb7a1d9d411"
    ],
    "fix_commit_hash": "cf7211f9d7d70d56501d8c4c827bf9ce3cac5f0b",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "d23b22c78078ee7468e797e80188ae9508c0eee0",
        "line_num": 101,
        "line_str": "assertEquals(true, StringUtils.equals(FOO, new String(new char[] { 'f', 'o', 'o' })));",
        "file_path": "src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(442, 449)"
      },
      {
        "commit_hash": "d23b22c78078ee7468e797e80188ae9508c0eee0",
        "line_num": 100,
        "line_str": "assertEquals(true, StringUtils.equals(FOO, FOO));",
        "file_path": "src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(442, 449)"
      },
      {
        "commit_hash": "d23b22c78078ee7468e797e80188ae9508c0eee0",
        "line_num": 99,
        "line_str": "assertEquals(true, StringUtils.equals(null, null));",
        "file_path": "src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(442, 449)"
      },
      {
        "commit_hash": "d23b22c78078ee7468e797e80188ae9508c0eee0",
        "line_num": 105,
        "line_str": "assertEquals(false, StringUtils.equals(null, FOO));",
        "file_path": "src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(442, 449)"
      },
      {
        "commit_hash": "d23b22c78078ee7468e797e80188ae9508c0eee0",
        "line_num": 104,
        "line_str": "assertEquals(false, StringUtils.equals(FOO, null));",
        "file_path": "src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(442, 449)"
      },
      {
        "commit_hash": "d23b22c78078ee7468e797e80188ae9508c0eee0",
        "line_num": 103,
        "line_str": "assertEquals(false, StringUtils.equals(FOO, BAR));",
        "file_path": "src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(442, 449)"
      },
      {
        "commit_hash": "d23b22c78078ee7468e797e80188ae9508c0eee0",
        "line_num": 102,
        "line_str": "assertEquals(false, StringUtils.equals(FOO, new String(new char[] { 'f', 'O', 'O' })));",
        "file_path": "src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java",
        "input_line_num": "range(442, 449)"
      }
    ]
  },
  {
    "id": 10057,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": [
      "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1"
    ],
    "fix_commit_hash": "0b3a8a3128890f710700d04e38df48b883d11d91",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "8bbab3898bb91f1efa442b3997f92be8ce191d02",
        "line_num": 37,
        "line_str": "if(input.charAt(index) == '&' && index < (input.length() - 1) && input.charAt(index + 1) == '#') {",
        "file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(36, 37)"
      },
      {
        "commit_hash": "8bbab3898bb91f1efa442b3997f92be8ce191d02",
        "line_num": 43,
        "line_str": "assertEquals(\"Failed to ignore when last character is &\", expected, result);",
        "file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_line_num": "range(43, 44)"
      },
      {
        "commit_hash": "8bbab3898bb91f1efa442b3997f92be8ce191d02",
        "line_num": 40,
        "line_str": "String expected = input;",
        "file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_line_num": "range(39, 41)"
      },
      {
        "commit_hash": "8bbab3898bb91f1efa442b3997f92be8ce191d02",
        "line_num": 39,
        "line_str": "String input = \"Test &\";",
        "file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_file_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "input_line_num": "range(39, 41)"
      }
    ]
  },
  {
    "id": 10058,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": [
      "2a41c12c95bb41f7b07a270927b27f3bc5098621"
    ],
    "fix_commit_hash": "55f642725742513824975af0e5e91cb1920b6d72",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "2a41c12c95bb41f7b07a270927b27f3bc5098621",
        "line_num": 224,
        "line_str": "cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) &&",
        "file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/time/DateUtils.java",
        "input_line_num": "range(265, 266)"
      }
    ]
  },
  {
    "id": 10059,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": [
      "dcdea66eff6cee2cd956e8ad2a92ab3a7c3a2f09"
    ],
    "fix_commit_hash": "0b2b82ad923b0455cde93286e3f504a1abd0863b",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "dcdea66eff6cee2cd956e8ad2a92ab3a7c3a2f09",
        "line_num": 571,
        "line_str": "if (Math.abs(u) <= 1 || Math.abs(v) <= 1) {",
        "file_path": "src/java/org/apache/commons/lang/math/Fraction.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/math/Fraction.java",
        "input_line_num": "range(582, 584)"
      },
      {
        "commit_hash": "dcdea66eff6cee2cd956e8ad2a92ab3a7c3a2f09",
        "line_num": 570,
        "line_str": "//if either op. is abs 0 or 1, return 1:",
        "file_path": "src/java/org/apache/commons/lang/math/Fraction.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/math/Fraction.java",
        "input_line_num": "range(582, 584)"
      }
    ]
  },
  {
    "id": 10060,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": [
      "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1"
    ],
    "fix_commit_hash": "2bae68787d15c3d3540380164e62759485078ec1",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 94,
        "line_str": "{\"\\u00E3\", \"&acirc;\"}, // \udce2 - lowercase a, circumflex accent",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(74, 101)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 90,
        "line_str": "{\"\\u00DF\", \"&THORN;\"}, // \udcde - uppercase THORN, Icelandic",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(74, 101)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 86,
        "line_str": "{\"\\u00DB\", \"&Uacute;\"}, // \udcda - uppercase U, acute accent",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(74, 101)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 82,
        "line_str": "{\"\\u00D7\", \"&Ouml;\"}, // \udcd6 - uppercase O, umlaut",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(74, 101)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 78,
        "line_str": "{\"\\u00D3\", \"&Ograve;\"}, // \udcd2 - uppercase O, grave accent",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(74, 101)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 74,
        "line_str": "{\"\\u00CF\", \"&Icirc;\"}, // \udcce - uppercase I, circumflex accent",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(74, 101)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 70,
        "line_str": "{\"\\u00CB\", \"&Ecirc;\"}, // \udcca - uppercase E, circumflex accent",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(74, 101)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 95,
        "line_str": "{\"\\u00E4\", \"&atilde;\"}, // \udce3 - lowercase a, tilde",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(74, 101)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 91,
        "line_str": "{\"\\u00E0\", \"&szlig;\"}, // \udcdf - lowercase sharps, German",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(74, 101)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 87,
        "line_str": "{\"\\u00DC\", \"&Ucirc;\"}, // \udcdb - uppercase U, circumflex accent",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(74, 101)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 83,
        "line_str": "{\"\\u00D8\", \"&times;\"}, // multiplication sign",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(74, 101)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 79,
        "line_str": "{\"\\u00D4\", \"&Oacute;\"}, // \udcd3 - uppercase O, acute accent",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(74, 101)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 75,
        "line_str": "{\"\\u00D0\", \"&Iuml;\"}, // \udccf - uppercase I, umlaut",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(74, 101)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 71,
        "line_str": "{\"\\u00CC\", \"&Euml;\"}, // \udccb - uppercase E, umlaut",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(74, 101)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 96,
        "line_str": "{\"\\u00E5\", \"&auml;\"}, // \udce4 - lowercase a, umlaut",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(74, 101)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 92,
        "line_str": "{\"\\u00E1\", \"&agrave;\"}, // \udce0 - lowercase a, grave accent",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(74, 101)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 88,
        "line_str": "{\"\\u00DD\", \"&Uuml;\"}, // \udcdc - uppercase U, umlaut",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(74, 101)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 84,
        "line_str": "{\"\\u00D9\", \"&Oslash;\"}, // \udcd8 - uppercase O, slash",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(74, 101)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 80,
        "line_str": "{\"\\u00D5\", \"&Ocirc;\"}, // \udcd4 - uppercase O, circumflex accent",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(74, 101)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 76,
        "line_str": "{\"\\u00D1\", \"&ETH;\"}, // \udcd0 - uppercase Eth, Icelandic",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(74, 101)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 72,
        "line_str": "{\"\\u00CD\", \"&Igrave;\"}, // \udccc - uppercase I, grave accent",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(74, 101)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 93,
        "line_str": "{\"\\u00E2\", \"&aacute;\"}, // \udce1 - lowercase a, acute accent",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(74, 101)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 89,
        "line_str": "{\"\\u00DE\", \"&Yacute;\"}, // \udcdd - uppercase Y, acute accent",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(74, 101)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 85,
        "line_str": "{\"\\u00DA\", \"&Ugrave;\"}, // \udcd9 - uppercase U, grave accent",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(74, 101)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 81,
        "line_str": "{\"\\u00D6\", \"&Otilde;\"}, // \udcd5 - uppercase O, tilde",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(74, 101)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 77,
        "line_str": "{\"\\u00D2\", \"&Ntilde;\"}, // \udcd1 - uppercase N, tilde",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(74, 101)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 73,
        "line_str": "{\"\\u00CE\", \"&Iacute;\"}, // \udccd - uppercase I, acute accent",
        "file_path": "src/java/org/apache/commons/lang/text/translate/EntityArrays.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/EntityArrays.java",
        "input_line_num": "range(74, 101)"
      }
    ]
  },
  {
    "id": 10061,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": [
      "e794af9688ae2dee664864be0d128df9a88509ba"
    ],
    "fix_commit_hash": "75d5b74a1a7ef68c5169f4b44cdf972c1ab07ee0",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "9839566cf0eb6d299a61d6354522d6f65ab83af3",
        "line_num": 637,
        "line_str": "Calendar c = new GregorianCalendar(mTimeZone);",
        "file_path": "src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java",
        "input_line_num": "range(820, 821)"
      }
    ]
  },
  {
    "id": 10062,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": [
      "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1"
    ],
    "fix_commit_hash": "3e1afecc200d7e3be9537c95b7cf52a7c5031300",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 61,
        "line_str": "out.write(entityValue);",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(63, 65)"
      },
      {
        "commit_hash": "a2447673d9ca590a3ed967e7a30b1f9cd18e78d1",
        "line_num": 60,
        "line_str": "// TODO: if(entityValue > 0xFFFF) {",
        "file_path": "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "input_line_num": "range(63, 65)"
      }
    ]
  },
  {
    "id": 10063,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": [
      "4bdc5d864104f29b4ebfe0105b75002db9f58f07"
    ],
    "fix_commit_hash": "38bf7048571f3bc8dd34d14691906426444e4381",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "4bdc5d864104f29b4ebfe0105b75002db9f58f07",
        "line_num": 1177,
        "line_str": "}",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(1446, 1454)"
      },
      {
        "commit_hash": "4bdc5d864104f29b4ebfe0105b75002db9f58f07",
        "line_num": 1176,
        "line_str": "}",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(1446, 1454)"
      },
      {
        "commit_hash": "4bdc5d864104f29b4ebfe0105b75002db9f58f07",
        "line_num": 1173,
        "line_str": "if (searchChars[j] == ch) {",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(1446, 1454)"
      },
      {
        "commit_hash": "4bdc5d864104f29b4ebfe0105b75002db9f58f07",
        "line_num": 1172,
        "line_str": "for (int j = 0; j < searchChars.length; j++) {",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(1446, 1454)"
      },
      {
        "commit_hash": "4bdc5d864104f29b4ebfe0105b75002db9f58f07",
        "line_num": 1174,
        "line_str": "return true;",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(1446, 1454)"
      },
      {
        "commit_hash": "4bdc5d864104f29b4ebfe0105b75002db9f58f07",
        "line_num": 1175,
        "line_str": "}",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(1446, 1454)"
      },
      {
        "commit_hash": "4bdc5d864104f29b4ebfe0105b75002db9f58f07",
        "line_num": 1169,
        "line_str": "}",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(1442, 1444)"
      },
      {
        "commit_hash": "4bdc5d864104f29b4ebfe0105b75002db9f58f07",
        "line_num": 1168,
        "line_str": "return false;",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(1442, 1444)"
      },
      {
        "commit_hash": "4bdc5d864104f29b4ebfe0105b75002db9f58f07",
        "line_num": 1178,
        "line_str": "return false;",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(1446, 1454)"
      },
      {
        "commit_hash": "4bdc5d864104f29b4ebfe0105b75002db9f58f07",
        "line_num": 1179,
        "line_str": "}",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "input_line_num": "range(1446, 1454)"
      }
    ]
  },
  {
    "id": 10064,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": [
      "5310e78952ca17521b7d5e83bfcefafa227187a5"
    ],
    "fix_commit_hash": "cb40e35f5e0990fad4c5278964fcc24e112dde8c",
    "language": [
      "java"
    ],
    "inducing_commit_hash": []
  },
  {
    "id": 10065,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": [
      "362fa778259f188a4bef82716478d9e288d3f303"
    ],
    "fix_commit_hash": "fb47b96ab635d7cc6e9edefdddc46f1baf63b117",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "4ddbd99c5805781bd3c2287ab7920fecc23dab53",
        "line_num": 28,
        "line_str": "*       the key to a HashMap. See http://issues.apache.org/jira/browse/LANG-882.",
        "file_path": "src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java",
        "input_line_num": "range(26, 29)"
      },
      {
        "commit_hash": "4ddbd99c5805781bd3c2287ab7920fecc23dab53",
        "line_num": 27,
        "line_str": "*       equals(Object) and hashCode() methods as the class uses the CharSequence as",
        "file_path": "src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java",
        "input_line_num": "range(26, 29)"
      },
      {
        "commit_hash": "4ddbd99c5805781bd3c2287ab7920fecc23dab53",
        "line_num": 26,
        "line_str": "* NOTE: This class is broken for any CharSequence implementation that does not define",
        "file_path": "src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/LookupTranslator.java",
        "input_line_num": "range(26, 29)"
      }
    ]
  },
  {
    "id": 10066,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": [
      "0c5f9f0d1f91164b9cfb3daf887fc9dbf7bd198c"
    ],
    "fix_commit_hash": "8b1a8e178abb46cc048a3982636b8ec4e6ffc8dc",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "0c5f9f0d1f91164b9cfb3daf887fc9dbf7bd198c",
        "line_num": 1040,
        "line_str": "* {@link #contains(String, String)}.</p>",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_line_num": "range(1023, 1025)"
      },
      {
        "commit_hash": "0c5f9f0d1f91164b9cfb3daf887fc9dbf7bd198c",
        "line_num": 1064,
        "line_str": "return contains(str.toUpperCase(), searchStr.toUpperCase());",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_line_num": "range(1048, 1049)"
      },
      {
        "commit_hash": "0c5f9f0d1f91164b9cfb3daf887fc9dbf7bd198c",
        "line_num": 1039,
        "line_str": "* handling <code>null</code>. This method uses",
        "file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "input_line_num": "range(1023, 1025)"
      }
    ]
  },
  {
    "id": 10067,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": [
      "695289c466e51ff7f211867dccbc755fd515fc43"
    ],
    "fix_commit_hash": "eb3e2ae1f3734986a9f0225c661888baac3cb13b",
    "language": [
      "java"
    ],
    "inducing_commit_hash": []
  },
  {
    "id": 10068,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": [
      "d23b22c78078ee7468e797e80188ae9508c0eee0"
    ],
    "fix_commit_hash": "81f10d7f1ef52d44f43b38d81ac3dc1c83d45134",
    "language": [
      "java"
    ],
    "inducing_commit_hash": []
  },
  {
    "id": 10069,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": [
      "8688d11849b9335f63210dd9018545b3c3a907d8"
    ],
    "fix_commit_hash": "d95fcd8e24568b4f9d3cb9da922a4029e293c793",
    "language": [
      "java"
    ],
    "inducing_commit_hash": []
  },
  {
    "id": 10070,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": [
      "868f6976aea222e96259843f56df9aed8e48584b"
    ],
    "fix_commit_hash": "916639bda234a8e5a030361c4068667764b34cb7",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "7eba6afba9a9e1c934985a494725f9470d34c9ec",
        "line_num": 210,
        "line_str": "case '\\r':",
        "file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_line_num": "range(213, 214)"
      },
      {
        "commit_hash": "7eba6afba9a9e1c934985a494725f9470d34c9ec",
        "line_num": 206,
        "line_str": "case '\\f':",
        "file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_line_num": "range(209, 210)"
      },
      {
        "commit_hash": "7eba6afba9a9e1c934985a494725f9470d34c9ec",
        "line_num": 202,
        "line_str": "case '\\t':",
        "file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_line_num": "range(205, 206)"
      },
      {
        "commit_hash": "7eba6afba9a9e1c934985a494725f9470d34c9ec",
        "line_num": 232,
        "line_str": "case '\\\\':",
        "file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_line_num": "range(237, 238)"
      },
      {
        "commit_hash": "7eba6afba9a9e1c934985a494725f9470d34c9ec",
        "line_num": 198,
        "line_str": "case '\\n':",
        "file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_line_num": "range(201, 202)"
      },
      {
        "commit_hash": "7eba6afba9a9e1c934985a494725f9470d34c9ec",
        "line_num": 228,
        "line_str": "case '\"':",
        "file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_line_num": "range(233, 234)"
      },
      {
        "commit_hash": "7eba6afba9a9e1c934985a494725f9470d34c9ec",
        "line_num": 194,
        "line_str": "case '\\b':",
        "file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_line_num": "range(197, 198)"
      },
      {
        "commit_hash": "7eba6afba9a9e1c934985a494725f9470d34c9ec",
        "line_num": 224,
        "line_str": "case '\\'':",
        "file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "input_line_num": "range(227, 228)"
      }
    ]
  },
  {
    "id": 10071,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": [
      "e5bd9a5654ff829b091a5a6c4f8ed6180c3d359b"
    ],
    "fix_commit_hash": "d5e343049c2610c31ddacb24f0d173942f6d5ac9",
    "language": [
      "java"
    ],
    "inducing_commit_hash": []
  },
  {
    "id": 10072,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": [
      "dd2cd176597eb3acc4d16942a3a9870883366cef"
    ],
    "fix_commit_hash": "eb8f74efb75e71fc91e515a38becc2aac203e339",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "2f435baa687274dac335ed00aa943f2d35bbf9a2",
        "line_num": 291,
        "line_str": "// The simple case, not an array, just test the element",
        "file_path": "src/java/org/apache/commons/lang/builder/EqualsBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/builder/EqualsBuilder.java",
        "input_line_num": "range(380, 381)"
      },
      {
        "commit_hash": "dd2cd176597eb3acc4d16942a3a9870883366cef",
        "line_num": 211,
        "line_str": "isEquals = lhs.equals(rhs);",
        "file_path": "src/java/org/apache/commons/lang/builder/EqualsBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/builder/EqualsBuilder.java",
        "input_line_num": "range(381, 382)"
      }
    ]
  },
  {
    "id": 10073,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": [
      "7e8976d60b8a24f9fc03f89d98304d77e6153b6d"
    ],
    "fix_commit_hash": "0ac772a4e3b07287c435fdc3c812f67277c85cc8",
    "language": [
      "java"
    ],
    "inducing_commit_hash": []
  },
  {
    "id": 10074,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": [
      "49b8c603ef302a4b8d44070e9649770f6afe655d"
    ],
    "fix_commit_hash": "a5589b39e985e64861bd920aa7b13ab32c215b06",
    "language": [
      "java"
    ],
    "inducing_commit_hash": []
  },
  {
    "id": 10075,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": [
      "f03e83e74e8a723fd8c8fffc84cc7faaf9494ab4"
    ],
    "fix_commit_hash": "868f6976aea222e96259843f56df9aed8e48584b",
    "language": [
      "java"
    ],
    "inducing_commit_hash": []
  },
  {
    "id": 10076,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": [
      "bb1671667d9085fb76bd06af7f7ad91d2c1c8389"
    ],
    "fix_commit_hash": "d3b1163073c7aeb6011a5b65bfadad15bfc0f108",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "bb1671667d9085fb76bd06af7f7ad91d2c1c8389",
        "line_num": 653,
        "line_str": "}",
        "file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_line_num": "range(652, 655)"
      },
      {
        "commit_hash": "bb1671667d9085fb76bd06af7f7ad91d2c1c8389",
        "line_num": 652,
        "line_str": "done = true;",
        "file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_line_num": "range(652, 655)"
      },
      {
        "commit_hash": "bb1671667d9085fb76bd06af7f7ad91d2c1c8389",
        "line_num": 651,
        "line_str": "if (field == Calendar.MINUTE) {",
        "file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_line_num": "range(652, 655)"
      },
      {
        "commit_hash": "bb1671667d9085fb76bd06af7f7ad91d2c1c8389",
        "line_num": 644,
        "line_str": "}",
        "file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_line_num": "range(643, 646)"
      },
      {
        "commit_hash": "bb1671667d9085fb76bd06af7f7ad91d2c1c8389",
        "line_num": 643,
        "line_str": "done = true;",
        "file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_line_num": "range(643, 646)"
      },
      {
        "commit_hash": "bb1671667d9085fb76bd06af7f7ad91d2c1c8389",
        "line_num": 642,
        "line_str": "if (field == Calendar.SECOND) {",
        "file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/time/DateUtils.java",
        "input_line_num": "range(643, 646)"
      }
    ]
  },
  {
    "id": 10077,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": [
      "ddd4f84525178a0722ecbc01229d919d11c526f7"
    ],
    "fix_commit_hash": "e89e8d62b911340cc5b293465cdae909f3dfd640",
    "language": [
      "java"
    ],
    "inducing_commit_hash": []
  },
  {
    "id": 10078,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": [
      "8b070b8b22a00b7969a68317ea0f2409e06ec2ea"
    ],
    "fix_commit_hash": "3ef8a796b5ddf87e3e9afec9ba94aac62681b394",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "8b070b8b22a00b7969a68317ea0f2409e06ec2ea",
        "line_num": 114,
        "line_str": "stopTime = System.currentTimeMillis();",
        "file_path": "src/java/org/apache/commons/lang/time/StopWatch.java",
        "input_file_path": "src/java/org/apache/commons/lang/time/StopWatch.java",
        "input_line_num": "range(118, 119)"
      }
    ]
  },
  {
    "id": 10079,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": [
      "ddd4f84525178a0722ecbc01229d919d11c526f7"
    ],
    "fix_commit_hash": "bbd990b81fd7f8ab9dde75c8070b973b9ce500fc",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "ddd4f84525178a0722ecbc01229d919d11c526f7",
        "line_num": 217,
        "line_str": "return cAvailableLocaleSet.contains(locale);",
        "file_path": "src/java/org/apache/commons/lang/LocaleUtils.java",
        "input_file_path": "src/java/org/apache/commons/lang/LocaleUtils.java",
        "input_line_num": "range(223, 224)"
      }
    ]
  },
  {
    "id": 10080,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": [
      "b4255e6d071dc8d48bfc51037cecb29097b9a49d"
    ],
    "fix_commit_hash": "cff0f1ae37bb2b7ab2dcdb10dec1f3cad7532e1c",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "b4255e6d071dc8d48bfc51037cecb29097b9a49d",
        "line_num": 95,
        "line_str": "pos += Character.charCount(Character.codePointAt(input, pos));",
        "file_path": "src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java",
        "input_file_path": "src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java",
        "input_line_num": "range(95, 96)"
      }
    ]
  },
  {
    "id": 10081,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": [
      "e5bd9a5654ff829b091a5a6c4f8ed6180c3d359b"
    ],
    "fix_commit_hash": "a8203b65261110c4a30ff69fe0da7a2390d82757",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "e5bd9a5654ff829b091a5a6c4f8ed6180c3d359b",
        "line_num": 1202,
        "line_str": "for (int i = 0; i < thisBuf.length; i++) {",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(1673, 1674)"
      },
      {
        "commit_hash": "e5bd9a5654ff829b091a5a6c4f8ed6180c3d359b",
        "line_num": 1244,
        "line_str": "for (int i = startIndex; i < thisBuf.length; i++) {",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(1730, 1731)"
      }
    ]
  },
  {
    "id": 10082,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": [
      "e5bd9a5654ff829b091a5a6c4f8ed6180c3d359b"
    ],
    "fix_commit_hash": "88c76d207f642831ca899e144159424aaa60cf8e",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "4abacfbf779d2b9ae9dbad8283792ad05f3b84be",
        "line_num": 1706,
        "line_str": "for (int i = startIndex; i < thisBuf.length - strLen; i++) {",
        "file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_file_path": "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "input_line_num": "range(1777, 1778)"
      }
    ]
  },
  {
    "id": 10083,
    "repo_name": "apache/commons-lang",
    "bug_commit_hash": [
      "d17bffa174a507998e343b60a5e8852821f36412"
    ],
    "fix_commit_hash": "8de71ae52958ae70fe651b7327319c9beecd9b84",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "beca09f1f9bde257177f26d1414ce0444f1ee8fe",
        "line_num": 2,
        "line_str": "* Copyright 2002-2005 The Apache Software Foundation.",
        "file_path": "src/test/org/apache/commons/lang/enums/ValuedEnumTest.java",
        "input_file_path": "src/test/org/apache/commons/lang/enums/ValuedEnumTest.java",
        "input_line_num": "range(2, 3)"
      },
      {
        "commit_hash": "beca09f1f9bde257177f26d1414ce0444f1ee8fe",
        "line_num": 2,
        "line_str": "* Copyright 2004-2005 The Apache Software Foundation.",
        "file_path": "src/test/org/apache/commons/lang/enums/EnumEqualsTest.java",
        "input_file_path": "src/test/org/apache/commons/lang/enums/EnumEqualsTest.java",
        "input_line_num": "range(2, 3)"
      }
    ]
  },
  {
    "id": 10084,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": [
      "67dffec4e7adc482215df440e716525ffce5c1c5"
    ],
    "fix_commit_hash": "7e2ffcc9034de41d7787f0b33b5670474f7a10de",
    "language": [
      "java"
    ],
    "inducing_commit_hash": []
  },
  {
    "id": 10085,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": [
      "322706393973a99fc70f0cbd8cadee38bae3aa94"
    ],
    "fix_commit_hash": "32643d19538ad853a1280eb4060c4f15ac6dc3dd",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "322706393973a99fc70f0cbd8cadee38bae3aa94",
        "line_num": 337,
        "line_str": "if (source.substring(startIndex, endIndex).compareTo(",
        "file_path": "src/java/org/apache/commons/math/complex/ComplexFormat.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/ComplexFormat.java",
        "input_line_num": "range(377, 378)"
      }
    ]
  },
  {
    "id": 10086,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": [
      "ac9e22b1d5abce5909d5ae2b2dde33166dddeae8"
    ],
    "fix_commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "ac9e22b1d5abce5909d5ae2b2dde33166dddeae8",
        "line_num": 101,
        "line_str": "return 0.5 * (1.0 + Erf.erf((x - mean) /",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(106, 108)"
      },
      {
        "commit_hash": "bd4c0682a71ff99179cc6ab2b0c1f23339267945",
        "line_num": 102,
        "line_str": "* @throws MathException if the algorithm fails to converge.",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(103, 104)"
      }
    ]
  },
  {
    "id": 10087,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": [
      "0a904461932f2c0455611e77ec6a8d8aced2980b"
    ],
    "fix_commit_hash": "e39a7750ef362679599b623b05bfadb150832515",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 154,
        "line_str": "testLogBeta(-0.693147, 1.0, 2.0);",
        "file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_line_num": "range(117, 118)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 86,
        "line_str": "TestUtils.assertEquals(expected, actual, 10e-5);",
        "file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_line_num": "range(49, 50)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 128,
        "line_str": "testLogGamma(0.693147, 3.0);",
        "file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_line_num": "range(93, 94)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 78,
        "line_str": "TestUtils.assertEquals(expected, actual, 10e-5);",
        "file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/BetaTest.java",
        "input_line_num": "range(41, 42)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 67,
        "line_str": "private static final double DEFAULT_EPSILON = 10e-9;",
        "file_path": "src/java/org/apache/commons/math/special/Gamma.java",
        "input_file_path": "src/java/org/apache/commons/math/special/Gamma.java",
        "input_line_num": "range(37, 38)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 84,
        "line_str": "TestUtils.assertEquals(expected, actual, 10e-5);",
        "file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_line_num": "range(49, 50)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 112,
        "line_str": "testRegularizedGamma(0.632121, 1.0, 1.0);",
        "file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_file_path": "src/test/org/apache/commons/math/special/GammaTest.java",
        "input_line_num": "range(77, 78)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 67,
        "line_str": "private static final double DEFAULT_EPSILON = 10e-9;",
        "file_path": "src/java/org/apache/commons/math/special/Beta.java",
        "input_file_path": "src/java/org/apache/commons/math/special/Beta.java",
        "input_line_num": "range(36, 37)"
      }
    ]
  },
  {
    "id": 10088,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": [
      "b45652977d317211bcd02e01446796d664bc96f5"
    ],
    "fix_commit_hash": "fc21b26f84312e4f75e8b144238618c73a8b091f",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "b45652977d317211bcd02e01446796d664bc96f5",
        "line_num": 249,
        "line_str": "return sumYY - sumXY * sumXY / sumXX;",
        "file_path": "src/java/org/apache/commons/math/stat/regression/SimpleRegression.java",
        "input_file_path": "src/java/org/apache/commons/math/stat/regression/SimpleRegression.java",
        "input_line_num": "range(249, 250)"
      }
    ]
  },
  {
    "id": 10089,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": [
      "41598b038509e9cdb7f6dbeefdb2a2876d2708a6"
    ],
    "fix_commit_hash": "41ba9e00e3bbde990f6821f67f0da2a5575b9ac3",
    "language": [
      "java"
    ],
    "inducing_commit_hash": []
  },
  {
    "id": 10090,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": [
      "80180b28efc35d63bedde1f7014c29349d744dfe"
    ],
    "fix_commit_hash": "a6b2e992e17cee0d4cb5a2da8242a20b8e5a8fc3",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "80180b28efc35d63bedde1f7014c29349d744dfe",
        "line_num": 267,
        "line_str": "return dec.getSquareRoot();",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(266, 268)"
      },
      {
        "commit_hash": "80180b28efc35d63bedde1f7014c29349d744dfe",
        "line_num": 266,
        "line_str": "final EigenDecomposition dec = new EigenDecomposition(m);",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java",
        "input_line_num": "range(266, 268)"
      },
      {
        "commit_hash": "80180b28efc35d63bedde1f7014c29349d744dfe",
        "line_num": 46,
        "line_str": "}",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(43, 47)"
      },
      {
        "commit_hash": "80180b28efc35d63bedde1f7014c29349d744dfe",
        "line_num": 45,
        "line_str": "weightMatrix.setEntry(i, i, weight[i]);",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(43, 47)"
      },
      {
        "commit_hash": "80180b28efc35d63bedde1f7014c29349d744dfe",
        "line_num": 44,
        "line_str": "for (int i = 0; i < dim; i++) {",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(43, 47)"
      },
      {
        "commit_hash": "80180b28efc35d63bedde1f7014c29349d744dfe",
        "line_num": 43,
        "line_str": "weightMatrix = MatrixUtils.createRealMatrix(dim, dim);",
        "file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java",
        "input_line_num": "range(43, 47)"
      }
    ]
  },
  {
    "id": 10091,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": [
      "90279e83d82389db2ba88898ec985a1827849e6e"
    ],
    "fix_commit_hash": "b221a7342856a2a548f5d9817055defc0ec4dea6",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "dc5fdf712a7d0f04d44f97db379827a4f1fe043d",
        "line_num": 1585,
        "line_str": "if (y >= TWO_POWER_52 || y <= -TWO_POWER_52) {",
        "file_path": "src/main/java/org/apache/commons/math/util/FastMath.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "input_line_num": "range(1540, 1541)"
      }
    ]
  },
  {
    "id": 10092,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": [
      "1eb0c0d7421823470de3a901643ae3be2c9e0a8e"
    ],
    "fix_commit_hash": "621806b796bc416f00341feca894ebae07be5ed0",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "1eb0c0d7421823470de3a901643ae3be2c9e0a8e",
        "line_num": 908,
        "line_str": "nan,",
        "file_path": "src/test/java/org/apache/commons/math/dfp/DfpTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/dfp/DfpTest.java",
        "input_line_num": "range(909, 912)"
      },
      {
        "commit_hash": "1eb0c0d7421823470de3a901643ae3be2c9e0a8e",
        "line_num": 907,
        "line_str": "test(field.newDfp(\"1\").multiply(10000),  // out of range",
        "file_path": "src/test/java/org/apache/commons/math/dfp/DfpTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/dfp/DfpTest.java",
        "input_line_num": "range(909, 912)"
      },
      {
        "commit_hash": "1eb0c0d7421823470de3a901643ae3be2c9e0a8e",
        "line_num": 1512,
        "line_str": "* There are speed advantages in this special case",
        "file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/dfp/Dfp.java",
        "input_line_num": "range(1598, 1600)"
      },
      {
        "commit_hash": "1eb0c0d7421823470de3a901643ae3be2c9e0a8e",
        "line_num": 1511,
        "line_str": "/** Multiply this by a single digit 0&lt;=x&lt;radix.",
        "file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/dfp/Dfp.java",
        "input_line_num": "range(1598, 1600)"
      },
      {
        "commit_hash": "1eb0c0d7421823470de3a901643ae3be2c9e0a8e",
        "line_num": 913,
        "line_str": "DfpField.FLAG_INVALID, \"Multiply #38\");",
        "file_path": "src/test/java/org/apache/commons/math/dfp/DfpTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/dfp/DfpTest.java",
        "input_line_num": "range(913, 916)"
      },
      {
        "commit_hash": "1eb0c0d7421823470de3a901643ae3be2c9e0a8e",
        "line_num": 912,
        "line_str": "nan,",
        "file_path": "src/test/java/org/apache/commons/math/dfp/DfpTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/dfp/DfpTest.java",
        "input_line_num": "range(913, 916)"
      },
      {
        "commit_hash": "1eb0c0d7421823470de3a901643ae3be2c9e0a8e",
        "line_num": 911,
        "line_str": "test(field.newDfp(\"1\").multiply(-1),  // out of range",
        "file_path": "src/test/java/org/apache/commons/math/dfp/DfpTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/dfp/DfpTest.java",
        "input_line_num": "range(913, 916)"
      },
      {
        "commit_hash": "1eb0c0d7421823470de3a901643ae3be2c9e0a8e",
        "line_num": 909,
        "line_str": "DfpField.FLAG_INVALID, \"Multiply #37\");",
        "file_path": "src/test/java/org/apache/commons/math/dfp/DfpTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/dfp/DfpTest.java",
        "input_line_num": "range(909, 912)"
      }
    ]
  },
  {
    "id": 10093,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": [
      "711d6b94a120d413e9d8bd21bb26ec7d0aeecc39"
    ],
    "fix_commit_hash": "c0b655ace5665c0cd32e3f5e5b46edad4d223125",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "af3fffb74b6e2e35548a9519732077652fe89bb4",
        "line_num": 283,
        "line_str": "return (double) (getSampleSize() * getNumberOfSuccesses()) / (double) getPopulationSize();",
        "file_path": "src/main/java/org/apache/commons/math/distribution/HypergeometricDistribution.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java",
        "input_line_num": "range(268, 269)"
      }
    ]
  },
  {
    "id": 10094,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": [
      "36d811b2d4cfe1b867823bd60ccca25abbc80b46"
    ],
    "fix_commit_hash": "f1b04e990f4fc86544b6230fab1aa8ecfb74fbb1",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "d5ff460ba69e4261f066d7856e2f90b886924513",
        "line_num": 267,
        "line_str": "return best(current, previous, isMinim);",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(267, 268)"
      },
      {
        "commit_hash": "d5ff460ba69e4261f066d7856e2f90b886924513",
        "line_num": 296,
        "line_str": "return a.getValue() > b.getValue() ? a : b;",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(296, 297)"
      },
      {
        "commit_hash": "d5ff460ba69e4261f066d7856e2f90b886924513",
        "line_num": 294,
        "line_str": "return a.getValue() < b.getValue() ? a : b;",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(294, 295)"
      },
      {
        "commit_hash": "d5ff460ba69e4261f066d7856e2f90b886924513",
        "line_num": 230,
        "line_str": "return best(current, previous, isMinim);",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(230, 231)"
      },
      {
        "commit_hash": "d5ff460ba69e4261f066d7856e2f90b886924513",
        "line_num": 203,
        "line_str": "= optimizer.optimize(200, f, GoalType.MINIMIZE, minSin - 6.789 * delta, minSin + 9.876 * delta);",
        "file_path": "src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java",
        "input_line_num": "range(203, 204)"
      },
      {
        "commit_hash": "d5ff460ba69e4261f066d7856e2f90b886924513",
        "line_num": 281,
        "line_str": "* both {@code null}.",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(281, 282)"
      }
    ]
  },
  {
    "id": 10095,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": [
      "36d811b2d4cfe1b867823bd60ccca25abbc80b46"
    ],
    "fix_commit_hash": "d5ff460ba69e4261f066d7856e2f90b886924513",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "5f6067b7de28c62f046d69607d374a59bf82473b",
        "line_num": 88,
        "line_str": "* The arguments are used implement the original stopping criterion",
        "file_path": "src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(88, 89)"
      },
      {
        "commit_hash": "43ed5002e1483019207c5130459ef469c24dab31",
        "line_num": 246,
        "line_str": "return current;",
        "file_path": "src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(266, 267)"
      },
      {
        "commit_hash": "36d811b2d4cfe1b867823bd60ccca25abbc80b46",
        "line_num": 229,
        "line_str": "return current;",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "input_line_num": "range(229, 230)"
      },
      {
        "commit_hash": "a4bbdaf426a92d6351796b1d57407776f09f0a3d",
        "line_num": 38,
        "line_str": "Assert.assertEquals(3 * Math.PI / 2, optimizer.optimize(200, f, GoalType.MINIMIZE, 4, 5).getPoint(),1e-8);",
        "file_path": "src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java",
        "input_line_num": "range(42, 43)"
      }
    ]
  },
  {
    "id": 10096,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": [
      "b67bf47e45fa177c25fd5c445011d868a5383a6d"
    ],
    "fix_commit_hash": "996dd998e3081e4a842017b8ebcdae9b6059b530",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "1eaea0b549f685bd416cef68faa3a137b9bb3519",
        "line_num": 268,
        "line_str": "ZERO_DENOMINATOR(\"denominator must be different from 0\"),",
        "file_path": "src/main/java/org/apache/commons/math/util/LocalizedFormats.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java",
        "input_line_num": "range(347, 348)"
      }
    ]
  },
  {
    "id": 10097,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": [
      "c7b489f1e9cf9ceaff0f5844fdcf6630224ebf16"
    ],
    "fix_commit_hash": "1566dd339f6efc2347b0962fac7fce22adbc31ff",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "c7b489f1e9cf9ceaff0f5844fdcf6630224ebf16",
        "line_num": 162,
        "line_str": "if ((p2 > overflow) || (q2 > overflow)) {",
        "file_path": "src/java/org/apache/commons/math/fraction/Fraction.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/fraction/Fraction.java",
        "input_line_num": "range(209, 210)"
      },
      {
        "commit_hash": "c7b489f1e9cf9ceaff0f5844fdcf6630224ebf16",
        "line_num": 134,
        "line_str": "if (a0 > overflow) {",
        "file_path": "src/java/org/apache/commons/math/fraction/Fraction.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/fraction/Fraction.java",
        "input_line_num": "range(181, 182)"
      }
    ]
  },
  {
    "id": 10098,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": [
      "e1776ba6ae75701bd275edd60356cada29342214"
    ],
    "fix_commit_hash": "d3fc5af31eb696af03cfbe2e18584c7e1d307d54",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "e1776ba6ae75701bd275edd60356cada29342214",
        "line_num": 137,
        "line_str": "for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1 && minRow != row; i++) {",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_line_num": "range(134, 142)"
      },
      {
        "commit_hash": "e1776ba6ae75701bd275edd60356cada29342214",
        "line_num": 136,
        "line_str": "for (Integer row : minRatioPositions) {",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_line_num": "range(134, 142)"
      },
      {
        "commit_hash": "e1776ba6ae75701bd275edd60356cada29342214",
        "line_num": 135,
        "line_str": "int minIndex = tableau.getWidth();",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_line_num": "range(134, 142)"
      },
      {
        "commit_hash": "e1776ba6ae75701bd275edd60356cada29342214",
        "line_num": 134,
        "line_str": "Integer minRow = null;",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_line_num": "range(134, 142)"
      },
      {
        "commit_hash": "e1776ba6ae75701bd275edd60356cada29342214",
        "line_num": 53,
        "line_str": "",
        "file_path": "src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(53, 54)"
      },
      {
        "commit_hash": "e1776ba6ae75701bd275edd60356cada29342214",
        "line_num": 124,
        "line_str": "return row;",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_line_num": "range(119, 125)"
      },
      {
        "commit_hash": "e1776ba6ae75701bd275edd60356cada29342214",
        "line_num": 123,
        "line_str": "if (Precision.equals(entry, 1d, maxUlps) && row.equals(tableau.getBasicRow(column))) {",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_line_num": "range(119, 125)"
      },
      {
        "commit_hash": "e1776ba6ae75701bd275edd60356cada29342214",
        "line_num": 122,
        "line_str": "final double entry = tableau.getEntry(row, column);",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_line_num": "range(119, 125)"
      },
      {
        "commit_hash": "e1776ba6ae75701bd275edd60356cada29342214",
        "line_num": 121,
        "line_str": "int column = i + tableau.getArtificialVariableOffset();",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_line_num": "range(119, 125)"
      },
      {
        "commit_hash": "e1776ba6ae75701bd275edd60356cada29342214",
        "line_num": 120,
        "line_str": "for (int i = 0; i < tableau.getNumArtificialVariables(); i++) {",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_line_num": "range(119, 125)"
      },
      {
        "commit_hash": "e1776ba6ae75701bd275edd60356cada29342214",
        "line_num": 119,
        "line_str": "for (Integer row : minRatioPositions) {",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_line_num": "range(119, 125)"
      },
      {
        "commit_hash": "e1776ba6ae75701bd275edd60356cada29342214",
        "line_num": 147,
        "line_str": "return minRow;",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_line_num": "range(146, 148)"
      },
      {
        "commit_hash": "e1776ba6ae75701bd275edd60356cada29342214",
        "line_num": 146,
        "line_str": "",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_line_num": "range(146, 148)"
      },
      {
        "commit_hash": "e1776ba6ae75701bd275edd60356cada29342214",
        "line_num": 141,
        "line_str": "minRow = row;",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_line_num": "range(134, 142)"
      },
      {
        "commit_hash": "e1776ba6ae75701bd275edd60356cada29342214",
        "line_num": 140,
        "line_str": "minIndex = i;",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_line_num": "range(134, 142)"
      },
      {
        "commit_hash": "e1776ba6ae75701bd275edd60356cada29342214",
        "line_num": 139,
        "line_str": "if (i < minIndex) {",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_line_num": "range(134, 142)"
      },
      {
        "commit_hash": "e1776ba6ae75701bd275edd60356cada29342214",
        "line_num": 138,
        "line_str": "if (row == tableau.getBasicRow(i)) {",
        "file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "input_line_num": "range(134, 142)"
      }
    ]
  },
  {
    "id": 10099,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": [
      "dd4efa43349e74832b092ba33a92275b68cab9d3"
    ],
    "fix_commit_hash": "92c4697300e8ddf06152bc0838c738d50673c1d2",
    "language": [
      "java"
    ],
    "inducing_commit_hash": []
  },
  {
    "id": 10100,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": [
      "602e3fec32294ab720a30c11b743cd04140f3ff7"
    ],
    "fix_commit_hash": "a5d8d115cb85149c62059a23e8f4d318cac0e903",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "602e3fec32294ab720a30c11b743cd04140f3ff7",
        "line_num": 23,
        "line_str": "* Population of chromosomes which uses elitism (certain percentace of the best",
        "file_path": "src/java/org/apache/commons/math/genetics/ElitisticListPopulation.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java",
        "input_line_num": "range(27, 28)"
      },
      {
        "commit_hash": "602e3fec32294ab720a30c11b743cd04140f3ff7",
        "line_num": 61,
        "line_str": "this.elitismRate = elitismRate;",
        "file_path": "src/java/org/apache/commons/math/genetics/ElitisticListPopulation.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java",
        "input_line_num": "range(63, 64)"
      },
      {
        "commit_hash": "602e3fec32294ab720a30c11b743cd04140f3ff7",
        "line_num": 47,
        "line_str": "this.elitismRate = elitismRate;",
        "file_path": "src/java/org/apache/commons/math/genetics/ElitisticListPopulation.java",
        "input_file_path": "src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java",
        "input_line_num": "range(50, 51)"
      }
    ]
  },
  {
    "id": 10101,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": [
      "f36be8e8b7371fb8814456b6c095866aa802de78"
    ],
    "fix_commit_hash": "e98a5000cd211539bf4ba65f62cc7f81395e1726",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "f36be8e8b7371fb8814456b6c095866aa802de78",
        "line_num": 346,
        "line_str": "if (basicRows.contains(basicRow)) {",
        "file_path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(410, 411)"
      }
    ]
  },
  {
    "id": 10102,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": [
      "8742126f8f6117d90401f8d3ca1f40cd72b489aa"
    ],
    "fix_commit_hash": "bc4e9db01c2a03062965fa4bac65782376ab2287",
    "language": [
      "java"
    ],
    "inducing_commit_hash": []
  },
  {
    "id": 10103,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": [
      "330f3fe17d132bd4e2a91ff812ccf489e77f390f"
    ],
    "fix_commit_hash": "e6f27ebcb9ee0a344308382b99a3894bb61b225d",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 295,
        "line_str": "return isZero ? NaN : INF;",
        "file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(295, 296)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 259,
        "line_str": "return isZero ? NaN : INF;",
        "file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/main/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(259, 260)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 232,
        "line_str": "Assert.assertEquals(z, Complex.INF);",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(232, 233)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 579,
        "line_str": "Assert.assertTrue(Complex.I.atan().isInfinite());",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(576, 580)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 578,
        "line_str": "}",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(576, 580)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 577,
        "line_str": "System.out.println(new Complex(0, 1 - 0.1 * i).atan());",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(576, 580)"
      },
      {
        "commit_hash": "330f3fe17d132bd4e2a91ff812ccf489e77f390f",
        "line_num": 576,
        "line_str": "for (int i = -10; i < 10; i++) {",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(576, 580)"
      }
    ]
  },
  {
    "id": 10104,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": [
      "39cf5e69259d7560d50553caf028f9229b721013"
    ],
    "fix_commit_hash": "13d22f45624470ce5c07c085cf8b1ec0251eaee6",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "ed5fdf67a31518149a74e05db23371056af10842",
        "line_num": 57,
        "line_str": "* @param absoluteAccuracy absolute accuracy",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java",
        "input_line_num": "range(58, 60)"
      },
      {
        "commit_hash": "ed5fdf67a31518149a74e05db23371056af10842",
        "line_num": 24,
        "line_str": "* <em>Secant</em> method, convergence is guaranteed by maintaining a",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java",
        "input_line_num": "range(24, 26)"
      },
      {
        "commit_hash": "ed5fdf67a31518149a74e05db23371056af10842",
        "line_num": 67,
        "line_str": "* @param absoluteAccuracy absolute accuracy",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/SecantBase.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(76, 79)"
      },
      {
        "commit_hash": "ed5fdf67a31518149a74e05db23371056af10842",
        "line_num": 50,
        "line_str": "* @param absoluteAccuracy absolute accuracy",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/IllinoisSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/IllinoisSolver.java",
        "input_line_num": "range(52, 53)"
      },
      {
        "commit_hash": "ed5fdf67a31518149a74e05db23371056af10842",
        "line_num": 30,
        "line_str": "* <em>Regula Falsi</em>-based method.</p>",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java",
        "input_line_num": "range(27, 31)"
      },
      {
        "commit_hash": "ed5fdf67a31518149a74e05db23371056af10842",
        "line_num": 55,
        "line_str": "* @param absoluteAccuracy absolute accuracy",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/SecantBase.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(64, 66)"
      },
      {
        "commit_hash": "ed5fdf67a31518149a74e05db23371056af10842",
        "line_num": 59,
        "line_str": "* @param relativeAccuracy relative accuracy",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/IllinoisSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/IllinoisSolver.java",
        "input_line_num": "range(61, 63)"
      },
      {
        "commit_hash": "ed5fdf67a31518149a74e05db23371056af10842",
        "line_num": 68,
        "line_str": "* @param method <em>Secant</em>-based root-finding method to use",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/SecantBase.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(76, 79)"
      },
      {
        "commit_hash": "ed5fdf67a31518149a74e05db23371056af10842",
        "line_num": 56,
        "line_str": "* @param method <em>Secant</em>-based root-finding method to use",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/SecantBase.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(64, 66)"
      },
      {
        "commit_hash": "ed5fdf67a31518149a74e05db23371056af10842",
        "line_num": 27,
        "line_str": "* should converge much faster than the original <em>Regula Falsi</em> method.",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java",
        "input_line_num": "range(27, 31)"
      },
      {
        "commit_hash": "ed5fdf67a31518149a74e05db23371056af10842",
        "line_num": 52,
        "line_str": "* @param absoluteAccuracy absolute accuracy",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java",
        "input_line_num": "range(53, 54)"
      },
      {
        "commit_hash": "ed5fdf67a31518149a74e05db23371056af10842",
        "line_num": 47,
        "line_str": "* @param absoluteAccuracy absolute accuracy",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java",
        "input_line_num": "range(49, 50)"
      },
      {
        "commit_hash": "ed5fdf67a31518149a74e05db23371056af10842",
        "line_num": 60,
        "line_str": "* @param absoluteAccuracy absolute accuracy",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/IllinoisSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/IllinoisSolver.java",
        "input_line_num": "range(61, 63)"
      },
      {
        "commit_hash": "ed5fdf67a31518149a74e05db23371056af10842",
        "line_num": 61,
        "line_str": "* @param relativeAccuracy relative accuracy",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java",
        "input_line_num": "range(62, 64)"
      },
      {
        "commit_hash": "ed5fdf67a31518149a74e05db23371056af10842",
        "line_num": 28,
        "line_str": "* Furthermore, it should converge faster than the",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java",
        "input_line_num": "range(27, 31)"
      },
      {
        "commit_hash": "ed5fdf67a31518149a74e05db23371056af10842",
        "line_num": 56,
        "line_str": "* @param relativeAccuracy relative accuracy",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java",
        "input_line_num": "range(58, 60)"
      },
      {
        "commit_hash": "ed5fdf67a31518149a74e05db23371056af10842",
        "line_num": 23,
        "line_str": "* modified {@link SecantSolver <em>Secant</em>} method. Unlike the",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java",
        "input_line_num": "range(24, 26)"
      },
      {
        "commit_hash": "ed5fdf67a31518149a74e05db23371056af10842",
        "line_num": 28,
        "line_str": "* method.</p>",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/IllinoisSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/IllinoisSolver.java",
        "input_line_num": "range(29, 30)"
      },
      {
        "commit_hash": "ed5fdf67a31518149a74e05db23371056af10842",
        "line_num": 66,
        "line_str": "* @param relativeAccuracy relative accuracy",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/SecantBase.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(76, 79)"
      },
      {
        "commit_hash": "ed5fdf67a31518149a74e05db23371056af10842",
        "line_num": 62,
        "line_str": "* @param absoluteAccuracy absolute accuracy",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java",
        "input_line_num": "range(62, 64)"
      },
      {
        "commit_hash": "ed5fdf67a31518149a74e05db23371056af10842",
        "line_num": 29,
        "line_str": "* {@link IllinoisSolver <em>Illinois</em>} method, another",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java",
        "input_line_num": "range(27, 31)"
      }
    ]
  },
  {
    "id": 10105,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": [
      "2f066a5b2d2fe8a00a251a3220b0d52446fe392d"
    ],
    "fix_commit_hash": "39cf5e69259d7560d50553caf028f9229b721013",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 193,
        "line_str": "}",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(186, 194)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 192,
        "line_str": "f0 = computeObjectiveValue(x0);",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(186, 194)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 191,
        "line_str": "x0 = 0.5 * (x0 + x1 - delta);",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(186, 194)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 190,
        "line_str": "// search interval.",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(186, 194)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 189,
        "line_str": "// Update formula cannot make any progress: Update the",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(186, 194)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 188,
        "line_str": "atol);",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(186, 194)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 187,
        "line_str": "final double delta = FastMath.max(rtol * FastMath.abs(x1),",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(186, 194)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 186,
        "line_str": "if (x == x1) {",
        "file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java",
        "input_line_num": "range(186, 194)"
      },
      {
        "commit_hash": "2f066a5b2d2fe8a00a251a3220b0d52446fe392d",
        "line_num": 43,
        "line_str": "@Test",
        "file_path": "src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java",
        "input_line_num": "range(43, 44)"
      }
    ]
  },
  {
    "id": 10106,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": [
      "6ef3b2932f4ca9219e41784bb0cd229dcabcdb11"
    ],
    "fix_commit_hash": "7707b0bb80be05bbf6533a36bb0c646cbfd1026d",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "a4bbdaf426a92d6351796b1d57407776f09f0a3d",
        "line_num": 115,
        "line_str": "Assert.assertEquals(w.getReal(), 4.0, 0);",
        "file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/complex/ComplexTest.java",
        "input_line_num": "range(116, 117)"
      }
    ]
  },
  {
    "id": 10107,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": [
      "1eb0c0d7421823470de3a901643ae3be2c9e0a8e"
    ],
    "fix_commit_hash": "c00ac8120a4215125e49775cd9351e689586b467",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "1eb0c0d7421823470de3a901643ae3be2c9e0a8e",
        "line_num": 166,
        "line_str": "/** Sign bit: & for positive, -1 for negative. */",
        "file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_line_num": "range(166, 167)"
      },
      {
        "commit_hash": "1eb0c0d7421823470de3a901643ae3be2c9e0a8e",
        "line_num": 2319,
        "line_str": "if (lessThan(getZero())) {",
        "file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_file_path": "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "input_line_num": "range(2318, 2319)"
      }
    ]
  },
  {
    "id": 10108,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": [
      "89ac173c2b467e6289df0e62f2a43ed1730fbad5"
    ],
    "fix_commit_hash": "0c38504ffa3ef520ce78e260538d7b8742c895e8",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 461,
        "line_str": "v1.x * v2.y - v1.y * v2.x);",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(457, 461)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 460,
        "line_str": "v1.z * v2.x - v1.x * v2.z,",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(457, 461)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 459,
        "line_str": "return new Vector3D(v1.y * v2.z - v1.z * v2.y,",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(457, 461)"
      },
      {
        "commit_hash": "89ac173c2b467e6289df0e62f2a43ed1730fbad5",
        "line_num": 458,
        "line_str": "public static Vector3D crossProduct(Vector3D v1, Vector3D v2) {",
        "file_path": "src/mantissa/src/org/spaceroots/mantissa/geometry/Vector3D.java",
        "input_file_path": "src/main/java/org/apache/commons/math/geometry/Vector3D.java",
        "input_line_num": "range(457, 461)"
      }
    ]
  },
  {
    "id": 10109,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": [
      "6ef3b2932f4ca9219e41784bb0cd229dcabcdb11"
    ],
    "fix_commit_hash": "9054aac4b948117b838d6a5b15be1f50965d805a",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 126,
        "line_str": "* Verifies fix for JIRA MATH-167",
        "file_path": "src/test/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_line_num": "range(155, 156)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 132,
        "line_str": "for (int i = 0; i < 100; i+=5) { // make sure no convergence exception",
        "file_path": "src/test/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_line_num": "range(159, 160)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 119,
        "line_str": "}",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(133, 136)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 118,
        "line_str": "throw ex;",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(133, 136)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 117,
        "line_str": "} else {",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(133, 136)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 115,
        "line_str": "} else if (x > (mean + 20 * standardDeviation)) {",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(131, 132)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 112,
        "line_str": "} catch (MaxIterationsExceededException ex) {",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(128, 130)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 110,
        "line_str": "return 0.5 * (1.0 + Erf.erf((x - mean) /",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(125, 127)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 109,
        "line_str": "try {",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(125, 127)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 113,
        "line_str": "if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(128, 130)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 135,
        "line_str": "if (i < 10) { // make sure not top-coded",
        "file_path": "src/test/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/distribution/NormalDistributionTest.java",
        "input_line_num": "range(162, 163)"
      },
      {
        "commit_hash": "4ce05bcd51ec956d789d20b59c743603d24a8ab7",
        "line_num": 104,
        "line_str": "* @throws MathException if the algorithm fails to converge; unless",
        "file_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_file_path": "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "input_line_num": "range(120, 121)"
      }
    ]
  },
  {
    "id": 10110,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": [
      "b1ade04fc274a2030fcf1df2c760755eeb83bf1b"
    ],
    "fix_commit_hash": "d2a5bc02c002acfa220ce8bad23b9e8af137f47d",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "8c131082913e0edc1ae248d36407f88991d7aa53",
        "line_num": 1947,
        "line_str": "if (dir > 0) {",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1918, 1919)"
      },
      {
        "commit_hash": "8c131082913e0edc1ae248d36407f88991d7aa53",
        "line_num": 1939,
        "line_str": "* @param val Values",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1907, 1914)"
      },
      {
        "commit_hash": "8c131082913e0edc1ae248d36407f88991d7aa53",
        "line_num": 1952,
        "line_str": "}",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1922, 1924)"
      },
      {
        "commit_hash": "8c131082913e0edc1ae248d36407f88991d7aa53",
        "line_num": 1944,
        "line_str": "* checkOrder} method). To be removed in 3.0.",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1915, 1917)"
      },
      {
        "commit_hash": "8c131082913e0edc1ae248d36407f88991d7aa53",
        "line_num": 1940,
        "line_str": "* @param dir Order direction (-1 for decreasing, 1 for increasing)",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1907, 1914)"
      },
      {
        "commit_hash": "8c131082913e0edc1ae248d36407f88991d7aa53",
        "line_num": 1936,
        "line_str": "/**",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1907, 1914)"
      },
      {
        "commit_hash": "8c131082913e0edc1ae248d36407f88991d7aa53",
        "line_num": 417,
        "line_str": "* useful (see e.g. {@link #equalsIncludingNaN(double,double)",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(419, 420)"
      },
      {
        "commit_hash": "8c131082913e0edc1ae248d36407f88991d7aa53",
        "line_num": 1949,
        "line_str": "} else {",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1920, 1921)"
      },
      {
        "commit_hash": "8c131082913e0edc1ae248d36407f88991d7aa53",
        "line_num": 1945,
        "line_str": "*/",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1915, 1917)"
      },
      {
        "commit_hash": "8c131082913e0edc1ae248d36407f88991d7aa53",
        "line_num": 1941,
        "line_str": "* @param strict Whether the order should be strict",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1907, 1914)"
      },
      {
        "commit_hash": "8c131082913e0edc1ae248d36407f88991d7aa53",
        "line_num": 529,
        "line_str": "* useful (see e.g. {@link #equalsIncludingNaN(double[],double[])",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(531, 532)"
      },
      {
        "commit_hash": "8c131082913e0edc1ae248d36407f88991d7aa53",
        "line_num": 1937,
        "line_str": "* Checks that the given array is sorted.",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1907, 1914)"
      },
      {
        "commit_hash": "8c131082913e0edc1ae248d36407f88991d7aa53",
        "line_num": 1942,
        "line_str": "* @throws NonMonotonousSequenceException if the array is not sorted.",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1907, 1914)"
      },
      {
        "commit_hash": "8c131082913e0edc1ae248d36407f88991d7aa53",
        "line_num": 1938,
        "line_str": "*",
        "file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1907, 1914)"
      }
    ]
  },
  {
    "id": 10111,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": [
      "615ca9a000c253575e6f62bed87db6110b750834"
    ],
    "fix_commit_hash": "7dadc2ab019f066a7a287376ad4c63193e8a0a9a",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 155,
        "line_str": "11.4121122022341,",
        "file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_line_num": "range(155, 157)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 428,
        "line_str": "return current;",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(448, 450)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 424,
        "line_str": "if (((Math.abs(actRed) <= costRelativeTolerance) &&",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(441, 447)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 156,
        "line_str": "-0.8968550851268697",
        "file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_line_num": "range(155, 157)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 429,
        "line_str": "}",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(448, 450)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 425,
        "line_str": "(preRed <= costRelativeTolerance) &&",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(441, 447)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 421,
        "line_str": "}",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(441, 447)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 417,
        "line_str": "if (checker != null) {",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(437, 440)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 161,
        "line_str": "11.412069435091231,",
        "file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_line_num": "range(161, 163)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 426,
        "line_str": "(ratio <= 2.0)) ||",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(441, 447)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 422,
        "line_str": "} else {",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(441, 447)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 418,
        "line_str": "// we use the vectorial convergence checker",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(437, 440)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 348,
        "line_str": "current = new VectorialPointValuePair(point, objective);",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(368, 369)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 162,
        "line_str": "-0.8968582807605691",
        "file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_line_num": "range(161, 163)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 423,
        "line_str": "// we use the Levenberg-Marquardt specific convergence parameters",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(441, 447)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 419,
        "line_str": "if (checker.converged(getIterations(), previous, current)) {",
        "file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_file_path": "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "input_line_num": "range(437, 440)"
      },
      {
        "commit_hash": "615ca9a000c253575e6f62bed87db6110b750834",
        "line_num": 328,
        "line_str": "0.2578330049, 0.257829976764542",
        "file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_file_path": "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java",
        "input_line_num": "range(328, 329)"
      }
    ]
  },
  {
    "id": 10112,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": [
      "583dffc0ee383e9b5e1e08c574de10db8270fdb7"
    ],
    "fix_commit_hash": "f41fcd85ca62a2109a6e550be0353d292d351213",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "583dffc0ee383e9b5e1e08c574de10db8270fdb7",
        "line_num": 74,
        "line_str": "return solve(min, max);",
        "file_path": "src/java/org/apache/commons/math/analysis/BisectionSolver.java",
        "input_file_path": "src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java",
        "input_line_num": "range(72, 73)"
      }
    ]
  },
  {
    "id": 10113,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": [
      "18b61a1b18ed7d80ec2bf28588ce95fdd3dddf28"
    ],
    "fix_commit_hash": "523df0c13719150b1397a6094f410274bfaf1475",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "18b61a1b18ed7d80ec2bf28588ce95fdd3dddf28",
        "line_num": 302,
        "line_str": "return getCumPct((Comparable<?>) v);",
        "file_path": "src/java/org/apache/commons/math/stat/Frequency.java",
        "input_file_path": "src/main/java/org/apache/commons/math/stat/Frequency.java",
        "input_line_num": "range(303, 304)"
      }
    ]
  },
  {
    "id": 10114,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": [
      "dfd9f0676b690fe8c0928316b656ffb87d44cd31"
    ],
    "fix_commit_hash": "138baec1c778c2ea1dc1a6efe6d5e76a3b072b1d",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "dfd9f0676b690fe8c0928316b656ffb87d44cd31",
        "line_num": 1540,
        "line_str": "int sum = 0;",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1624, 1625)"
      },
      {
        "commit_hash": "dfd9f0676b690fe8c0928316b656ffb87d44cd31",
        "line_num": 1542,
        "line_str": "final int dp = p1[i] - p2[i];",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(1626, 1627)"
      }
    ]
  },
  {
    "id": 10115,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": [
      "24a6a2692e942969f5c39bd88d3d12ac0f0bf0d9"
    ],
    "fix_commit_hash": "75f5c92aeb47e264c196a8c38a495adac89f493c",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 267,
        "line_str": "}",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(276, 281)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 266,
        "line_str": "return null;",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(276, 281)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 265,
        "line_str": "} else {",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(276, 281)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 264,
        "line_str": "row = i;",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(276, 281)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 263,
        "line_str": "if (row == null) {",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(276, 281)"
      }
    ]
  },
  {
    "id": 10116,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": [
      "b03d68547460332b861044db80ccd08edec361a1"
    ],
    "fix_commit_hash": "24a6a2692e942969f5c39bd88d3d12ac0f0bf0d9",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 118,
        "line_str": "solver.optimize(f, constraints, GoalType.MAXIMIZE, false);",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(116, 124)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 77,
        "line_str": "assertEquals(0.0, solution.getPoint()[1]);",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(75, 78)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 44,
        "line_str": "assertEquals(2.0, solution.getPoint()[0]);",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(43, 46)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 106,
        "line_str": "} catch (OptimizationException e) {",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(100, 108)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 102,
        "line_str": "solver.optimize(f, constraints, GoalType.MAXIMIZE, false);",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(100, 108)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 327,
        "line_str": "* @return The value of the given decision variable.",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(332, 341)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 323,
        "line_str": "* value as it is guaranteed to be >= 0 and thus must be corrected before",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(332, 341)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 123,
        "line_str": "fail(\"wrong exception caught\");",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(116, 124)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 90,
        "line_str": "assertEquals(8.0, solution.getPoint()[1]);",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(88, 91)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 24,
        "line_str": "",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(23, 25)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 119,
        "line_str": "fail(\"An exception should have been thrown.\");",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(116, 124)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 315,
        "line_str": "coefficients[i] =",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(326, 328)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 78,
        "line_str": "assertEquals(-13.0, solution.getValue());",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(75, 78)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 45,
        "line_str": "assertEquals(2.0, solution.getPoint()[1]);",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(43, 46)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 107,
        "line_str": "fail(\"wrong exception caught\");",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(100, 108)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 103,
        "line_str": "fail(\"An exception should have been thrown.\");",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(100, 108)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 328,
        "line_str": "*/",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(332, 341)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 324,
        "line_str": "* being returned to the user.",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(332, 341)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 62,
        "line_str": "assertEquals(2.0, solution.getPoint()[0]);",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(61, 64)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 124,
        "line_str": "}",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(116, 124)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 91,
        "line_str": "assertEquals(12.0, solution.getValue());",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(88, 91)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 120,
        "line_str": "} catch (UnboundedSolutionException e) {",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(116, 124)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 316,
        "line_str": "getDecisionVariableValue(i) - (restrictToNonNegative ? 0 : mostNegative);",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(326, 328)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 46,
        "line_str": "assertEquals(57.0, solution.getValue());",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(43, 46)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 108,
        "line_str": "}",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(100, 108)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 104,
        "line_str": "} catch (NoFeasibleSolutionException e) {",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(100, 108)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 329,
        "line_str": "protected double getDecisionVariableValue(final int decisionVariable) {",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(332, 341)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 325,
        "line_str": "*",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(332, 341)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 63,
        "line_str": "assertEquals(2.0, solution.getPoint()[1]);",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(61, 64)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 321,
        "line_str": "/**",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(332, 341)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 121,
        "line_str": "// expected;",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(116, 124)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 117,
        "line_str": "try {",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(116, 124)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 313,
        "line_str": "double mostNegative = getDecisionVariableValue(getOriginalNumDecisionVariables());",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(324, 325)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 76,
        "line_str": "assertEquals(4.0, solution.getPoint()[0]);",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(75, 78)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 105,
        "line_str": "// expected;",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(100, 108)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 101,
        "line_str": "try {",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(100, 108)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 31,
        "line_str": "public class SimplexSolverTest extends TestCase {",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(31, 32)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 326,
        "line_str": "* @param decisionVariable The index of the decision variable",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(332, 341)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 64,
        "line_str": "assertEquals(50.0, solution.getValue());",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(61, 64)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 322,
        "line_str": "* Get the value of the given decision variable.  This is not the actual",
        "file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_file_path": "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "input_line_num": "range(332, 341)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 122,
        "line_str": "} catch (OptimizationException e) {",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(116, 124)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 89,
        "line_str": "assertEquals(-2.0, solution.getPoint()[0]);",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(88, 91)"
      },
      {
        "commit_hash": "96b1276efd88c536f3c918396f7460e557b9ee65",
        "line_num": 23,
        "line_str": "import junit.framework.TestCase;",
        "file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_file_path": "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java",
        "input_line_num": "range(23, 25)"
      }
    ]
  },
  {
    "id": 10117,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": [
      "0c84b28c3542f3340f7ec0dffc34c60dff66604e"
    ],
    "fix_commit_hash": "62b3877f953dd47c4d301be35c77446e2cf55311",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "0c84b28c3542f3340f7ec0dffc34c60dff66604e",
        "line_num": 197,
        "line_str": "} catch (ClassCastException expected) {",
        "file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_line_num": "range(195, 198)"
      },
      {
        "commit_hash": "0c84b28c3542f3340f7ec0dffc34c60dff66604e",
        "line_num": 196,
        "line_str": "fail(\"Expected ClassCastException\");",
        "file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_line_num": "range(195, 198)"
      },
      {
        "commit_hash": "0c84b28c3542f3340f7ec0dffc34c60dff66604e",
        "line_num": 195,
        "line_str": "f.addValue(new Object()); // This was OK",
        "file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_line_num": "range(195, 198)"
      },
      {
        "commit_hash": "0c84b28c3542f3340f7ec0dffc34c60dff66604e",
        "line_num": 110,
        "line_str": "addValue((Comparable<?>) v);",
        "file_path": "src/java/org/apache/commons/math/stat/Frequency.java",
        "input_file_path": "src/java/org/apache/commons/math/stat/Frequency.java",
        "input_line_num": "range(110, 111)"
      },
      {
        "commit_hash": "0c84b28c3542f3340f7ec0dffc34c60dff66604e",
        "line_num": 105,
        "line_str": "* @throws ClassCastException if <code>v</code> is not Comparable",
        "file_path": "src/java/org/apache/commons/math/stat/Frequency.java",
        "input_file_path": "src/java/org/apache/commons/math/stat/Frequency.java",
        "input_line_num": "range(104, 106)"
      },
      {
        "commit_hash": "0c84b28c3542f3340f7ec0dffc34c60dff66604e",
        "line_num": 104,
        "line_str": "* @throws IllegalArgumentException if <code>v</code> is not comparable with previous entries",
        "file_path": "src/java/org/apache/commons/math/stat/Frequency.java",
        "input_file_path": "src/java/org/apache/commons/math/stat/Frequency.java",
        "input_line_num": "range(104, 106)"
      },
      {
        "commit_hash": "0c84b28c3542f3340f7ec0dffc34c60dff66604e",
        "line_num": 204,
        "line_str": "} catch (ClassCastException expected) {",
        "file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_line_num": "range(203, 205)"
      },
      {
        "commit_hash": "0c84b28c3542f3340f7ec0dffc34c60dff66604e",
        "line_num": 203,
        "line_str": "fail(\"Expected ClassCastException\"); // Previously would have been IllegalArgument",
        "file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_file_path": "src/test/org/apache/commons/math/stat/FrequencyTest.java",
        "input_line_num": "range(203, 205)"
      }
    ]
  },
  {
    "id": 10118,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": [
      "0a904461932f2c0455611e77ec6a8d8aced2980b"
    ],
    "fix_commit_hash": "85a8ab2dcfc26e83be1514acdb11d3feaac3e73d",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "430f487ebc550a07ed2f06a758cd2dd480669fc9",
        "line_num": 48,
        "line_str": "if ((k == 1) || (k == n - 1)) {",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(49, 51)"
      },
      {
        "commit_hash": "430f487ebc550a07ed2f06a758cd2dd480669fc9",
        "line_num": 143,
        "line_str": "/*",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(144, 150)"
      },
      {
        "commit_hash": "430f487ebc550a07ed2f06a758cd2dd480669fc9",
        "line_num": 44,
        "line_str": "private long binomialCoefficient(int n, int k) {",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(45, 46)"
      },
      {
        "commit_hash": "430f487ebc550a07ed2f06a758cd2dd480669fc9",
        "line_num": 148,
        "line_str": "*/",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(144, 150)"
      },
      {
        "commit_hash": "430f487ebc550a07ed2f06a758cd2dd480669fc9",
        "line_num": 49,
        "line_str": "return n;",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(49, 51)"
      },
      {
        "commit_hash": "430f487ebc550a07ed2f06a758cd2dd480669fc9",
        "line_num": 144,
        "line_str": "* Takes a long time for recursion to unwind, but succeeds and yields",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(144, 150)"
      },
      {
        "commit_hash": "430f487ebc550a07ed2f06a758cd2dd480669fc9",
        "line_num": 145,
        "line_str": "* exact value = 2,333,606,220",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(144, 150)"
      },
      {
        "commit_hash": "430f487ebc550a07ed2f06a758cd2dd480669fc9",
        "line_num": 46,
        "line_str": "return 1;",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(47, 48)"
      },
      {
        "commit_hash": "430f487ebc550a07ed2f06a758cd2dd480669fc9",
        "line_num": 42,
        "line_str": "* Exact recursive implementation to test against",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(43, 44)"
      },
      {
        "commit_hash": "430f487ebc550a07ed2f06a758cd2dd480669fc9",
        "line_num": 179,
        "line_str": "assertTrue(\"expecting infinite binomial coefficient\", Double.isInfinite(x));",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(180, 181)"
      },
      {
        "commit_hash": "430f487ebc550a07ed2f06a758cd2dd480669fc9",
        "line_num": 51,
        "line_str": "return binomialCoefficient(n - 1, k - 1) + binomialCoefficient(n - 1, k);",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(52, 53)"
      },
      {
        "commit_hash": "430f487ebc550a07ed2f06a758cd2dd480669fc9",
        "line_num": 146,
        "line_str": "* assertEquals(MathUtils.binomialCoefficient(34,17),",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(144, 150)"
      },
      {
        "commit_hash": "430f487ebc550a07ed2f06a758cd2dd480669fc9",
        "line_num": 147,
        "line_str": "* binomialCoefficient(34,17));",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(144, 150)"
      }
    ]
  },
  {
    "id": 10119,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": [
      "0a904461932f2c0455611e77ec6a8d8aced2980b"
    ],
    "fix_commit_hash": "7cd3d822b65b7acdd1f6e1c82b291cd994f4fe05",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 298,
        "line_str": "if (result == Long.MAX_VALUE) {",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(338, 340)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 297,
        "line_str": "long result = Math.round(factorialDouble(n));",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(338, 340)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 163,
        "line_str": "for (int i = 1; i < 10; i++) {",
        "file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_file_path": "src/test/org/apache/commons/math/util/MathUtilsTest.java",
        "input_line_num": "range(235, 236)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 302,
        "line_str": "return result;",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(343, 344)"
      }
    ]
  },
  {
    "id": 10120,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": [
      "20786a617657c0c20315005c621052a2735dfe67"
    ],
    "fix_commit_hash": "a96e597894562c2cf01fc678f6c435d65ccc31c5",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "20786a617657c0c20315005c621052a2735dfe67",
        "line_num": 548,
        "line_str": "if (u * v == 0) {",
        "file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_file_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "input_line_num": "range(412, 413)"
      }
    ]
  },
  {
    "id": 10121,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": [
      "0a904461932f2c0455611e77ec6a8d8aced2980b"
    ],
    "fix_commit_hash": "e6449cccdeaba96ffba4c27db322c5c3d5c18662",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 169,
        "line_str": "Double.doubleToRawLongBits(rhs.getImaginary()));",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(258, 262)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 168,
        "line_str": "(Double.doubleToRawLongBits(imaginary) ==",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(258, 262)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 167,
        "line_str": "Double.doubleToRawLongBits(rhs.getReal())) &&",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(258, 262)"
      },
      {
        "commit_hash": "0a904461932f2c0455611e77ec6a8d8aced2980b",
        "line_num": 166,
        "line_str": "ret = (Double.doubleToRawLongBits(real) ==",
        "file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_file_path": "src/java/org/apache/commons/math/complex/Complex.java",
        "input_line_num": "range(258, 262)"
      }
    ]
  },
  {
    "id": 10122,
    "repo_name": "apache/commons-math",
    "bug_commit_hash": [
      "4f1e69b5313761cb95909359a408d13e6aa29635"
    ],
    "fix_commit_hash": "ed492bd0c5c5c3a0258a65cb31cc8723d8f011fd",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "b163cc1ff167d77778444211f1957ea832daa83e",
        "line_num": 175,
        "line_str": "*                        \\sqrt{2/N} \\Sigma_{n=0}^{N-1} F_n \\cos(\\pi nk/N) $",
        "file_path": "src/java/org/apache/commons/math/transform/FastCosineTransformer.java",
        "input_file_path": "src/java/org/apache/commons/math/transform/FastCosineTransformer.java",
        "input_line_num": "range(184, 185)"
      },
      {
        "commit_hash": "b163cc1ff167d77778444211f1957ea832daa83e",
        "line_num": 134,
        "line_str": "*                        (2/N) \\Sigma_{n=0}^{N-1} F_n \\cos(\\pi nk/N) $",
        "file_path": "src/java/org/apache/commons/math/transform/FastCosineTransformer.java",
        "input_file_path": "src/java/org/apache/commons/math/transform/FastCosineTransformer.java",
        "input_line_num": "range(141, 142)"
      },
      {
        "commit_hash": "b163cc1ff167d77778444211f1957ea832daa83e",
        "line_num": 192,
        "line_str": "*                        \\sqrt{2/N} \\Sigma_{n=0}^{N-1} F_n \\cos(\\pi nk/N) $",
        "file_path": "src/java/org/apache/commons/math/transform/FastCosineTransformer.java",
        "input_file_path": "src/java/org/apache/commons/math/transform/FastCosineTransformer.java",
        "input_line_num": "range(202, 203)"
      },
      {
        "commit_hash": "b163cc1ff167d77778444211f1957ea832daa83e",
        "line_num": 93,
        "line_str": "*                        \\sqrt{2/N} \\Sigma_{k=0}^{N-1} f_k \\cos(\\pi nk/N) $",
        "file_path": "src/java/org/apache/commons/math/transform/FastCosineTransformer.java",
        "input_file_path": "src/java/org/apache/commons/math/transform/FastCosineTransformer.java",
        "input_line_num": "range(97, 98)"
      },
      {
        "commit_hash": "b163cc1ff167d77778444211f1957ea832daa83e",
        "line_num": 36,
        "line_str": "* @version $Revision$ $Date$",
        "file_path": "src/java/org/apache/commons/math/transform/FastCosineTransformer.java",
        "input_file_path": "src/java/org/apache/commons/math/transform/FastCosineTransformer.java",
        "input_line_num": "range(37, 38)"
      },
      {
        "commit_hash": "b163cc1ff167d77778444211f1957ea832daa83e",
        "line_num": 152,
        "line_str": "*                        (2/N) \\Sigma_{n=0}^{N-1} F_n \\cos(\\pi nk/N) $",
        "file_path": "src/java/org/apache/commons/math/transform/FastCosineTransformer.java",
        "input_file_path": "src/java/org/apache/commons/math/transform/FastCosineTransformer.java",
        "input_line_num": "range(160, 161)"
      },
      {
        "commit_hash": "b163cc1ff167d77778444211f1957ea832daa83e",
        "line_num": 111,
        "line_str": "*                        \\sqrt{2/N} \\Sigma_{k=0}^{N-1} f_k \\cos(\\pi nk/N) $",
        "file_path": "src/java/org/apache/commons/math/transform/FastCosineTransformer.java",
        "input_file_path": "src/java/org/apache/commons/math/transform/FastCosineTransformer.java",
        "input_line_num": "range(116, 117)"
      },
      {
        "commit_hash": "b163cc1ff167d77778444211f1957ea832daa83e",
        "line_num": 54,
        "line_str": "*                        \\Sigma_{k=0}^{N-1} f_k \\cos(\\pi nk/N) $",
        "file_path": "src/java/org/apache/commons/math/transform/FastCosineTransformer.java",
        "input_file_path": "src/java/org/apache/commons/math/transform/FastCosineTransformer.java",
        "input_line_num": "range(56, 57)"
      },
      {
        "commit_hash": "b163cc1ff167d77778444211f1957ea832daa83e",
        "line_num": 71,
        "line_str": "*                        \\Sigma_{k=0}^{N-1} f_k \\cos(\\pi nk/N) $",
        "file_path": "src/java/org/apache/commons/math/transform/FastCosineTransformer.java",
        "input_file_path": "src/java/org/apache/commons/math/transform/FastCosineTransformer.java",
        "input_line_num": "range(74, 75)"
      }
    ]
  },
  {
    "id": 10123,
    "repo_name": "mockito/mockito",
    "bug_commit_hash": [
      "ab9e9f347705bf9f4ebace4b07b085088275a256"
    ],
    "fix_commit_hash": "5a03bf5d0c9aedac9cfbf074833167c1eca6439f",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "6eaf9a247dcfb68b88fec1f2a28808f2bfc19436",
        "line_num": 19,
        "line_str": "",
        "file_path": "test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java",
        "input_file_path": "test/org/mockito/internal/util/reflection/GenericMetadataSupportTest.java",
        "input_line_num": "range(24, 25)"
      },
      {
        "commit_hash": "dc2bea8fe7c5440bbcacf8a36cc03da512d26aa1",
        "line_num": 54,
        "line_str": "} else {",
        "file_path": "src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java",
        "input_file_path": "src/org/mockito/internal/util/reflection/GenericMetadataSupport.java",
        "input_line_num": "range(79, 80)"
      }
    ]
  },
  {
    "id": 10124,
    "repo_name": "JodaOrg/joda-time",
    "bug_commit_hash": [
      "8612f9e5b88c1bea933ef9ab1e431f5db3006b48"
    ],
    "fix_commit_hash": "9a62b06be5d0df8e833ff8583398cca386608cac",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "8612f9e5b88c1bea933ef9ab1e431f5db3006b48",
        "line_num": 229,
        "line_str": "}",
        "file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_line_num": "range(227, 230)"
      },
      {
        "commit_hash": "8612f9e5b88c1bea933ef9ab1e431f5db3006b48",
        "line_num": 228,
        "line_str": "return 1;",
        "file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_line_num": "range(227, 230)"
      },
      {
        "commit_hash": "8612f9e5b88c1bea933ef9ab1e431f5db3006b48",
        "line_num": 227,
        "line_str": "if (durationField.isSupported()) {",
        "file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_file_path": "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "input_line_num": "range(227, 230)"
      }
    ]
  },
  {
    "id": 10125,
    "repo_name": "JodaOrg/joda-time",
    "bug_commit_hash": [
      "01ed04f3a83f17e9947c83d04cb258430429789d"
    ],
    "fix_commit_hash": "57eb4cbb9044771cd46a9eee0c62016618930226",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "01ed04f3a83f17e9947c83d04cb258430429789d",
        "line_num": 69,
        "line_str": "static {",
        "file_path": "JodaTime/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_file_path": "src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_line_num": "range(68, 72)"
      },
      {
        "commit_hash": "01ed04f3a83f17e9947c83d04cb258430429789d",
        "line_num": 68,
        "line_str": "static ThreadLocal<Boolean> cVerbose = new ThreadLocal<Boolean>();",
        "file_path": "JodaTime/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_file_path": "src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_line_num": "range(68, 72)"
      },
      {
        "commit_hash": "01ed04f3a83f17e9947c83d04cb258430429789d",
        "line_num": 71,
        "line_str": "}",
        "file_path": "JodaTime/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_file_path": "src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_line_num": "range(68, 72)"
      },
      {
        "commit_hash": "01ed04f3a83f17e9947c83d04cb258430429789d",
        "line_num": 70,
        "line_str": "cVerbose.set(Boolean.FALSE);",
        "file_path": "JodaTime/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_file_path": "src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "input_line_num": "range(68, 72)"
      }
    ]
  },
  {
    "id": 10126,
    "repo_name": "JodaOrg/joda-time",
    "bug_commit_hash": [
      "f574d59dd322be0df10694c296bbdff9a7a2fba2"
    ],
    "fix_commit_hash": "0cefc4c212e92e5dccdfa658785c419483317558",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "714c53e2af8fe894fda54eb805958ced0ce08532",
        "line_num": 218,
        "line_str": "} catch (ArithmeticException e) {",
        "file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_line_num": "range(194, 232)"
      },
      {
        "commit_hash": "714c53e2af8fe894fda54eb805958ced0ce08532",
        "line_num": 214,
        "line_str": "",
        "file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_line_num": "range(194, 232)"
      },
      {
        "commit_hash": "714c53e2af8fe894fda54eb805958ced0ce08532",
        "line_num": 210,
        "line_str": "FieldUtils.safeMultiply(Long.MIN_VALUE, -1L);",
        "file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_line_num": "range(194, 232)"
      },
      {
        "commit_hash": "714c53e2af8fe894fda54eb805958ced0ce08532",
        "line_num": 206,
        "line_str": "assertEquals(Long.MIN_VALUE, FieldUtils.safeMultiply(Long.MIN_VALUE, 1L));",
        "file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_line_num": "range(194, 232)"
      },
      {
        "commit_hash": "714c53e2af8fe894fda54eb805958ced0ce08532",
        "line_num": 235,
        "line_str": "fail();",
        "file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_line_num": "range(233, 239)"
      },
      {
        "commit_hash": "714c53e2af8fe894fda54eb805958ced0ce08532",
        "line_num": 202,
        "line_str": "assertEquals(-6L, FieldUtils.safeMultiply(-2L, 3L));",
        "file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_line_num": "range(194, 232)"
      },
      {
        "commit_hash": "714c53e2af8fe894fda54eb805958ced0ce08532",
        "line_num": 231,
        "line_str": "}",
        "file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_line_num": "range(194, 232)"
      },
      {
        "commit_hash": "714c53e2af8fe894fda54eb805958ced0ce08532",
        "line_num": 198,
        "line_str": "assertEquals(3L, FieldUtils.safeMultiply(3L, 1L));",
        "file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_line_num": "range(194, 232)"
      },
      {
        "commit_hash": "714c53e2af8fe894fda54eb805958ced0ce08532",
        "line_num": 227,
        "line_str": "try {",
        "file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_line_num": "range(194, 232)"
      },
      {
        "commit_hash": "714c53e2af8fe894fda54eb805958ced0ce08532",
        "line_num": 194,
        "line_str": "assertEquals(0L, FieldUtils.safeMultiply(0L, 0L));",
        "file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_line_num": "range(194, 232)"
      },
      {
        "commit_hash": "714c53e2af8fe894fda54eb805958ced0ce08532",
        "line_num": 223,
        "line_str": "fail();",
        "file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_line_num": "range(194, 232)"
      },
      {
        "commit_hash": "714c53e2af8fe894fda54eb805958ced0ce08532",
        "line_num": 219,
        "line_str": "}",
        "file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_line_num": "range(194, 232)"
      },
      {
        "commit_hash": "714c53e2af8fe894fda54eb805958ced0ce08532",
        "line_num": 215,
        "line_str": "try {",
        "file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_line_num": "range(194, 232)"
      },
      {
        "commit_hash": "714c53e2af8fe894fda54eb805958ced0ce08532",
        "line_num": 211,
        "line_str": "fail();",
        "file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_line_num": "range(194, 232)"
      },
      {
        "commit_hash": "714c53e2af8fe894fda54eb805958ced0ce08532",
        "line_num": 207,
        "line_str": "assertEquals(-Long.MAX_VALUE, FieldUtils.safeMultiply(Long.MAX_VALUE, -1L));",
        "file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_line_num": "range(194, 232)"
      },
      {
        "commit_hash": "714c53e2af8fe894fda54eb805958ced0ce08532",
        "line_num": 236,
        "line_str": "} catch (ArithmeticException e) {",
        "file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_line_num": "range(233, 239)"
      },
      {
        "commit_hash": "714c53e2af8fe894fda54eb805958ced0ce08532",
        "line_num": 203,
        "line_str": "assertEquals(6L, FieldUtils.safeMultiply(-2L, -3L));",
        "file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_line_num": "range(194, 232)"
      },
      {
        "commit_hash": "714c53e2af8fe894fda54eb805958ced0ce08532",
        "line_num": 199,
        "line_str": "",
        "file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_line_num": "range(194, 232)"
      },
      {
        "commit_hash": "714c53e2af8fe894fda54eb805958ced0ce08532",
        "line_num": 228,
        "line_str": "FieldUtils.safeMultiply(Long.MIN_VALUE, Long.MAX_VALUE);",
        "file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_line_num": "range(194, 232)"
      },
      {
        "commit_hash": "714c53e2af8fe894fda54eb805958ced0ce08532",
        "line_num": 195,
        "line_str": "",
        "file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_line_num": "range(194, 232)"
      },
      {
        "commit_hash": "714c53e2af8fe894fda54eb805958ced0ce08532",
        "line_num": 224,
        "line_str": "} catch (ArithmeticException e) {",
        "file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_line_num": "range(194, 232)"
      },
      {
        "commit_hash": "714c53e2af8fe894fda54eb805958ced0ce08532",
        "line_num": 220,
        "line_str": "",
        "file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_line_num": "range(194, 232)"
      },
      {
        "commit_hash": "714c53e2af8fe894fda54eb805958ced0ce08532",
        "line_num": 216,
        "line_str": "FieldUtils.safeMultiply(-1L, Long.MIN_VALUE);",
        "file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_line_num": "range(194, 232)"
      },
      {
        "commit_hash": "714c53e2af8fe894fda54eb805958ced0ce08532",
        "line_num": 212,
        "line_str": "} catch (ArithmeticException e) {",
        "file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_line_num": "range(194, 232)"
      },
      {
        "commit_hash": "714c53e2af8fe894fda54eb805958ced0ce08532",
        "line_num": 208,
        "line_str": "",
        "file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_line_num": "range(194, 232)"
      },
      {
        "commit_hash": "714c53e2af8fe894fda54eb805958ced0ce08532",
        "line_num": 237,
        "line_str": "}",
        "file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_line_num": "range(233, 239)"
      },
      {
        "commit_hash": "714c53e2af8fe894fda54eb805958ced0ce08532",
        "line_num": 204,
        "line_str": "",
        "file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_line_num": "range(194, 232)"
      },
      {
        "commit_hash": "714c53e2af8fe894fda54eb805958ced0ce08532",
        "line_num": 233,
        "line_str": "try {",
        "file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_line_num": "range(233, 239)"
      },
      {
        "commit_hash": "714c53e2af8fe894fda54eb805958ced0ce08532",
        "line_num": 200,
        "line_str": "assertEquals(6L, FieldUtils.safeMultiply(2L, 3L));",
        "file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_line_num": "range(194, 232)"
      },
      {
        "commit_hash": "714c53e2af8fe894fda54eb805958ced0ce08532",
        "line_num": 229,
        "line_str": "fail();",
        "file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_line_num": "range(194, 232)"
      },
      {
        "commit_hash": "714c53e2af8fe894fda54eb805958ced0ce08532",
        "line_num": 196,
        "line_str": "assertEquals(1L, FieldUtils.safeMultiply(1L, 1L));",
        "file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_line_num": "range(194, 232)"
      },
      {
        "commit_hash": "714c53e2af8fe894fda54eb805958ced0ce08532",
        "line_num": 225,
        "line_str": "}",
        "file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_line_num": "range(194, 232)"
      },
      {
        "commit_hash": "714c53e2af8fe894fda54eb805958ced0ce08532",
        "line_num": 221,
        "line_str": "try {",
        "file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_line_num": "range(194, 232)"
      },
      {
        "commit_hash": "714c53e2af8fe894fda54eb805958ced0ce08532",
        "line_num": 217,
        "line_str": "fail();",
        "file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_line_num": "range(194, 232)"
      },
      {
        "commit_hash": "714c53e2af8fe894fda54eb805958ced0ce08532",
        "line_num": 213,
        "line_str": "}",
        "file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_line_num": "range(194, 232)"
      },
      {
        "commit_hash": "714c53e2af8fe894fda54eb805958ced0ce08532",
        "line_num": 209,
        "line_str": "try {",
        "file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_line_num": "range(194, 232)"
      },
      {
        "commit_hash": "714c53e2af8fe894fda54eb805958ced0ce08532",
        "line_num": 238,
        "line_str": "}",
        "file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_line_num": "range(233, 239)"
      },
      {
        "commit_hash": "714c53e2af8fe894fda54eb805958ced0ce08532",
        "line_num": 205,
        "line_str": "assertEquals(Long.MAX_VALUE, FieldUtils.safeMultiply(Long.MAX_VALUE, 1L));",
        "file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_line_num": "range(194, 232)"
      },
      {
        "commit_hash": "714c53e2af8fe894fda54eb805958ced0ce08532",
        "line_num": 234,
        "line_str": "FieldUtils.safeMultiply(Long.MAX_VALUE, Long.MIN_VALUE);",
        "file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_line_num": "range(233, 239)"
      },
      {
        "commit_hash": "714c53e2af8fe894fda54eb805958ced0ce08532",
        "line_num": 201,
        "line_str": "assertEquals(-6L, FieldUtils.safeMultiply(2L, -3L));",
        "file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_line_num": "range(194, 232)"
      },
      {
        "commit_hash": "714c53e2af8fe894fda54eb805958ced0ce08532",
        "line_num": 230,
        "line_str": "} catch (ArithmeticException e) {",
        "file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_line_num": "range(194, 232)"
      },
      {
        "commit_hash": "714c53e2af8fe894fda54eb805958ced0ce08532",
        "line_num": 197,
        "line_str": "assertEquals(3L, FieldUtils.safeMultiply(1L, 3L));",
        "file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_line_num": "range(194, 232)"
      },
      {
        "commit_hash": "714c53e2af8fe894fda54eb805958ced0ce08532",
        "line_num": 226,
        "line_str": "",
        "file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_line_num": "range(194, 232)"
      },
      {
        "commit_hash": "714c53e2af8fe894fda54eb805958ced0ce08532",
        "line_num": 222,
        "line_str": "FieldUtils.safeMultiply(Long.MIN_VALUE, 100L);",
        "file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_file_path": "src/test/java/org/joda/time/field/TestFieldUtils.java",
        "input_line_num": "range(194, 232)"
      }
    ]
  },
  {
    "id": 10127,
    "repo_name": "JodaOrg/joda-time",
    "bug_commit_hash": [
      "843d7b8f07f4899ad153ffabc25e09a6c0e897c7"
    ],
    "fix_commit_hash": "706513d59425e7a9dc6bdb972f25b03b02e48558",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "82c5e4f9550e4df36e07b66f35f7c3e9d7eb5eba",
        "line_num": 54,
        "line_str": "but for a zone with an offset of 00:00 it chose winter time",
        "file_path": "RELEASE-NOTES.txt",
        "input_file_path": "RELEASE-NOTES.txt",
        "input_line_num": "range(55, 59)"
      },
      {
        "commit_hash": "82c5e4f9550e4df36e07b66f35f7c3e9d7eb5eba",
        "line_num": 42,
        "line_str": "- Interval/MutableInterval toString() now contains the time-zone offset",
        "file_path": "RELEASE-NOTES.txt",
        "input_file_path": "RELEASE-NOTES.txt",
        "input_line_num": "range(45, 46)"
      },
      {
        "commit_hash": "82c5e4f9550e4df36e07b66f35f7c3e9d7eb5eba",
        "line_num": 38,
        "line_str": "-  Date-time for time-zones with DST based on an offset of 00:00 now pick summer time when ambiguous",
        "file_path": "RELEASE-NOTES.txt",
        "input_file_path": "RELEASE-NOTES.txt",
        "input_line_num": "range(41, 42)"
      },
      {
        "commit_hash": "82c5e4f9550e4df36e07b66f35f7c3e9d7eb5eba",
        "line_num": 55,
        "line_str": "",
        "file_path": "RELEASE-NOTES.txt",
        "input_file_path": "RELEASE-NOTES.txt",
        "input_line_num": "range(55, 59)"
      },
      {
        "commit_hash": "82c5e4f9550e4df36e07b66f35f7c3e9d7eb5eba",
        "line_num": 52,
        "line_str": "- Ambiguous date-time when in zone with offset of 00:00 [3424669]",
        "file_path": "RELEASE-NOTES.txt",
        "input_file_path": "RELEASE-NOTES.txt",
        "input_line_num": "range(55, 59)"
      },
      {
        "commit_hash": "82c5e4f9550e4df36e07b66f35f7c3e9d7eb5eba",
        "line_num": 40,
        "line_str": "-  Time-zone names now return correct results on JDK1.6 for non-English locales",
        "file_path": "RELEASE-NOTES.txt",
        "input_file_path": "RELEASE-NOTES.txt",
        "input_line_num": "range(43, 44)"
      },
      {
        "commit_hash": "82c5e4f9550e4df36e07b66f35f7c3e9d7eb5eba",
        "line_num": 53,
        "line_str": "A date-time constructor with an ambiguous time due to DST should choose summer time",
        "file_path": "RELEASE-NOTES.txt",
        "input_file_path": "RELEASE-NOTES.txt",
        "input_line_num": "range(55, 59)"
      }
    ]
  },
  {
    "id": 10128,
    "repo_name": "JodaOrg/joda-time",
    "bug_commit_hash": [
      "3ba9ba799b3261b7332a467a88be142c83b298fd"
    ],
    "fix_commit_hash": "8612f9e5b88c1bea933ef9ab1e431f5db3006b48",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "b86efe73e72ece8e5ceeed48d05228aa1725c9ad",
        "line_num": 230,
        "line_str": "throw new IllegalArgumentException(\"Types array must not contain duplicate: \" + loopType.getName());",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(238, 239)"
      },
      {
        "commit_hash": "b86efe73e72ece8e5ceeed48d05228aa1725c9ad",
        "line_num": 216,
        "line_str": "throw new IllegalArgumentException(\"Types array must not contain duplicate: \" + loopType.getName());",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(224, 225)"
      },
      {
        "commit_hash": "b86efe73e72ece8e5ceeed48d05228aa1725c9ad",
        "line_num": 210,
        "line_str": "if (compare < 0 || (compare != 0 && loopUnitField.isSupported() == false)) {",
        "file_path": "JodaTime/src/java/org/joda/time/Partial.java",
        "input_file_path": "src/main/java/org/joda/time/Partial.java",
        "input_line_num": "range(218, 219)"
      }
    ]
  },
  {
    "id": 10129,
    "repo_name": "JodaOrg/joda-time",
    "bug_commit_hash": [
      "843d7b8f07f4899ad153ffabc25e09a6c0e897c7"
    ],
    "fix_commit_hash": "1adb1e69863dcd1ff282692bf1452c422528eeb9",
    "language": [
      "java"
    ],
    "inducing_commit_hash": [
      {
        "commit_hash": "706513d59425e7a9dc6bdb972f25b03b02e48558",
        "line_num": 709,
        "line_str": "instantLocal, chrono, iLocale, iPivotYear, chrono.year().get(instantLocal));",
        "file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_line_num": "range(710, 711)"
      },
      {
        "commit_hash": "706513d59425e7a9dc6bdb972f25b03b02e48558",
        "line_num": 684,
        "line_str": "* parses using the year from the supplied instant as the default.",
        "file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_file_path": "src/main/java/org/joda/time/format/DateTimeFormatter.java",
        "input_line_num": "range(685, 686)"
      }
    ]
  }
]